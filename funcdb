/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/unistd.h
	faccessat = ~f{ii^cii}
	fchownat = ~f{ii^cIIi}
	getattrlistat = ~f{ii^c^v^vLL}
	getattrlistbulk = ~f{ii^v^vLQ}
	linkat = ~f{ii^ci^ci}
	readlinkat = ~f{li^c^cL}
	setattrlistat = ~f{ii^c^v^vLI}
	symlinkat = ~f{i^ci^c}
	unlinkat = ~f{ii^ci}
/usr/local/lib/clang/9.0.1/include/cldemoteintrin.h
	_cldemote = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVBuffer.h
	CVBufferGetAttachment = ~f{^v^v^v^I}
	CVBufferGetAttachments = ~f{^v^vI}
	CVBufferPropagateAttachments = ~f{v^v^v}
	CVBufferRelease = ~f{v^v}
	CVBufferRemoveAllAttachments = ~f{v^v}
	CVBufferRemoveAttachment = ~f{v^v^v}
	CVBufferRetain = ~f{^v^v}
	CVBufferSetAttachment = ~f{v^v^v^vI}
	CVBufferSetAttachments = ~f{v^v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSTimeZoneShims.h
	__NSTimeZoneAutoupdating = ?
	__NSTimeZoneCurrent = ?
	__NSTimeZoneIsAutoupdating = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMBlockBuffer.h
	CMBlockBufferAccessDataBytes = ~f{i^vLL^v^^c}
	CMBlockBufferAppendBufferReference = ~f{i^v^vLLI}
	CMBlockBufferAppendMemoryBlock = ~f{i^v^vL^v^vLLI}
	CMBlockBufferAssureBlockMemory = ~f{i^v}
	CMBlockBufferCopyDataBytes = ~f{i^vLL^v}
	CMBlockBufferCreateContiguous = ~f{i^v^v^v^vLLI^^v}
	CMBlockBufferCreateEmpty = ~f{i^vII^^v}
	CMBlockBufferCreateWithBufferReference = ~f{i^v^vLLI^^v}
	CMBlockBufferCreateWithMemoryBlock = ~f{i^v^vL^v^vLLI^^v}
	CMBlockBufferFillDataBytes = ~f{ic^vLL}
	CMBlockBufferGetDataLength = ~f{L^v}
	CMBlockBufferGetDataPointer = ~f{i^vL^L^L^^c}
	CMBlockBufferGetTypeID = ~f{L}
	CMBlockBufferIsEmpty = ~f{C^v}
	CMBlockBufferIsRangeContiguous = ~f{C^vLL}
	CMBlockBufferReplaceDataBytes = ~f{i^v^vLL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/i386/user_ldt.h
	i386_get_ldt = ~f{ii^vi}
	i386_set_ldt = ~f{ii^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/inttypes.h
	imaxabs = ~f{ll}
	imaxdiv = ~f{{=ll}ll}
	strtoimax = ~f{l^c^^ci}
	strtoumax = ~f{L^c^^ci}
	wcstoimax = ~f{l^i^^ii}
	wcstoumax = ~f{L^i^^ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioQueue.h
	AudioQueueAddPropertyListener = ~f{i^vI^~f{v^v^vI}^v}
	AudioQueueAllocateBuffer = ~f{i^vI^^v}
	AudioQueueAllocateBufferWithPacketDescriptions = ~f{i^vII^^v}
	AudioQueueCreateTimeline = ~f{i^v^^v}
	AudioQueueDeviceGetCurrentTime = ~f{i^v^v}
	AudioQueueDeviceGetNearestStartTime = ~f{i^v^vI}
	AudioQueueDeviceTranslateTime = ~f{i^v^v^v}
	AudioQueueDispose = ~f{i^vC}
	AudioQueueDisposeTimeline = ~f{i^v^v}
	AudioQueueEnqueueBuffer = ~f{i^v^vI^v}
	AudioQueueEnqueueBufferWithParameters = ~f{i^v^vI^vIII^v^v^v}
	AudioQueueFlush = ~f{i^v}
	AudioQueueFreeBuffer = ~f{i^v^v}
	AudioQueueGetCurrentTime = ~f{i^v^v^v^C}
	AudioQueueGetParameter = ~f{i^vI^f}
	AudioQueueGetProperty = ~f{i^vI^v^I}
	AudioQueueGetPropertySize = ~f{i^vI^I}
	AudioQueueNewInput = ~f{i^v^~f{v^v^v^v^vI^v}^v^v^vI^^v}
	AudioQueueNewInputWithDispatchQueue = ~f{i^^v^vI@%~f{v^v^v^vI^v}}
	AudioQueueNewOutput = ~f{i^v^~f{v^v^v^v}^v^v^vI^^v}
	AudioQueueNewOutputWithDispatchQueue = ~f{i^^v^vI@%~f{v^v^v}}
	AudioQueueOfflineRender = ~f{i^v^v^vI}
	AudioQueuePause = ~f{i^v}
	AudioQueuePrime = ~f{i^vI^I}
	AudioQueueProcessingTapDispose = ~f{i^v}
	AudioQueueProcessingTapGetQueueTime = ~f{i^v^d^I}
	AudioQueueProcessingTapGetSourceAudio = ~f{i^vI^v^I^I^v}
	AudioQueueProcessingTapNew = ~f{i^v^~f{v^v^vI^v^I^I^v}^vI^I^v^^v}
	AudioQueueRemovePropertyListener = ~f{i^vI^~f{v^v^vI}^v}
	AudioQueueReset = ~f{i^v}
	AudioQueueSetOfflineRenderFormat = ~f{i^v^v^v}
	AudioQueueSetParameter = ~f{i^vIf}
	AudioQueueSetProperty = ~f{i^vI^vI}
	AudioQueueStart = ~f{i^v^v}
	AudioQueueStop = ~f{i^vC}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/ustring.h
	u_austrcpy = ~f{^c^c^S}
	u_austrncpy = ~f{^c^c^Si}
	u_countChar32 = ~f{i^Si}
	u_memcasecmp = ~f{i^S^SiI}
	u_memchr = ~f{^S^SSi}
	u_memchr32 = ~f{^S^Sii}
	u_memcmp = ~f{i^S^Si}
	u_memcmpCodePointOrder = ~f{i^S^Si}
	u_memcpy = ~f{^S^S^Si}
	u_memmove = ~f{^S^S^Si}
	u_memrchr = ~f{^S^SSi}
	u_memrchr32 = ~f{^S^Sii}
	u_memset = ~f{^S^SSi}
	u_strCaseCompare = ~f{i^Si^SiI^i}
	u_strCompare = ~f{i^Si^Sic}
	u_strCompareIter = ~f{i^v^vc}
	u_strFindFirst = ~f{^S^Si^Si}
	u_strFindLast = ~f{^S^Si^Si}
	u_strFoldCase = ~f{i^Si^SiI^i}
	u_strFromJavaModifiedUTF8WithSub = ~f{^S^Si^i^cii^i^i}
	u_strFromUTF32 = ~f{^S^Si^i^ii^i}
	u_strFromUTF32WithSub = ~f{^S^Si^i^iii^i^i}
	u_strFromUTF8 = ~f{^S^Si^i^ci^i}
	u_strFromUTF8Lenient = ~f{^S^Si^i^ci^i}
	u_strFromUTF8WithSub = ~f{^S^Si^i^cii^i^i}
	u_strFromWCS = ~f{^S^Si^i^ii^i}
	u_strHasMoreChar32Than = ~f{c^Sii}
	u_strIsWellFormed = ~f{c^Si}
	u_strToJavaModifiedUTF8 = ~f{^c^ci^i^Si^i}
	u_strToLower = ~f{i^Si^Si^c^i}
	u_strToTitle = ~f{i^Si^Si^v^c^i}
	u_strToUTF32 = ~f{^i^ii^i^Si^i}
	u_strToUTF32WithSub = ~f{^i^ii^i^Sii^i^i}
	u_strToUTF8 = ~f{^c^ci^i^Si^i}
	u_strToUTF8WithSub = ~f{^c^ci^i^Sii^i^i}
	u_strToUpper = ~f{i^Si^Si^c^i}
	u_strToWCS = ~f{^i^ii^i^Si^i}
	u_strcasecmp = ~f{i^S^SI}
	u_strcat = ~f{^S^S^S}
	u_strchr = ~f{^S^SS}
	u_strchr32 = ~f{^S^Si}
	u_strcmp = ~f{i^S^S}
	u_strcmpCodePointOrder = ~f{i^S^S}
	u_strcpy = ~f{^S^S^S}
	u_strcspn = ~f{i^S^S}
	u_strlen = ~f{i^S}
	u_strncasecmp = ~f{i^S^SiI}
	u_strncat = ~f{^S^S^Si}
	u_strncmp = ~f{i^S^Si}
	u_strncmpCodePointOrder = ~f{i^S^Si}
	u_strncpy = ~f{^S^S^Si}
	u_strpbrk = ~f{^S^S^S}
	u_strrchr = ~f{^S^SS}
	u_strrchr32 = ~f{^S^Si}
	u_strrstr = ~f{^S^S^S}
	u_strspn = ~f{i^S^S}
	u_strstr = ~f{^S^S^S}
	u_strtok_r = ~f{^S^S^S^^S}
	u_uastrcpy = ~f{^S^S^c}
	u_uastrncpy = ~f{^S^S^ci}
	u_unescape = ~f{i^c^Si}
	u_unescapeAt = ~f{i^~f{Si^v}^ii^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/socket.h
	accept = ~f{ii^v^I}
	bind = ~f{ii^vI}
	connect = ~f{ii^vI}
	connectx = ~f{ii^vII^vI^L^I}
	disconnectx = ~f{iiII}
	getpeername = ~f{ii^v^I}
	getsockname = ~f{ii^v^I}
	getsockopt = ~f{iiii^v^I}
	listen = ~f{iii}
	pfctlinput = ~f{vi^v}
	recv = ~f{li^vLi}
	recvfrom = ~f{li^vLi^v^I}
	recvmsg = ~f{li^vi}
	send = ~f{li^vLi}
	sendfile = ~f{iiiq^q^vi}
	sendmsg = ~f{li^vi}
	sendto = ~f{li^vLi^vI}
	setsockopt = ~f{iiii^vI}
	shutdown = ~f{iii}
	sockatmark = ~f{ii}
	socket = ~f{iiii}
	socketpair = ~f{iiii^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/MusicDevice.h
	MusicDeviceMIDIEvent = ~f{i^vIIII}
	MusicDevicePrepareInstrument = ~f{i^vI}
	MusicDeviceReleaseInstrument = ~f{i^vI}
	MusicDeviceStartNote = ~f{i^vII^II^v}
	MusicDeviceStopNote = ~f{i^vIII}
	MusicDeviceSysEx = ~f{i^v^CI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/net/if.h
	if_freenameindex = ~f{v^v}
	if_indextoname = ~f{^cI^c}
	if_nameindex = ~f{^v}
	if_nametoindex = ~f{I^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/lock.h
	os_unfair_lock_assert_not_owner = ~f{v^v}
	os_unfair_lock_assert_owner = ~f{v^v}
	os_unfair_lock_lock = ~f{v^v}
	os_unfair_lock_trylock = ~f{B^v}
	os_unfair_lock_unlock = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSIndexSetShims.h
	__NSIndexSetIndexOfRangeContainingIndex = ~f{L@L}
	__NSIndexSetRangeAtIndex = ~f{v@L^L^L}
	__NSIndexSetRangeCount = ~f{L@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/HTMLtree.h
	htmlDocContentDumpFormatOutput = ~f{v^v^v^ci}
	htmlDocContentDumpOutput = ~f{v^v^v^c}
	htmlDocDump = ~f{i^v^v}
	htmlDocDumpMemory = ~f{v^v^^C^i}
	htmlDocDumpMemoryFormat = ~f{v^v^^C^ii}
	htmlGetMetaEncoding = ~f{^C^v}
	htmlIsBooleanAttr = ~f{i^C}
	htmlNewDoc = ~f{^v^C^C}
	htmlNewDocNoDtD = ~f{^v^C^C}
	htmlNodeDump = ~f{i^v^v^v}
	htmlNodeDumpFile = ~f{v^v^v^v}
	htmlNodeDumpFileFormat = ~f{i^v^v^v^ci}
	htmlNodeDumpFormatOutput = ~f{v^v^v^v^ci}
	htmlNodeDumpOutput = ~f{v^v^v^v^c}
	htmlSaveFile = ~f{i^c^v}
	htmlSaveFileEnc = ~f{i^c^v^c}
	htmlSaveFileFormat = ~f{i^c^v^ci}
	htmlSetMetaEncoding = ~f{i^v^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/LibcShims.h
	_stdlib_remainder = ~f{ddd}
	_stdlib_remainderf = ~f{fff}
	_stdlib_remainderl = ~f{DDD}
	_stdlib_squareRoot = ~f{dd}
	_stdlib_squareRootf = ~f{ff}
	_stdlib_squareRootl = ~f{DD}
	_swift_stdlib_close = ~f{ii}
	_swift_stdlib_free = ~f{v^v}
	_swift_stdlib_fwrite_stdout = ~f{L^vLL}
	_swift_stdlib_malloc_size = ~f{L^v}
	_swift_stdlib_memcmp = ~f{i^v^vL}
	_swift_stdlib_putchar_unlocked = ~f{ii}
	_swift_stdlib_read = ~f{li^vL}
	_swift_stdlib_strlen = ~f{L^c}
	_swift_stdlib_strlen_unsigned = ~f{L^C}
	_swift_stdlib_write = ~f{li^vL}
	lgamma_r = ~f{dd^i}
	lgammaf_r = ~f{ff^i}
	lgammal_r = ~f{DD^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread_spis.h
	_pthread_mutex_enable_legacy_mode = ~f{v}
	pthread_create_from_mach_thread = ~f{i^^v^v^~f{^v^v}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/ImageIO.framework/Headers/CGImageSource.h
	CGImageSourceCopyAuxiliaryDataInfoAtIndex = ~f{^v^vL^v}
	CGImageSourceCopyMetadataAtIndex = ~f{^v^vL^v}
	CGImageSourceCopyProperties = ~f{^v^v^v}
	CGImageSourceCopyPropertiesAtIndex = ~f{^v^vL^v}
	CGImageSourceCopyTypeIdentifiers = ~f{^v}
	CGImageSourceCreateImageAtIndex = ~f{^v^vL^v}
	CGImageSourceCreateIncremental = ~f{^v^v}
	CGImageSourceCreateThumbnailAtIndex = ~f{^v^vL^v}
	CGImageSourceCreateWithData = ~f{^v^v^v}
	CGImageSourceCreateWithDataProvider = ~f{^v^v^v}
	CGImageSourceCreateWithURL = ~f{^v^v^v}
	CGImageSourceGetCount = ~f{L^v}
	CGImageSourceGetPrimaryImageIndex = ~f{L^v}
	CGImageSourceGetStatus = ~f{i^v}
	CGImageSourceGetStatusAtIndex = ~f{i^vL}
	CGImageSourceGetType = ~f{^v^v}
	CGImageSourceGetTypeID = ~f{L}
	CGImageSourceRemoveCacheAtIndex = ~f{v^vL}
	CGImageSourceUpdateData = ~f{v^v^vB}
	CGImageSourceUpdateDataProvider = ~f{v^v^vB}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataConsumer.h
	CGDataConsumerCreate = ~f{^v^v^v}
	CGDataConsumerCreateWithCFData = ~f{^v^v}
	CGDataConsumerCreateWithURL = ~f{^v^v}
	CGDataConsumerGetTypeID = ~f{L}
	CGDataConsumerRelease = ~f{v^v}
	CGDataConsumerRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dlfcn.h
	dladdr = ~f{i^v^v}
	dlclose = ~f{i^v}
	dlerror = ~f{^c}
	dlopen = ~f{^v^ci}
	dlopen_preflight = ~f{B^c}
	dlsym = ~f{^v^v^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vfp.h
	vacosf = ~f{~V{4f}~V{4f}}
	vacoshf = ~f{~V{4f}~V{4f}}
	vasinf = ~f{~V{4f}~V{4f}}
	vasinhf = ~f{~V{4f}~V{4f}}
	vatan2f = ~f{~V{4f}~V{4f}~V{4f}}
	vatanf = ~f{~V{4f}~V{4f}}
	vatanhf = ~f{~V{4f}~V{4f}}
	vceilf = ~f{~V{4f}~V{4f}}
	vclassifyf = ~f{~V{4I}~V{4f}}
	vcopysignf = ~f{~V{4f}~V{4f}~V{4f}}
	vcosf = ~f{~V{4f}~V{4f}}
	vcoshf = ~f{~V{4f}~V{4f}}
	vcospif = ~f{~V{4f}~V{4f}}
	vdivf = ~f{~V{4f}~V{4f}~V{4f}}
	vexp2f = ~f{~V{4f}~V{4f}}
	vexpf = ~f{~V{4f}~V{4f}}
	vexpm1f = ~f{~V{4f}~V{4f}}
	vfabf = ~f{~V{4f}~V{4f}}
	vfabsf = ~f{~V{4f}~V{4f}}
	vfloorf = ~f{~V{4f}~V{4f}}
	vfmodf = ~f{~V{4f}~V{4f}~V{4f}}
	vintf = ~f{~V{4f}~V{4f}}
	vipowf = ~f{~V{4f}~V{4f}~V{4i}}
	vlog10f = ~f{~V{4f}~V{4f}}
	vlog1pf = ~f{~V{4f}~V{4f}}
	vlog2f = ~f{~V{4f}~V{4f}}
	vlogbf = ~f{~V{4f}~V{4f}}
	vlogf = ~f{~V{4f}~V{4f}}
	vnextafterf = ~f{~V{4f}~V{4f}~V{4f}}
	vnintf = ~f{~V{4f}~V{4f}}
	vpowf = ~f{~V{4f}~V{4f}~V{4f}}
	vrecf = ~f{~V{4f}~V{4f}}
	vremainderf = ~f{~V{4f}~V{4f}~V{4f}}
	vremquof = ~f{~V{4f}~V{4f}~V{4f}^~V{4I}}
	vrsqrtf = ~f{~V{4f}~V{4f}}
	vscalbf = ~f{~V{4f}~V{4f}~V{4i}}
	vsignbitf = ~f{~V{4I}~V{4f}}
	vsincosf = ~f{~V{4f}~V{4f}^~V{4f}}
	vsinf = ~f{~V{4f}~V{4f}}
	vsinhf = ~f{~V{4f}~V{4f}}
	vsinpif = ~f{~V{4f}~V{4f}}
	vsqrtf = ~f{~V{4f}~V{4f}}
	vtablelookup = ~f{~V{4I}~V{4i}^I}
	vtanf = ~f{~V{4f}~V{4f}}
	vtanhf = ~f{~V{4f}~V{4f}}
	vtanpif = ~f{~V{4f}~V{4f}}
	vtruncf = ~f{~V{4f}~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/lock_set.h
	lock_acquire = ~f{iIi}
	lock_handoff = ~f{iIi}
	lock_handoff_accept = ~f{iIi}
	lock_make_stable = ~f{iIi}
	lock_release = ~f{iIi}
	lock_try = ~f{iIi}
	mig_strncpy_zerofill = ~f{i^c^ci}
/usr/local/lib/clang/9.0.1/include/pmmintrin.h
	_mm_addsub_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_addsub_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_hadd_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_hadd_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_hsub_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_hsub_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_lddqu_si128 = ~f{~V{2q}^~V{2q}}
	_mm_monitor = ~f{v^vII}
	_mm_movedup_pd = ~f{~V{2d}~V{2d}}
	_mm_movehdup_ps = ~f{~V{4f}~V{4f}}
	_mm_moveldup_ps = ~f{~V{4f}~V{4f}}
	_mm_mwait = ~f{vII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/browse_result.h
	nw_browse_result_copy_endpoint = ~f{@@}
	nw_browse_result_copy_txt_record_object = ~f{@@}
	nw_browse_result_enumerate_interfaces = ~f{v@%~f{B@}}
	nw_browse_result_get_changes = ~f{Q@@}
	nw_browse_result_get_interfaces_count = ~f{L@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/StoreKit.framework/Headers/SKReceiptRefreshRequest.h
	SKTerminateForInvalidReceipt = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/glob.h
	glob = ~f{i^ci^~f{i^ci}^v}
	glob_b = ~f{i^ci%~f{i^ci}^v}
	globfree = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNotificationCenter.h
	CFNotificationCenterAddObserver = ~f{v^v^v^~f{v^v^v^v^v^v}^v^vl}
	CFNotificationCenterGetDarwinNotifyCenter = ~f{^v}
	CFNotificationCenterGetLocalCenter = ~f{^v}
	CFNotificationCenterGetTypeID = ~f{L}
	CFNotificationCenterPostNotification = ~f{v^v^v^v^vC}
	CFNotificationCenterPostNotificationWithOptions = ~f{v^v^v^v^vL}
	CFNotificationCenterRemoveEveryObserver = ~f{v^v^v}
	CFNotificationCenterRemoveObserver = ~f{v^v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach-o/swap.h
	swap_build_tool_version = ~f{v^vII}
	swap_build_version_command = ~f{v^vI}
	swap_dyld_info_command = ~f{v^vI}
	swap_dylib_command = ~f{v^vI}
	swap_dylib_module = ~f{v^vII}
	swap_dylib_module_64 = ~f{v^vII}
	swap_dylib_reference = ~f{v^vII}
	swap_dylib_table_of_contents = ~f{v^vII}
	swap_dylinker_command = ~f{v^vI}
	swap_dysymtab_command = ~f{v^vI}
	swap_encryption_command = ~f{v^vI}
	swap_encryption_command_64 = ~f{v^vI}
	swap_entry_point_command = ~f{v^vI}
	swap_fat_arch = ~f{v^vII}
	swap_fat_arch_64 = ~f{v^vII}
	swap_fat_header = ~f{v^vI}
	swap_fvmfile_command = ~f{v^vI}
	swap_fvmlib_command = ~f{v^vI}
	swap_ident_command = ~f{v^vI}
	swap_indirect_symbols = ~f{v^III}
	swap_linkedit_data_command = ~f{v^vI}
	swap_linker_option_command = ~f{v^vI}
	swap_load_command = ~f{v^vI}
	swap_mach_header = ~f{v^vI}
	swap_mach_header_64 = ~f{v^vI}
	swap_nlist = ~f{v^vII}
	swap_nlist_64 = ~f{v^vII}
	swap_note_command = ~f{v^vI}
	swap_prebind_cksum_command = ~f{v^vI}
	swap_prebound_dylib_command = ~f{v^vI}
	swap_ranlib = ~f{v^vII}
	swap_ranlib_64 = ~f{v^vQI}
	swap_relocation_info = ~f{v^vII}
	swap_routines_command = ~f{v^vI}
	swap_routines_command_64 = ~f{v^vI}
	swap_rpath_command = ~f{v^vI}
	swap_section = ~f{v^vII}
	swap_section_64 = ~f{v^vII}
	swap_segment_command = ~f{v^vI}
	swap_segment_command_64 = ~f{v^vI}
	swap_source_version_command = ~f{v^vI}
	swap_sub_client_command = ~f{v^vI}
	swap_sub_framework_command = ~f{v^vI}
	swap_sub_library_command = ~f{v^vI}
	swap_sub_umbrella_command = ~f{v^vI}
	swap_symseg_command = ~f{v^vI}
	swap_symtab_command = ~f{v^vI}
	swap_thread_command = ~f{v^vI}
	swap_twolevel_hint = ~f{v^vII}
	swap_twolevel_hints_command = ~f{v^vI}
	swap_uuid_command = ~f{v^vI}
	swap_version_min_command = ~f{v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/string.h
	memccpy = ~f{^v^v^viL}
	memchr = ~f{^v^viL}
	memcmp = ~f{i^v^vL}
	memcpy = ~f{^v^v^vL}
	memmem = ~f{^v^vL^vL}
	memmove = ~f{^v^v^vL}
	memset = ~f{^v^viL}
	memset_pattern16 = ~f{v^v^vL}
	memset_pattern4 = ~f{v^v^vL}
	memset_pattern8 = ~f{v^v^vL}
	memset_s = ~f{i^vLiL}
	stpcpy = ~f{^c^c^c}
	stpncpy = ~f{^c^c^cL}
	strcasestr = ~f{^c^c^c}
	strcat = ~f{^c^c^c}
	strchr = ~f{^c^ci}
	strcmp = ~f{i^c^c}
	strcoll = ~f{i^c^c}
	strcpy = ~f{^c^c^c}
	strcspn = ~f{L^c^c}
	strdup = ~f{^c^c}
	strerror = ~f{^ci}
	strerror_r = ~f{ii^cL}
	strlcat = ~f{L^c^cL}
	strlcpy = ~f{L^c^cL}
	strlen = ~f{L^c}
	strmode = ~f{vi^c}
	strncat = ~f{^c^c^cL}
	strncmp = ~f{i^c^cL}
	strncpy = ~f{^c^c^cL}
	strndup = ~f{^c^cL}
	strnlen = ~f{L^cL}
	strnstr = ~f{^c^c^cL}
	strpbrk = ~f{^c^c^c}
	strrchr = ~f{^c^ci}
	strsep = ~f{^c^^c^c}
	strsignal = ~f{^ci}
	strspn = ~f{L^c^c}
	strstr = ~f{^c^c^c}
	strtok = ~f{^c^c^c}
	strtok_r = ~f{^c^c^c^^c}
	strxfrm = ~f{L^c^cL}
	swab = ~f{v^v^vl}
	timingsafe_bcmp = ~f{i^v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlstring.h
	xmlCharStrdup = ~f{^C^c}
	xmlCharStrndup = ~f{^C^ci}
	xmlCheckUTF8 = ~f{i^C}
	xmlGetUTF8Char = ~f{i^C^i}
	xmlStrEqual = ~f{i^C^C}
	xmlStrPrintf = ~f{i^Ci^c$}
	xmlStrQEqual = ~f{i^C^C^C}
	xmlStrVPrintf = ~f{i^Ci^c^v}
	xmlStrcasecmp = ~f{i^C^C}
	xmlStrcasestr = ~f{^C^C^C}
	xmlStrcat = ~f{^C^C^C}
	xmlStrchr = ~f{^C^CC}
	xmlStrcmp = ~f{i^C^C}
	xmlStrdup = ~f{^C^C}
	xmlStrlen = ~f{i^C}
	xmlStrncasecmp = ~f{i^C^Ci}
	xmlStrncat = ~f{^C^C^Ci}
	xmlStrncatNew = ~f{^C^C^Ci}
	xmlStrncmp = ~f{i^C^Ci}
	xmlStrndup = ~f{^C^Ci}
	xmlStrstr = ~f{^C^C^C}
	xmlStrsub = ~f{^C^Cii}
	xmlUTF8Charcmp = ~f{i^C^C}
	xmlUTF8Size = ~f{i^C}
	xmlUTF8Strlen = ~f{i^C}
	xmlUTF8Strloc = ~f{i^C^C}
	xmlUTF8Strndup = ~f{^C^Ci}
	xmlUTF8Strpos = ~f{^C^Ci}
	xmlUTF8Strsize = ~f{i^Ci}
	xmlUTF8Strsub = ~f{^C^Cii}
/usr/local/lib/clang/9.0.1/include/f16cintrin.h
	_cvtsh_ss = ~f{fS}
	_mm256_cvtph_ps = ~f{~V{8f}~V{2q}}
	_mm_cvtph_ps = ~f{~V{4f}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/LinearAlgebra/linear_systems.h
	la_solve = ~f{@@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGeometry.h
	CGPointCreateDictionaryRepresentation = ~f{^v{=dd}}
	CGPointEqualToPoint = ~f{B{=dd}{=dd}}
	CGPointMake = ~f{{=dd}dd}
	CGPointMakeWithDictionaryRepresentation = ~f{B^v^v}
	CGRectContainsPoint = ~f{B{={=dd}{=dd}}{=dd}}
	CGRectContainsRect = ~f{B{={=dd}{=dd}}{={=dd}{=dd}}}
	CGRectCreateDictionaryRepresentation = ~f{^v{={=dd}{=dd}}}
	CGRectDivide = ~f{v{={=dd}{=dd}}^v^vdI}
	CGRectEqualToRect = ~f{B{={=dd}{=dd}}{={=dd}{=dd}}}
	CGRectGetHeight = ~f{d{={=dd}{=dd}}}
	CGRectGetMaxX = ~f{d{={=dd}{=dd}}}
	CGRectGetMaxY = ~f{d{={=dd}{=dd}}}
	CGRectGetMidX = ~f{d{={=dd}{=dd}}}
	CGRectGetMidY = ~f{d{={=dd}{=dd}}}
	CGRectGetMinX = ~f{d{={=dd}{=dd}}}
	CGRectGetMinY = ~f{d{={=dd}{=dd}}}
	CGRectGetWidth = ~f{d{={=dd}{=dd}}}
	CGRectInset = ~f{{={=dd}{=dd}}{={=dd}{=dd}}dd}
	CGRectIntegral = ~f{{={=dd}{=dd}}{={=dd}{=dd}}}
	CGRectIntersection = ~f{{={=dd}{=dd}}{={=dd}{=dd}}{={=dd}{=dd}}}
	CGRectIntersectsRect = ~f{B{={=dd}{=dd}}{={=dd}{=dd}}}
	CGRectIsEmpty = ~f{B{={=dd}{=dd}}}
	CGRectIsInfinite = ~f{B{={=dd}{=dd}}}
	CGRectIsNull = ~f{B{={=dd}{=dd}}}
	CGRectMake = ~f{{={=dd}{=dd}}dddd}
	CGRectMakeWithDictionaryRepresentation = ~f{B^v^v}
	CGRectOffset = ~f{{={=dd}{=dd}}{={=dd}{=dd}}dd}
	CGRectStandardize = ~f{{={=dd}{=dd}}{={=dd}{=dd}}}
	CGRectUnion = ~f{{={=dd}{=dd}}{={=dd}{=dd}}{={=dd}{=dd}}}
	CGSizeCreateDictionaryRepresentation = ~f{^v{=dd}}
	CGSizeEqualToSize = ~f{B{=dd}{=dd}}
	CGSizeMake = ~f{{=dd}dd}
	CGSizeMakeWithDictionaryRepresentation = ~f{B^v^v}
	CGVectorMake = ~f{{=dd}dd}
	__CGPointEqualToPoint = ~f{B{=dd}{=dd}}
	__CGSizeEqualToSize = ~f{B{=dd}{=dd}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/timex.h
	ntp_adjtime = ~f{i^v}
	ntp_gettime = ~f{i^v}
/usr/local/lib/clang/9.0.1/include/ptwriteintrin.h
	_ptwrite32 = ~f{vI}
	_ptwrite64 = ~f{vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMTime.h
	CMTimeAbsoluteValue = ~f{{=qiIq}{=qiIq}}
	CMTimeAdd = ~f{{=qiIq}{=qiIq}{=qiIq}}
	CMTimeCompare = ~f{i{=qiIq}{=qiIq}}
	CMTimeConvertScale = ~f{{=qiIq}{=qiIq}iI}
	CMTimeCopyAsDictionary = ~f{^v{=qiIq}^v}
	CMTimeCopyDescription = ~f{^v^v{=qiIq}}
	CMTimeGetSeconds = ~f{d{=qiIq}}
	CMTimeMake = ~f{{=qiIq}qi}
	CMTimeMakeFromDictionary = ~f{{=qiIq}^v}
	CMTimeMakeWithEpoch = ~f{{=qiIq}qiq}
	CMTimeMakeWithSeconds = ~f{{=qiIq}di}
	CMTimeMaximum = ~f{{=qiIq}{=qiIq}{=qiIq}}
	CMTimeMinimum = ~f{{=qiIq}{=qiIq}{=qiIq}}
	CMTimeMultiply = ~f{{=qiIq}{=qiIq}i}
	CMTimeMultiplyByFloat64 = ~f{{=qiIq}{=qiIq}d}
	CMTimeMultiplyByRatio = ~f{{=qiIq}{=qiIq}ii}
	CMTimeShow = ~f{v{=qiIq}}
	CMTimeSubtract = ~f{{=qiIq}{=qiIq}{=qiIq}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_regex.h
	regcomp_l = ~f{i^v^ci^v}
	regncomp_l = ~f{i^v^cLi^v}
	regwcomp_l = ~f{i^v^ii^v}
	regwnexec_l = ~f{i^v^iLL^vi^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_ctype.h
	___runetype_l = ~f{Li^v}
	___tolower_l = ~f{ii^v}
	___toupper_l = ~f{ii^v}
	__istype_l = ~f{iiL^v}
	__maskrune_l = ~f{iiL^v}
	__tolower_l = ~f{ii^v}
	__toupper_l = ~f{ii^v}
	__wcwidth_l = ~f{ii^v}
	digittoint_l = ~f{ii^v}
	isalnum_l = ~f{ii^v}
	isalpha_l = ~f{ii^v}
	isblank_l = ~f{ii^v}
	iscntrl_l = ~f{ii^v}
	isdigit_l = ~f{ii^v}
	isgraph_l = ~f{ii^v}
	ishexnumber_l = ~f{ii^v}
	isideogram_l = ~f{ii^v}
	islower_l = ~f{ii^v}
	isnumber_l = ~f{ii^v}
	isphonogram_l = ~f{ii^v}
	isprint_l = ~f{ii^v}
	ispunct_l = ~f{ii^v}
	isrune_l = ~f{ii^v}
	isspace_l = ~f{ii^v}
	isspecial_l = ~f{ii^v}
	isupper_l = ~f{ii^v}
	isxdigit_l = ~f{ii^v}
	tolower_l = ~f{ii^v}
	toupper_l = ~f{ii^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/NSText.h
	NSTextAlignmentFromCTTextAlignment = ~f{lC}
	NSTextAlignmentToCTTextAlignment = ~f{Cl}
/usr/local/lib/clang/9.0.1/include/pkuintrin.h
	_rdpkru_u32 = ~f{I}
	_wrpkru = ~f{vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/utime.h
	utime = ~f{i^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/browser.h
	nw_browser_cancel = ~f{v@}
	nw_browser_copy_browse_descriptor = ~f{@@}
	nw_browser_copy_parameters = ~f{@@}
	nw_browser_create = ~f{@@@}
	nw_browser_set_browse_results_changed_handler = ~f{v@%~f{v@@B}}
	nw_browser_set_queue = ~f{v@@}
	nw_browser_set_state_changed_handler = ~f{v@%~f{vI@}}
	nw_browser_start = ~f{v@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/host_priv.h
	host_default_memory_manager = ~f{iI^II}
	host_get_UNDServer = ~f{iI^I}
	host_get_boot_info = ~f{iI^c}
	host_get_clock_control = ~f{iIi^I}
	host_get_exception_ports = ~f{iII^I^I^I^i^i}
	host_get_special_port = ~f{iIii^I}
	host_priv_statistics = ~f{iIi^i^I}
	host_processor_set_priv = ~f{iII^I}
	host_processor_sets = ~f{iI^^I^I}
	host_processors = ~f{iI^^I^I}
	host_reboot = ~f{iIi}
	host_set_UNDServer = ~f{iII}
	host_set_exception_ports = ~f{iIIIii}
	host_set_special_port = ~f{iIiI}
	host_swap_exception_ports = ~f{iIIIii^I^I^I^i^i}
	kext_request = ~f{iIILI^L^I^L^I^i}
	kmod_control = ~f{iIii^^v^I}
	kmod_create = ~f{iIL^i}
	kmod_destroy = ~f{iIi}
	mach_vm_wire = ~f{iIIQQi}
	mig_strncpy_zerofill = ~f{i^c^ci}
	thread_wire = ~f{iIII}
	vm_allocate_cpm = ~f{iII^LLi}
	vm_wire = ~f{iIILLi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMSampleBuffer.h
	CMAudioSampleBufferCreateReadyWithPacketDescriptions = ~f{i^v^v^vl{=qiIq}^v^^v}
	CMAudioSampleBufferCreateWithPacketDescriptions = ~f{i^v^vC^~f{i^v^v}^v^vl{=qiIq}^v^^v}
	CMAudioSampleBufferCreateWithPacketDescriptionsAndMakeDataReadyHandler = ~f{i^v^vC^vl{=qiIq}^v^^v%~f{i^v}}
	CMSampleBufferCallBlockForEachSample = ~f{i^v%~f{i^vl}}
	CMSampleBufferCallForEachSample = ~f{i^v^~f{i^vl^v}^v}
	CMSampleBufferCopyPCMDataIntoAudioBufferList = ~f{i^vii^v}
	CMSampleBufferCopySampleBufferForRange = ~f{i^v^v{=ll}^^v}
	CMSampleBufferCreate = ~f{i^v^vC^~f{i^v^v}^v^vll^vl^L^^v}
	CMSampleBufferCreateCopy = ~f{i^v^v^^v}
	CMSampleBufferCreateCopyWithNewTiming = ~f{i^v^vl^v^^v}
	CMSampleBufferCreateForImageBuffer = ~f{i^v^vC^~f{i^v^v}^v^v^v^^v}
	CMSampleBufferCreateForImageBufferWithMakeDataReadyHandler = ~f{i^v^vC^v^v^^v%~f{i^v}}
	CMSampleBufferCreateReady = ~f{i^v^v^vll^vl^L^^v}
	CMSampleBufferCreateReadyWithImageBuffer = ~f{i^v^v^v^v^^v}
	CMSampleBufferCreateWithMakeDataReadyHandler = ~f{i^v^vC^vll^vl^L^^v%~f{i^v}}
	CMSampleBufferDataIsReady = ~f{C^v}
	CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer = ~f{i^v^L^vL^v^vI^^v}
	CMSampleBufferGetAudioStreamPacketDescriptions = ~f{i^vL^v^L}
	CMSampleBufferGetAudioStreamPacketDescriptionsPtr = ~f{i^v^^v^L}
	CMSampleBufferGetDataBuffer = ~f{^v^v}
	CMSampleBufferGetDecodeTimeStamp = ~f{{=qiIq}^v}
	CMSampleBufferGetDuration = ~f{{=qiIq}^v}
	CMSampleBufferGetFormatDescription = ~f{^v^v}
	CMSampleBufferGetImageBuffer = ~f{^v^v}
	CMSampleBufferGetNumSamples = ~f{l^v}
	CMSampleBufferGetOutputDecodeTimeStamp = ~f{{=qiIq}^v}
	CMSampleBufferGetOutputDuration = ~f{{=qiIq}^v}
	CMSampleBufferGetOutputPresentationTimeStamp = ~f{{=qiIq}^v}
	CMSampleBufferGetOutputSampleTimingInfoArray = ~f{i^vl^v^l}
	CMSampleBufferGetPresentationTimeStamp = ~f{{=qiIq}^v}
	CMSampleBufferGetSampleAttachmentsArray = ~f{^v^vC}
	CMSampleBufferGetSampleSize = ~f{L^vl}
	CMSampleBufferGetSampleSizeArray = ~f{i^vl^L^l}
	CMSampleBufferGetSampleTimingInfo = ~f{i^vl^v}
	CMSampleBufferGetSampleTimingInfoArray = ~f{i^vl^v^l}
	CMSampleBufferGetTotalSampleSize = ~f{L^v}
	CMSampleBufferGetTypeID = ~f{L}
	CMSampleBufferHasDataFailed = ~f{C^v^i}
	CMSampleBufferInvalidate = ~f{i^v}
	CMSampleBufferIsValid = ~f{C^v}
	CMSampleBufferMakeDataReady = ~f{i^v}
	CMSampleBufferSetDataBuffer = ~f{i^v^v}
	CMSampleBufferSetDataBufferFromAudioBufferList = ~f{i^v^v^vI^v}
	CMSampleBufferSetDataFailed = ~f{i^vi}
	CMSampleBufferSetDataReady = ~f{i^v}
	CMSampleBufferSetInvalidateCallback = ~f{i^v^~f{v^vQ}Q}
	CMSampleBufferSetInvalidateHandler = ~f{i^v%~f{v^v}}
	CMSampleBufferSetOutputPresentationTimeStamp = ~f{i^v{=qiIq}}
	CMSampleBufferTrackDataReadiness = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGImage.h
	CGImageCreate = ~f{^vLLLLL^vI^v^dBi}
	CGImageCreateCopy = ~f{^v^v}
	CGImageCreateCopyWithColorSpace = ~f{^v^v^v}
	CGImageCreateWithImageInRect = ~f{^v^v{={=dd}{=dd}}}
	CGImageCreateWithJPEGDataProvider = ~f{^v^v^dBi}
	CGImageCreateWithMask = ~f{^v^v^v}
	CGImageCreateWithMaskingColors = ~f{^v^v^d}
	CGImageCreateWithPNGDataProvider = ~f{^v^v^dBi}
	CGImageGetAlphaInfo = ~f{I^v}
	CGImageGetBitmapInfo = ~f{I^v}
	CGImageGetBitsPerComponent = ~f{L^v}
	CGImageGetBitsPerPixel = ~f{L^v}
	CGImageGetByteOrderInfo = ~f{I^v}
	CGImageGetBytesPerRow = ~f{L^v}
	CGImageGetColorSpace = ~f{^v^v}
	CGImageGetDataProvider = ~f{^v^v}
	CGImageGetDecode = ~f{^d^v}
	CGImageGetHeight = ~f{L^v}
	CGImageGetPixelFormatInfo = ~f{I^v}
	CGImageGetRenderingIntent = ~f{i^v}
	CGImageGetShouldInterpolate = ~f{B^v}
	CGImageGetTypeID = ~f{L}
	CGImageGetUTType = ~f{^v^v}
	CGImageGetWidth = ~f{L^v}
	CGImageIsMask = ~f{B^v}
	CGImageMaskCreate = ~f{^vLLLLL^v^dB}
	CGImageRelease = ~f{v^v}
	CGImageRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/processor.h
	mig_strncpy_zerofill = ~f{i^c^ci}
	processor_assign = ~f{iIII}
	processor_control = ~f{iI^iI}
	processor_exit = ~f{iI}
	processor_get_assignment = ~f{iI^I}
	processor_info = ~f{iIi^I^i^I}
	processor_start = ~f{iI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/locale.h
	setlocale = ~f{^ci^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/CFCharacterSetShims.h
	_CFURLComponentsGetURLFragmentAllowedCharacterSet = ?
	_CFURLComponentsGetURLHostAllowedCharacterSet = ?
	_CFURLComponentsGetURLPasswordAllowedCharacterSet = ?
	_CFURLComponentsGetURLPathAllowedCharacterSet = ?
	_CFURLComponentsGetURLQueryAllowedCharacterSet = ?
	_CFURLComponentsGetURLUserAllowedCharacterSet = ?
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBundle.h
	CFBundleCloseBundleResourceMap = ~f{v^vi}
	CFBundleCopyAuxiliaryExecutableURL = ~f{^v^v^v}
	CFBundleCopyBuiltInPlugInsURL = ~f{^v^v}
	CFBundleCopyBundleLocalizations = ~f{^v^v}
	CFBundleCopyBundleURL = ~f{^v^v}
	CFBundleCopyExecutableArchitectures = ~f{^v^v}
	CFBundleCopyExecutableArchitecturesForURL = ~f{^v^v}
	CFBundleCopyExecutableURL = ~f{^v^v}
	CFBundleCopyInfoDictionaryForURL = ~f{^v^v}
	CFBundleCopyInfoDictionaryInDirectory = ~f{^v^v}
	CFBundleCopyLocalizationsForPreferences = ~f{^v^v^v}
	CFBundleCopyLocalizationsForURL = ~f{^v^v}
	CFBundleCopyLocalizedString = ~f{^v^v^v^v^v}
	CFBundleCopyPreferredLocalizationsFromArray = ~f{^v^v}
	CFBundleCopyPrivateFrameworksURL = ~f{^v^v}
	CFBundleCopyResourceURL = ~f{^v^v^v^v^v}
	CFBundleCopyResourceURLForLocalization = ~f{^v^v^v^v^v^v}
	CFBundleCopyResourceURLInDirectory = ~f{^v^v^v^v^v}
	CFBundleCopyResourceURLsOfType = ~f{^v^v^v^v}
	CFBundleCopyResourceURLsOfTypeForLocalization = ~f{^v^v^v^v^v}
	CFBundleCopyResourceURLsOfTypeInDirectory = ~f{^v^v^v^v}
	CFBundleCopyResourcesDirectoryURL = ~f{^v^v}
	CFBundleCopySharedFrameworksURL = ~f{^v^v}
	CFBundleCopySharedSupportURL = ~f{^v^v}
	CFBundleCopySupportFilesDirectoryURL = ~f{^v^v}
	CFBundleCreate = ~f{^v^v^v}
	CFBundleCreateBundlesFromDirectory = ~f{^v^v^v^v}
	CFBundleGetAllBundles = ~f{^v}
	CFBundleGetBundleWithIdentifier = ~f{^v^v}
	CFBundleGetDataPointerForName = ~f{^v^v^v}
	CFBundleGetDataPointersForNames = ~f{v^v^v^^v}
	CFBundleGetDevelopmentRegion = ~f{^v^v}
	CFBundleGetFunctionPointerForName = ~f{^v^v^v}
	CFBundleGetFunctionPointersForNames = ~f{v^v^v^^v}
	CFBundleGetIdentifier = ~f{^v^v}
	CFBundleGetInfoDictionary = ~f{^v^v}
	CFBundleGetLocalInfoDictionary = ~f{^v^v}
	CFBundleGetMainBundle = ~f{^v}
	CFBundleGetPackageInfo = ~f{v^v^I^I}
	CFBundleGetPackageInfoInDirectory = ~f{C^v^I^I}
	CFBundleGetPlugIn = ~f{^v^v}
	CFBundleGetTypeID = ~f{L}
	CFBundleGetValueForInfoDictionaryKey = ~f{^v^v^v}
	CFBundleGetVersionNumber = ~f{I^v}
	CFBundleIsExecutableLoaded = ~f{C^v}
	CFBundleLoadExecutable = ~f{C^v}
	CFBundleLoadExecutableAndReturnError = ~f{C^v^^v}
	CFBundleOpenBundleResourceFiles = ~f{i^v^i^i}
	CFBundleOpenBundleResourceMap = ~f{i^v}
	CFBundlePreflightExecutable = ~f{C^v^^v}
	CFBundleUnloadExecutable = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vForce.h
	vvacos = ~f{v^d^d^i}
	vvacosf = ~f{v^f^f^i}
	vvacosh = ~f{v^d^d^i}
	vvacoshf = ~f{v^f^f^i}
	vvasin = ~f{v^d^d^i}
	vvasinf = ~f{v^f^f^i}
	vvasinh = ~f{v^d^d^i}
	vvasinhf = ~f{v^f^f^i}
	vvatan = ~f{v^d^d^i}
	vvatan2 = ~f{v^d^d^d^i}
	vvatan2f = ~f{v^f^f^f^i}
	vvatanf = ~f{v^f^f^i}
	vvatanh = ~f{v^d^d^i}
	vvatanhf = ~f{v^f^f^i}
	vvcbrt = ~f{v^d^d^i}
	vvcbrtf = ~f{v^f^f^i}
	vvceil = ~f{v^d^d^i}
	vvceilf = ~f{v^f^f^i}
	vvcopysign = ~f{v^d^d^d^i}
	vvcopysignf = ~f{v^f^f^f^i}
	vvcos = ~f{v^d^d^i}
	vvcosf = ~f{v^f^f^i}
	vvcosh = ~f{v^d^d^i}
	vvcoshf = ~f{v^f^f^i}
	vvcosisin = ~f{v^{=dd}^d^i}
	vvcosisinf = ~f{v^{=ff}^f^i}
	vvcospi = ~f{v^d^d^i}
	vvcospif = ~f{v^f^f^i}
	vvdiv = ~f{v^d^d^d^i}
	vvdivf = ~f{v^f^f^f^i}
	vvexp = ~f{v^d^d^i}
	vvexp2 = ~f{v^d^d^i}
	vvexp2f = ~f{v^f^f^i}
	vvexpf = ~f{v^f^f^i}
	vvexpm1 = ~f{v^d^d^i}
	vvexpm1f = ~f{v^f^f^i}
	vvfabs = ~f{v^d^d^i}
	vvfabsf = ~f{v^f^f^i}
	vvfloor = ~f{v^d^d^i}
	vvfloorf = ~f{v^f^f^i}
	vvfmod = ~f{v^d^d^d^i}
	vvfmodf = ~f{v^f^f^f^i}
	vvint = ~f{v^d^d^i}
	vvintf = ~f{v^f^f^i}
	vvlog = ~f{v^d^d^i}
	vvlog10 = ~f{v^d^d^i}
	vvlog10f = ~f{v^f^f^i}
	vvlog1p = ~f{v^d^d^i}
	vvlog1pf = ~f{v^f^f^i}
	vvlog2 = ~f{v^d^d^i}
	vvlog2f = ~f{v^f^f^i}
	vvlogb = ~f{v^d^d^i}
	vvlogbf = ~f{v^f^f^i}
	vvlogf = ~f{v^f^f^i}
	vvnextafter = ~f{v^d^d^d^i}
	vvnextafterf = ~f{v^f^f^f^i}
	vvnint = ~f{v^d^d^i}
	vvnintf = ~f{v^f^f^i}
	vvpow = ~f{v^d^d^d^i}
	vvpowf = ~f{v^f^f^f^i}
	vvpows = ~f{v^d^d^d^i}
	vvpowsf = ~f{v^f^f^f^i}
	vvrec = ~f{v^d^d^i}
	vvrecf = ~f{v^f^f^i}
	vvremainder = ~f{v^d^d^d^i}
	vvremainderf = ~f{v^f^f^f^i}
	vvrsqrt = ~f{v^d^d^i}
	vvrsqrtf = ~f{v^f^f^i}
	vvsin = ~f{v^d^d^i}
	vvsincos = ~f{v^d^d^d^i}
	vvsincosf = ~f{v^f^f^f^i}
	vvsinf = ~f{v^f^f^i}
	vvsinh = ~f{v^d^d^i}
	vvsinhf = ~f{v^f^f^i}
	vvsinpi = ~f{v^d^d^i}
	vvsinpif = ~f{v^f^f^i}
	vvsqrt = ~f{v^d^d^i}
	vvsqrtf = ~f{v^f^f^i}
	vvtan = ~f{v^d^d^i}
	vvtanf = ~f{v^f^f^i}
	vvtanh = ~f{v^d^d^i}
	vvtanhf = ~f{v^f^f^i}
	vvtanpi = ~f{v^d^d^i}
	vvtanpif = ~f{v^f^f^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/group.h
	dispatch_group_async = ~f{v@@%~f{v}}
	dispatch_group_async_f = ~f{v@@^v^~f{v^v}}
	dispatch_group_create = ~f{@}
	dispatch_group_enter = ~f{v@}
	dispatch_group_leave = ~f{v@}
	dispatch_group_notify = ~f{v@@%~f{v}}
	dispatch_group_notify_f = ~f{v@@^v^~f{v^v}}
	dispatch_group_wait = ~f{l@Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/time.h
	adjtime = ~f{i^v^v}
	futimes = ~f{ii^v}
	getitimer = ~f{ii^v}
	gettimeofday = ~f{i^v^v}
	lutimes = ~f{i^c^v}
	setitimer = ~f{ii^v^v}
	settimeofday = ~f{i^v^v}
	utimes = ~f{i^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach_voucher.h
	mach_voucher_attr_command = ~f{iIII^CI^C^I}
	mach_voucher_debug_info = ~f{iII^C^I}
	mach_voucher_extract_all_attr_recipes = ~f{iI^C^I}
	mach_voucher_extract_attr_content = ~f{iII^C^I}
	mach_voucher_extract_attr_recipe = ~f{iII^C^I}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/cblas.h
	SetBLASParamErrorProc = ~f{v^~f{v^c^c^i^i}}
	appleblas_dgeadd = ~f{vIIIiid^did^di^di}
	appleblas_sgeadd = ~f{vIIIiif^fif^fi^fi}
	catlas_caxpby = ~f{vi^v^vi^v^vi}
	catlas_cset = ~f{vi^v^vi}
	catlas_daxpby = ~f{vid^did^di}
	catlas_dset = ~f{vid^di}
	catlas_saxpby = ~f{vif^fif^fi}
	catlas_sset = ~f{vif^fi}
	catlas_zaxpby = ~f{vi^v^vi^v^vi}
	catlas_zset = ~f{vi^v^vi}
	cblas_caxpy = ~f{vi^v^vi^vi}
	cblas_ccopy = ~f{vi^vi^vi}
	cblas_cdotc_sub = ~f{vi^vi^vi^v}
	cblas_cdotu_sub = ~f{vi^vi^vi^v}
	cblas_cgbmv = ~f{vIIiiii^v^vi^vi^v^vi}
	cblas_cgemm = ~f{vIIIiii^v^vi^vi^v^vi}
	cblas_cgemv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_cgerc = ~f{vIii^v^vi^vi^vi}
	cblas_cgeru = ~f{vIii^v^vi^vi^vi}
	cblas_chbmv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_chemm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_chemv = ~f{vIIi^v^vi^vi^v^vi}
	cblas_cher = ~f{vIIif^vi^vi}
	cblas_cher2 = ~f{vIIi^v^vi^vi^vi}
	cblas_cher2k = ~f{vIIIii^v^vi^vif^vi}
	cblas_cherk = ~f{vIIIiif^vif^vi}
	cblas_chpmv = ~f{vIIi^v^v^vi^v^vi}
	cblas_chpr = ~f{vIIif^vi^v}
	cblas_chpr2 = ~f{vIIi^v^vi^vi^v}
	cblas_crotg = ~f{v^v^v^v^v}
	cblas_cscal = ~f{vi^v^vi}
	cblas_csrot = ~f{vi^vi^viff}
	cblas_csscal = ~f{vif^vi}
	cblas_cswap = ~f{vi^vi^vi}
	cblas_csymm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_csyr2k = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_csyrk = ~f{vIIIii^v^vi^v^vi}
	cblas_ctbmv = ~f{vIIIIii^vi^vi}
	cblas_ctbsv = ~f{vIIIIii^vi^vi}
	cblas_ctpmv = ~f{vIIIIi^v^vi}
	cblas_ctpsv = ~f{vIIIIi^v^vi}
	cblas_ctrmm = ~f{vIIIIIii^v^vi^vi}
	cblas_ctrmv = ~f{vIIIIi^vi^vi}
	cblas_ctrsm = ~f{vIIIIIii^v^vi^vi}
	cblas_ctrsv = ~f{vIIIIi^vi^vi}
	cblas_dasum = ~f{di^di}
	cblas_daxpy = ~f{vid^di^di}
	cblas_dcopy = ~f{vi^di^di}
	cblas_ddot = ~f{di^di^di}
	cblas_dgbmv = ~f{vIIiiiid^di^did^di}
	cblas_dgemm = ~f{vIIIiiid^di^did^di}
	cblas_dgemv = ~f{vIIiid^di^did^di}
	cblas_dger = ~f{vIiid^di^di^di}
	cblas_dnrm2 = ~f{di^di}
	cblas_drot = ~f{vi^di^didd}
	cblas_drotg = ~f{v^d^d^d^d}
	cblas_drotm = ~f{vi^di^di^d}
	cblas_drotmg = ~f{v^d^d^dd^d}
	cblas_dsbmv = ~f{vIIiid^di^did^di}
	cblas_dscal = ~f{vid^di}
	cblas_dsdot = ~f{di^fi^fi}
	cblas_dspmv = ~f{vIIid^d^did^di}
	cblas_dspr = ~f{vIIid^di^d}
	cblas_dspr2 = ~f{vIIid^di^di^d}
	cblas_dswap = ~f{vi^di^di}
	cblas_dsymm = ~f{vIIIiid^di^did^di}
	cblas_dsymv = ~f{vIIid^di^did^di}
	cblas_dsyr = ~f{vIIid^di^di}
	cblas_dsyr2 = ~f{vIIid^di^di^di}
	cblas_dsyr2k = ~f{vIIIiid^di^did^di}
	cblas_dsyrk = ~f{vIIIiid^did^di}
	cblas_dtbmv = ~f{vIIIIii^di^di}
	cblas_dtbsv = ~f{vIIIIii^di^di}
	cblas_dtpmv = ~f{vIIIIi^d^di}
	cblas_dtpsv = ~f{vIIIIi^d^di}
	cblas_dtrmm = ~f{vIIIIIiid^di^di}
	cblas_dtrmv = ~f{vIIIIi^di^di}
	cblas_dtrsm = ~f{vIIIIIiid^di^di}
	cblas_dtrsv = ~f{vIIIIi^di^di}
	cblas_dzasum = ~f{di^vi}
	cblas_dznrm2 = ~f{di^vi}
	cblas_errprn = ~f{iii^c$}
	cblas_icamax = ~f{ii^vi}
	cblas_idamax = ~f{ii^di}
	cblas_isamax = ~f{ii^fi}
	cblas_izamax = ~f{ii^vi}
	cblas_sasum = ~f{fi^fi}
	cblas_saxpy = ~f{vif^fi^fi}
	cblas_scasum = ~f{fi^vi}
	cblas_scnrm2 = ~f{fi^vi}
	cblas_scopy = ~f{vi^fi^fi}
	cblas_sdot = ~f{fi^fi^fi}
	cblas_sdsdot = ~f{fif^fi^fi}
	cblas_sgbmv = ~f{vIIiiiif^fi^fif^fi}
	cblas_sgemm = ~f{vIIIiiif^fi^fif^fi}
	cblas_sgemv = ~f{vIIiif^fi^fif^fi}
	cblas_sger = ~f{vIiif^fi^fi^fi}
	cblas_snrm2 = ~f{fi^fi}
	cblas_srot = ~f{vi^fi^fiff}
	cblas_srotg = ~f{v^f^f^f^f}
	cblas_srotm = ~f{vi^fi^fi^f}
	cblas_srotmg = ~f{v^f^f^ff^f}
	cblas_ssbmv = ~f{vIIiif^fi^fif^fi}
	cblas_sscal = ~f{vif^fi}
	cblas_sspmv = ~f{vIIif^f^fif^fi}
	cblas_sspr = ~f{vIIif^fi^f}
	cblas_sspr2 = ~f{vIIif^fi^fi^f}
	cblas_sswap = ~f{vi^fi^fi}
	cblas_ssymm = ~f{vIIIiif^fi^fif^fi}
	cblas_ssymv = ~f{vIIif^fi^fif^fi}
	cblas_ssyr = ~f{vIIif^fi^fi}
	cblas_ssyr2 = ~f{vIIif^fi^fi^fi}
	cblas_ssyr2k = ~f{vIIIiif^fi^fif^fi}
	cblas_ssyrk = ~f{vIIIiif^fif^fi}
	cblas_stbmv = ~f{vIIIIii^fi^fi}
	cblas_stbsv = ~f{vIIIIii^fi^fi}
	cblas_stpmv = ~f{vIIIIi^f^fi}
	cblas_stpsv = ~f{vIIIIi^f^fi}
	cblas_strmm = ~f{vIIIIIiif^fi^fi}
	cblas_strmv = ~f{vIIIIi^fi^fi}
	cblas_strsm = ~f{vIIIIIiif^fi^fi}
	cblas_strsv = ~f{vIIIIi^fi^fi}
	cblas_xerbla = ~f{vi^c^c$}
	cblas_zaxpy = ~f{vi^v^vi^vi}
	cblas_zcopy = ~f{vi^vi^vi}
	cblas_zdotc_sub = ~f{vi^vi^vi^v}
	cblas_zdotu_sub = ~f{vi^vi^vi^v}
	cblas_zdrot = ~f{vi^vi^vidd}
	cblas_zdscal = ~f{vid^vi}
	cblas_zgbmv = ~f{vIIiiii^v^vi^vi^v^vi}
	cblas_zgemm = ~f{vIIIiii^v^vi^vi^v^vi}
	cblas_zgemv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_zgerc = ~f{vIii^v^vi^vi^vi}
	cblas_zgeru = ~f{vIii^v^vi^vi^vi}
	cblas_zhbmv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_zhemm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_zhemv = ~f{vIIi^v^vi^vi^v^vi}
	cblas_zher = ~f{vIIid^vi^vi}
	cblas_zher2 = ~f{vIIi^v^vi^vi^vi}
	cblas_zher2k = ~f{vIIIii^v^vi^vid^vi}
	cblas_zherk = ~f{vIIIiid^vid^vi}
	cblas_zhpmv = ~f{vIIi^v^v^vi^v^vi}
	cblas_zhpr = ~f{vIIid^vi^v}
	cblas_zhpr2 = ~f{vIIi^v^vi^vi^v}
	cblas_zrotg = ~f{v^v^v^v^v}
	cblas_zscal = ~f{vi^v^vi}
	cblas_zswap = ~f{vi^vi^vi}
	cblas_zsymm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_zsyr2k = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_zsyrk = ~f{vIIIii^v^vi^v^vi}
	cblas_ztbmv = ~f{vIIIIii^vi^vi}
	cblas_ztbsv = ~f{vIIIIii^vi^vi}
	cblas_ztpmv = ~f{vIIIIi^v^vi}
	cblas_ztpsv = ~f{vIIIIi^v^vi}
	cblas_ztrmm = ~f{vIIIIIii^v^vi^vi}
	cblas_ztrmv = ~f{vIIIIi^vi^vi}
	cblas_ztrsm = ~f{vIIIIIii^v^vi^vi}
	cblas_ztrsv = ~f{vIIIIi^vi^vi}
/usr/local/lib/clang/9.0.1/include/adxintrin.h
	_addcarry_u32 = ~f{CCII^I}
	_addcarry_u64 = ~f{CCQQ^Q}
	_addcarryx_u32 = ~f{CCII^I}
	_addcarryx_u64 = ~f{CCQQ^Q}
	_subborrow_u32 = ~f{CCII^I}
	_subborrow_u64 = ~f{CCQQ^Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/uchar.h
	u_charAge = ~f{vi^C}
	u_charDigitValue = ~f{ii}
	u_charDirection = ~f{Ii}
	u_charFromName = ~f{iI^c^i}
	u_charMirror = ~f{ii}
	u_charName = ~f{iiI^ci^i}
	u_charType = ~f{ci}
	u_digit = ~f{iic}
	u_enumCharNames = ~f{vii^~f{c^viI^ci}^vI^i}
	u_enumCharTypes = ~f{v^~f{c^viiI}^v}
	u_foldCase = ~f{iiI}
	u_forDigit = ~f{iic}
	u_getBidiPairedBracket = ~f{ii}
	u_getBinaryPropertySet = ~f{^vi^i}
	u_getCombiningClass = ~f{Ci}
	u_getFC_NFKC_Closure = ~f{ii^Si^i}
	u_getISOComment = ~f{ii^ci^i}
	u_getIntPropertyMap = ~f{^vi^i}
	u_getIntPropertyMaxValue = ~f{ii}
	u_getIntPropertyMinValue = ~f{ii}
	u_getIntPropertyValue = ~f{iii}
	u_getNumericValue = ~f{di}
	u_getPropertyEnum = ~f{i^c}
	u_getPropertyName = ~f{^ciI}
	u_getPropertyValueEnum = ~f{ii^c}
	u_getPropertyValueName = ~f{^ciiI}
	u_getUnicodeVersion = ~f{v^C}
	u_hasBinaryProperty = ~f{cii}
	u_isIDIgnorable = ~f{ci}
	u_isIDPart = ~f{ci}
	u_isIDStart = ~f{ci}
	u_isISOControl = ~f{ci}
	u_isJavaIDPart = ~f{ci}
	u_isJavaIDStart = ~f{ci}
	u_isJavaSpaceChar = ~f{ci}
	u_isMirrored = ~f{ci}
	u_isUAlphabetic = ~f{ci}
	u_isULowercase = ~f{ci}
	u_isUUppercase = ~f{ci}
	u_isUWhiteSpace = ~f{ci}
	u_isWhitespace = ~f{ci}
	u_isalnum = ~f{ci}
	u_isalpha = ~f{ci}
	u_isbase = ~f{ci}
	u_isblank = ~f{ci}
	u_iscntrl = ~f{ci}
	u_isdefined = ~f{ci}
	u_isdigit = ~f{ci}
	u_isgraph = ~f{ci}
	u_islower = ~f{ci}
	u_isprint = ~f{ci}
	u_ispunct = ~f{ci}
	u_isspace = ~f{ci}
	u_istitle = ~f{ci}
	u_isupper = ~f{ci}
	u_isxdigit = ~f{ci}
	u_tolower = ~f{ii}
	u_totitle = ~f{ii}
	u_toupper = ~f{ii}
	ublock_getCode = ~f{ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/monetary.h
	strfmon = ~f{l^cL^c$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NetworkOverlayShims.h
	NWCreateDispatchDataFromNSData = ~f{@@}
	NWCreateNSDataFromDispatchData = ~f{@@}
	_swift_nw_connection_send = ~f{v@@@B%~f{v@}}
	_swift_nw_connection_send_idempotent = ~f{v@@@B}
	_swift_nw_content_context_default_message = ~f{@}
	_swift_nw_content_context_default_stream = ~f{@}
	_swift_nw_content_context_final_message = ~f{@}
	_swift_nw_data_transfer_report_all_paths = ~f{I}
	_swift_nw_parameters_create_custom_ip = ~f{@C}
	nw_endpoint_copy_interface = ~f{@@}
	nw_endpoint_create_unix = ~f{@^c}
	nw_endpoint_set_interface = ~f{v@@}
	nw_interface_create_with_index = ~f{@I}
	nw_interface_create_with_name = ~f{@^c}
	nwlog_get_string_for_dns_service_error = ~f{^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/fmtmsg.h
	fmtmsg = ~f{il^ci^c^c^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/uuid/uuid.h
	uuid_clear = ~f{v^C}
	uuid_compare = ~f{i^C^C}
	uuid_copy = ~f{v^C^C}
	uuid_generate = ~f{v^C}
	uuid_generate_early_random = ~f{v^C}
	uuid_generate_random = ~f{v^C}
	uuid_generate_time = ~f{v^C}
	uuid_is_null = ~f{i^C}
	uuid_parse = ~f{i^c^C}
	uuid_unparse = ~f{v^C^c}
	uuid_unparse_lower = ~f{v^C^c}
	uuid_unparse_upper = ~f{v^C^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/ftw.h
	ftw = ~f{i^c^~f{i^c^vi}i}
	nftw = ~f{i^c^~f{i^c^vi^v}ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libunwind.h
	unw_get_fpreg = ~f{i^vi^d}
	unw_get_proc_info = ~f{i^v^v}
	unw_get_proc_name = ~f{i^v^cL^Q}
	unw_get_reg = ~f{i^vi^Q}
	unw_getcontext = ~f{i^v}
	unw_init_local = ~f{i^v^v}
	unw_is_fpreg = ~f{i^vi}
	unw_is_signal_frame = ~f{i^v}
	unw_regname = ~f{^c^vi}
	unw_resume = ~f{i^v}
	unw_set_fpreg = ~f{i^vid}
	unw_set_reg = ~f{i^viQ}
	unw_step = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h
	CFAllocatorAllocate = ~f{^v^vlL}
	CFAllocatorCreate = ~f{^v^v^v}
	CFAllocatorDeallocate = ~f{v^v^v}
	CFAllocatorGetContext = ~f{v^v^v}
	CFAllocatorGetDefault = ~f{^v}
	CFAllocatorGetPreferredSizeForSize = ~f{l^vlL}
	CFAllocatorGetTypeID = ~f{L}
	CFAllocatorReallocate = ~f{^v^v^vlL}
	CFAllocatorSetDefault = ~f{v^v}
	CFAutorelease = ~f{^v^v}
	CFCopyDescription = ~f{^v^v}
	CFCopyTypeIDDescription = ~f{^vL}
	CFEqual = ~f{C^v^v}
	CFGetAllocator = ~f{^v^v}
	CFGetRetainCount = ~f{l^v}
	CFGetTypeID = ~f{L^v}
	CFHash = ~f{L^v}
	CFMakeCollectable = ~f{^v^v}
	CFNullGetTypeID = ~f{L}
	CFRangeMake = ~f{{=ll}ll}
	CFRelease = ~f{v^v}
	CFRetain = ~f{^v^v}
	__CFRangeMake = ~f{{=ll}ll}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/uregex.h
	uregex_appendReplacement = ~f{i^v^Si^^S^i^i}
	uregex_appendReplacementUText = ~f{v^v^v^v^i}
	uregex_appendTail = ~f{i^v^^S^i^i}
	uregex_appendTailUText = ~f{^v^v^v^i}
	uregex_clone = ~f{^v^v^i}
	uregex_close = ~f{v^v}
	uregex_end = ~f{i^vi^i}
	uregex_end64 = ~f{q^vi^i}
	uregex_find = ~f{c^vi^i}
	uregex_find64 = ~f{c^vq^i}
	uregex_findNext = ~f{c^v^i}
	uregex_flags = ~f{i^v^i}
	uregex_getFindProgressCallback = ~f{v^v^^~f{c^vq}^^v^i}
	uregex_getMatchCallback = ~f{v^v^^~f{c^vi}^^v^i}
	uregex_getStackLimit = ~f{i^v^i}
	uregex_getText = ~f{^S^v^i^i}
	uregex_getTimeLimit = ~f{i^v^i}
	uregex_getUText = ~f{^v^v^v^i}
	uregex_group = ~f{i^vi^Si^i}
	uregex_groupCount = ~f{i^v^i}
	uregex_groupNumberFromCName = ~f{i^v^ci^i}
	uregex_groupNumberFromName = ~f{i^v^Si^i}
	uregex_groupUText = ~f{^v^vi^v^q^i}
	uregex_hasAnchoringBounds = ~f{c^v^i}
	uregex_hasTransparentBounds = ~f{c^v^i}
	uregex_hitEnd = ~f{c^v^i}
	uregex_lookingAt = ~f{c^vi^i}
	uregex_lookingAt64 = ~f{c^vq^i}
	uregex_matches = ~f{c^vi^i}
	uregex_matches64 = ~f{c^vq^i}
	uregex_open = ~f{^v^SiI^v^i}
	uregex_openC = ~f{^v^cI^v^i}
	uregex_openUText = ~f{^v^vI^v^i}
	uregex_pattern = ~f{^S^v^i^i}
	uregex_patternUText = ~f{^v^v^i}
	uregex_refreshUText = ~f{v^v^v^i}
	uregex_regionEnd = ~f{i^v^i}
	uregex_regionEnd64 = ~f{q^v^i}
	uregex_regionStart = ~f{i^v^i}
	uregex_regionStart64 = ~f{q^v^i}
	uregex_replaceAll = ~f{i^v^Si^Si^i}
	uregex_replaceAllUText = ~f{^v^v^v^v^i}
	uregex_replaceFirst = ~f{i^v^Si^Si^i}
	uregex_replaceFirstUText = ~f{^v^v^v^v^i}
	uregex_requireEnd = ~f{c^v^i}
	uregex_reset = ~f{v^vi^i}
	uregex_reset64 = ~f{v^vq^i}
	uregex_setFindProgressCallback = ~f{v^v^~f{c^vq}^v^i}
	uregex_setMatchCallback = ~f{v^v^~f{c^vi}^v^i}
	uregex_setRegion = ~f{v^vii^i}
	uregex_setRegion64 = ~f{v^vqq^i}
	uregex_setRegionAndStart = ~f{v^vqqq^i}
	uregex_setStackLimit = ~f{v^vi^i}
	uregex_setText = ~f{v^v^Si^i}
	uregex_setTimeLimit = ~f{v^vi^i}
	uregex_setUText = ~f{v^v^v^i}
	uregex_split = ~f{i^v^Si^i^^Si^i}
	uregex_splitUText = ~f{i^v^^vi^i}
	uregex_start = ~f{i^vi^i}
	uregex_start64 = ~f{q^vi^i}
	uregex_useAnchoringBounds = ~f{v^vc^i}
	uregex_useTransparentBounds = ~f{v^vc^i}
/usr/local/lib/clang/9.0.1/include/xopintrin.h
	_mm256_cmov_si256 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_frcz_pd = ~f{~V{4d}~V{4d}}
	_mm256_frcz_ps = ~f{~V{8f}~V{8f}}
	_mm_cmov_si128 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comeq_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comfalse_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comge_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comgt_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comle_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comlt_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comneq_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_comtrue_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_frcz_pd = ~f{~V{2d}~V{2d}}
	_mm_frcz_ps = ~f{~V{4f}~V{4f}}
	_mm_frcz_sd = ~f{~V{2d}~V{2d}}
	_mm_frcz_ss = ~f{~V{4f}~V{4f}}
	_mm_haddd_epi16 = ~f{~V{2q}~V{2q}}
	_mm_haddd_epi8 = ~f{~V{2q}~V{2q}}
	_mm_haddd_epu16 = ~f{~V{2q}~V{2q}}
	_mm_haddd_epu8 = ~f{~V{2q}~V{2q}}
	_mm_haddq_epi16 = ~f{~V{2q}~V{2q}}
	_mm_haddq_epi32 = ~f{~V{2q}~V{2q}}
	_mm_haddq_epi8 = ~f{~V{2q}~V{2q}}
	_mm_haddq_epu16 = ~f{~V{2q}~V{2q}}
	_mm_haddq_epu32 = ~f{~V{2q}~V{2q}}
	_mm_haddq_epu8 = ~f{~V{2q}~V{2q}}
	_mm_haddw_epi8 = ~f{~V{2q}~V{2q}}
	_mm_haddw_epu8 = ~f{~V{2q}~V{2q}}
	_mm_hsubd_epi16 = ~f{~V{2q}~V{2q}}
	_mm_hsubq_epi32 = ~f{~V{2q}~V{2q}}
	_mm_hsubw_epi8 = ~f{~V{2q}~V{2q}}
	_mm_macc_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_macc_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maccd_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_macchi_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_macclo_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maccs_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maccs_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maccsd_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maccshi_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maccslo_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maddd_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_maddsd_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_perm_epi8 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_rot_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_rot_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_rot_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_rot_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_shl_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_shl_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_shl_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_shl_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelFormatDescription.h
	CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes = ~f{^v^v}
	CVPixelFormatDescriptionCreateWithPixelFormatType = ~f{^v^vI}
	CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType = ~f{v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/statvfs.h
	fstatvfs = ~f{ii^v}
	statvfs = ~f{i^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDateFormatter.h
	CFDateFormatterCopyProperty = ~f{^v^v^v}
	CFDateFormatterCreate = ~f{^v^v^vll}
	CFDateFormatterCreateDateFormatFromTemplate = ~f{^v^v^vL^v}
	CFDateFormatterCreateDateFromString = ~f{^v^v^v^v^v}
	CFDateFormatterCreateISO8601Formatter = ~f{^v^vL}
	CFDateFormatterCreateStringWithAbsoluteTime = ~f{^v^v^vd}
	CFDateFormatterCreateStringWithDate = ~f{^v^v^v^v}
	CFDateFormatterGetAbsoluteTimeFromString = ~f{C^v^v^v^d}
	CFDateFormatterGetDateStyle = ~f{l^v}
	CFDateFormatterGetFormat = ~f{^v^v}
	CFDateFormatterGetLocale = ~f{^v^v}
	CFDateFormatterGetTimeStyle = ~f{l^v}
	CFDateFormatterGetTypeID = ~f{L}
	CFDateFormatterSetFormat = ~f{v^v^v}
	CFDateFormatterSetProperty = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLEnumerator.h
	CFURLEnumeratorCreateForDirectoryURL = ~f{^v^v^vL^v}
	CFURLEnumeratorCreateForMountedVolumes = ~f{^v^vL^v}
	CFURLEnumeratorGetDescendentLevel = ~f{l^v}
	CFURLEnumeratorGetNextURL = ~f{l^v^^v^^v}
	CFURLEnumeratorGetSourceDidChange = ~f{C^v}
	CFURLEnumeratorGetTypeID = ~f{L}
	CFURLEnumeratorSkipDescendents = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPattern.h
	CGPatternCreate = ~f{^v^v{={=dd}{=dd}}{=dddddd}ddiB^v}
	CGPatternGetTypeID = ~f{L}
	CGPatternRelease = ~f{v^v}
	CGPatternRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/BNNS/bnns.h
	BNNSFilterApply = ~f{i^v^v^v}
	BNNSFilterApplyBatch = ~f{i^vL^vL^vL}
	BNNSFilterCreateConvolutionLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreateFullyConnectedLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreatePoolingLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreateVectorActivationLayer = ~f{^v^v^v^v^v}
	BNNSFilterDestroy = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_string.h
	strcasecmp_l = ~f{i^c^c^v}
	strcasestr_l = ~f{^c^c^c^v}
	strcoll_l = ~f{i^c^c^v}
	strncasecmp_l = ~f{i^c^cL^v}
	strxfrm_l = ~f{L^c^cL^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/objc/objc-auto.h
	class_createInstance = ~f{@@L}
	objc_allocate_object = ~f{@@i}
	objc_assertRegisteredThreadWithCollector = ?
	objc_assign_global = ~f{@@^@}
	objc_assign_ivar = ~f{@@@l}
	objc_assign_strongCast = ~f{@@^@}
	objc_assign_threadlocal = ~f{@@^@}
	objc_assign_weak = ~f{@@^@}
	objc_atomicCompareAndSwapGlobal = ~f{B@@^@}
	objc_atomicCompareAndSwapGlobalBarrier = ~f{B@@^@}
	objc_atomicCompareAndSwapInstanceVariable = ~f{B@@^@}
	objc_atomicCompareAndSwapInstanceVariableBarrier = ~f{B@@^@}
	objc_atomicCompareAndSwapPtr = ~f{B@@^@}
	objc_atomicCompareAndSwapPtrBarrier = ~f{B@@^@}
	objc_clear_stack = ~f{vL}
	objc_collect = ~f{vL}
	objc_collectingEnabled = ~f{B}
	objc_collecting_enabled = ~f{B}
	objc_finalizeOnMainThread = ~f{v@}
	objc_is_finalized = ~f{B^v}
	objc_memmove_collectable = ~f{^v^v^vL}
	objc_read_weak = ~f{@^@}
	objc_registerThreadWithCollector = ?
	objc_setCollectionRatio = ~f{vL}
	objc_setCollectionThreshold = ~f{vL}
	objc_set_collection_ratio = ~f{vL}
	objc_set_collection_threshold = ~f{vL}
	objc_startCollectorThread = ~f{v}
	objc_start_collector_thread = ~f{v}
	objc_unregisterThreadWithCollector = ?
/usr/local/lib/clang/9.0.1/include/sgxintrin.h
	_encls_u32 = ~f{II^L}
	_enclu_u32 = ~f{II^L}
	_enclv_u32 = ~f{II^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/CommonCrypto/CommonDigest.h
	CC_MD2 = ~f{^C^vI^C}
	CC_MD2_Final = ~f{i^C^v}
	CC_MD2_Init = ~f{i^v}
	CC_MD2_Update = ~f{i^v^vI}
	CC_MD4 = ~f{^C^vI^C}
	CC_MD4_Final = ~f{i^C^v}
	CC_MD4_Init = ~f{i^v}
	CC_MD4_Update = ~f{i^v^vI}
	CC_MD5 = ~f{^C^vI^C}
	CC_MD5_Final = ~f{i^C^v}
	CC_MD5_Init = ~f{i^v}
	CC_MD5_Update = ~f{i^v^vI}
	CC_SHA1 = ~f{^C^vI^C}
	CC_SHA1_Final = ~f{i^C^v}
	CC_SHA1_Init = ~f{i^v}
	CC_SHA1_Update = ~f{i^v^vI}
	CC_SHA224 = ~f{^C^vI^C}
	CC_SHA224_Final = ~f{i^C^v}
	CC_SHA224_Init = ~f{i^v}
	CC_SHA224_Update = ~f{i^v^vI}
	CC_SHA256 = ~f{^C^vI^C}
	CC_SHA256_Final = ~f{i^C^v}
	CC_SHA256_Init = ~f{i^v}
	CC_SHA256_Update = ~f{i^v^vI}
	CC_SHA384 = ~f{^C^vI^C}
	CC_SHA384_Final = ~f{i^C^v}
	CC_SHA384_Init = ~f{i^v}
	CC_SHA384_Update = ~f{i^v^vI}
	CC_SHA512 = ~f{^C^vI^C}
	CC_SHA512_Final = ~f{i^C^v}
	CC_SHA512_Init = ~f{i^v}
	CC_SHA512_Update = ~f{i^v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGShading.h
	CGShadingCreateAxial = ~f{^v^v{=dd}{=dd}^vBB}
	CGShadingCreateRadial = ~f{^v^v{=dd}d{=dd}d^vBB}
	CGShadingGetTypeID = ~f{L}
	CGShadingRelease = ~f{v^v}
	CGShadingRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSRange.h
	NSEqualRanges = ~f{B{=LL}{=LL}}
	NSIntersectionRange = ~f{{=LL}{=LL}{=LL}}
	NSLocationInRange = ~f{BL{=LL}}
	NSMakeRange = ~f{{=LL}LL}
	NSMaxRange = ~f{L{=LL}}
	NSRangeFromString = ~f{{=LL}@}
	NSStringFromRange = ~f{@{=LL}}
	NSUnionRange = ~f{{=LL}{=LL}{=LL}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/mount.h
	fhopen = ~f{i^vi}
	fmount = ~f{i^cii^v}
	fstatfs = ~f{ii^v}
	getfh = ~f{i^c^v}
	getfsstat = ~f{i^vii}
	getmntinfo = ~f{i^^vi}
	getmntinfo_r_np = ~f{i^^vi}
	getvfsbyname = ~f{i^c^v}
	mount = ~f{i^c^ci^v}
	statfs = ~f{i^c^v}
	unmount = ~f{i^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/processor_set.h
	mig_strncpy_zerofill = ~f{i^c^ci}
	processor_set_destroy = ~f{iI}
	processor_set_info = ~f{iIi^I^i^I}
	processor_set_max_priority = ~f{iIiI}
	processor_set_policy_control = ~f{iIi^iII}
	processor_set_policy_disable = ~f{iIiI}
	processor_set_policy_enable = ~f{iIi}
	processor_set_stack_usage = ~f{iI^I^L^L^L^L}
	processor_set_statistics = ~f{iIi^i^I}
	processor_set_tasks = ~f{iI^^I^I}
	processor_set_threads = ~f{iI^^I^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/CoreFoundationShims.h
	_swift_stdlib_CFStringCompare = ~f{l@@}
	_swift_stdlib_CFStringCreateCopy = ~f{@^v@}
	_swift_stdlib_CFStringCreateWithBytes = ~f{@^v^ClIC}
	_swift_stdlib_CFStringCreateWithSubstring = ~f{@^v@{=ll}}
	_swift_stdlib_CFStringGetBytes = ~f{l@{=ll}ICC^Cl^l}
	_swift_stdlib_CFStringGetCStringPtr = ~f{^c@I}
	_swift_stdlib_CFStringGetCharacterAtIndex = ~f{S@l}
	_swift_stdlib_CFStringGetCharacters = ~f{v@{=ll}^S}
	_swift_stdlib_CFStringGetCharactersPtr = ~f{^S@}
	_swift_stdlib_CFStringGetLength = ~f{l@}
	_swift_stdlib_CFStringHashCString = ~f{L^Cl}
	_swift_stdlib_CFStringHashNSString = ~f{L@}
	_swift_stdlib_NSStringCStringUsingEncodingTrampoline = ~f{^C@L}
	_swift_stdlib_NSStringGetCStringTrampoline = ~f{C@^ClL}
	_swift_stdlib_isNSString = ~f{C@}
	_swift_stdlib_objcDebugDescription = ~f{@@}
	_swift_stdlib_unsafeAddressOfClass = ~f{Q@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/data.h
	dispatch_data_apply = ~f{B@%~f{B@L^vL}}
	dispatch_data_copy_region = ~f{@@L^L}
	dispatch_data_create = ~f{@^vL@%~f{v}}
	dispatch_data_create_concat = ~f{@@@}
	dispatch_data_create_map = ~f{@@^^v^L}
	dispatch_data_create_subrange = ~f{@@LL}
	dispatch_data_get_size = ~f{L@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/stat.h
	chflags = ~f{i^cI}
	chmod = ~f{i^cS}
	chmodx_np = ~f{i^c^v}
	fchflags = ~f{iiI}
	fchmod = ~f{iiS}
	fchmodat = ~f{ii^cSi}
	fchmodx_np = ~f{ii^v}
	fstat = ~f{ii^v}
	fstatat = ~f{ii^c^vi}
	fstatx_np = ~f{ii^v^v}
	futimens = ~f{ii^v}
	lchflags = ~f{i^cI}
	lchmod = ~f{i^cS}
	lstat = ~f{i^c^v}
	lstatx_np = ~f{i^c^v^v}
	mkdir = ~f{i^cS}
	mkdirat = ~f{ii^cS}
	mkdirx_np = ~f{i^c^v}
	mkfifo = ~f{i^cS}
	mkfifox_np = ~f{i^c^v}
	mknod = ~f{i^cSi}
	stat = ~f{i^c^v}
	statx_np = ~f{i^c^v^v}
	umask = ~f{SS}
	umaskx_np = ~f{i^v}
	utimensat = ~f{ii^c^vi}
/usr/local/lib/clang/9.0.1/include/avx512vpopcntdqintrin.h
	_mm512_mask_popcnt_epi32 = ~f{~V{8q}~V{8q}S~V{8q}}
	_mm512_mask_popcnt_epi64 = ~f{~V{8q}~V{8q}C~V{8q}}
	_mm512_maskz_popcnt_epi32 = ~f{~V{8q}S~V{8q}}
	_mm512_maskz_popcnt_epi64 = ~f{~V{8q}C~V{8q}}
	_mm512_popcnt_epi32 = ~f{~V{8q}~V{8q}}
	_mm512_popcnt_epi64 = ~f{~V{8q}~V{8q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMTimeRange.h
	CMTimeClampToRange = ~f{{=qiIq}{=qiIq}{={=qiIq}{=qiIq}}}
	CMTimeFoldIntoRange = ~f{{=qiIq}{=qiIq}{={=qiIq}{=qiIq}}}
	CMTimeMapDurationFromRangeToRange = ~f{{=qiIq}{=qiIq}{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}
	CMTimeMapTimeFromRangeToRange = ~f{{=qiIq}{=qiIq}{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}
	CMTimeMappingCopyAsDictionary = ~f{^v{={={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}^v}
	CMTimeMappingCopyDescription = ~f{^v^v{={={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}}
	CMTimeMappingMake = ~f{{={={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}
	CMTimeMappingMakeEmpty = ~f{{={={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}{={=qiIq}{=qiIq}}}
	CMTimeMappingMakeFromDictionary = ~f{{={={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}^v}
	CMTimeMappingShow = ~f{v{={={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}}
	CMTimeRangeContainsTime = ~f{C{={=qiIq}{=qiIq}}{=qiIq}}
	CMTimeRangeContainsTimeRange = ~f{C{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}
	CMTimeRangeCopyAsDictionary = ~f{^v{={=qiIq}{=qiIq}}^v}
	CMTimeRangeCopyDescription = ~f{^v^v{={=qiIq}{=qiIq}}}
	CMTimeRangeEqual = ~f{C{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}
	CMTimeRangeFromTimeToTime = ~f{{={=qiIq}{=qiIq}}{=qiIq}{=qiIq}}
	CMTimeRangeGetEnd = ~f{{=qiIq}{={=qiIq}{=qiIq}}}
	CMTimeRangeGetIntersection = ~f{{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}
	CMTimeRangeGetUnion = ~f{{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}{={=qiIq}{=qiIq}}}
	CMTimeRangeMake = ~f{{={=qiIq}{=qiIq}}{=qiIq}{=qiIq}}
	CMTimeRangeMakeFromDictionary = ~f{{={=qiIq}{=qiIq}}^v}
	CMTimeRangeShow = ~f{v{={=qiIq}{=qiIq}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/asl.h
	_asl_evaluate_send = ~f{I^v^vi}
	_asl_lib_log = ~f{i^vI^v^c$}
	asl_add_log_file = ~f{i^vi}
	asl_add_output_file = ~f{i^vi^c^cii}
	asl_append = ~f{v^v^v}
	asl_close = ~f{v^v}
	asl_close_auxiliary_file = ~f{ii}
	asl_count = ~f{L^v}
	asl_create_auxiliary_file = ~f{i^v^c^c^i}
	asl_decode_buffer = ~f{i^c^^c^L}
	asl_encode_buffer = ~f{^c^cL}
	asl_fetch_key_val_op = ~f{i^vI^^c^^c^I}
	asl_format = ~f{^c^v^c^cI}
	asl_free = ~f{v^v}
	asl_get = ~f{^c^v^c}
	asl_get_index = ~f{^v^vL}
	asl_get_type = ~f{I^v}
	asl_key = ~f{^c^vI}
	asl_log = ~f{i^v^vi^c$}
	asl_log_auxiliary_location = ~f{i^v^c^c^c}
	asl_log_descriptor = ~f{i^v^viiI}
	asl_log_message = ~f{ii^c$}
	asl_match = ~f{^v^v^v^LLLIi}
	asl_new = ~f{^vI}
	asl_next = ~f{^v^v}
	asl_open = ~f{^v^c^cI}
	asl_open_from_file = ~f{^vi^c^c}
	asl_open_path = ~f{^v^cI}
	asl_prepend = ~f{v^v^v}
	asl_prev = ~f{^v^v}
	asl_release = ~f{v^v}
	asl_remove_index = ~f{v^vL}
	asl_remove_log_file = ~f{i^vi}
	asl_reset_iteration = ~f{v^vL}
	asl_retain = ~f{^v^v}
	asl_search = ~f{^v^v^v}
	asl_send = ~f{i^v^v}
	asl_set = ~f{i^v^c^c}
	asl_set_filter = ~f{i^vi}
	asl_set_output_file_filter = ~f{i^vii}
	asl_set_query = ~f{i^v^c^cI}
	asl_unset = ~f{i^v^c}
	asl_vlog = ~f{i^v^vi^c^v}
	aslresponse_free = ~f{v^v}
	aslresponse_next = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGDataProvider.h
	CGDataProviderCopyData = ~f{^v^v}
	CGDataProviderCreateDirect = ~f{^v^vq^v}
	CGDataProviderCreateSequential = ~f{^v^v^v}
	CGDataProviderCreateWithCFData = ~f{^v^v}
	CGDataProviderCreateWithData = ~f{^v^v^vL^~f{v^v^vL}}
	CGDataProviderCreateWithFilename = ~f{^v^c}
	CGDataProviderCreateWithURL = ~f{^v^v}
	CGDataProviderGetInfo = ~f{^v^v}
	CGDataProviderGetTypeID = ~f{L}
	CGDataProviderRelease = ~f{v^v}
	CGDataProviderRetain = ~f{^v^v}
/usr/local/lib/clang/9.0.1/include/smmintrin.h
	_mm_blendv_epi8 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_blendv_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_blendv_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_cmpeq_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmpgt_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_crc32_u16 = ~f{IIS}
	_mm_crc32_u32 = ~f{III}
	_mm_crc32_u64 = ~f{QQQ}
	_mm_crc32_u8 = ~f{IIC}
	_mm_cvtepi16_epi32 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi16_epi64 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi32_epi64 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi8_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi8_epi32 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi8_epi64 = ~f{~V{2q}~V{2q}}
	_mm_cvtepu16_epi32 = ~f{~V{2q}~V{2q}}
	_mm_cvtepu16_epi64 = ~f{~V{2q}~V{2q}}
	_mm_cvtepu32_epi64 = ~f{~V{2q}~V{2q}}
	_mm_cvtepu8_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtepu8_epi32 = ~f{~V{2q}~V{2q}}
	_mm_cvtepu8_epi64 = ~f{~V{2q}~V{2q}}
	_mm_max_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_max_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_max_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_max_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_minpos_epu16 = ~f{~V{2q}~V{2q}}
	_mm_mul_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_mullo_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_packus_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_stream_load_si128 = ~f{~V{2q}^~V{2q}}
	_mm_testc_si128 = ~f{i~V{2q}~V{2q}}
	_mm_testnzc_si128 = ~f{i~V{2q}~V{2q}}
	_mm_testz_si128 = ~f{i~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSObjCRuntime.h
	NSClassFromString = ~f{@@}
	NSGetSizeAndAlignment = ~f{^c^c^L^L}
	NSLog = ~f{v@$}
	NSLogv = ~f{v@^v}
	NSProtocolFromString = ~f{@@}
	NSSelectorFromString = ~f{:@}
	NSStringFromClass = ~f{@@}
	NSStringFromProtocol = ~f{@@}
	NSStringFromSelector = ~f{@:}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKMatrixStack.h
	GLKMatrixStackCreate = ~f{^v^v}
	GLKMatrixStackGetMatrix2 = ~f{{=ffffffff}^v}
	GLKMatrixStackGetMatrix3 = ~f{{=fffffffff}^v}
	GLKMatrixStackGetMatrix3Inverse = ~f{{=fffffffff}^v}
	GLKMatrixStackGetMatrix3InverseTranspose = ~f{{=fffffffff}^v}
	GLKMatrixStackGetMatrix4 = ~f{{=ffffffffffffffff}^v}
	GLKMatrixStackGetMatrix4Inverse = ~f{{=ffffffffffffffff}^v}
	GLKMatrixStackGetMatrix4InverseTranspose = ~f{{=ffffffffffffffff}^v}
	GLKMatrixStackGetTypeID = ~f{L}
	GLKMatrixStackLoadMatrix4 = ~f{v^v{=ffffffffffffffff}}
	GLKMatrixStackMultiplyMatrix4 = ~f{v^v{=ffffffffffffffff}}
	GLKMatrixStackMultiplyMatrixStack = ~f{v^v^v}
	GLKMatrixStackPop = ~f{v^v}
	GLKMatrixStackPush = ~f{v^v}
	GLKMatrixStackRotate = ~f{v^vffff}
	GLKMatrixStackRotateWithVector3 = ~f{v^vf{=fff}}
	GLKMatrixStackRotateWithVector4 = ~f{v^vf{=ffff}}
	GLKMatrixStackRotateX = ~f{v^vf}
	GLKMatrixStackRotateY = ~f{v^vf}
	GLKMatrixStackRotateZ = ~f{v^vf}
	GLKMatrixStackScale = ~f{v^vfff}
	GLKMatrixStackScaleWithVector3 = ~f{v^v{=fff}}
	GLKMatrixStackScaleWithVector4 = ~f{v^v{=ffff}}
	GLKMatrixStackSize = ~f{i^v}
	GLKMatrixStackTranslate = ~f{v^vfff}
	GLKMatrixStackTranslateWithVector3 = ~f{v^v{=fff}}
	GLKMatrixStackTranslateWithVector4 = ~f{v^v{=ffff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorConversionInfo.h
	CGColorConversionInfoCreate = ~f{^v^v^v}
	CGColorConversionInfoCreateFromList = ~f{^v^v^vIi$}
	CGColorConversionInfoCreateFromListWithArguments = ~f{^v^v^vIi^v}
	CGColorConversionInfoCreateWithOptions = ~f{^v^v^v^v}
	CGColorConversionInfoGetTypeID = ~f{L}
/usr/local/lib/clang/9.0.1/include/fmaintrin.h
	_mm256_fmadd_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_fmadd_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_fmaddsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_fmaddsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_fmsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_fmsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_fmsubadd_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_fmsubadd_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_fnmadd_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_fnmadd_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_fnmsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_fnmsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm_fmadd_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fmadd_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fmadd_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fmadd_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fmaddsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fmaddsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fmsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fmsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fmsub_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fmsub_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fmsubadd_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fmsubadd_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fnmadd_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fnmadd_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fnmadd_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fnmadd_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fnmsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fnmsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_fnmsub_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_fnmsub_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLTexture.h
	MTLTextureSwizzleChannelsMake = ~f{{=CCCC}CCCC}
/usr/local/lib/clang/9.0.1/include/xsaveoptintrin.h
	_xsaveopt = ~f{v^vQ}
	_xsaveopt64 = ~f{v^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Histogram.h
	vImageContrastStretch_ARGB8888 = ~f{l^v^vI}
	vImageContrastStretch_ARGBFFFF = ~f{l^v^v^vIffI}
	vImageContrastStretch_Planar8 = ~f{l^v^vI}
	vImageContrastStretch_PlanarF = ~f{l^v^v^vIffI}
	vImageEndsInContrastStretch_ARGB8888 = ~f{l^v^v^I^II}
	vImageEndsInContrastStretch_ARGBFFFF = ~f{l^v^v^v^I^IIffI}
	vImageEndsInContrastStretch_Planar8 = ~f{l^v^vIII}
	vImageEndsInContrastStretch_PlanarF = ~f{l^v^v^vIIIffI}
	vImageEqualization_ARGB8888 = ~f{l^v^vI}
	vImageEqualization_ARGBFFFF = ~f{l^v^v^vIffI}
	vImageEqualization_Planar8 = ~f{l^v^vI}
	vImageEqualization_PlanarF = ~f{l^v^v^vIffI}
	vImageHistogramCalculation_ARGB8888 = ~f{l^v^^LI}
	vImageHistogramCalculation_ARGBFFFF = ~f{l^v^^LIffI}
	vImageHistogramCalculation_Planar8 = ~f{l^v^LI}
	vImageHistogramCalculation_PlanarF = ~f{l^v^LIffI}
	vImageHistogramSpecification_ARGB8888 = ~f{l^v^v^^LI}
	vImageHistogramSpecification_ARGBFFFF = ~f{l^v^v^v^^LIffI}
	vImageHistogramSpecification_Planar8 = ~f{l^v^v^LI}
	vImageHistogramSpecification_PlanarF = ~f{l^v^v^v^LIffI}
/usr/local/lib/clang/9.0.1/include/xtestintrin.h
	_xtest = ~f{i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/_wctype.h
	iswalnum = ~f{ii}
	iswalpha = ~f{ii}
	iswcntrl = ~f{ii}
	iswctype = ~f{iiI}
	iswdigit = ~f{ii}
	iswgraph = ~f{ii}
	iswlower = ~f{ii}
	iswprint = ~f{ii}
	iswpunct = ~f{ii}
	iswspace = ~f{ii}
	iswupper = ~f{ii}
	iswxdigit = ~f{ii}
	towlower = ~f{ii}
	towupper = ~f{ii}
	wctype = ~f{I^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/Headers/AVAudioSequencer.h
	AVMakeBeatRange = ~f{{=dd}dd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale.h
	duplocale = ~f{^v^v}
	freelocale = ~f{i^v}
	localeconv_l = ~f{^v^v}
	newlocale = ~f{^vi^c^v}
	querylocale = ~f{^ci^v}
	uselocale = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/connection.h
	nw_connection_batch = ~f{v@%~f{v}}
	nw_connection_cancel = ~f{v@}
	nw_connection_cancel_current_endpoint = ~f{v@}
	nw_connection_copy_current_path = ~f{@@}
	nw_connection_copy_description = ~f{^c@}
	nw_connection_copy_endpoint = ~f{@@}
	nw_connection_copy_parameters = ~f{@@}
	nw_connection_copy_protocol_metadata = ~f{@@@}
	nw_connection_create = ~f{@@@}
	nw_connection_force_cancel = ~f{v@}
	nw_connection_get_maximum_datagram_size = ~f{I@}
	nw_connection_receive = ~f{v@II%~f{v@@B@}}
	nw_connection_receive_message = ~f{v@%~f{v@@B@}}
	nw_connection_restart = ~f{v@}
	nw_connection_send = ~f{v@@@B%~f{v@}}
	nw_connection_set_better_path_available_handler = ~f{v@%~f{vB}}
	nw_connection_set_path_changed_handler = ~f{v@%~f{v@}}
	nw_connection_set_queue = ~f{v@@}
	nw_connection_set_state_changed_handler = ~f{v@%~f{vI@}}
	nw_connection_set_viability_changed_handler = ~f{v@%~f{vB}}
	nw_connection_start = ~f{v@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dns_sd.h
	DNSServiceAddRecord = ~f{i^v^^vISS^vI}
	DNSServiceBrowse = ~f{i^^vII^c^c^~f{v^vIIi^c^c^c^v}^v}
	DNSServiceConstructFullName = ~f{i^c^c^c^c}
	DNSServiceCreateConnection = ~f{i^^v}
	DNSServiceEnumerateDomains = ~f{i^^vII^~f{v^vIIi^c^v}^v}
	DNSServiceGetAddrInfo = ~f{i^^vIII^c^~f{v^vIIi^c^vI^v}^v}
	DNSServiceGetProperty = ~f{i^c^v^I}
	DNSServiceNATPortMappingCreate = ~f{i^^vIIISSI^~f{v^vIIiIISSI^v}^v}
	DNSServiceProcessResult = ~f{i^v}
	DNSServiceQueryRecord = ~f{i^^vII^cSS^~f{v^vIIi^cSSS^vI^v}^v}
	DNSServiceReconfirmRecord = ~f{iII^cSSS^v}
	DNSServiceRefDeallocate = ~f{v^v}
	DNSServiceRefSockFD = ~f{i^v}
	DNSServiceRegister = ~f{i^^vII^c^c^c^cSS^v^~f{v^vIi^c^c^c^v}^v}
	DNSServiceRegisterRecord = ~f{i^v^^vII^cSSS^vI^~f{v^v^vIi^v}^v}
	DNSServiceRemoveRecord = ~f{i^v^vI}
	DNSServiceResolve = ~f{i^^vII^c^c^c^~f{v^vIIi^c^cSS^C^v}^v}
	DNSServiceSetDispatchQueue = ~f{i^v@}
	DNSServiceSleepKeepalive = ~f{i^^vIiI^~f{v^vi^v}^v}
	DNSServiceUpdateRecord = ~f{i^v^vIS^vI}
	PeerConnectionRelease = ~f{iI^c^c^c}
	TXTRecordContainsKey = ~f{iS^v^c}
	TXTRecordCreate = ~f{v^vS^v}
	TXTRecordDeallocate = ~f{v^v}
	TXTRecordGetBytesPtr = ~f{^v^v}
	TXTRecordGetCount = ~f{SS^v}
	TXTRecordGetItemAtIndex = ~f{iS^vSS^c^C^^v}
	TXTRecordGetLength = ~f{S^v}
	TXTRecordGetValuePtr = ~f{^vS^v^c^C}
	TXTRecordRemoveValue = ~f{i^v^c}
	TXTRecordSetValue = ~f{i^v^cC^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioFileStream.h
	AudioFileStreamClose = ~f{i^v}
	AudioFileStreamGetProperty = ~f{i^vI^I^v}
	AudioFileStreamGetPropertyInfo = ~f{i^vI^I^C}
	AudioFileStreamOpen = ~f{i^v^~f{v^v^vI^I}^~f{v^vII^v^v}I^^v}
	AudioFileStreamParseBytes = ~f{i^vI^vI}
	AudioFileStreamSeek = ~f{i^vq^q^I}
	AudioFileStreamSetProperty = ~f{i^vII^v}
/usr/local/lib/clang/9.0.1/include/__wmmintrin_aes.h
	_mm_aesdec_si128 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_aesdeclast_si128 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_aesenc_si128 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_aesenclast_si128 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_aesimc_si128 = ~f{~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pwd.h
	endpwent = ~f{v}
	getpwent = ~f{^v}
	getpwnam = ~f{^v^c}
	getpwnam_r = ~f{i^c^v^cL^^v}
	getpwuid = ~f{^vI}
	getpwuid_r = ~f{iI^v^cL^^v}
	getpwuuid = ~f{^v^C}
	getpwuuid_r = ~f{i^C^v^cL^^v}
	setpassent = ~f{ii}
	setpwent = ~f{v}
	user_from_uid = ~f{^cIi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AddressBook.framework/Headers/ABRecord.h
	ABRecordCopyCompositeName = ~f{^v^v}
	ABRecordCopyValue = ~f{^v^vi}
	ABRecordGetRecordID = ~f{i^v}
	ABRecordGetRecordType = ~f{I^v}
	ABRecordRemoveValue = ~f{B^vi^^v}
	ABRecordSetValue = ~f{B^vi^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSErrorShims.h
	__NSErrorPerformRecoverySelector = ~f{v@:B^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/clock_reply.h
	clock_alarm_reply = ~f{iIIii{=Ii}}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/architecture/i386/alignment.h
	get_align_long = ~f{L^v}
	get_align_short = ~f{S^v}
	put_align_long = ~f{LL^v}
	put_align_short = ~f{SS^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/complex.h
	cabs = ~f{d{=dd}}
	cabsf = ~f{f{=ff}}
	cabsl = ~f{D{=DD}}
	cacos = ~f{{=dd}{=dd}}
	cacosf = ~f{{=ff}{=ff}}
	cacosh = ~f{{=dd}{=dd}}
	cacoshf = ~f{{=ff}{=ff}}
	cacoshl = ~f{{=DD}{=DD}}
	cacosl = ~f{{=DD}{=DD}}
	carg = ~f{d{=dd}}
	cargf = ~f{f{=ff}}
	cargl = ~f{D{=DD}}
	casin = ~f{{=dd}{=dd}}
	casinf = ~f{{=ff}{=ff}}
	casinh = ~f{{=dd}{=dd}}
	casinhf = ~f{{=ff}{=ff}}
	casinhl = ~f{{=DD}{=DD}}
	casinl = ~f{{=DD}{=DD}}
	catan = ~f{{=dd}{=dd}}
	catanf = ~f{{=ff}{=ff}}
	catanh = ~f{{=dd}{=dd}}
	catanhf = ~f{{=ff}{=ff}}
	catanhl = ~f{{=DD}{=DD}}
	catanl = ~f{{=DD}{=DD}}
	ccos = ~f{{=dd}{=dd}}
	ccosf = ~f{{=ff}{=ff}}
	ccosh = ~f{{=dd}{=dd}}
	ccoshf = ~f{{=ff}{=ff}}
	ccoshl = ~f{{=DD}{=DD}}
	ccosl = ~f{{=DD}{=DD}}
	cexp = ~f{{=dd}{=dd}}
	cexpf = ~f{{=ff}{=ff}}
	cexpl = ~f{{=DD}{=DD}}
	cimag = ~f{d{=dd}}
	cimagf = ~f{f{=ff}}
	cimagl = ~f{D{=DD}}
	clog = ~f{{=dd}{=dd}}
	clogf = ~f{{=ff}{=ff}}
	clogl = ~f{{=DD}{=DD}}
	conj = ~f{{=dd}{=dd}}
	conjf = ~f{{=ff}{=ff}}
	conjl = ~f{{=DD}{=DD}}
	cpow = ~f{{=dd}{=dd}{=dd}}
	cpowf = ~f{{=ff}{=ff}{=ff}}
	cpowl = ~f{{=DD}{=DD}{=DD}}
	cproj = ~f{{=dd}{=dd}}
	cprojf = ~f{{=ff}{=ff}}
	cprojl = ~f{{=DD}{=DD}}
	creal = ~f{d{=dd}}
	crealf = ~f{f{=ff}}
	creall = ~f{D{=DD}}
	csin = ~f{{=dd}{=dd}}
	csinf = ~f{{=ff}{=ff}}
	csinh = ~f{{=dd}{=dd}}
	csinhf = ~f{{=ff}{=ff}}
	csinhl = ~f{{=DD}{=DD}}
	csinl = ~f{{=DD}{=DD}}
	csqrt = ~f{{=dd}{=dd}}
	csqrtf = ~f{{=ff}{=ff}}
	csqrtl = ~f{{=DD}{=DD}}
	ctan = ~f{{=dd}{=dd}}
	ctanf = ~f{{=ff}{=ff}}
	ctanh = ~f{{=dd}{=dd}}
	ctanhf = ~f{{=ff}{=ff}}
	ctanhl = ~f{{=DD}{=DD}}
	ctanl = ~f{{=DD}{=DD}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCNetworkConnection.h
	SCNetworkConnectionCopyExtendedStatus = ~f{^v^v}
	SCNetworkConnectionCopyServiceID = ~f{^v^v}
	SCNetworkConnectionCopyStatistics = ~f{^v^v}
	SCNetworkConnectionCopyUserOptions = ~f{^v^v}
	SCNetworkConnectionCopyUserPreferences = ~f{C^v^^v^^v}
	SCNetworkConnectionCreateWithServiceID = ~f{^v^v^v^~f{v^vi^v}^v}
	SCNetworkConnectionGetStatus = ~f{i^v}
	SCNetworkConnectionGetTypeID = ~f{L}
	SCNetworkConnectionScheduleWithRunLoop = ~f{C^v^v^v}
	SCNetworkConnectionSetDispatchQueue = ~f{C^v@}
	SCNetworkConnectionStart = ~f{C^v^vC}
	SCNetworkConnectionStop = ~f{C^vC}
	SCNetworkConnectionUnscheduleFromRunLoop = ~f{C^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTree.h
	CFTreeAppendChild = ~f{v^v^v}
	CFTreeApplyFunctionToChildren = ~f{v^v^~f{v^v^v}^v}
	CFTreeCreate = ~f{^v^v^v}
	CFTreeFindRoot = ~f{^v^v}
	CFTreeGetChildAtIndex = ~f{^v^vl}
	CFTreeGetChildCount = ~f{l^v}
	CFTreeGetChildren = ~f{v^v^^v}
	CFTreeGetContext = ~f{v^v^v}
	CFTreeGetFirstChild = ~f{^v^v}
	CFTreeGetNextSibling = ~f{^v^v}
	CFTreeGetParent = ~f{^v^v}
	CFTreeGetTypeID = ~f{L}
	CFTreeInsertSibling = ~f{v^v^v}
	CFTreePrependChild = ~f{v^v^v}
	CFTreeRemove = ~f{v^v}
	CFTreeRemoveAllChildren = ~f{v^v}
	CFTreeSetContext = ~f{v^v^v}
	CFTreeSortChildren = ~f{v^v^~f{l^v^v^v}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/uio.h
	readv = ~f{li^vi}
	writev = ~f{li^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/globals.h
	__docbDefaultSAXHandler = ~f{^v}
	__htmlDefaultSAXHandler = ~f{^v}
	__oldXMLWDcompatibility = ~f{^i}
	__xmlBufferAllocScheme = ~f{^I}
	__xmlDefaultBufferSize = ~f{^i}
	__xmlDefaultSAXHandler = ~f{^v}
	__xmlDefaultSAXLocator = ~f{^v}
	__xmlDeregisterNodeDefaultValue = ~f{^^~f{v^v}}
	__xmlDoValidityCheckingDefaultValue = ~f{^i}
	__xmlGenericError = ~f{^^~f{v^v^c$}}
	__xmlGenericErrorContext = ~f{^^v}
	__xmlGetWarningsDefaultValue = ~f{^i}
	__xmlIndentTreeOutput = ~f{^i}
	__xmlKeepBlanksDefaultValue = ~f{^i}
	__xmlLastError = ~f{^v}
	__xmlLineNumbersDefaultValue = ~f{^i}
	__xmlLoadExtDtdDefaultValue = ~f{^i}
	__xmlOutputBufferCreateFilenameValue = ~f{^^~f{^v^c^vi}}
	__xmlParserDebugEntities = ~f{^i}
	__xmlParserInputBufferCreateFilenameValue = ~f{^^~f{^v^ci}}
	__xmlParserVersion = ~f{^^c}
	__xmlPedanticParserDefaultValue = ~f{^i}
	__xmlRegisterNodeDefaultValue = ~f{^^~f{v^v}}
	__xmlSaveNoEmptyTags = ~f{^i}
	__xmlStructuredError = ~f{^^~f{v^v^v}}
	__xmlStructuredErrorContext = ~f{^^v}
	__xmlSubstituteEntitiesDefaultValue = ~f{^i}
	__xmlTreeIndentString = ~f{^^c}
	xmlCleanupGlobals = ~f{v}
	xmlDeregisterNodeDefault = ~f{^~f{v^v}^~f{v^v}}
	xmlInitGlobals = ~f{v}
	xmlInitializeGlobalState = ~f{v^v}
	xmlOutputBufferCreateFilenameDefault = ~f{^~f{^v^c^vi}^~f{^v^c^vi}}
	xmlParserInputBufferCreateFilenameDefault = ~f{^~f{^v^ci}^~f{^v^ci}}
	xmlRegisterNodeDefault = ~f{^~f{v^v}^~f{v^v}}
	xmlThrDefBufferAllocScheme = ~f{II}
	xmlThrDefDefaultBufferSize = ~f{ii}
	xmlThrDefDeregisterNodeDefault = ~f{^~f{v^v}^~f{v^v}}
	xmlThrDefDoValidityCheckingDefaultValue = ~f{ii}
	xmlThrDefGetWarningsDefaultValue = ~f{ii}
	xmlThrDefIndentTreeOutput = ~f{ii}
	xmlThrDefKeepBlanksDefaultValue = ~f{ii}
	xmlThrDefLineNumbersDefaultValue = ~f{ii}
	xmlThrDefLoadExtDtdDefaultValue = ~f{ii}
	xmlThrDefOutputBufferCreateFilenameDefault = ~f{^~f{^v^c^vi}^~f{^v^c^vi}}
	xmlThrDefParserDebugEntities = ~f{ii}
	xmlThrDefParserInputBufferCreateFilenameDefault = ~f{^~f{^v^ci}^~f{^v^ci}}
	xmlThrDefPedanticParserDefaultValue = ~f{ii}
	xmlThrDefRegisterNodeDefault = ~f{^~f{v^v}^~f{v^v}}
	xmlThrDefSaveNoEmptyTags = ~f{ii}
	xmlThrDefSetGenericErrorFunc = ~f{v^v^~f{v^v^c$}}
	xmlThrDefSetStructuredErrorFunc = ~f{v^v^~f{v^v^v}}
	xmlThrDefSubstituteEntitiesDefaultValue = ~f{ii}
	xmlThrDefTreeIndentString = ~f{^c^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/rpc_msg.h
	_seterr_reply = ~f{v^v^v}
	xdr_callhdr = ~f{i^v^v}
	xdr_callmsg = ~f{i^v^v}
	xdr_replymsg = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURLAccess.h
	CFURLCreateDataAndPropertiesFromResource = ~f{C^v^v^^v^^v^v^i}
	CFURLCreatePropertyFromResource = ~f{^v^v^v^v^i}
	CFURLDestroyResource = ~f{C^v^i}
	CFURLWriteDataAndPropertiesToResource = ~f{C^v^v^v^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/log_data.h
	log_data_as_kernel = ~f{iII^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/clapack.h
	cbdsqr_ = ~f{i^c^i^i^i^i^f^f^v^i^v^i^v^i^f^i}
	cgbbrd_ = ~f{i^c^i^i^i^i^i^v^i^f^f^v^i^v^i^v^i^v^f^i}
	cgbcon_ = ~f{i^c^i^i^i^v^i^i^f^f^v^f^i}
	cgbequ_ = ~f{i^i^i^i^i^v^i^f^f^f^f^f^i}
	cgbequb_ = ~f{i^i^i^i^i^v^i^f^f^f^f^f^i}
	cgbrfs_ = ~f{i^c^i^i^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	cgbsv_ = ~f{i^i^i^i^i^v^i^i^v^i^i}
	cgbsvx_ = ~f{i^c^c^i^i^i^i^v^i^v^i^i^c^f^f^v^i^v^i^f^f^f^v^f^i}
	cgbtf2_ = ~f{i^i^i^i^i^v^i^i^i}
	cgbtrf_ = ~f{i^i^i^i^i^v^i^i^i}
	cgbtrs_ = ~f{i^c^i^i^i^i^v^i^i^v^i^i}
	cgebak_ = ~f{i^c^c^i^i^i^f^i^v^i^i}
	cgebal_ = ~f{i^c^i^v^i^i^i^f^i}
	cgebd2_ = ~f{i^i^i^v^i^f^f^v^v^v^i}
	cgebrd_ = ~f{i^i^i^v^i^f^f^v^v^v^i^i}
	cgecon_ = ~f{i^c^i^v^i^f^f^v^f^i}
	cgeequ_ = ~f{i^i^i^v^i^f^f^f^f^f^i}
	cgeequb_ = ~f{i^i^i^v^i^f^f^f^f^f^i}
	cgees_ = ~f{i^c^c^?^i^v^i^i^v^v^i^v^i^f^i^i}
	cgeesx_ = ~f{i^c^c^?^c^i^v^i^i^v^v^i^f^f^v^i^f^i^i}
	cgeev_ = ~f{i^c^c^i^v^i^v^v^i^v^i^v^i^f^i}
	cgeevx_ = ~f{i^c^c^c^c^i^v^i^v^v^i^v^i^i^i^f^f^f^f^v^i^f^i}
	cgegs_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	cgegv_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	cgehd2_ = ~f{i^i^i^i^v^i^v^v^i}
	cgehrd_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cgelq2_ = ~f{i^i^i^v^i^v^v^i}
	cgelqf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgels_ = ~f{i^c^i^i^i^v^i^v^i^v^i^i}
	cgelsd_ = ~f{i^i^i^i^v^i^v^i^f^f^i^v^i^f^i^i}
	cgelss_ = ~f{i^i^i^i^v^i^v^i^f^f^i^v^i^f^i}
	cgelsx_ = ~f{i^i^i^i^v^i^v^i^i^f^i^v^f^i}
	cgelsy_ = ~f{i^i^i^i^v^i^v^i^i^f^i^v^i^f^i}
	cgeql2_ = ~f{i^i^i^v^i^v^v^i}
	cgeqlf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgeqp3_ = ~f{i^i^i^v^i^i^v^v^i^f^i}
	cgeqpf_ = ~f{i^i^i^v^i^i^v^v^f^i}
	cgeqr2_ = ~f{i^i^i^v^i^v^v^i}
	cgeqrf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgerfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	cgerq2_ = ~f{i^i^i^v^i^v^v^i}
	cgerqf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgesc2_ = ~f{i^i^v^i^v^i^i^f}
	cgesdd_ = ~f{i^c^i^i^v^i^f^v^i^v^i^v^i^f^i^i}
	cgesv_ = ~f{i^i^i^v^i^i^v^i^i}
	cgesvd_ = ~f{i^c^c^i^i^v^i^f^v^i^v^i^v^i^f^i}
	cgesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^c^f^f^v^i^v^i^f^f^f^v^f^i}
	cgetc2_ = ~f{i^i^v^i^i^i^i}
	cgetf2_ = ~f{i^i^i^v^i^i^i}
	cgetrf_ = ~f{i^i^i^v^i^i^i}
	cgetri_ = ~f{i^i^v^i^i^v^i^i}
	cgetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	cggbak_ = ~f{i^c^c^i^i^i^f^f^i^v^i^i}
	cggbal_ = ~f{i^c^i^v^i^v^i^i^i^f^f^f^i}
	cgges_ = ~f{i^c^c^c^?^i^v^i^v^i^i^v^v^v^i^v^i^v^i^f^i^i}
	cggesx_ = ~f{i^c^c^c^?^c^i^v^i^v^i^i^v^v^v^i^v^i^f^f^v^i^f^i^i^i^i}
	cggev_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	cggevx_ = ~f{i^c^c^c^c^i^v^i^v^i^v^v^v^i^v^i^i^i^f^f^f^f^f^f^v^i^f^i^i^i}
	cggglm_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	cgghrd_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^i^i}
	cgglse_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	cggqrf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	cggrqf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	cggsvd_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^f^f^v^i^v^i^v^i^v^f^i^i}
	cggsvp_ = ~f{i^c^c^c^i^i^i^v^i^v^i^f^f^i^i^v^i^v^i^v^i^i^f^v^v^i}
	cgtcon_ = ~f{i^c^i^v^v^v^v^i^f^f^v^i}
	cgtrfs_ = ~f{i^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^f^f^v^f^i}
	cgtsv_ = ~f{i^i^i^v^v^v^v^i^i}
	cgtsvx_ = ~f{i^c^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^f^f^f^v^f^i}
	cgttrf_ = ~f{i^i^v^v^v^v^i^i}
	cgttrs_ = ~f{i^c^i^i^v^v^v^v^i^v^i^i}
	cgtts2_ = ~f{i^i^i^i^v^v^v^v^i^v^i}
	chbev_ = ~f{i^c^c^i^i^v^i^f^v^i^v^f^i}
	chbevd_ = ~f{i^c^c^i^i^v^i^f^v^i^v^i^f^i^i^i^i}
	chbevx_ = ~f{i^c^c^c^i^i^v^i^v^i^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chbgst_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^f^i}
	chbgv_ = ~f{i^c^c^i^i^i^v^i^v^i^f^v^i^v^f^i}
	chbgvd_ = ~f{i^c^c^i^i^i^v^i^v^i^f^v^i^v^i^f^i^i^i^i}
	chbgvx_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chbtrd_ = ~f{i^c^c^i^i^v^i^f^f^v^i^v^i}
	checon_ = ~f{i^c^i^v^i^i^f^f^v^i}
	cheequb_ = ~f{i^c^i^v^i^f^f^f^v^i}
	cheev_ = ~f{i^c^c^i^v^i^f^v^i^f^i}
	cheevd_ = ~f{i^c^c^i^v^i^f^v^i^f^i^i^i^i}
	cheevr_ = ~f{i^c^c^c^i^v^i^f^f^i^i^f^i^f^v^i^i^v^i^f^i^i^i^i}
	cheevx_ = ~f{i^c^c^c^i^v^i^f^f^i^i^f^i^f^v^i^v^i^f^i^i^i}
	chegs2_ = ~f{i^i^c^i^v^i^v^i^i}
	chegst_ = ~f{i^i^c^i^v^i^v^i^i}
	chegv_ = ~f{i^i^c^c^i^v^i^v^i^f^v^i^f^i}
	chegvd_ = ~f{i^i^c^c^i^v^i^v^i^f^v^i^f^i^i^i^i}
	chegvx_ = ~f{i^i^c^c^c^i^v^i^v^i^f^f^i^i^f^i^f^v^i^v^i^f^i^i^i}
	cherfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	chesv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	chesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^f^f^f^v^i^f^i}
	chetd2_ = ~f{i^c^i^v^i^f^f^v^i}
	chetf2_ = ~f{i^c^i^v^i^i^i}
	chetrd_ = ~f{i^c^i^v^i^f^f^v^v^i^i}
	chetrf_ = ~f{i^c^i^v^i^i^v^i^i}
	chetri_ = ~f{i^c^i^v^i^i^v^i}
	chetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	chfrk_ = ~f{i^c^c^c^i^i^f^v^i^f^v}
	chgeqz_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	chla_transtype__ = ~f{v^ci^i}
	chpcon_ = ~f{i^c^i^v^i^f^f^v^i}
	chpev_ = ~f{i^c^c^i^v^f^v^i^v^f^i}
	chpevd_ = ~f{i^c^c^i^v^f^v^i^v^i^f^i^i^i^i}
	chpevx_ = ~f{i^c^c^c^i^v^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chpgst_ = ~f{i^i^c^i^v^v^i}
	chpgv_ = ~f{i^i^c^c^i^v^v^f^v^i^v^f^i}
	chpgvd_ = ~f{i^i^c^c^i^v^v^f^v^i^v^i^f^i^i^i^i}
	chpgvx_ = ~f{i^i^c^c^c^i^v^v^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^f^f^v^f^i}
	chpsv_ = ~f{i^c^i^i^v^i^v^i^i}
	chpsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^f^f^f^v^f^i}
	chptrd_ = ~f{i^c^i^v^f^f^v^i}
	chptrf_ = ~f{i^c^i^v^i^i}
	chptri_ = ~f{i^c^i^v^i^v^i}
	chptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	chsein_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i^i^v^f^i^i^i}
	chseqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	clabrd_ = ~f{i^i^i^i^v^i^f^f^v^v^v^i^v^i}
	clacgv_ = ~f{i^i^v^i}
	clacn2_ = ~f{i^i^v^v^f^i^i}
	clacon_ = ~f{i^i^v^v^f^i}
	clacp2_ = ~f{i^c^i^i^f^i^v^i}
	clacpy_ = ~f{i^c^i^i^v^i^v^i}
	clacrm_ = ~f{i^i^i^v^i^f^i^v^i^f}
	clacrt_ = ~f{i^i^v^i^v^i^v^v}
	cladiv_ = ~f{v^v^v^v}
	claed0_ = ~f{i^i^i^f^f^v^i^v^i^f^i^i}
	claed7_ = ~f{i^i^i^i^i^i^i^f^v^i^f^i^f^i^i^i^i^i^f^v^f^i^i}
	claed8_ = ~f{i^i^i^i^v^i^f^f^i^f^f^v^i^f^i^i^i^i^i^i^f^i}
	claein_ = ~f{i^i^i^i^v^i^v^v^v^i^f^f^f^i}
	claesy_ = ~f{i^v^v^v^v^v^v^v^v}
	claev2_ = ~f{i^v^v^v^f^f^f^v}
	clag2z_ = ~f{i^i^i^v^i^v^i^i}
	clags2_ = ~f{i^i^f^v^f^f^v^f^f^v^f^v^f^v}
	clagtm_ = ~f{i^c^i^i^f^v^v^v^v^i^f^v^i}
	clahef_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	clahqr_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^i}
	clahr2_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	clahrd_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	claic1_ = ~f{i^i^i^v^f^v^v^f^v^v}
	clals0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^i^i^i^f^i^f^f^f^f^i^f^f^f^i}
	clalsa_ = ~f{i^i^i^i^i^v^i^v^i^f^i^f^i^f^f^f^f^i^i^i^i^f^f^f^f^i^i}
	clalsd_ = ~f{i^c^i^i^i^f^f^v^i^f^i^v^f^i^i}
	clangb_ = ~f{d^c^i^i^i^v^i^f}
	clange_ = ~f{d^c^i^i^v^i^f}
	clangt_ = ~f{d^c^i^v^v^v}
	clanhb_ = ~f{d^c^c^i^i^v^i^f}
	clanhe_ = ~f{d^c^c^i^v^i^f}
	clanhf_ = ~f{d^c^c^c^i^v^f}
	clanhp_ = ~f{d^c^c^i^v^f}
	clanhs_ = ~f{d^c^i^v^i^f}
	clanht_ = ~f{d^c^i^f^v}
	clansb_ = ~f{d^c^c^i^i^v^i^f}
	clansp_ = ~f{d^c^c^i^v^f}
	clansy_ = ~f{d^c^c^i^v^i^f}
	clantb_ = ~f{d^c^c^c^i^i^v^i^f}
	clantp_ = ~f{d^c^c^c^i^v^f}
	clantr_ = ~f{d^c^c^c^i^i^v^i^f}
	clapll_ = ~f{i^i^v^i^v^i^f}
	clapmt_ = ~f{i^i^i^i^v^i^i}
	claqgb_ = ~f{i^i^i^i^i^v^i^f^f^f^f^f^c}
	claqge_ = ~f{i^i^i^v^i^f^f^f^f^f^c}
	claqhb_ = ~f{i^c^i^i^v^i^f^f^f^c}
	claqhe_ = ~f{i^c^i^v^i^f^f^f^c}
	claqhp_ = ~f{i^c^i^v^f^f^f^c}
	claqp2_ = ~f{i^i^i^i^v^i^i^v^f^f^v}
	claqps_ = ~f{i^i^i^i^i^i^v^i^i^v^f^f^v^v^i}
	claqr0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	claqr1_ = ~f{i^i^v^i^v^v^v}
	claqr2_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	claqr3_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	claqr4_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	claqr5_ = ~f{i^i^i^i^i^i^i^i^v^v^i^i^i^v^i^v^i^v^i^i^v^i^i^v^i}
	claqsb_ = ~f{i^c^i^i^v^i^f^f^f^c}
	claqsp_ = ~f{i^c^i^v^f^f^f^c}
	claqsy_ = ~f{i^c^i^v^i^f^f^f^c}
	clar1v_ = ~f{i^i^i^i^f^f^f^f^f^f^f^v^i^i^f^f^i^i^f^f^f^f}
	clar2v_ = ~f{i^i^v^v^v^i^f^v^i}
	clarcm_ = ~f{i^i^i^f^i^v^i^v^i^f}
	clarf_ = ~f{i^c^i^i^v^i^v^v^i^v}
	clarfb_ = ~f{i^c^c^c^c^i^i^i^v^i^v^i^v^i^v^i}
	clarfg_ = ~f{i^i^v^v^i^v}
	clarfp_ = ~f{i^i^v^v^i^v}
	clarft_ = ~f{i^c^c^i^i^v^i^v^v^i}
	clarfx_ = ~f{i^c^i^i^v^v^v^i^v}
	clargv_ = ~f{i^i^v^i^v^i^f^i}
	clarnv_ = ~f{i^i^i^i^v}
	clarrv_ = ~f{i^i^f^f^f^f^f^i^i^i^i^f^f^f^f^f^f^i^i^f^v^i^i^f^i^i}
	clarscl2_ = ~f{i^i^i^f^v^i}
	clartg_ = ~f{i^v^v^f^v^v}
	clartv_ = ~f{i^i^v^i^v^i^f^v^i}
	clarz_ = ~f{i^c^i^i^i^v^i^v^v^i^v}
	clarzb_ = ~f{i^c^c^c^c^i^i^i^i^v^i^v^i^v^i^v^i}
	clarzt_ = ~f{i^c^c^i^i^v^i^v^v^i}
	clascl2_ = ~f{i^i^i^f^v^i}
	clascl_ = ~f{i^c^i^i^f^f^i^i^v^i^i}
	claset_ = ~f{i^c^i^i^v^v^v^i}
	clasr_ = ~f{i^c^c^c^i^i^f^f^v^i}
	classq_ = ~f{i^i^v^i^f^f}
	claswp_ = ~f{i^i^v^i^i^i^i^i}
	clasyf_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	clatbs_ = ~f{i^c^c^c^c^i^i^v^i^v^f^f^i}
	clatdf_ = ~f{i^i^i^v^i^v^f^f^i^i}
	clatps_ = ~f{i^c^c^c^c^i^v^v^f^f^i}
	clatrd_ = ~f{i^c^i^i^v^i^f^v^v^i}
	clatrs_ = ~f{i^c^c^c^c^i^v^i^v^f^f^i}
	clatrz_ = ~f{i^i^i^i^v^i^v^v}
	clatzm_ = ~f{i^c^i^i^v^i^v^v^v^i^v}
	clauu2_ = ~f{i^c^i^v^i^i}
	clauum_ = ~f{i^c^i^v^i^i}
	cpbcon_ = ~f{i^c^i^i^v^i^f^f^v^f^i}
	cpbequ_ = ~f{i^c^i^i^v^i^f^f^f^i}
	cpbrfs_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^f^f^v^f^i}
	cpbstf_ = ~f{i^c^i^i^v^i^i}
	cpbsv_ = ~f{i^c^i^i^i^v^i^v^i^i}
	cpbsvx_ = ~f{i^c^c^i^i^i^v^i^v^i^c^f^v^i^v^i^f^f^f^v^f^i}
	cpbtf2_ = ~f{i^c^i^i^v^i^i}
	cpbtrf_ = ~f{i^c^i^i^v^i^i}
	cpbtrs_ = ~f{i^c^i^i^i^v^i^v^i^i}
	cpftrf_ = ~f{i^c^c^i^v^i}
	cpftri_ = ~f{i^c^c^i^v^i}
	cpftrs_ = ~f{i^c^c^i^i^v^v^i^i}
	cpocon_ = ~f{i^c^i^v^i^f^f^v^f^i}
	cpoequ_ = ~f{i^i^v^i^f^f^f^i}
	cpoequb_ = ~f{i^i^v^i^f^f^f^i}
	cporfs_ = ~f{i^c^i^i^v^i^v^i^v^i^v^i^f^f^v^f^i}
	cposv_ = ~f{i^c^i^i^v^i^v^i^i}
	cposvx_ = ~f{i^c^c^i^i^v^i^v^i^c^f^v^i^v^i^f^f^f^v^f^i}
	cpotf2_ = ~f{i^c^i^v^i^i}
	cpotrf_ = ~f{i^c^i^v^i^i}
	cpotri_ = ~f{i^c^i^v^i^i}
	cpotrs_ = ~f{i^c^i^i^v^i^v^i^i}
	cppcon_ = ~f{i^c^i^v^f^f^v^f^i}
	cppequ_ = ~f{i^c^i^v^f^f^f^i}
	cpprfs_ = ~f{i^c^i^i^v^v^v^i^v^i^f^f^v^f^i}
	cppsv_ = ~f{i^c^i^i^v^v^i^i}
	cppsvx_ = ~f{i^c^c^i^i^v^v^c^f^v^i^v^i^f^f^f^v^f^i}
	cpptrf_ = ~f{i^c^i^v^i}
	cpptri_ = ~f{i^c^i^v^i}
	cpptrs_ = ~f{i^c^i^i^v^v^i^i}
	cpstf2_ = ~f{i^c^i^v^i^i^i^f^f^i}
	cpstrf_ = ~f{i^c^i^v^i^i^i^f^f^i}
	cptcon_ = ~f{i^i^f^v^f^f^f^i}
	cpteqr_ = ~f{i^c^i^f^f^v^i^f^i}
	cptrfs_ = ~f{i^c^i^i^f^v^f^v^v^i^v^i^f^f^v^f^i}
	cptsv_ = ~f{i^i^i^f^v^v^i^i}
	cptsvx_ = ~f{i^c^i^i^f^v^f^v^v^i^v^i^f^f^f^v^f^i}
	cpttrf_ = ~f{i^i^f^v^i}
	cpttrs_ = ~f{i^c^i^i^f^v^v^i^i}
	cptts2_ = ~f{i^i^i^i^f^v^v^i}
	crot_ = ~f{i^i^v^i^v^i^f^v}
	cspcon_ = ~f{i^c^i^v^i^f^f^v^i}
	cspmv_ = ~f{i^c^i^v^v^v^i^v^v^i}
	cspr_ = ~f{i^c^i^v^v^i^v}
	csprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^f^f^v^f^i}
	cspsv_ = ~f{i^c^i^i^v^i^v^i^i}
	cspsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^f^f^f^v^f^i}
	csptrf_ = ~f{i^c^i^v^i^i}
	csptri_ = ~f{i^c^i^v^i^v^i}
	csptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	csrscl_ = ~f{i^i^f^v^i}
	cstedc_ = ~f{i^c^i^f^f^v^i^v^i^f^i^i^i^i}
	cstegr_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^v^i^i^f^i^i^i^i}
	cstein_ = ~f{i^i^f^f^i^f^i^i^v^i^f^i^i^i}
	cstemr_ = ~f{i^c^c^i^f^f^f^f^i^i^i^f^v^i^i^i^i^f^i^i^i^i}
	csteqr_ = ~f{i^c^i^f^f^v^i^f^i}
	csycon_ = ~f{i^c^i^v^i^i^f^f^v^i}
	csyequb_ = ~f{i^c^i^v^i^f^f^f^v^i}
	csymv_ = ~f{i^c^i^v^v^i^v^i^v^v^i}
	csyr_ = ~f{i^c^i^v^v^i^v^i}
	csyrfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	csysv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	csysvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^f^f^f^v^i^f^i}
	csytf2_ = ~f{i^c^i^v^i^i^i}
	csytrf_ = ~f{i^c^i^v^i^i^v^i^i}
	csytri_ = ~f{i^c^i^v^i^i^v^i}
	csytrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	ctbcon_ = ~f{i^c^c^c^i^i^v^i^f^v^f^i}
	ctbrfs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^f^f^v^f^i}
	ctbtrs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^i}
	ctfsm_ = ~f{i^c^c^c^c^c^i^i^v^v^v^i}
	ctftri_ = ~f{i^c^c^c^i^v^i}
	ctfttp_ = ~f{i^c^c^i^v^v^i}
	ctfttr_ = ~f{i^c^c^i^v^v^i^i}
	ctgevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^i^i^v^f^i}
	ctgex2_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i}
	ctgexc_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i^i}
	ctgsen_ = ~f{i^i^i^i^i^i^v^i^v^i^v^v^v^i^v^i^i^f^f^f^v^i^i^i^i}
	ctgsja_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^f^f^f^f^v^i^v^i^v^i^v^i^i}
	ctgsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^f^f^i^i^v^i^i^i}
	ctgsy2_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^f^f^f^i}
	ctgsyl_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^f^f^v^i^i^i}
	ctpcon_ = ~f{i^c^c^c^i^v^f^v^f^i}
	ctprfs_ = ~f{i^c^c^c^i^i^v^v^i^v^i^f^f^v^f^i}
	ctptri_ = ~f{i^c^c^i^v^i}
	ctptrs_ = ~f{i^c^c^c^i^i^v^v^i^i}
	ctpttf_ = ~f{i^c^c^i^v^v^i}
	ctpttr_ = ~f{i^c^i^v^v^i^i}
	ctrcon_ = ~f{i^c^c^c^i^v^i^f^v^f^i}
	ctrevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^i^i^v^f^i}
	ctrexc_ = ~f{i^c^i^v^i^v^i^i^i^i}
	ctrrfs_ = ~f{i^c^c^c^i^i^v^i^v^i^v^i^f^f^v^f^i}
	ctrsen_ = ~f{i^c^c^i^i^v^i^v^i^v^i^f^f^v^i^i}
	ctrsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^f^f^i^i^v^i^f^i}
	ctrsyl_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^f^i}
	ctrti2_ = ~f{i^c^c^i^v^i^i}
	ctrtri_ = ~f{i^c^c^i^v^i^i}
	ctrtrs_ = ~f{i^c^c^c^i^i^v^i^v^i^i}
	ctrttf_ = ~f{i^c^c^i^v^i^v^i}
	ctrttp_ = ~f{i^c^i^v^i^v^i}
	ctzrqf_ = ~f{i^i^i^v^i^v^i}
	ctzrzf_ = ~f{i^i^i^v^i^v^v^i^i}
	cung2l_ = ~f{i^i^i^i^v^i^v^v^i}
	cung2r_ = ~f{i^i^i^i^v^i^v^v^i}
	cungbr_ = ~f{i^c^i^i^i^v^i^v^v^i^i}
	cunghr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungl2_ = ~f{i^i^i^i^v^i^v^v^i}
	cunglq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungql_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungqr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungr2_ = ~f{i^i^i^i^v^i^v^v^i}
	cungrq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungtr_ = ~f{i^c^i^v^i^v^v^i^i}
	cunm2l_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunm2r_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunmbr_ = ~f{i^c^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmhr_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	cunml2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunmlq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmql_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmr2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunmr3_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i}
	cunmrq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmrz_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	cunmtr_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i}
	cupgtr_ = ~f{i^c^i^v^v^v^i^v^i}
	cupmtr_ = ~f{i^c^c^c^i^i^v^v^v^i^v^i}
	dbdsdc_ = ~f{i^c^c^i^d^d^d^i^d^i^d^i^d^i^i}
	dbdsqr_ = ~f{i^c^i^i^i^i^d^d^d^i^d^i^d^i^d^i}
	ddisna_ = ~f{i^c^i^i^d^d^i}
	dgbbrd_ = ~f{i^c^i^i^i^i^i^d^i^d^d^d^i^d^i^d^i^d^i}
	dgbcon_ = ~f{i^c^i^i^i^d^i^i^d^d^d^i^i}
	dgbequ_ = ~f{i^i^i^i^i^d^i^d^d^d^d^d^i}
	dgbequb_ = ~f{i^i^i^i^i^d^i^d^d^d^d^d^i}
	dgbrfs_ = ~f{i^c^i^i^i^i^d^i^d^i^i^d^i^d^i^d^d^d^i^i}
	dgbsv_ = ~f{i^i^i^i^i^d^i^i^d^i^i}
	dgbsvx_ = ~f{i^c^c^i^i^i^i^d^i^d^i^i^c^d^d^d^i^d^i^d^d^d^d^i^i}
	dgbtf2_ = ~f{i^i^i^i^i^d^i^i^i}
	dgbtrf_ = ~f{i^i^i^i^i^d^i^i^i}
	dgbtrs_ = ~f{i^c^i^i^i^i^d^i^i^d^i^i}
	dgebak_ = ~f{i^c^c^i^i^i^d^i^d^i^i}
	dgebal_ = ~f{i^c^i^d^i^i^i^d^i}
	dgebd2_ = ~f{i^i^i^d^i^d^d^d^d^d^i}
	dgebrd_ = ~f{i^i^i^d^i^d^d^d^d^d^i^i}
	dgecon_ = ~f{i^c^i^d^i^d^d^d^i^i}
	dgeequ_ = ~f{i^i^i^d^i^d^d^d^d^d^i}
	dgeequb_ = ~f{i^i^i^d^i^d^d^d^d^d^i}
	dgees_ = ~f{i^c^c^?^i^d^i^i^d^d^d^i^d^i^i^i}
	dgeesx_ = ~f{i^c^c^?^c^i^d^i^i^d^d^d^i^d^d^d^i^i^i^i^i}
	dgeev_ = ~f{i^c^c^i^d^i^d^d^d^i^d^i^d^i^i}
	dgeevx_ = ~f{i^c^c^c^c^i^d^i^d^d^d^i^d^i^i^i^d^d^d^d^d^i^i^i}
	dgegs_ = ~f{i^c^c^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dgegv_ = ~f{i^c^c^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dgehd2_ = ~f{i^i^i^i^d^i^d^d^i}
	dgehrd_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dgejsv_ = ~f{i^c^c^c^c^c^c^i^i^d^i^d^d^i^d^i^d^i^i^i}
	dgelq2_ = ~f{i^i^i^d^i^d^d^i}
	dgelqf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgels_ = ~f{i^c^i^i^i^d^i^d^i^d^i^i}
	dgelsd_ = ~f{i^i^i^i^d^i^d^i^d^d^i^d^i^i^i}
	dgelss_ = ~f{i^i^i^i^d^i^d^i^d^d^i^d^i^i}
	dgelsx_ = ~f{i^i^i^i^d^i^d^i^i^d^i^d^i}
	dgelsy_ = ~f{i^i^i^i^d^i^d^i^i^d^i^d^i^i}
	dgeql2_ = ~f{i^i^i^d^i^d^d^i}
	dgeqlf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgeqp3_ = ~f{i^i^i^d^i^i^d^d^i^i}
	dgeqpf_ = ~f{i^i^i^d^i^i^d^d^i}
	dgeqr2_ = ~f{i^i^i^d^i^d^d^i}
	dgeqrf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgerfs_ = ~f{i^c^i^i^d^i^d^i^i^d^i^d^i^d^d^d^i^i}
	dgerq2_ = ~f{i^i^i^d^i^d^d^i}
	dgerqf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgesc2_ = ~f{i^i^d^i^d^i^i^d}
	dgesdd_ = ~f{i^c^i^i^d^i^d^d^i^d^i^d^i^i^i}
	dgesv_ = ~f{i^i^i^d^i^i^d^i^i}
	dgesvd_ = ~f{i^c^c^i^i^d^i^d^d^i^d^i^d^i^i}
	dgesvj_ = ~f{i^c^c^c^i^i^d^i^d^i^d^i^d^i^i}
	dgesvx_ = ~f{i^c^c^i^i^d^i^d^i^i^c^d^d^d^i^d^i^d^d^d^d^i^i}
	dgetc2_ = ~f{i^i^d^i^i^i^i}
	dgetf2_ = ~f{i^i^i^d^i^i^i}
	dgetrf_ = ~f{i^i^i^d^i^i^i}
	dgetri_ = ~f{i^i^d^i^i^d^i^i}
	dgetrs_ = ~f{i^c^i^i^d^i^i^d^i^i}
	dggbak_ = ~f{i^c^c^i^i^i^d^d^i^d^i^i}
	dggbal_ = ~f{i^c^i^d^i^d^i^i^i^d^d^d^i}
	dgges_ = ~f{i^c^c^c^?^i^d^i^d^i^i^d^d^d^d^i^d^i^d^i^i^i}
	dggesx_ = ~f{i^c^c^c^?^c^i^d^i^d^i^i^d^d^d^d^i^d^i^d^d^d^i^i^i^i^i}
	dggev_ = ~f{i^c^c^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dggevx_ = ~f{i^c^c^c^c^i^d^i^d^i^d^d^d^d^i^d^i^i^i^d^d^d^d^d^d^d^i^i^i^i}
	dggglm_ = ~f{i^i^i^i^d^i^d^i^d^d^d^d^i^i}
	dgghrd_ = ~f{i^c^c^i^i^i^d^i^d^i^d^i^d^i^i}
	dgglse_ = ~f{i^i^i^i^d^i^d^i^d^d^d^d^i^i}
	dggqrf_ = ~f{i^i^i^i^d^i^d^d^i^d^d^i^i}
	dggrqf_ = ~f{i^i^i^i^d^i^d^d^i^d^d^i^i}
	dggsvd_ = ~f{i^c^c^c^i^i^i^i^i^d^i^d^i^d^d^d^i^d^i^d^i^d^i^i}
	dggsvp_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^d^i^i^d^i^d^i^d^i^i^d^d^i}
	dgsvj0_ = ~f{i^c^i^i^d^i^d^d^i^d^i^d^d^d^i^d^i^i}
	dgsvj1_ = ~f{i^c^i^i^i^d^i^d^d^i^d^i^d^d^d^i^d^i^i}
	dgtcon_ = ~f{i^c^i^d^d^d^d^i^d^d^d^i^i}
	dgtrfs_ = ~f{i^c^i^i^d^d^d^d^d^d^d^i^d^i^d^i^d^d^d^i^i}
	dgtsv_ = ~f{i^i^i^d^d^d^d^i^i}
	dgtsvx_ = ~f{i^c^c^i^i^d^d^d^d^d^d^d^i^d^i^d^i^d^d^d^d^i^i}
	dgttrf_ = ~f{i^i^d^d^d^d^i^i}
	dgttrs_ = ~f{i^c^i^i^d^d^d^d^i^d^i^i}
	dgtts2_ = ~f{i^i^i^i^d^d^d^d^i^d^i}
	dhgeqz_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dhsein_ = ~f{i^c^c^c^i^i^d^i^d^d^d^i^d^i^i^i^d^i^i^i}
	dhseqr_ = ~f{i^c^c^i^i^i^d^i^d^d^d^i^d^i^i}
	disnan_ = ~f{i^d}
	dlabad_ = ~f{i^d^d}
	dlabrd_ = ~f{i^i^i^i^d^i^d^d^d^d^d^i^d^i}
	dlacn2_ = ~f{i^i^d^d^i^d^i^i}
	dlacon_ = ~f{i^i^d^d^i^d^i}
	dlacpy_ = ~f{i^c^i^i^d^i^d^i}
	dladiv_ = ~f{i^d^d^d^d^d^d}
	dlae2_ = ~f{i^d^d^d^d^d}
	dlaebz_ = ~f{i^i^i^i^i^i^i^d^d^d^d^d^d^i^d^d^i^i^d^i^i}
	dlaed0_ = ~f{i^i^i^i^d^d^d^i^d^i^d^i^i}
	dlaed1_ = ~f{i^i^d^d^i^i^d^i^d^i^i}
	dlaed2_ = ~f{i^i^i^i^d^d^i^i^d^d^d^d^d^i^i^i^i^i}
	dlaed3_ = ~f{i^i^i^i^d^d^i^d^d^d^i^i^d^d^i}
	dlaed4_ = ~f{i^i^i^d^d^d^d^d^i}
	dlaed5_ = ~f{i^i^d^d^d^d^d}
	dlaed6_ = ~f{i^i^i^d^d^d^d^d^i}
	dlaed7_ = ~f{i^i^i^i^i^i^i^d^d^i^i^d^i^d^i^i^i^i^i^d^d^i^i}
	dlaed8_ = ~f{i^i^i^i^i^d^d^i^i^d^i^d^d^d^i^d^i^i^i^d^i^i^i}
	dlaed9_ = ~f{i^i^i^i^i^d^d^i^d^d^d^d^i^i}
	dlaeda_ = ~f{i^i^i^i^i^i^i^i^i^d^d^i^d^d^i}
	dlaein_ = ~f{i^i^i^i^d^i^d^d^d^d^d^i^d^d^d^d^i}
	dlaev2_ = ~f{i^d^d^d^d^d^d^d}
	dlaexc_ = ~f{i^i^i^d^i^d^i^i^i^i^d^i}
	dlag2_ = ~f{i^d^i^d^i^d^d^d^d^d^d}
	dlag2s_ = ~f{i^i^i^d^i^f^i^i}
	dlags2_ = ~f{i^i^d^d^d^d^d^d^d^d^d^d^d^d}
	dlagtf_ = ~f{i^i^d^d^d^d^d^d^i^i}
	dlagtm_ = ~f{i^c^i^i^d^d^d^d^d^i^d^d^i}
	dlagts_ = ~f{i^i^i^d^d^d^d^i^d^d^i}
	dlagv2_ = ~f{i^d^i^d^i^d^d^d^d^d^d^d}
	dlahqr_ = ~f{i^i^i^i^i^i^d^i^d^d^i^i^d^i^i}
	dlahr2_ = ~f{i^i^i^i^d^i^d^d^i^d^i}
	dlahrd_ = ~f{i^i^i^i^d^i^d^d^i^d^i}
	dlaic1_ = ~f{i^i^i^d^d^d^d^d^d^d}
	dlaisnan_ = ~f{i^d^d}
	dlaln2_ = ~f{i^i^i^i^d^d^d^i^d^d^d^i^d^d^d^i^d^d^i}
	dlals0_ = ~f{i^i^i^i^i^i^d^i^d^i^i^i^i^i^d^i^d^d^d^d^i^d^d^d^i}
	dlalsa_ = ~f{i^i^i^i^i^d^i^d^i^d^i^d^i^d^d^d^d^i^i^i^i^d^d^d^d^i^i}
	dlalsd_ = ~f{i^c^i^i^i^d^d^d^i^d^i^d^i^i}
	dlamc1_ = ~f{i^i^i^i^i}
	dlamc2_ = ~f{i^i^i^i^d^i^d^i^d}
	dlamc3_ = ~f{d^d^d}
	dlamc4_ = ~f{i^i^d^i}
	dlamc5_ = ~f{i^i^i^i^i^i^d}
	dlamch_ = ~f{d^c}
	dlamrg_ = ~f{i^i^i^d^i^i^i}
	dlaneg_ = ~f{i^i^d^d^d^d^i}
	dlangb_ = ~f{d^c^i^i^i^d^i^d}
	dlange_ = ~f{d^c^i^i^d^i^d}
	dlangt_ = ~f{d^c^i^d^d^d}
	dlanhs_ = ~f{d^c^i^d^i^d}
	dlansb_ = ~f{d^c^c^i^i^d^i^d}
	dlansf_ = ~f{d^c^c^c^i^d^d}
	dlansp_ = ~f{d^c^c^i^d^d}
	dlanst_ = ~f{d^c^i^d^d}
	dlansy_ = ~f{d^c^c^i^d^i^d}
	dlantb_ = ~f{d^c^c^c^i^i^d^i^d}
	dlantp_ = ~f{d^c^c^c^i^d^d}
	dlantr_ = ~f{d^c^c^c^i^i^d^i^d}
	dlanv2_ = ~f{i^d^d^d^d^d^d^d^d^d^d}
	dlapll_ = ~f{i^i^d^i^d^i^d}
	dlapmt_ = ~f{i^i^i^i^d^i^i}
	dlapy2_ = ~f{d^d^d}
	dlapy3_ = ~f{d^d^d^d}
	dlaqgb_ = ~f{i^i^i^i^i^d^i^d^d^d^d^d^c}
	dlaqge_ = ~f{i^i^i^d^i^d^d^d^d^d^c}
	dlaqp2_ = ~f{i^i^i^i^d^i^i^d^d^d^d}
	dlaqps_ = ~f{i^i^i^i^i^i^d^i^i^d^d^d^d^d^i}
	dlaqr0_ = ~f{i^i^i^i^i^i^d^i^d^d^i^i^d^i^d^i^i}
	dlaqr1_ = ~f{i^i^d^i^d^d^d^d^d}
	dlaqr2_ = ~f{i^i^i^i^i^i^i^d^i^i^i^d^i^i^i^d^d^d^i^i^d^i^i^d^i^d^i}
	dlaqr3_ = ~f{i^i^i^i^i^i^i^d^i^i^i^d^i^i^i^d^d^d^i^i^d^i^i^d^i^d^i}
	dlaqr4_ = ~f{i^i^i^i^i^i^d^i^d^d^i^i^d^i^d^i^i}
	dlaqr5_ = ~f{i^i^i^i^i^i^i^i^d^d^d^i^i^i^d^i^d^i^d^i^i^d^i^i^d^i}
	dlaqsb_ = ~f{i^c^i^i^d^i^d^d^d^c}
	dlaqsp_ = ~f{i^c^i^d^d^d^d^c}
	dlaqsy_ = ~f{i^c^i^d^i^d^d^d^c}
	dlaqtr_ = ~f{i^i^i^i^d^i^d^d^d^d^d^i}
	dlar1v_ = ~f{i^i^i^i^d^d^d^d^d^d^d^d^i^i^d^d^i^i^d^d^d^d}
	dlar2v_ = ~f{i^i^d^d^d^i^d^d^i}
	dlarf_ = ~f{i^c^i^i^d^i^d^d^i^d}
	dlarfb_ = ~f{i^c^c^c^c^i^i^i^d^i^d^i^d^i^d^i}
	dlarfg_ = ~f{i^i^d^d^i^d}
	dlarfp_ = ~f{i^i^d^d^i^d}
	dlarft_ = ~f{i^c^c^i^i^d^i^d^d^i}
	dlarfx_ = ~f{i^c^i^i^d^d^d^i^d}
	dlargv_ = ~f{i^i^d^i^d^i^d^i}
	dlarnv_ = ~f{i^i^i^i^d}
	dlarra_ = ~f{i^i^d^d^d^d^d^i^i^i}
	dlarrb_ = ~f{i^i^d^d^i^i^d^d^i^d^d^d^d^i^d^d^i^i}
	dlarrc_ = ~f{i^c^i^d^d^d^d^d^i^i^i^i}
	dlarrd_ = ~f{i^c^c^i^d^d^i^i^d^d^d^d^d^d^i^i^i^d^d^d^d^i^i^d^i^i}
	dlarre_ = ~f{i^c^i^d^d^i^i^d^d^d^d^d^d^i^i^i^d^d^d^i^i^d^d^d^i^i}
	dlarrf_ = ~f{i^i^d^d^d^i^i^d^d^d^d^d^d^d^d^d^d^d^i}
	dlarrj_ = ~f{i^i^d^d^i^i^d^i^d^d^d^i^d^d^i}
	dlarrk_ = ~f{i^i^i^d^d^d^d^d^d^d^d^i}
	dlarrr_ = ~f{i^i^d^d^i}
	dlarrv_ = ~f{i^i^d^d^d^d^d^i^i^i^i^d^d^d^d^d^d^i^i^d^d^i^i^d^i^i}
	dlarscl2_ = ~f{i^i^i^d^d^i}
	dlartg_ = ~f{i^d^d^d^d^d}
	dlartv_ = ~f{i^i^d^i^d^i^d^d^i}
	dlaruv_ = ~f{i^i^i^d}
	dlarz_ = ~f{i^c^i^i^i^d^i^d^d^i^d}
	dlarzb_ = ~f{i^c^c^c^c^i^i^i^i^d^i^d^i^d^i^d^i}
	dlarzt_ = ~f{i^c^c^i^i^d^i^d^d^i}
	dlas2_ = ~f{i^d^d^d^d^d}
	dlascl2_ = ~f{i^i^i^d^d^i}
	dlascl_ = ~f{i^c^i^i^d^d^i^i^d^i^i}
	dlasd0_ = ~f{i^i^i^d^d^d^i^d^i^i^i^d^i}
	dlasd1_ = ~f{i^i^i^i^d^d^d^d^i^d^i^i^i^d^i}
	dlasd2_ = ~f{i^i^i^i^i^d^d^d^d^d^i^d^i^d^d^i^d^i^i^i^i^i^i^i}
	dlasd3_ = ~f{i^i^i^i^i^d^d^i^d^d^i^d^i^d^i^d^i^i^i^d^i}
	dlasd4_ = ~f{i^i^i^d^d^d^d^d^d^i}
	dlasd5_ = ~f{i^i^d^d^d^d^d^d}
	dlasd6_ = ~f{i^i^i^i^i^d^d^d^d^d^i^i^i^i^i^d^i^d^d^d^d^i^d^d^d^i^i}
	dlasd7_ = ~f{i^i^i^i^i^i^d^d^d^d^d^d^d^d^d^d^i^i^i^i^i^i^i^d^i^d^d^i}
	dlasd8_ = ~f{i^i^i^d^d^d^d^d^d^i^d^d^i}
	dlasda_ = ~f{i^i^i^i^i^d^d^d^i^d^i^d^d^d^d^i^i^i^i^d^d^d^d^i^i}
	dlasdq_ = ~f{i^c^i^i^i^i^i^d^d^d^i^d^i^d^i^d^i}
	dlasdt_ = ~f{i^i^i^i^i^i^i^i}
	dlaset_ = ~f{i^c^i^i^d^d^d^i}
	dlasq1_ = ~f{i^i^d^d^d^i}
	dlasq2_ = ~f{i^i^d^i}
	dlasq3_ = ~f{i^i^i^d^i^d^d^d^d^i^i^i^i^i^d^d^d^d^d^d^d}
	dlasq4_ = ~f{i^i^i^d^i^i^d^d^d^d^d^d^d^i^d}
	dlasq5_ = ~f{i^i^i^d^i^d^d^d^d^d^d^d^i}
	dlasq6_ = ~f{i^i^i^d^i^d^d^d^d^d^d}
	dlasr_ = ~f{i^c^c^c^i^i^d^d^d^i}
	dlasrt_ = ~f{i^c^i^d^i}
	dlassq_ = ~f{i^i^d^i^d^d}
	dlasv2_ = ~f{i^d^d^d^d^d^d^d^d^d}
	dlaswp_ = ~f{i^i^d^i^i^i^i^i}
	dlasy2_ = ~f{i^i^i^i^i^i^d^i^d^i^d^i^d^d^i^d^i}
	dlasyf_ = ~f{i^c^i^i^i^d^i^i^d^i^i}
	dlat2s_ = ~f{i^c^i^d^i^f^i^i}
	dlatbs_ = ~f{i^c^c^c^c^i^i^d^i^d^d^d^i}
	dlatdf_ = ~f{i^i^i^d^i^d^d^d^i^i}
	dlatps_ = ~f{i^c^c^c^c^i^d^d^d^d^i}
	dlatrd_ = ~f{i^c^i^i^d^i^d^d^d^i}
	dlatrs_ = ~f{i^c^c^c^c^i^d^i^d^d^d^i}
	dlatrz_ = ~f{i^i^i^i^d^i^d^d}
	dlatzm_ = ~f{i^c^i^i^d^i^d^d^d^i^d}
	dlauu2_ = ~f{i^c^i^d^i^i}
	dlauum_ = ~f{i^c^i^d^i^i}
	dopgtr_ = ~f{i^c^i^d^d^d^i^d^i}
	dopmtr_ = ~f{i^c^c^c^i^i^d^d^d^i^d^i}
	dorg2l_ = ~f{i^i^i^i^d^i^d^d^i}
	dorg2r_ = ~f{i^i^i^i^d^i^d^d^i}
	dorgbr_ = ~f{i^c^i^i^i^d^i^d^d^i^i}
	dorghr_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgl2_ = ~f{i^i^i^i^d^i^d^d^i}
	dorglq_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgql_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgqr_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgr2_ = ~f{i^i^i^i^d^i^d^d^i}
	dorgrq_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgtr_ = ~f{i^c^i^d^i^d^d^i^i}
	dorm2l_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dorm2r_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dormbr_ = ~f{i^c^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormhr_ = ~f{i^c^c^i^i^i^i^d^i^d^d^i^d^i^i}
	dorml2_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dormlq_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormql_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormqr_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormr2_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dormr3_ = ~f{i^c^c^i^i^i^i^d^i^d^d^i^d^i}
	dormrq_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormrz_ = ~f{i^c^c^i^i^i^i^d^i^d^d^i^d^i^i}
	dormtr_ = ~f{i^c^c^c^i^i^d^i^d^d^i^d^i^i}
	dpbcon_ = ~f{i^c^i^i^d^i^d^d^d^i^i}
	dpbequ_ = ~f{i^c^i^i^d^i^d^d^d^i}
	dpbrfs_ = ~f{i^c^i^i^i^d^i^d^i^d^i^d^i^d^d^d^i^i}
	dpbstf_ = ~f{i^c^i^i^d^i^i}
	dpbsv_ = ~f{i^c^i^i^i^d^i^d^i^i}
	dpbsvx_ = ~f{i^c^c^i^i^i^d^i^d^i^c^d^d^i^d^i^d^d^d^d^i^i}
	dpbtf2_ = ~f{i^c^i^i^d^i^i}
	dpbtrf_ = ~f{i^c^i^i^d^i^i}
	dpbtrs_ = ~f{i^c^i^i^i^d^i^d^i^i}
	dpftrf_ = ~f{i^c^c^i^d^i}
	dpftri_ = ~f{i^c^c^i^d^i}
	dpftrs_ = ~f{i^c^c^i^i^d^d^i^i}
	dpocon_ = ~f{i^c^i^d^i^d^d^d^i^i}
	dpoequ_ = ~f{i^i^d^i^d^d^d^i}
	dpoequb_ = ~f{i^i^d^i^d^d^d^i}
	dporfs_ = ~f{i^c^i^i^d^i^d^i^d^i^d^i^d^d^d^i^i}
	dposv_ = ~f{i^c^i^i^d^i^d^i^i}
	dposvx_ = ~f{i^c^c^i^i^d^i^d^i^c^d^d^i^d^i^d^d^d^d^i^i}
	dpotf2_ = ~f{i^c^i^d^i^i}
	dpotrf_ = ~f{i^c^i^d^i^i}
	dpotri_ = ~f{i^c^i^d^i^i}
	dpotrs_ = ~f{i^c^i^i^d^i^d^i^i}
	dppcon_ = ~f{i^c^i^d^d^d^d^i^i}
	dppequ_ = ~f{i^c^i^d^d^d^d^i}
	dpprfs_ = ~f{i^c^i^i^d^d^d^i^d^i^d^d^d^i^i}
	dppsv_ = ~f{i^c^i^i^d^d^i^i}
	dppsvx_ = ~f{i^c^c^i^i^d^d^c^d^d^i^d^i^d^d^d^d^i^i}
	dpptrf_ = ~f{i^c^i^d^i}
	dpptri_ = ~f{i^c^i^d^i}
	dpptrs_ = ~f{i^c^i^i^d^d^i^i}
	dpstf2_ = ~f{i^c^i^d^i^i^i^d^d^i}
	dpstrf_ = ~f{i^c^i^d^i^i^i^d^d^i}
	dptcon_ = ~f{i^i^d^d^d^d^d^i}
	dpteqr_ = ~f{i^c^i^d^d^d^i^d^i}
	dptrfs_ = ~f{i^i^i^d^d^d^d^d^i^d^i^d^d^d^i}
	dptsv_ = ~f{i^i^i^d^d^d^i^i}
	dptsvx_ = ~f{i^c^i^i^d^d^d^d^d^i^d^i^d^d^d^d^i}
	dpttrf_ = ~f{i^i^d^d^i}
	dpttrs_ = ~f{i^i^i^d^d^d^i^i}
	dptts2_ = ~f{i^i^i^d^d^d^i}
	drscl_ = ~f{i^i^d^d^i}
	dsbev_ = ~f{i^c^c^i^i^d^i^d^d^i^d^i}
	dsbevd_ = ~f{i^c^c^i^i^d^i^d^d^i^d^i^i^i^i}
	dsbevx_ = ~f{i^c^c^c^i^i^d^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsbgst_ = ~f{i^c^c^i^i^i^d^i^d^i^d^i^d^i}
	dsbgv_ = ~f{i^c^c^i^i^i^d^i^d^i^d^d^i^d^i}
	dsbgvd_ = ~f{i^c^c^i^i^i^d^i^d^i^d^d^i^d^i^i^i^i}
	dsbgvx_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsbtrd_ = ~f{i^c^c^i^i^d^i^d^d^d^i^d^i}
	dsfrk_ = ~f{i^c^c^c^i^i^d^d^i^d^d}
	dsgesv_ = ~f{i^i^i^d^i^i^d^i^d^i^d^f^i^i}
	dspcon_ = ~f{i^c^i^d^i^d^d^d^i^i}
	dspev_ = ~f{i^c^c^i^d^d^d^i^d^i}
	dspevd_ = ~f{i^c^c^i^d^d^d^i^d^i^i^i^i}
	dspevx_ = ~f{i^c^c^c^i^d^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dspgst_ = ~f{i^i^c^i^d^d^i}
	dspgv_ = ~f{i^i^c^c^i^d^d^d^d^i^d^i}
	dspgvd_ = ~f{i^i^c^c^i^d^d^d^d^i^d^i^i^i^i}
	dspgvx_ = ~f{i^i^c^c^c^i^d^d^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsposv_ = ~f{i^c^i^i^d^i^d^i^d^i^d^f^i^i}
	dsprfs_ = ~f{i^c^i^i^d^d^i^d^i^d^i^d^d^d^i^i}
	dspsv_ = ~f{i^c^i^i^d^i^d^i^i}
	dspsvx_ = ~f{i^c^c^i^i^d^d^i^d^i^d^i^d^d^d^d^i^i}
	dsptrd_ = ~f{i^c^i^d^d^d^d^i}
	dsptrf_ = ~f{i^c^i^d^i^i}
	dsptri_ = ~f{i^c^i^d^i^d^i}
	dsptrs_ = ~f{i^c^i^i^d^i^d^i^i}
	dstebz_ = ~f{i^c^c^i^d^d^i^i^d^d^d^i^i^d^i^i^d^i^i}
	dstedc_ = ~f{i^c^i^d^d^d^i^d^i^i^i^i}
	dstegr_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^d^i^i^d^i^i^i^i}
	dstein_ = ~f{i^i^d^d^i^d^i^i^d^i^d^i^i^i}
	dstemr_ = ~f{i^c^c^i^d^d^d^d^i^i^i^d^d^i^i^i^i^d^i^i^i^i}
	dsteqr_ = ~f{i^c^i^d^d^d^i^d^i}
	dsterf_ = ~f{i^i^d^d^i}
	dstev_ = ~f{i^c^i^d^d^d^i^d^i}
	dstevd_ = ~f{i^c^i^d^d^d^i^d^i^i^i^i}
	dstevr_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^d^i^i^d^i^i^i^i}
	dstevx_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsycon_ = ~f{i^c^i^d^i^i^d^d^d^i^i}
	dsyequb_ = ~f{i^c^i^d^i^d^d^d^d^i}
	dsyev_ = ~f{i^c^c^i^d^i^d^d^i^i}
	dsyevd_ = ~f{i^c^c^i^d^i^d^d^i^i^i^i}
	dsyevr_ = ~f{i^c^c^c^i^d^i^d^d^i^i^d^i^d^d^i^i^d^i^i^i^i}
	dsyevx_ = ~f{i^c^c^c^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i^i}
	dsygs2_ = ~f{i^i^c^i^d^i^d^i^i}
	dsygst_ = ~f{i^i^c^i^d^i^d^i^i}
	dsygv_ = ~f{i^i^c^c^i^d^i^d^i^d^d^i^i}
	dsygvd_ = ~f{i^i^c^c^i^d^i^d^i^d^d^i^i^i^i}
	dsygvx_ = ~f{i^i^c^c^c^i^d^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i^i}
	dsyrfs_ = ~f{i^c^i^i^d^i^d^i^i^d^i^d^i^d^d^d^i^i}
	dsysv_ = ~f{i^c^i^i^d^i^i^d^i^d^i^i}
	dsysvx_ = ~f{i^c^c^i^i^d^i^d^i^i^d^i^d^i^d^d^d^d^i^i^i}
	dsytd2_ = ~f{i^c^i^d^i^d^d^d^i}
	dsytf2_ = ~f{i^c^i^d^i^i^i}
	dsytrd_ = ~f{i^c^i^d^i^d^d^d^d^i^i}
	dsytrf_ = ~f{i^c^i^d^i^i^d^i^i}
	dsytri_ = ~f{i^c^i^d^i^i^d^i}
	dsytrs_ = ~f{i^c^i^i^d^i^i^d^i^i}
	dtbcon_ = ~f{i^c^c^c^i^i^d^i^d^d^i^i}
	dtbrfs_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^i^d^d^d^i^i}
	dtbtrs_ = ~f{i^c^c^c^i^i^i^d^i^d^i^i}
	dtfsm_ = ~f{i^c^c^c^c^c^i^i^d^d^d^i}
	dtftri_ = ~f{i^c^c^c^i^d^i}
	dtfttp_ = ~f{i^c^c^i^d^d^i}
	dtfttr_ = ~f{i^c^c^i^d^d^i^i}
	dtgevc_ = ~f{i^c^c^i^i^d^i^d^i^d^i^d^i^i^i^d^i}
	dtgex2_ = ~f{i^i^i^i^d^i^d^i^d^i^d^i^i^i^i^d^i^i}
	dtgexc_ = ~f{i^i^i^i^d^i^d^i^d^i^d^i^i^i^d^i^i}
	dtgsen_ = ~f{i^i^i^i^i^i^d^i^d^i^d^d^d^d^i^d^i^i^d^d^d^d^i^i^i^i}
	dtgsja_ = ~f{i^c^c^c^i^i^i^i^i^d^i^d^i^d^d^d^d^d^i^d^i^d^i^d^i^i}
	dtgsna_ = ~f{i^c^c^i^i^d^i^d^i^d^i^d^i^d^d^i^i^d^i^i^i}
	dtgsy2_ = ~f{i^c^i^i^i^d^i^d^i^d^i^d^i^d^i^d^i^d^d^d^i^i^i}
	dtgsyl_ = ~f{i^c^i^i^i^d^i^d^i^d^i^d^i^d^i^d^i^d^d^d^i^i^i}
	dtpcon_ = ~f{i^c^c^c^i^d^d^d^i^i}
	dtprfs_ = ~f{i^c^c^c^i^i^d^d^i^d^i^d^d^d^i^i}
	dtptri_ = ~f{i^c^c^i^d^i}
	dtptrs_ = ~f{i^c^c^c^i^i^d^d^i^i}
	dtpttf_ = ~f{i^c^c^i^d^d^i}
	dtpttr_ = ~f{i^c^i^d^d^i^i}
	dtrcon_ = ~f{i^c^c^c^i^d^i^d^d^i^i}
	dtrevc_ = ~f{i^c^c^i^i^d^i^d^i^d^i^i^i^d^i}
	dtrexc_ = ~f{i^c^i^d^i^d^i^i^i^d^i}
	dtrrfs_ = ~f{i^c^c^c^i^i^d^i^d^i^d^i^d^d^d^i^i}
	dtrsen_ = ~f{i^c^c^i^i^d^i^d^i^d^d^i^d^d^d^i^i^i^i}
	dtrsna_ = ~f{i^c^c^i^i^d^i^d^i^d^i^d^d^i^i^d^i^i^i}
	dtrsyl_ = ~f{i^c^c^i^i^i^d^i^d^i^d^i^d^i}
	dtrti2_ = ~f{i^c^c^i^d^i^i}
	dtrtri_ = ~f{i^c^c^i^d^i^i}
	dtrtrs_ = ~f{i^c^c^c^i^i^d^i^d^i^i}
	dtrttf_ = ~f{i^c^c^i^d^i^d^i}
	dtrttp_ = ~f{i^c^i^d^i^d^i}
	dtzrqf_ = ~f{i^i^i^d^i^d^i}
	dtzrzf_ = ~f{i^i^i^d^i^d^d^i^i}
	dzsum1_ = ~f{d^i^v^i}
	icmax1_ = ~f{i^i^v^i}
	ieeeck_ = ~f{i^i^f^f}
	ilaclc_ = ~f{i^i^i^v^i}
	ilaclr_ = ~f{i^i^i^v^i}
	iladiag_ = ~f{i^c}
	iladlc_ = ~f{i^i^i^d^i}
	iladlr_ = ~f{i^i^i^d^i}
	ilaenv_ = ~f{i^i^c^c^i^i^i^i}
	ilaprec_ = ~f{i^c}
	ilaslc_ = ~f{i^i^i^f^i}
	ilaslr_ = ~f{i^i^i^f^i}
	ilatrans_ = ~f{i^c}
	ilauplo_ = ~f{i^c}
	ilaver_ = ~f{i^i^i^i}
	ilazlc_ = ~f{i^i^i^v^i}
	ilazlr_ = ~f{i^i^i^v^i}
	iparmq_ = ~f{i^i^c^c^i^i^i^i}
	izmax1_ = ~f{i^i^v^i}
	lsamen_ = ~f{i^i^c^c}
	sbdsdc_ = ~f{i^c^c^i^f^f^f^i^f^i^f^i^f^i^i}
	sbdsqr_ = ~f{i^c^i^i^i^i^f^f^f^i^f^i^f^i^f^i}
	scsum1_ = ~f{d^i^v^i}
	sdisna_ = ~f{i^c^i^i^f^f^i}
	sgbbrd_ = ~f{i^c^i^i^i^i^i^f^i^f^f^f^i^f^i^f^i^f^i}
	sgbcon_ = ~f{i^c^i^i^i^f^i^i^f^f^f^i^i}
	sgbequ_ = ~f{i^i^i^i^i^f^i^f^f^f^f^f^i}
	sgbequb_ = ~f{i^i^i^i^i^f^i^f^f^f^f^f^i}
	sgbrfs_ = ~f{i^c^i^i^i^i^f^i^f^i^i^f^i^f^i^f^f^f^i^i}
	sgbsv_ = ~f{i^i^i^i^i^f^i^i^f^i^i}
	sgbsvx_ = ~f{i^c^c^i^i^i^i^f^i^f^i^i^c^f^f^f^i^f^i^f^f^f^f^i^i}
	sgbtf2_ = ~f{i^i^i^i^i^f^i^i^i}
	sgbtrf_ = ~f{i^i^i^i^i^f^i^i^i}
	sgbtrs_ = ~f{i^c^i^i^i^i^f^i^i^f^i^i}
	sgebak_ = ~f{i^c^c^i^i^i^f^i^f^i^i}
	sgebal_ = ~f{i^c^i^f^i^i^i^f^i}
	sgebd2_ = ~f{i^i^i^f^i^f^f^f^f^f^i}
	sgebrd_ = ~f{i^i^i^f^i^f^f^f^f^f^i^i}
	sgecon_ = ~f{i^c^i^f^i^f^f^f^i^i}
	sgeequ_ = ~f{i^i^i^f^i^f^f^f^f^f^i}
	sgeequb_ = ~f{i^i^i^f^i^f^f^f^f^f^i}
	sgees_ = ~f{i^c^c^?^i^f^i^i^f^f^f^i^f^i^i^i}
	sgeesx_ = ~f{i^c^c^?^c^i^f^i^i^f^f^f^i^f^f^f^i^i^i^i^i}
	sgeev_ = ~f{i^c^c^i^f^i^f^f^f^i^f^i^f^i^i}
	sgeevx_ = ~f{i^c^c^c^c^i^f^i^f^f^f^i^f^i^i^i^f^f^f^f^f^i^i^i}
	sgegs_ = ~f{i^c^c^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	sgegv_ = ~f{i^c^c^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	sgehd2_ = ~f{i^i^i^i^f^i^f^f^i}
	sgehrd_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sgejsv_ = ~f{i^c^c^c^c^c^c^i^i^f^i^f^f^i^f^i^f^i^i^i}
	sgelq2_ = ~f{i^i^i^f^i^f^f^i}
	sgelqf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgels_ = ~f{i^c^i^i^i^f^i^f^i^f^i^i}
	sgelsd_ = ~f{i^i^i^i^f^i^f^i^f^f^i^f^i^i^i}
	sgelss_ = ~f{i^i^i^i^f^i^f^i^f^f^i^f^i^i}
	sgelsx_ = ~f{i^i^i^i^f^i^f^i^i^f^i^f^i}
	sgelsy_ = ~f{i^i^i^i^f^i^f^i^i^f^i^f^i^i}
	sgeql2_ = ~f{i^i^i^f^i^f^f^i}
	sgeqlf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgeqp3_ = ~f{i^i^i^f^i^i^f^f^i^i}
	sgeqpf_ = ~f{i^i^i^f^i^i^f^f^i}
	sgeqr2_ = ~f{i^i^i^f^i^f^f^i}
	sgeqrf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgerfs_ = ~f{i^c^i^i^f^i^f^i^i^f^i^f^i^f^f^f^i^i}
	sgerq2_ = ~f{i^i^i^f^i^f^f^i}
	sgerqf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgesc2_ = ~f{i^i^f^i^f^i^i^f}
	sgesdd_ = ~f{i^c^i^i^f^i^f^f^i^f^i^f^i^i^i}
	sgesv_ = ~f{i^i^i^f^i^i^f^i^i}
	sgesvd_ = ~f{i^c^c^i^i^f^i^f^f^i^f^i^f^i^i}
	sgesvj_ = ~f{i^c^c^c^i^i^f^i^f^i^f^i^f^i^i}
	sgesvx_ = ~f{i^c^c^i^i^f^i^f^i^i^c^f^f^f^i^f^i^f^f^f^f^i^i}
	sgetc2_ = ~f{i^i^f^i^i^i^i}
	sgetf2_ = ~f{i^i^i^f^i^i^i}
	sgetrf_ = ~f{i^i^i^f^i^i^i}
	sgetri_ = ~f{i^i^f^i^i^f^i^i}
	sgetrs_ = ~f{i^c^i^i^f^i^i^f^i^i}
	sggbak_ = ~f{i^c^c^i^i^i^f^f^i^f^i^i}
	sggbal_ = ~f{i^c^i^f^i^f^i^i^i^f^f^f^i}
	sgges_ = ~f{i^c^c^c^?^i^f^i^f^i^i^f^f^f^f^i^f^i^f^i^i^i}
	sggesx_ = ~f{i^c^c^c^?^c^i^f^i^f^i^i^f^f^f^f^i^f^i^f^f^f^i^i^i^i^i}
	sggev_ = ~f{i^c^c^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	sggevx_ = ~f{i^c^c^c^c^i^f^i^f^i^f^f^f^f^i^f^i^i^i^f^f^f^f^f^f^f^i^i^i^i}
	sggglm_ = ~f{i^i^i^i^f^i^f^i^f^f^f^f^i^i}
	sgghrd_ = ~f{i^c^c^i^i^i^f^i^f^i^f^i^f^i^i}
	sgglse_ = ~f{i^i^i^i^f^i^f^i^f^f^f^f^i^i}
	sggqrf_ = ~f{i^i^i^i^f^i^f^f^i^f^f^i^i}
	sggrqf_ = ~f{i^i^i^i^f^i^f^f^i^f^f^i^i}
	sggsvd_ = ~f{i^c^c^c^i^i^i^i^i^f^i^f^i^f^f^f^i^f^i^f^i^f^i^i}
	sggsvp_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^f^i^i^f^i^f^i^f^i^i^f^f^i}
	sgsvj0_ = ~f{i^c^i^i^f^i^f^f^i^f^i^f^f^f^i^f^i^i}
	sgsvj1_ = ~f{i^c^i^i^i^f^i^f^f^i^f^i^f^f^f^i^f^i^i}
	sgtcon_ = ~f{i^c^i^f^f^f^f^i^f^f^f^i^i}
	sgtrfs_ = ~f{i^c^i^i^f^f^f^f^f^f^f^i^f^i^f^i^f^f^f^i^i}
	sgtsv_ = ~f{i^i^i^f^f^f^f^i^i}
	sgtsvx_ = ~f{i^c^c^i^i^f^f^f^f^f^f^f^i^f^i^f^i^f^f^f^f^i^i}
	sgttrf_ = ~f{i^i^f^f^f^f^i^i}
	sgttrs_ = ~f{i^c^i^i^f^f^f^f^i^f^i^i}
	sgtts2_ = ~f{i^i^i^i^f^f^f^f^i^f^i}
	shgeqz_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	shsein_ = ~f{i^c^c^c^i^i^f^i^f^f^f^i^f^i^i^i^f^i^i^i}
	shseqr_ = ~f{i^c^c^i^i^i^f^i^f^f^f^i^f^i^i}
	sisnan_ = ~f{i^f}
	slabad_ = ~f{i^f^f}
	slabrd_ = ~f{i^i^i^i^f^i^f^f^f^f^f^i^f^i}
	slacn2_ = ~f{i^i^f^f^i^f^i^i}
	slacon_ = ~f{i^i^f^f^i^f^i}
	slacpy_ = ~f{i^c^i^i^f^i^f^i}
	sladiv_ = ~f{i^f^f^f^f^f^f}
	slae2_ = ~f{i^f^f^f^f^f}
	slaebz_ = ~f{i^i^i^i^i^i^i^f^f^f^f^f^f^i^f^f^i^i^f^i^i}
	slaed0_ = ~f{i^i^i^i^f^f^f^i^f^i^f^i^i}
	slaed1_ = ~f{i^i^f^f^i^i^f^i^f^i^i}
	slaed2_ = ~f{i^i^i^i^f^f^i^i^f^f^f^f^f^i^i^i^i^i}
	slaed3_ = ~f{i^i^i^i^f^f^i^f^f^f^i^i^f^f^i}
	slaed4_ = ~f{i^i^i^f^f^f^f^f^i}
	slaed5_ = ~f{i^i^f^f^f^f^f}
	slaed6_ = ~f{i^i^i^f^f^f^f^f^i}
	slaed7_ = ~f{i^i^i^i^i^i^i^f^f^i^i^f^i^f^i^i^i^i^i^f^f^i^i}
	slaed8_ = ~f{i^i^i^i^i^f^f^i^i^f^i^f^f^f^i^f^i^i^i^f^i^i^i}
	slaed9_ = ~f{i^i^i^i^i^f^f^i^f^f^f^f^i^i}
	slaeda_ = ~f{i^i^i^i^i^i^i^i^i^f^f^i^f^f^i}
	slaein_ = ~f{i^i^i^i^f^i^f^f^f^f^f^i^f^f^f^f^i}
	slaev2_ = ~f{i^f^f^f^f^f^f^f}
	slaexc_ = ~f{i^i^i^f^i^f^i^i^i^i^f^i}
	slag2_ = ~f{i^f^i^f^i^f^f^f^f^f^f}
	slag2d_ = ~f{i^i^i^f^i^d^i^i}
	slags2_ = ~f{i^i^f^f^f^f^f^f^f^f^f^f^f^f}
	slagtf_ = ~f{i^i^f^f^f^f^f^f^i^i}
	slagtm_ = ~f{i^c^i^i^f^f^f^f^f^i^f^f^i}
	slagts_ = ~f{i^i^i^f^f^f^f^i^f^f^i}
	slagv2_ = ~f{i^f^i^f^i^f^f^f^f^f^f^f}
	slahqr_ = ~f{i^i^i^i^i^i^f^i^f^f^i^i^f^i^i}
	slahr2_ = ~f{i^i^i^i^f^i^f^f^i^f^i}
	slahrd_ = ~f{i^i^i^i^f^i^f^f^i^f^i}
	slaic1_ = ~f{i^i^i^f^f^f^f^f^f^f}
	slaisnan_ = ~f{i^f^f}
	slaln2_ = ~f{i^i^i^i^f^f^f^i^f^f^f^i^f^f^f^i^f^f^i}
	slals0_ = ~f{i^i^i^i^i^i^f^i^f^i^i^i^i^i^f^i^f^f^f^f^i^f^f^f^i}
	slalsa_ = ~f{i^i^i^i^i^f^i^f^i^f^i^f^i^f^f^f^f^i^i^i^i^f^f^f^f^i^i}
	slalsd_ = ~f{i^c^i^i^i^f^f^f^i^f^i^f^i^i}
	slamc1_ = ~f{i^i^i^i^i}
	slamc2_ = ~f{i^i^i^i^f^i^f^i^f}
	slamc3_ = ~f{d^f^f}
	slamc4_ = ~f{i^i^f^i}
	slamc5_ = ~f{i^i^i^i^i^i^f}
	slamch_ = ~f{d^c}
	slamrg_ = ~f{i^i^i^f^i^i^i}
	slaneg_ = ~f{i^i^f^f^f^f^i}
	slangb_ = ~f{d^c^i^i^i^f^i^f}
	slange_ = ~f{d^c^i^i^f^i^f}
	slangt_ = ~f{d^c^i^f^f^f}
	slanhs_ = ~f{d^c^i^f^i^f}
	slansb_ = ~f{d^c^c^i^i^f^i^f}
	slansf_ = ~f{d^c^c^c^i^f^f}
	slansp_ = ~f{d^c^c^i^f^f}
	slanst_ = ~f{d^c^i^f^f}
	slansy_ = ~f{d^c^c^i^f^i^f}
	slantb_ = ~f{d^c^c^c^i^i^f^i^f}
	slantp_ = ~f{d^c^c^c^i^f^f}
	slantr_ = ~f{d^c^c^c^i^i^f^i^f}
	slanv2_ = ~f{i^f^f^f^f^f^f^f^f^f^f}
	slapll_ = ~f{i^i^f^i^f^i^f}
	slapmt_ = ~f{i^i^i^i^f^i^i}
	slapy2_ = ~f{d^f^f}
	slapy3_ = ~f{d^f^f^f}
	slaqgb_ = ~f{i^i^i^i^i^f^i^f^f^f^f^f^c}
	slaqge_ = ~f{i^i^i^f^i^f^f^f^f^f^c}
	slaqp2_ = ~f{i^i^i^i^f^i^i^f^f^f^f}
	slaqps_ = ~f{i^i^i^i^i^i^f^i^i^f^f^f^f^f^i}
	slaqr0_ = ~f{i^i^i^i^i^i^f^i^f^f^i^i^f^i^f^i^i}
	slaqr1_ = ~f{i^i^f^i^f^f^f^f^f}
	slaqr2_ = ~f{i^i^i^i^i^i^i^f^i^i^i^f^i^i^i^f^f^f^i^i^f^i^i^f^i^f^i}
	slaqr3_ = ~f{i^i^i^i^i^i^i^f^i^i^i^f^i^i^i^f^f^f^i^i^f^i^i^f^i^f^i}
	slaqr4_ = ~f{i^i^i^i^i^i^f^i^f^f^i^i^f^i^f^i^i}
	slaqr5_ = ~f{i^i^i^i^i^i^i^i^f^f^f^i^i^i^f^i^f^i^f^i^i^f^i^i^f^i}
	slaqsb_ = ~f{i^c^i^i^f^i^f^f^f^c}
	slaqsp_ = ~f{i^c^i^f^f^f^f^c}
	slaqsy_ = ~f{i^c^i^f^i^f^f^f^c}
	slaqtr_ = ~f{i^i^i^i^f^i^f^f^f^f^f^i}
	slar1v_ = ~f{i^i^i^i^f^f^f^f^f^f^f^f^i^i^f^f^i^i^f^f^f^f}
	slar2v_ = ~f{i^i^f^f^f^i^f^f^i}
	slarf_ = ~f{i^c^i^i^f^i^f^f^i^f}
	slarfb_ = ~f{i^c^c^c^c^i^i^i^f^i^f^i^f^i^f^i}
	slarfg_ = ~f{i^i^f^f^i^f}
	slarfp_ = ~f{i^i^f^f^i^f}
	slarft_ = ~f{i^c^c^i^i^f^i^f^f^i}
	slarfx_ = ~f{i^c^i^i^f^f^f^i^f}
	slargv_ = ~f{i^i^f^i^f^i^f^i}
	slarnv_ = ~f{i^i^i^i^f}
	slarra_ = ~f{i^i^f^f^f^f^f^i^i^i}
	slarrb_ = ~f{i^i^f^f^i^i^f^f^i^f^f^f^f^i^f^f^i^i}
	slarrc_ = ~f{i^c^i^f^f^f^f^f^i^i^i^i}
	slarrd_ = ~f{i^c^c^i^f^f^i^i^f^f^f^f^f^f^i^i^i^f^f^f^f^i^i^f^i^i}
	slarre_ = ~f{i^c^i^f^f^i^i^f^f^f^f^f^f^i^i^i^f^f^f^i^i^f^f^f^i^i}
	slarrf_ = ~f{i^i^f^f^f^i^i^f^f^f^f^f^f^f^f^f^f^f^i}
	slarrj_ = ~f{i^i^f^f^i^i^f^i^f^f^f^i^f^f^i}
	slarrk_ = ~f{i^i^i^f^f^f^f^f^f^f^f^i}
	slarrr_ = ~f{i^i^f^f^i}
	slarrv_ = ~f{i^i^f^f^f^f^f^i^i^i^i^f^f^f^f^f^f^i^i^f^f^i^i^f^i^i}
	slarscl2_ = ~f{i^i^i^f^f^i}
	slartg_ = ~f{i^f^f^f^f^f}
	slartv_ = ~f{i^i^f^i^f^i^f^f^i}
	slaruv_ = ~f{i^i^i^f}
	slarz_ = ~f{i^c^i^i^i^f^i^f^f^i^f}
	slarzb_ = ~f{i^c^c^c^c^i^i^i^i^f^i^f^i^f^i^f^i}
	slarzt_ = ~f{i^c^c^i^i^f^i^f^f^i}
	slas2_ = ~f{i^f^f^f^f^f}
	slascl2_ = ~f{i^i^i^f^f^i}
	slascl_ = ~f{i^c^i^i^f^f^i^i^f^i^i}
	slasd0_ = ~f{i^i^i^f^f^f^i^f^i^i^i^f^i}
	slasd1_ = ~f{i^i^i^i^f^f^f^f^i^f^i^i^i^f^i}
	slasd2_ = ~f{i^i^i^i^i^f^f^f^f^f^i^f^i^f^f^i^f^i^i^i^i^i^i^i}
	slasd3_ = ~f{i^i^i^i^i^f^f^i^f^f^i^f^i^f^i^f^i^i^i^f^i}
	slasd4_ = ~f{i^i^i^f^f^f^f^f^f^i}
	slasd5_ = ~f{i^i^f^f^f^f^f^f}
	slasd6_ = ~f{i^i^i^i^i^f^f^f^f^f^i^i^i^i^i^f^i^f^f^f^f^i^f^f^f^i^i}
	slasd7_ = ~f{i^i^i^i^i^i^f^f^f^f^f^f^f^f^f^f^i^i^i^i^i^i^i^f^i^f^f^i}
	slasd8_ = ~f{i^i^i^f^f^f^f^f^f^i^f^f^i}
	slasda_ = ~f{i^i^i^i^i^f^f^f^i^f^i^f^f^f^f^i^i^i^i^f^f^f^f^i^i}
	slasdq_ = ~f{i^c^i^i^i^i^i^f^f^f^i^f^i^f^i^f^i}
	slasdt_ = ~f{i^i^i^i^i^i^i^i}
	slaset_ = ~f{i^c^i^i^f^f^f^i}
	slasq1_ = ~f{i^i^f^f^f^i}
	slasq2_ = ~f{i^i^f^i}
	slasq3_ = ~f{i^i^i^f^i^f^f^f^f^i^i^i^i^i^f^f^f^f^f^f^f}
	slasq4_ = ~f{i^i^i^f^i^i^f^f^f^f^f^f^f^i^f}
	slasq5_ = ~f{i^i^i^f^i^f^f^f^f^f^f^f^i}
	slasq6_ = ~f{i^i^i^f^i^f^f^f^f^f^f}
	slasr_ = ~f{i^c^c^c^i^i^f^f^f^i}
	slasrt_ = ~f{i^c^i^f^i}
	slassq_ = ~f{i^i^f^i^f^f}
	slasv2_ = ~f{i^f^f^f^f^f^f^f^f^f}
	slaswp_ = ~f{i^i^f^i^i^i^i^i}
	slasy2_ = ~f{i^i^i^i^i^i^f^i^f^i^f^i^f^f^i^f^i}
	slasyf_ = ~f{i^c^i^i^i^f^i^i^f^i^i}
	slatbs_ = ~f{i^c^c^c^c^i^i^f^i^f^f^f^i}
	slatdf_ = ~f{i^i^i^f^i^f^f^f^i^i}
	slatps_ = ~f{i^c^c^c^c^i^f^f^f^f^i}
	slatrd_ = ~f{i^c^i^i^f^i^f^f^f^i}
	slatrs_ = ~f{i^c^c^c^c^i^f^i^f^f^f^i}
	slatrz_ = ~f{i^i^i^i^f^i^f^f}
	slatzm_ = ~f{i^c^i^i^f^i^f^f^f^i^f}
	slauu2_ = ~f{i^c^i^f^i^i}
	slauum_ = ~f{i^c^i^f^i^i}
	smaxloc_ = ~f{i^f^i}
	sopgtr_ = ~f{i^c^i^f^f^f^i^f^i}
	sopmtr_ = ~f{i^c^c^c^i^i^f^f^f^i^f^i}
	sorg2l_ = ~f{i^i^i^i^f^i^f^f^i}
	sorg2r_ = ~f{i^i^i^i^f^i^f^f^i}
	sorgbr_ = ~f{i^c^i^i^i^f^i^f^f^i^i}
	sorghr_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgl2_ = ~f{i^i^i^i^f^i^f^f^i}
	sorglq_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgql_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgqr_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgr2_ = ~f{i^i^i^i^f^i^f^f^i}
	sorgrq_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgtr_ = ~f{i^c^i^f^i^f^f^i^i}
	sorm2l_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sorm2r_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sormbr_ = ~f{i^c^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormhr_ = ~f{i^c^c^i^i^i^i^f^i^f^f^i^f^i^i}
	sorml2_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sormlq_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormql_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormqr_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormr2_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sormr3_ = ~f{i^c^c^i^i^i^i^f^i^f^f^i^f^i}
	sormrq_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormrz_ = ~f{i^c^c^i^i^i^i^f^i^f^f^i^f^i^i}
	sormtr_ = ~f{i^c^c^c^i^i^f^i^f^f^i^f^i^i}
	spbcon_ = ~f{i^c^i^i^f^i^f^f^f^i^i}
	spbequ_ = ~f{i^c^i^i^f^i^f^f^f^i}
	spbrfs_ = ~f{i^c^i^i^i^f^i^f^i^f^i^f^i^f^f^f^i^i}
	spbstf_ = ~f{i^c^i^i^f^i^i}
	spbsv_ = ~f{i^c^i^i^i^f^i^f^i^i}
	spbsvx_ = ~f{i^c^c^i^i^i^f^i^f^i^c^f^f^i^f^i^f^f^f^f^i^i}
	spbtf2_ = ~f{i^c^i^i^f^i^i}
	spbtrf_ = ~f{i^c^i^i^f^i^i}
	spbtrs_ = ~f{i^c^i^i^i^f^i^f^i^i}
	spftrf_ = ~f{i^c^c^i^f^i}
	spftri_ = ~f{i^c^c^i^f^i}
	spftrs_ = ~f{i^c^c^i^i^f^f^i^i}
	spocon_ = ~f{i^c^i^f^i^f^f^f^i^i}
	spoequ_ = ~f{i^i^f^i^f^f^f^i}
	spoequb_ = ~f{i^i^f^i^f^f^f^i}
	sporfs_ = ~f{i^c^i^i^f^i^f^i^f^i^f^i^f^f^f^i^i}
	sposv_ = ~f{i^c^i^i^f^i^f^i^i}
	sposvx_ = ~f{i^c^c^i^i^f^i^f^i^c^f^f^i^f^i^f^f^f^f^i^i}
	spotf2_ = ~f{i^c^i^f^i^i}
	spotrf_ = ~f{i^c^i^f^i^i}
	spotri_ = ~f{i^c^i^f^i^i}
	spotrs_ = ~f{i^c^i^i^f^i^f^i^i}
	sppcon_ = ~f{i^c^i^f^f^f^f^i^i}
	sppequ_ = ~f{i^c^i^f^f^f^f^i}
	spprfs_ = ~f{i^c^i^i^f^f^f^i^f^i^f^f^f^i^i}
	sppsv_ = ~f{i^c^i^i^f^f^i^i}
	sppsvx_ = ~f{i^c^c^i^i^f^f^c^f^f^i^f^i^f^f^f^f^i^i}
	spptrf_ = ~f{i^c^i^f^i}
	spptri_ = ~f{i^c^i^f^i}
	spptrs_ = ~f{i^c^i^i^f^f^i^i}
	spstf2_ = ~f{i^c^i^f^i^i^i^f^f^i}
	spstrf_ = ~f{i^c^i^f^i^i^i^f^f^i}
	sptcon_ = ~f{i^i^f^f^f^f^f^i}
	spteqr_ = ~f{i^c^i^f^f^f^i^f^i}
	sptrfs_ = ~f{i^i^i^f^f^f^f^f^i^f^i^f^f^f^i}
	sptsv_ = ~f{i^i^i^f^f^f^i^i}
	sptsvx_ = ~f{i^c^i^i^f^f^f^f^f^i^f^i^f^f^f^f^i}
	spttrf_ = ~f{i^i^f^f^i}
	spttrs_ = ~f{i^i^i^f^f^f^i^i}
	sptts2_ = ~f{i^i^i^f^f^f^i}
	srscl_ = ~f{i^i^f^f^i}
	ssbev_ = ~f{i^c^c^i^i^f^i^f^f^i^f^i}
	ssbevd_ = ~f{i^c^c^i^i^f^i^f^f^i^f^i^i^i^i}
	ssbevx_ = ~f{i^c^c^c^i^i^f^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssbgst_ = ~f{i^c^c^i^i^i^f^i^f^i^f^i^f^i}
	ssbgv_ = ~f{i^c^c^i^i^i^f^i^f^i^f^f^i^f^i}
	ssbgvd_ = ~f{i^c^c^i^i^i^f^i^f^i^f^f^i^f^i^i^i^i}
	ssbgvx_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssbtrd_ = ~f{i^c^c^i^i^f^i^f^f^f^i^f^i}
	ssfrk_ = ~f{i^c^c^c^i^i^f^f^i^f^f}
	sspcon_ = ~f{i^c^i^f^i^f^f^f^i^i}
	sspev_ = ~f{i^c^c^i^f^f^f^i^f^i}
	sspevd_ = ~f{i^c^c^i^f^f^f^i^f^i^i^i^i}
	sspevx_ = ~f{i^c^c^c^i^f^f^f^i^i^f^i^f^f^i^f^i^i^i}
	sspgst_ = ~f{i^i^c^i^f^f^i}
	sspgv_ = ~f{i^i^c^c^i^f^f^f^f^i^f^i}
	sspgvd_ = ~f{i^i^c^c^i^f^f^f^f^i^f^i^i^i^i}
	sspgvx_ = ~f{i^i^c^c^c^i^f^f^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssprfs_ = ~f{i^c^i^i^f^f^i^f^i^f^i^f^f^f^i^i}
	sspsv_ = ~f{i^c^i^i^f^i^f^i^i}
	sspsvx_ = ~f{i^c^c^i^i^f^f^i^f^i^f^i^f^f^f^f^i^i}
	ssptrd_ = ~f{i^c^i^f^f^f^f^i}
	ssptrf_ = ~f{i^c^i^f^i^i}
	ssptri_ = ~f{i^c^i^f^i^f^i}
	ssptrs_ = ~f{i^c^i^i^f^i^f^i^i}
	sstebz_ = ~f{i^c^c^i^f^f^i^i^f^f^f^i^i^f^i^i^f^i^i}
	sstedc_ = ~f{i^c^i^f^f^f^i^f^i^i^i^i}
	sstegr_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^f^i^i^f^i^i^i^i}
	sstein_ = ~f{i^i^f^f^i^f^i^i^f^i^f^i^i^i}
	sstemr_ = ~f{i^c^c^i^f^f^f^f^i^i^i^f^f^i^i^i^i^f^i^i^i^i}
	ssteqr_ = ~f{i^c^i^f^f^f^i^f^i}
	ssterf_ = ~f{i^i^f^f^i}
	sstev_ = ~f{i^c^i^f^f^f^i^f^i}
	sstevd_ = ~f{i^c^i^f^f^f^i^f^i^i^i^i}
	sstevr_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^f^i^i^f^i^i^i^i}
	sstevx_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssycon_ = ~f{i^c^i^f^i^i^f^f^f^i^i}
	ssyequb_ = ~f{i^c^i^f^i^f^f^f^f^i}
	ssyev_ = ~f{i^c^c^i^f^i^f^f^i^i}
	ssyevd_ = ~f{i^c^c^i^f^i^f^f^i^i^i^i}
	ssyevr_ = ~f{i^c^c^c^i^f^i^f^f^i^i^f^i^f^f^i^i^f^i^i^i^i}
	ssyevx_ = ~f{i^c^c^c^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i^i}
	ssygs2_ = ~f{i^i^c^i^f^i^f^i^i}
	ssygst_ = ~f{i^i^c^i^f^i^f^i^i}
	ssygv_ = ~f{i^i^c^c^i^f^i^f^i^f^f^i^i}
	ssygvd_ = ~f{i^i^c^c^i^f^i^f^i^f^f^i^i^i^i}
	ssygvx_ = ~f{i^i^c^c^c^i^f^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i^i}
	ssyrfs_ = ~f{i^c^i^i^f^i^f^i^i^f^i^f^i^f^f^f^i^i}
	ssysv_ = ~f{i^c^i^i^f^i^i^f^i^f^i^i}
	ssysvx_ = ~f{i^c^c^i^i^f^i^f^i^i^f^i^f^i^f^f^f^f^i^i^i}
	ssytd2_ = ~f{i^c^i^f^i^f^f^f^i}
	ssytf2_ = ~f{i^c^i^f^i^i^i}
	ssytrd_ = ~f{i^c^i^f^i^f^f^f^f^i^i}
	ssytrf_ = ~f{i^c^i^f^i^i^f^i^i}
	ssytri_ = ~f{i^c^i^f^i^i^f^i}
	ssytrs_ = ~f{i^c^i^i^f^i^i^f^i^i}
	stbcon_ = ~f{i^c^c^c^i^i^f^i^f^f^i^i}
	stbrfs_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^i^f^f^f^i^i}
	stbtrs_ = ~f{i^c^c^c^i^i^i^f^i^f^i^i}
	stfsm_ = ~f{i^c^c^c^c^c^i^i^f^f^f^i}
	stftri_ = ~f{i^c^c^c^i^f^i}
	stfttp_ = ~f{i^c^c^i^f^f^i}
	stfttr_ = ~f{i^c^c^i^f^f^i^i}
	stgevc_ = ~f{i^c^c^i^i^f^i^f^i^f^i^f^i^i^i^f^i}
	stgex2_ = ~f{i^i^i^i^f^i^f^i^f^i^f^i^i^i^i^f^i^i}
	stgexc_ = ~f{i^i^i^i^f^i^f^i^f^i^f^i^i^i^f^i^i}
	stgsen_ = ~f{i^i^i^i^i^i^f^i^f^i^f^f^f^f^i^f^i^i^f^f^f^f^i^i^i^i}
	stgsja_ = ~f{i^c^c^c^i^i^i^i^i^f^i^f^i^f^f^f^f^f^i^f^i^f^i^f^i^i}
	stgsna_ = ~f{i^c^c^i^i^f^i^f^i^f^i^f^i^f^f^i^i^f^i^i^i}
	stgsy2_ = ~f{i^c^i^i^i^f^i^f^i^f^i^f^i^f^i^f^i^f^f^f^i^i^i}
	stgsyl_ = ~f{i^c^i^i^i^f^i^f^i^f^i^f^i^f^i^f^i^f^f^f^i^i^i}
	stpcon_ = ~f{i^c^c^c^i^f^f^f^i^i}
	stprfs_ = ~f{i^c^c^c^i^i^f^f^i^f^i^f^f^f^i^i}
	stptri_ = ~f{i^c^c^i^f^i}
	stptrs_ = ~f{i^c^c^c^i^i^f^f^i^i}
	stpttf_ = ~f{i^c^c^i^f^f^i}
	stpttr_ = ~f{i^c^i^f^f^i^i}
	strcon_ = ~f{i^c^c^c^i^f^i^f^f^i^i}
	strevc_ = ~f{i^c^c^i^i^f^i^f^i^f^i^i^i^f^i}
	strexc_ = ~f{i^c^i^f^i^f^i^i^i^f^i}
	strrfs_ = ~f{i^c^c^c^i^i^f^i^f^i^f^i^f^f^f^i^i}
	strsen_ = ~f{i^c^c^i^i^f^i^f^i^f^f^i^f^f^f^i^i^i^i}
	strsna_ = ~f{i^c^c^i^i^f^i^f^i^f^i^f^f^i^i^f^i^i^i}
	strsyl_ = ~f{i^c^c^i^i^i^f^i^f^i^f^i^f^i}
	strti2_ = ~f{i^c^c^i^f^i^i}
	strtri_ = ~f{i^c^c^i^f^i^i}
	strtrs_ = ~f{i^c^c^c^i^i^f^i^f^i^i}
	strttf_ = ~f{i^c^c^i^f^i^f^i}
	strttp_ = ~f{i^c^i^f^i^f^i}
	stzrqf_ = ~f{i^i^i^f^i^f^i}
	stzrzf_ = ~f{i^i^i^f^i^f^f^i^i}
	zbdsqr_ = ~f{i^c^i^i^i^i^d^d^v^i^v^i^v^i^d^i}
	zcgesv_ = ~f{i^i^i^v^i^i^v^i^v^i^v^v^d^i^i}
	zcposv_ = ~f{i^c^i^i^v^i^v^i^v^i^v^v^d^i^i}
	zdrscl_ = ~f{i^i^d^v^i}
	zgbbrd_ = ~f{i^c^i^i^i^i^i^v^i^d^d^v^i^v^i^v^i^v^d^i}
	zgbcon_ = ~f{i^c^i^i^i^v^i^i^d^d^v^d^i}
	zgbequ_ = ~f{i^i^i^i^i^v^i^d^d^d^d^d^i}
	zgbequb_ = ~f{i^i^i^i^i^v^i^d^d^d^d^d^i}
	zgbrfs_ = ~f{i^c^i^i^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zgbsv_ = ~f{i^i^i^i^i^v^i^i^v^i^i}
	zgbsvx_ = ~f{i^c^c^i^i^i^i^v^i^v^i^i^c^d^d^v^i^v^i^d^d^d^v^d^i}
	zgbtf2_ = ~f{i^i^i^i^i^v^i^i^i}
	zgbtrf_ = ~f{i^i^i^i^i^v^i^i^i}
	zgbtrs_ = ~f{i^c^i^i^i^i^v^i^i^v^i^i}
	zgebak_ = ~f{i^c^c^i^i^i^d^i^v^i^i}
	zgebal_ = ~f{i^c^i^v^i^i^i^d^i}
	zgebd2_ = ~f{i^i^i^v^i^d^d^v^v^v^i}
	zgebrd_ = ~f{i^i^i^v^i^d^d^v^v^v^i^i}
	zgecon_ = ~f{i^c^i^v^i^d^d^v^d^i}
	zgeequ_ = ~f{i^i^i^v^i^d^d^d^d^d^i}
	zgeequb_ = ~f{i^i^i^v^i^d^d^d^d^d^i}
	zgees_ = ~f{i^c^c^?^i^v^i^i^v^v^i^v^i^d^i^i}
	zgeesx_ = ~f{i^c^c^?^c^i^v^i^i^v^v^i^d^d^v^i^d^i^i}
	zgeev_ = ~f{i^c^c^i^v^i^v^v^i^v^i^v^i^d^i}
	zgeevx_ = ~f{i^c^c^c^c^i^v^i^v^v^i^v^i^i^i^d^d^d^d^v^i^d^i}
	zgegs_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zgegv_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zgehd2_ = ~f{i^i^i^i^v^i^v^v^i}
	zgehrd_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zgelq2_ = ~f{i^i^i^v^i^v^v^i}
	zgelqf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgels_ = ~f{i^c^i^i^i^v^i^v^i^v^i^i}
	zgelsd_ = ~f{i^i^i^i^v^i^v^i^d^d^i^v^i^d^i^i}
	zgelss_ = ~f{i^i^i^i^v^i^v^i^d^d^i^v^i^d^i}
	zgelsx_ = ~f{i^i^i^i^v^i^v^i^i^d^i^v^d^i}
	zgelsy_ = ~f{i^i^i^i^v^i^v^i^i^d^i^v^i^d^i}
	zgeql2_ = ~f{i^i^i^v^i^v^v^i}
	zgeqlf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgeqp3_ = ~f{i^i^i^v^i^i^v^v^i^d^i}
	zgeqpf_ = ~f{i^i^i^v^i^i^v^v^d^i}
	zgeqr2_ = ~f{i^i^i^v^i^v^v^i}
	zgeqrf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgerfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zgerq2_ = ~f{i^i^i^v^i^v^v^i}
	zgerqf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgesc2_ = ~f{i^i^v^i^v^i^i^d}
	zgesdd_ = ~f{i^c^i^i^v^i^d^v^i^v^i^v^i^d^i^i}
	zgesv_ = ~f{i^i^i^v^i^i^v^i^i}
	zgesvd_ = ~f{i^c^c^i^i^v^i^d^v^i^v^i^v^i^d^i}
	zgesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^c^d^d^v^i^v^i^d^d^d^v^d^i}
	zgetc2_ = ~f{i^i^v^i^i^i^i}
	zgetf2_ = ~f{i^i^i^v^i^i^i}
	zgetrf_ = ~f{i^i^i^v^i^i^i}
	zgetri_ = ~f{i^i^v^i^i^v^i^i}
	zgetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	zggbak_ = ~f{i^c^c^i^i^i^d^d^i^v^i^i}
	zggbal_ = ~f{i^c^i^v^i^v^i^i^i^d^d^d^i}
	zgges_ = ~f{i^c^c^c^?^i^v^i^v^i^i^v^v^v^i^v^i^v^i^d^i^i}
	zggesx_ = ~f{i^c^c^c^?^c^i^v^i^v^i^i^v^v^v^i^v^i^d^d^v^i^d^i^i^i^i}
	zggev_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zggevx_ = ~f{i^c^c^c^c^i^v^i^v^i^v^v^v^i^v^i^i^i^d^d^d^d^d^d^v^i^d^i^i^i}
	zggglm_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	zgghrd_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^i^i}
	zgglse_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	zggqrf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	zggrqf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	zggsvd_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^d^d^v^i^v^i^v^i^v^d^i^i}
	zggsvp_ = ~f{i^c^c^c^i^i^i^v^i^v^i^d^d^i^i^v^i^v^i^v^i^i^d^v^v^i}
	zgtcon_ = ~f{i^c^i^v^v^v^v^i^d^d^v^i}
	zgtrfs_ = ~f{i^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^d^d^v^d^i}
	zgtsv_ = ~f{i^i^i^v^v^v^v^i^i}
	zgtsvx_ = ~f{i^c^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^d^d^d^v^d^i}
	zgttrf_ = ~f{i^i^v^v^v^v^i^i}
	zgttrs_ = ~f{i^c^i^i^v^v^v^v^i^v^i^i}
	zgtts2_ = ~f{i^i^i^i^v^v^v^v^i^v^i}
	zhbev_ = ~f{i^c^c^i^i^v^i^d^v^i^v^d^i}
	zhbevd_ = ~f{i^c^c^i^i^v^i^d^v^i^v^i^d^i^i^i^i}
	zhbevx_ = ~f{i^c^c^c^i^i^v^i^v^i^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhbgst_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^d^i}
	zhbgv_ = ~f{i^c^c^i^i^i^v^i^v^i^d^v^i^v^d^i}
	zhbgvd_ = ~f{i^c^c^i^i^i^v^i^v^i^d^v^i^v^i^d^i^i^i^i}
	zhbgvx_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhbtrd_ = ~f{i^c^c^i^i^v^i^d^d^v^i^v^i}
	zhecon_ = ~f{i^c^i^v^i^i^d^d^v^i}
	zheequb_ = ~f{i^c^i^v^i^d^d^d^v^i}
	zheev_ = ~f{i^c^c^i^v^i^d^v^i^d^i}
	zheevd_ = ~f{i^c^c^i^v^i^d^v^i^d^i^i^i^i}
	zheevr_ = ~f{i^c^c^c^i^v^i^d^d^i^i^d^i^d^v^i^i^v^i^d^i^i^i^i}
	zheevx_ = ~f{i^c^c^c^i^v^i^d^d^i^i^d^i^d^v^i^v^i^d^i^i^i}
	zhegs2_ = ~f{i^i^c^i^v^i^v^i^i}
	zhegst_ = ~f{i^i^c^i^v^i^v^i^i}
	zhegv_ = ~f{i^i^c^c^i^v^i^v^i^d^v^i^d^i}
	zhegvd_ = ~f{i^i^c^c^i^v^i^v^i^d^v^i^d^i^i^i^i}
	zhegvx_ = ~f{i^i^c^c^c^i^v^i^v^i^d^d^i^i^d^i^d^v^i^v^i^d^i^i^i}
	zherfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zhesv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	zhesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^d^d^d^v^i^d^i}
	zhetd2_ = ~f{i^c^i^v^i^d^d^v^i}
	zhetf2_ = ~f{i^c^i^v^i^i^i}
	zhetrd_ = ~f{i^c^i^v^i^d^d^v^v^i^i}
	zhetrf_ = ~f{i^c^i^v^i^i^v^i^i}
	zhetri_ = ~f{i^c^i^v^i^i^v^i}
	zhetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	zhfrk_ = ~f{i^c^c^c^i^i^d^v^i^d^v}
	zhgeqz_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zhpcon_ = ~f{i^c^i^v^i^d^d^v^i}
	zhpev_ = ~f{i^c^c^i^v^d^v^i^v^d^i}
	zhpevd_ = ~f{i^c^c^i^v^d^v^i^v^i^d^i^i^i^i}
	zhpevx_ = ~f{i^c^c^c^i^v^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhpgst_ = ~f{i^i^c^i^v^v^i}
	zhpgv_ = ~f{i^i^c^c^i^v^v^d^v^i^v^d^i}
	zhpgvd_ = ~f{i^i^c^c^i^v^v^d^v^i^v^i^d^i^i^i^i}
	zhpgvx_ = ~f{i^i^c^c^c^i^v^v^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^d^d^v^d^i}
	zhpsv_ = ~f{i^c^i^i^v^i^v^i^i}
	zhpsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^d^d^d^v^d^i}
	zhptrd_ = ~f{i^c^i^v^d^d^v^i}
	zhptrf_ = ~f{i^c^i^v^i^i}
	zhptri_ = ~f{i^c^i^v^i^v^i}
	zhptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	zhsein_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i^i^v^d^i^i^i}
	zhseqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zlabrd_ = ~f{i^i^i^i^v^i^d^d^v^v^v^i^v^i}
	zlacgv_ = ~f{i^i^v^i}
	zlacn2_ = ~f{i^i^v^v^d^i^i}
	zlacon_ = ~f{i^i^v^v^d^i}
	zlacp2_ = ~f{i^c^i^i^d^i^v^i}
	zlacpy_ = ~f{i^c^i^i^v^i^v^i}
	zlacrm_ = ~f{i^i^i^v^i^d^i^v^i^d}
	zlacrt_ = ~f{i^i^v^i^v^i^v^v}
	zladiv_ = ~f{v^v^v^v}
	zlaed0_ = ~f{i^i^i^d^d^v^i^v^i^d^i^i}
	zlaed7_ = ~f{i^i^i^i^i^i^i^d^v^i^d^i^d^i^i^i^i^i^d^v^d^i^i}
	zlaed8_ = ~f{i^i^i^i^v^i^d^d^i^d^d^v^i^d^i^i^i^i^i^i^d^i}
	zlaein_ = ~f{i^i^i^i^v^i^v^v^v^i^d^d^d^i}
	zlaesy_ = ~f{i^v^v^v^v^v^v^v^v}
	zlaev2_ = ~f{i^v^v^v^d^d^d^v}
	zlag2c_ = ~f{i^i^i^v^i^v^i^i}
	zlags2_ = ~f{i^i^d^v^d^d^v^d^d^v^d^v^d^v}
	zlagtm_ = ~f{i^c^i^i^d^v^v^v^v^i^d^v^i}
	zlahef_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	zlahqr_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^i}
	zlahr2_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	zlahrd_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	zlaic1_ = ~f{i^i^i^v^d^v^v^d^v^v}
	zlals0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^i^i^i^d^i^d^d^d^d^i^d^d^d^i}
	zlalsa_ = ~f{i^i^i^i^i^v^i^v^i^d^i^d^i^d^d^d^d^i^i^i^i^d^d^d^d^i^i}
	zlalsd_ = ~f{i^c^i^i^i^d^d^v^i^d^i^v^d^i^i}
	zlangb_ = ~f{d^c^i^i^i^v^i^d}
	zlange_ = ~f{d^c^i^i^v^i^d}
	zlangt_ = ~f{d^c^i^v^v^v}
	zlanhb_ = ~f{d^c^c^i^i^v^i^d}
	zlanhe_ = ~f{d^c^c^i^v^i^d}
	zlanhf_ = ~f{d^c^c^c^i^v^d}
	zlanhp_ = ~f{d^c^c^i^v^d}
	zlanhs_ = ~f{d^c^i^v^i^d}
	zlanht_ = ~f{d^c^i^d^v}
	zlansb_ = ~f{d^c^c^i^i^v^i^d}
	zlansp_ = ~f{d^c^c^i^v^d}
	zlansy_ = ~f{d^c^c^i^v^i^d}
	zlantb_ = ~f{d^c^c^c^i^i^v^i^d}
	zlantp_ = ~f{d^c^c^c^i^v^d}
	zlantr_ = ~f{d^c^c^c^i^i^v^i^d}
	zlapll_ = ~f{i^i^v^i^v^i^d}
	zlapmt_ = ~f{i^i^i^i^v^i^i}
	zlaqgb_ = ~f{i^i^i^i^i^v^i^d^d^d^d^d^c}
	zlaqge_ = ~f{i^i^i^v^i^d^d^d^d^d^c}
	zlaqhb_ = ~f{i^c^i^i^v^i^d^d^d^c}
	zlaqhe_ = ~f{i^c^i^v^i^d^d^d^c}
	zlaqhp_ = ~f{i^c^i^v^d^d^d^c}
	zlaqp2_ = ~f{i^i^i^i^v^i^i^v^d^d^v}
	zlaqps_ = ~f{i^i^i^i^i^i^v^i^i^v^d^d^v^v^i}
	zlaqr0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	zlaqr1_ = ~f{i^i^v^i^v^v^v}
	zlaqr2_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	zlaqr3_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	zlaqr4_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	zlaqr5_ = ~f{i^i^i^i^i^i^i^i^v^v^i^i^i^v^i^v^i^v^i^i^v^i^i^v^i}
	zlaqsb_ = ~f{i^c^i^i^v^i^d^d^d^c}
	zlaqsp_ = ~f{i^c^i^v^d^d^d^c}
	zlaqsy_ = ~f{i^c^i^v^i^d^d^d^c}
	zlar1v_ = ~f{i^i^i^i^d^d^d^d^d^d^d^v^i^i^d^d^i^i^d^d^d^d}
	zlar2v_ = ~f{i^i^v^v^v^i^d^v^i}
	zlarcm_ = ~f{i^i^i^d^i^v^i^v^i^d}
	zlarf_ = ~f{i^c^i^i^v^i^v^v^i^v}
	zlarfb_ = ~f{i^c^c^c^c^i^i^i^v^i^v^i^v^i^v^i}
	zlarfg_ = ~f{i^i^v^v^i^v}
	zlarfp_ = ~f{i^i^v^v^i^v}
	zlarft_ = ~f{i^c^c^i^i^v^i^v^v^i}
	zlarfx_ = ~f{i^c^i^i^v^v^v^i^v}
	zlargv_ = ~f{i^i^v^i^v^i^d^i}
	zlarnv_ = ~f{i^i^i^i^v}
	zlarrv_ = ~f{i^i^d^d^d^d^d^i^i^i^i^d^d^d^d^d^d^i^i^d^v^i^i^d^i^i}
	zlarscl2_ = ~f{i^i^i^d^v^i}
	zlartg_ = ~f{i^v^v^d^v^v}
	zlartv_ = ~f{i^i^v^i^v^i^d^v^i}
	zlarz_ = ~f{i^c^i^i^i^v^i^v^v^i^v}
	zlarzb_ = ~f{i^c^c^c^c^i^i^i^i^v^i^v^i^v^i^v^i}
	zlarzt_ = ~f{i^c^c^i^i^v^i^v^v^i}
	zlascl2_ = ~f{i^i^i^d^v^i}
	zlascl_ = ~f{i^c^i^i^d^d^i^i^v^i^i}
	zlaset_ = ~f{i^c^i^i^v^v^v^i}
	zlasr_ = ~f{i^c^c^c^i^i^d^d^v^i}
	zlassq_ = ~f{i^i^v^i^d^d}
	zlaswp_ = ~f{i^i^v^i^i^i^i^i}
	zlasyf_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	zlat2c_ = ~f{i^c^i^v^i^v^i^i}
	zlatbs_ = ~f{i^c^c^c^c^i^i^v^i^v^d^d^i}
	zlatdf_ = ~f{i^i^i^v^i^v^d^d^i^i}
	zlatps_ = ~f{i^c^c^c^c^i^v^v^d^d^i}
	zlatrd_ = ~f{i^c^i^i^v^i^d^v^v^i}
	zlatrs_ = ~f{i^c^c^c^c^i^v^i^v^d^d^i}
	zlatrz_ = ~f{i^i^i^i^v^i^v^v}
	zlatzm_ = ~f{i^c^i^i^v^i^v^v^v^i^v}
	zlauu2_ = ~f{i^c^i^v^i^i}
	zlauum_ = ~f{i^c^i^v^i^i}
	zpbcon_ = ~f{i^c^i^i^v^i^d^d^v^d^i}
	zpbequ_ = ~f{i^c^i^i^v^i^d^d^d^i}
	zpbrfs_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^d^d^v^d^i}
	zpbstf_ = ~f{i^c^i^i^v^i^i}
	zpbsv_ = ~f{i^c^i^i^i^v^i^v^i^i}
	zpbsvx_ = ~f{i^c^c^i^i^i^v^i^v^i^c^d^v^i^v^i^d^d^d^v^d^i}
	zpbtf2_ = ~f{i^c^i^i^v^i^i}
	zpbtrf_ = ~f{i^c^i^i^v^i^i}
	zpbtrs_ = ~f{i^c^i^i^i^v^i^v^i^i}
	zpftrf_ = ~f{i^c^c^i^v^i}
	zpftri_ = ~f{i^c^c^i^v^i}
	zpftrs_ = ~f{i^c^c^i^i^v^v^i^i}
	zpocon_ = ~f{i^c^i^v^i^d^d^v^d^i}
	zpoequ_ = ~f{i^i^v^i^d^d^d^i}
	zpoequb_ = ~f{i^i^v^i^d^d^d^i}
	zporfs_ = ~f{i^c^i^i^v^i^v^i^v^i^v^i^d^d^v^d^i}
	zposv_ = ~f{i^c^i^i^v^i^v^i^i}
	zposvx_ = ~f{i^c^c^i^i^v^i^v^i^c^d^v^i^v^i^d^d^d^v^d^i}
	zpotf2_ = ~f{i^c^i^v^i^i}
	zpotrf_ = ~f{i^c^i^v^i^i}
	zpotri_ = ~f{i^c^i^v^i^i}
	zpotrs_ = ~f{i^c^i^i^v^i^v^i^i}
	zppcon_ = ~f{i^c^i^v^d^d^v^d^i}
	zppequ_ = ~f{i^c^i^v^d^d^d^i}
	zpprfs_ = ~f{i^c^i^i^v^v^v^i^v^i^d^d^v^d^i}
	zppsv_ = ~f{i^c^i^i^v^v^i^i}
	zppsvx_ = ~f{i^c^c^i^i^v^v^c^d^v^i^v^i^d^d^d^v^d^i}
	zpptrf_ = ~f{i^c^i^v^i}
	zpptri_ = ~f{i^c^i^v^i}
	zpptrs_ = ~f{i^c^i^i^v^v^i^i}
	zpstf2_ = ~f{i^c^i^v^i^i^i^d^d^i}
	zpstrf_ = ~f{i^c^i^v^i^i^i^d^d^i}
	zptcon_ = ~f{i^i^d^v^d^d^d^i}
	zpteqr_ = ~f{i^c^i^d^d^v^i^d^i}
	zptrfs_ = ~f{i^c^i^i^d^v^d^v^v^i^v^i^d^d^v^d^i}
	zptsv_ = ~f{i^i^i^d^v^v^i^i}
	zptsvx_ = ~f{i^c^i^i^d^v^d^v^v^i^v^i^d^d^d^v^d^i}
	zpttrf_ = ~f{i^i^d^v^i}
	zpttrs_ = ~f{i^c^i^i^d^v^v^i^i}
	zptts2_ = ~f{i^i^i^i^d^v^v^i}
	zrot_ = ~f{i^i^v^i^v^i^d^v}
	zspcon_ = ~f{i^c^i^v^i^d^d^v^i}
	zspmv_ = ~f{i^c^i^v^v^v^i^v^v^i}
	zspr_ = ~f{i^c^i^v^v^i^v}
	zsprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^d^d^v^d^i}
	zspsv_ = ~f{i^c^i^i^v^i^v^i^i}
	zspsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^d^d^d^v^d^i}
	zsptrf_ = ~f{i^c^i^v^i^i}
	zsptri_ = ~f{i^c^i^v^i^v^i}
	zsptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	zstedc_ = ~f{i^c^i^d^d^v^i^v^i^d^i^i^i^i}
	zstegr_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^v^i^i^d^i^i^i^i}
	zstein_ = ~f{i^i^d^d^i^d^i^i^v^i^d^i^i^i}
	zstemr_ = ~f{i^c^c^i^d^d^d^d^i^i^i^d^v^i^i^i^i^d^i^i^i^i}
	zsteqr_ = ~f{i^c^i^d^d^v^i^d^i}
	zsycon_ = ~f{i^c^i^v^i^i^d^d^v^i}
	zsyequb_ = ~f{i^c^i^v^i^d^d^d^v^i}
	zsymv_ = ~f{i^c^i^v^v^i^v^i^v^v^i}
	zsyr_ = ~f{i^c^i^v^v^i^v^i}
	zsyrfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zsysv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	zsysvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^d^d^d^v^i^d^i}
	zsytf2_ = ~f{i^c^i^v^i^i^i}
	zsytrf_ = ~f{i^c^i^v^i^i^v^i^i}
	zsytri_ = ~f{i^c^i^v^i^i^v^i}
	zsytrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	ztbcon_ = ~f{i^c^c^c^i^i^v^i^d^v^d^i}
	ztbrfs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^d^d^v^d^i}
	ztbtrs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^i}
	ztfsm_ = ~f{i^c^c^c^c^c^i^i^v^v^v^i}
	ztftri_ = ~f{i^c^c^c^i^v^i}
	ztfttp_ = ~f{i^c^c^i^v^v^i}
	ztfttr_ = ~f{i^c^c^i^v^v^i^i}
	ztgevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^i^i^v^d^i}
	ztgex2_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i}
	ztgexc_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i^i}
	ztgsen_ = ~f{i^i^i^i^i^i^v^i^v^i^v^v^v^i^v^i^i^d^d^d^v^i^i^i^i}
	ztgsja_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^d^d^d^d^v^i^v^i^v^i^v^i^i}
	ztgsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^d^d^i^i^v^i^i^i}
	ztgsy2_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^d^d^d^i}
	ztgsyl_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^d^d^v^i^i^i}
	ztpcon_ = ~f{i^c^c^c^i^v^d^v^d^i}
	ztprfs_ = ~f{i^c^c^c^i^i^v^v^i^v^i^d^d^v^d^i}
	ztptri_ = ~f{i^c^c^i^v^i}
	ztptrs_ = ~f{i^c^c^c^i^i^v^v^i^i}
	ztpttf_ = ~f{i^c^c^i^v^v^i}
	ztpttr_ = ~f{i^c^i^v^v^i^i}
	ztrcon_ = ~f{i^c^c^c^i^v^i^d^v^d^i}
	ztrevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^i^i^v^d^i}
	ztrexc_ = ~f{i^c^i^v^i^v^i^i^i^i}
	ztrrfs_ = ~f{i^c^c^c^i^i^v^i^v^i^v^i^d^d^v^d^i}
	ztrsen_ = ~f{i^c^c^i^i^v^i^v^i^v^i^d^d^v^i^i}
	ztrsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^d^d^i^i^v^i^d^i}
	ztrsyl_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^d^i}
	ztrti2_ = ~f{i^c^c^i^v^i^i}
	ztrtri_ = ~f{i^c^c^i^v^i^i}
	ztrtrs_ = ~f{i^c^c^c^i^i^v^i^v^i^i}
	ztrttf_ = ~f{i^c^c^i^v^i^v^i}
	ztrttp_ = ~f{i^c^i^v^i^v^i}
	ztzrqf_ = ~f{i^i^i^v^i^v^i}
	ztzrzf_ = ~f{i^i^i^v^i^v^v^i^i}
	zung2l_ = ~f{i^i^i^i^v^i^v^v^i}
	zung2r_ = ~f{i^i^i^i^v^i^v^v^i}
	zungbr_ = ~f{i^c^i^i^i^v^i^v^v^i^i}
	zunghr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungl2_ = ~f{i^i^i^i^v^i^v^v^i}
	zunglq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungql_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungqr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungr2_ = ~f{i^i^i^i^v^i^v^v^i}
	zungrq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungtr_ = ~f{i^c^i^v^i^v^v^i^i}
	zunm2l_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunm2r_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunmbr_ = ~f{i^c^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmhr_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	zunml2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunmlq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmql_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmr2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunmr3_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i}
	zunmrq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmrz_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	zunmtr_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i}
	zupgtr_ = ~f{i^c^i^v^v^v^i^v^i}
	zupmtr_ = ~f{i^c^c^c^i^i^v^v^v^i^v^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/Sparse/BLAS.h
	sparse_commit = ~f{i^v}
	sparse_elementwise_norm_double = ~f{d^vI}
	sparse_elementwise_norm_float = ~f{f^vI}
	sparse_extract_block_double = ~f{i^vqqQQ^d}
	sparse_extract_block_float = ~f{i^vqqQQ^f}
	sparse_extract_sparse_column_double = ~f{i^vqq^qQ^d^q}
	sparse_extract_sparse_column_float = ~f{i^vqq^qQ^f^q}
	sparse_extract_sparse_row_double = ~f{i^vqq^qQ^d^q}
	sparse_extract_sparse_row_float = ~f{i^vqq^qQ^f^q}
	sparse_get_block_dimension_for_col = ~f{l^vq}
	sparse_get_block_dimension_for_row = ~f{l^vq}
	sparse_get_matrix_nonzero_count = ~f{l^v}
	sparse_get_matrix_nonzero_count_for_column = ~f{l^vq}
	sparse_get_matrix_nonzero_count_for_row = ~f{l^vq}
	sparse_get_matrix_number_of_columns = ~f{Q^v}
	sparse_get_matrix_number_of_rows = ~f{Q^v}
	sparse_get_matrix_property = ~f{l^vI}
	sparse_get_vector_nonzero_count_double = ~f{lQ^dq}
	sparse_get_vector_nonzero_count_float = ~f{lQ^fq}
	sparse_inner_product_dense_double = ~f{dQ^d^q^dq}
	sparse_inner_product_dense_float = ~f{fQ^f^q^fq}
	sparse_inner_product_sparse_double = ~f{dQQ^d^q^d^q}
	sparse_inner_product_sparse_float = ~f{fQQ^f^q^f^q}
	sparse_insert_block_double = ~f{i^v^dQQqq}
	sparse_insert_block_float = ~f{i^v^fQQqq}
	sparse_insert_col_double = ~f{i^vqQ^d^q}
	sparse_insert_col_float = ~f{i^vqQ^f^q}
	sparse_insert_entries_double = ~f{i^vQ^d^q^q}
	sparse_insert_entries_float = ~f{i^vQ^f^q^q}
	sparse_insert_entry_double = ~f{i^vdqq}
	sparse_insert_entry_float = ~f{i^vfqq}
	sparse_insert_row_double = ~f{i^vqQ^d^q}
	sparse_insert_row_float = ~f{i^vqQ^f^q}
	sparse_matrix_block_create_double = ~f{^vQQQQ}
	sparse_matrix_block_create_float = ~f{^vQQQQ}
	sparse_matrix_create_double = ~f{^vQQ}
	sparse_matrix_create_float = ~f{^vQQ}
	sparse_matrix_destroy = ~f{i^v}
	sparse_matrix_product_dense_double = ~f{iIIQd^v^dQ^dQ}
	sparse_matrix_product_dense_float = ~f{iIIQf^v^fQ^fQ}
	sparse_matrix_product_sparse_double = ~f{iIId^v^v^dQ}
	sparse_matrix_product_sparse_float = ~f{iIIf^v^v^fQ}
	sparse_matrix_trace_double = ~f{d^vq}
	sparse_matrix_trace_float = ~f{f^vq}
	sparse_matrix_triangular_solve_dense_double = ~f{iIIQd^v^dQ}
	sparse_matrix_triangular_solve_dense_float = ~f{iIIQf^v^fQ}
	sparse_matrix_variable_block_create_double = ~f{^vQQ^Q^Q}
	sparse_matrix_variable_block_create_float = ~f{^vQQ^Q^Q}
	sparse_matrix_vector_product_dense_double = ~f{iId^v^dq^dq}
	sparse_matrix_vector_product_dense_float = ~f{iIf^v^fq^fq}
	sparse_operator_norm_double = ~f{d^vI}
	sparse_operator_norm_float = ~f{f^vI}
	sparse_outer_product_dense_double = ~f{iQQQd^dq^d^q^^v}
	sparse_outer_product_dense_float = ~f{iQQQf^fq^f^q^^v}
	sparse_pack_vector_double = ~f{lQQ^dq^d^q}
	sparse_pack_vector_float = ~f{lQQ^fq^f^q}
	sparse_permute_cols_double = ~f{i^v^q}
	sparse_permute_cols_float = ~f{i^v^q}
	sparse_permute_rows_double = ~f{i^v^q}
	sparse_permute_rows_float = ~f{i^v^q}
	sparse_set_matrix_property = ~f{i^vI}
	sparse_unpack_vector_double = ~f{vQQB^d^q^dq}
	sparse_unpack_vector_float = ~f{vQQB^f^q^fq}
	sparse_vector_add_with_scale_dense_double = ~f{vQd^d^q^dq}
	sparse_vector_add_with_scale_dense_float = ~f{vQf^f^q^fq}
	sparse_vector_norm_double = ~f{dQ^d^qI}
	sparse_vector_norm_float = ~f{fQ^f^qI}
	sparse_vector_triangular_solve_dense_double = ~f{iId^v^dq}
	sparse_vector_triangular_solve_dense_float = ~f{iIf^v^fq}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecIdentity.h
	SecIdentityCopyCertificate = ~f{i^v^^v}
	SecIdentityCopyPrivateKey = ~f{i^v^^v}
	SecIdentityGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/xattr.h
	fgetxattr = ~f{li^c^vLIi}
	flistxattr = ~f{li^cLi}
	fremovexattr = ~f{ii^ci}
	fsetxattr = ~f{ii^c^vLIi}
	getxattr = ~f{l^c^c^vLIi}
	listxattr = ~f{l^c^cLi}
	removexattr = ~f{i^c^ci}
	setxattr = ~f{i^c^c^vLIi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/endpoint.h
	nw_endpoint_copy_address_string = ~f{^c@}
	nw_endpoint_copy_port_string = ~f{^c@}
	nw_endpoint_create_address = ~f{@^v}
	nw_endpoint_create_bonjour_service = ~f{@^c^c^c}
	nw_endpoint_create_host = ~f{@^c^c}
	nw_endpoint_create_url = ~f{@^c}
	nw_endpoint_get_address = ~f{^v@}
	nw_endpoint_get_bonjour_service_domain = ~f{^c@}
	nw_endpoint_get_bonjour_service_name = ~f{^c@}
	nw_endpoint_get_bonjour_service_type = ~f{^c@}
	nw_endpoint_get_hostname = ~f{^c@}
	nw_endpoint_get_port = ~f{S@}
	nw_endpoint_get_type = ~f{I@}
	nw_endpoint_get_url = ~f{^c@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/semaphore.h
	dispatch_semaphore_create = ~f{@l}
	dispatch_semaphore_signal = ~f{l@}
	dispatch_semaphore_wait = ~f{l@Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKVector4.h
	GLKVector4Add = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4AddScalar = ~f{{=ffff}{=ffff}f}
	GLKVector4AllEqualToScalar = ~f{B{=ffff}f}
	GLKVector4AllEqualToVector4 = ~f{B{=ffff}{=ffff}}
	GLKVector4AllGreaterThanOrEqualToScalar = ~f{B{=ffff}f}
	GLKVector4AllGreaterThanOrEqualToVector4 = ~f{B{=ffff}{=ffff}}
	GLKVector4AllGreaterThanScalar = ~f{B{=ffff}f}
	GLKVector4AllGreaterThanVector4 = ~f{B{=ffff}{=ffff}}
	GLKVector4CrossProduct = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4Distance = ~f{f{=ffff}{=ffff}}
	GLKVector4Divide = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4DivideScalar = ~f{{=ffff}{=ffff}f}
	GLKVector4DotProduct = ~f{f{=ffff}{=ffff}}
	GLKVector4Length = ~f{f{=ffff}}
	GLKVector4Lerp = ~f{{=ffff}{=ffff}{=ffff}f}
	GLKVector4Make = ~f{{=ffff}ffff}
	GLKVector4MakeWithArray = ~f{{=ffff}^f}
	GLKVector4MakeWithVector3 = ~f{{=ffff}{=fff}f}
	GLKVector4Maximum = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4Minimum = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4Multiply = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4MultiplyScalar = ~f{{=ffff}{=ffff}f}
	GLKVector4Negate = ~f{{=ffff}{=ffff}}
	GLKVector4Normalize = ~f{{=ffff}{=ffff}}
	GLKVector4Project = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4Subtract = ~f{{=ffff}{=ffff}{=ffff}}
	GLKVector4SubtractScalar = ~f{{=ffff}{=ffff}f}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread/sched.h
	sched_get_priority_max = ~f{ii}
	sched_get_priority_min = ~f{ii}
	sched_yield = ~f{i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mig.h
	mig_allocate = ~f{v^LL}
	mig_dealloc_reply_port = ~f{vI}
	mig_deallocate = ~f{vLL}
	mig_get_reply_port = ~f{I}
	mig_put_reply_port = ~f{vI}
	mig_strncpy = ~f{i^c^ci}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h
	CVPixelBufferCreate = ~f{i^vLLI^v^^v}
	CVPixelBufferCreateResolvedAttributesDictionary = ~f{i^v^v^^v}
	CVPixelBufferCreateWithBytes = ~f{i^vLLI^vL^~f{v^v^v}^v^v^^v}
	CVPixelBufferCreateWithPlanarBytes = ~f{i^vLLI^vLL^^v^L^L^L^~f{v^v^vLL^^v}^v^v^^v}
	CVPixelBufferFillExtendedPixels = ~f{i^v}
	CVPixelBufferGetBaseAddress = ~f{^v^v}
	CVPixelBufferGetBaseAddressOfPlane = ~f{^v^vL}
	CVPixelBufferGetBytesPerRow = ~f{L^v}
	CVPixelBufferGetBytesPerRowOfPlane = ~f{L^vL}
	CVPixelBufferGetDataSize = ~f{L^v}
	CVPixelBufferGetExtendedPixels = ~f{v^v^L^L^L^L}
	CVPixelBufferGetHeight = ~f{L^v}
	CVPixelBufferGetHeightOfPlane = ~f{L^vL}
	CVPixelBufferGetPixelFormatType = ~f{I^v}
	CVPixelBufferGetPlaneCount = ~f{L^v}
	CVPixelBufferGetTypeID = ~f{L}
	CVPixelBufferGetWidth = ~f{L^v}
	CVPixelBufferGetWidthOfPlane = ~f{L^vL}
	CVPixelBufferIsPlanar = ~f{C^v}
	CVPixelBufferLockBaseAddress = ~f{i^vQ}
	CVPixelBufferRelease = ~f{v^v}
	CVPixelBufferRetain = ~f{^v^v}
	CVPixelBufferUnlockBaseAddress = ~f{i^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFData.h
	CFDataAppendBytes = ~f{v^v^Cl}
	CFDataCreate = ~f{^v^v^Cl}
	CFDataCreateCopy = ~f{^v^v^v}
	CFDataCreateMutable = ~f{^v^vl}
	CFDataCreateMutableCopy = ~f{^v^vl^v}
	CFDataCreateWithBytesNoCopy = ~f{^v^v^Cl^v}
	CFDataDeleteBytes = ~f{v^v{=ll}}
	CFDataFind = ~f{{=ll}^v^v{=ll}L}
	CFDataGetBytePtr = ~f{^C^v}
	CFDataGetBytes = ~f{v^v{=ll}^C}
	CFDataGetLength = ~f{l^v}
	CFDataGetMutableBytePtr = ~f{^C^v}
	CFDataGetTypeID = ~f{L}
	CFDataIncreaseLength = ~f{v^vl}
	CFDataReplaceBytes = ~f{v^v{=ll}^Cl}
	CFDataSetLength = ~f{v^vl}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vBasicOps.h
	vA128Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vA64Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vA64Shift2 = ~f{~V{4I}~V{4I}~V{16C}}
	vL128Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vL64Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vL64Rotate2 = ~f{~V{4I}~V{4I}~V{16C}}
	vLL128Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLL64Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLL64Shift2 = ~f{~V{4I}~V{4I}~V{16C}}
	vLR128Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLR64Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLR64Shift2 = ~f{~V{4I}~V{4I}~V{16C}}
	vR128Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vR64Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vR64Rotate2 = ~f{~V{4I}~V{4I}~V{16C}}
	vS128Add = ~f{~V{4i}~V{4i}~V{4i}}
	vS128AddS = ~f{~V{4i}~V{4i}~V{4i}}
	vS128Divide = ~f{~V{4i}~V{4i}~V{4i}^~V{4i}}
	vS128HalfMultiply = ~f{~V{4i}~V{4i}~V{4i}}
	vS128Neg = ~f{~V{4i}~V{4i}}
	vS128Sub = ~f{~V{4i}~V{4i}~V{4i}}
	vS128SubS = ~f{~V{4i}~V{4i}~V{4i}}
	vS16Divide = ~f{~V{8s}~V{8s}~V{8s}^~V{8s}}
	vS16HalfMultiply = ~f{~V{8s}~V{8s}~V{8s}}
	vS32Divide = ~f{~V{4i}~V{4i}~V{4i}^~V{4i}}
	vS32FullMulEven = ~f{~V{4i}~V{4i}~V{4i}}
	vS32FullMulOdd = ~f{~V{4i}~V{4i}~V{4i}}
	vS32HalfMultiply = ~f{~V{4i}~V{4i}~V{4i}}
	vS64Add = ~f{~V{4i}~V{4i}~V{4i}}
	vS64AddS = ~f{~V{4i}~V{4i}~V{4i}}
	vS64Divide = ~f{~V{4i}~V{4i}~V{4i}^~V{4i}}
	vS64FullMulEven = ~f{~V{4i}~V{4i}~V{4i}}
	vS64FullMulOdd = ~f{~V{4i}~V{4i}~V{4i}}
	vS64HalfMultiply = ~f{~V{4i}~V{4i}~V{4i}}
	vS64Neg = ~f{~V{4i}~V{4i}}
	vS64Sub = ~f{~V{4i}~V{4i}~V{4i}}
	vS64SubS = ~f{~V{4i}~V{4i}~V{4i}}
	vS8Divide = ~f{~V{16c}~V{16c}~V{16c}^~V{16c}}
	vS8HalfMultiply = ~f{~V{16c}~V{16c}~V{16c}}
	vU128Add = ~f{~V{4I}~V{4I}~V{4I}}
	vU128AddS = ~f{~V{4I}~V{4I}~V{4I}}
	vU128Divide = ~f{~V{4I}~V{4I}~V{4I}^~V{4I}}
	vU128HalfMultiply = ~f{~V{4I}~V{4I}~V{4I}}
	vU128Neg = ~f{~V{4I}~V{4I}}
	vU128Sub = ~f{~V{4I}~V{4I}~V{4I}}
	vU128SubS = ~f{~V{4I}~V{4I}~V{4I}}
	vU16Divide = ~f{~V{8S}~V{8S}~V{8S}^~V{8S}}
	vU16HalfMultiply = ~f{~V{8S}~V{8S}~V{8S}}
	vU32Divide = ~f{~V{4I}~V{4I}~V{4I}^~V{4I}}
	vU32FullMulEven = ~f{~V{4I}~V{4I}~V{4I}}
	vU32FullMulOdd = ~f{~V{4I}~V{4I}~V{4I}}
	vU32HalfMultiply = ~f{~V{4I}~V{4I}~V{4I}}
	vU64Add = ~f{~V{4I}~V{4I}~V{4I}}
	vU64AddS = ~f{~V{4I}~V{4I}~V{4I}}
	vU64Divide = ~f{~V{4I}~V{4I}~V{4I}^~V{4I}}
	vU64FullMulEven = ~f{~V{4I}~V{4I}~V{4I}}
	vU64FullMulOdd = ~f{~V{4I}~V{4I}~V{4I}}
	vU64HalfMultiply = ~f{~V{4I}~V{4I}~V{4I}}
	vU64Neg = ~f{~V{4I}~V{4I}}
	vU64Sub = ~f{~V{4I}~V{4I}~V{4I}}
	vU64SubS = ~f{~V{4I}~V{4I}~V{4I}}
	vU8Divide = ~f{~V{16C}~V{16C}~V{16C}^~V{16C}}
	vU8HalfMultiply = ~f{~V{16C}~V{16C}~V{16C}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/signal.h
	__sigbits = ~f{ii}
	bsd_signal = ~f{^~f{vi}i^~f{vi}}
	kill = ~f{iii}
	killpg = ~f{iii}
	psignal = ~f{vI^c}
	pthread_kill = ~f{i^vi}
	pthread_sigmask = ~f{ii^I^I}
	raise = ~f{ii}
	sigaction = ~f{ii^v^v}
	sigaddset = ~f{i^Ii}
	sigaltstack = ~f{i^v^v}
	sigblock = ~f{ii}
	sigdelset = ~f{i^Ii}
	sigemptyset = ~f{i^I}
	sigfillset = ~f{i^I}
	sighold = ~f{ii}
	sigignore = ~f{ii}
	siginterrupt = ~f{iii}
	sigismember = ~f{i^Ii}
	sigpause = ~f{ii}
	sigpending = ~f{i^I}
	sigprocmask = ~f{ii^I^I}
	sigrelse = ~f{ii}
	sigset = ~f{^~f{vi}i^~f{vi}}
	sigsetmask = ~f{ii}
	sigsuspend = ~f{i^I}
	sigvec = ~f{ii^v^v}
	sigwait = ~f{i^I^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/schematron.h
	xmlSchematronFree = ~f{v^v}
	xmlSchematronFreeParserCtxt = ~f{v^v}
	xmlSchematronFreeValidCtxt = ~f{v^v}
	xmlSchematronNewDocParserCtxt = ~f{^v^v}
	xmlSchematronNewMemParserCtxt = ~f{^v^ci}
	xmlSchematronNewParserCtxt = ~f{^v^c}
	xmlSchematronNewValidCtxt = ~f{^v^vi}
	xmlSchematronParse = ~f{^v^v}
	xmlSchematronSetValidStructuredErrors = ~f{v^v^~f{v^v^v}^v}
	xmlSchematronValidateDoc = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AUGraph.h
	AUGraphAddNode = ~f{i^v^v^i}
	AUGraphAddRenderNotify = ~f{i^v^~f{i^v^I^vII^v}^v}
	AUGraphClearConnections = ~f{i^v}
	AUGraphClose = ~f{i^v}
	AUGraphConnectNodeInput = ~f{i^viIiI}
	AUGraphCountNodeInteractions = ~f{i^vi^I}
	AUGraphDisconnectNodeInput = ~f{i^viI}
	AUGraphGetCPULoad = ~f{i^v^f}
	AUGraphGetIndNode = ~f{i^vI^i}
	AUGraphGetInteractionInfo = ~f{i^vI^v}
	AUGraphGetMaxCPULoad = ~f{i^v^f}
	AUGraphGetNodeCount = ~f{i^v^I}
	AUGraphGetNodeInteractions = ~f{i^vi^I^v}
	AUGraphGetNumberOfInteractions = ~f{i^v^I}
	AUGraphInitialize = ~f{i^v}
	AUGraphIsInitialized = ~f{i^v^C}
	AUGraphIsOpen = ~f{i^v^C}
	AUGraphIsRunning = ~f{i^v^C}
	AUGraphNodeInfo = ~f{i^vi^v^^v}
	AUGraphOpen = ~f{i^v}
	AUGraphRemoveNode = ~f{i^vi}
	AUGraphRemoveRenderNotify = ~f{i^v^~f{i^v^I^vII^v}^v}
	AUGraphSetNodeInputCallback = ~f{i^viI^v}
	AUGraphStart = ~f{i^v}
	AUGraphStop = ~f{i^v}
	AUGraphUninitialize = ~f{i^v}
	AUGraphUpdate = ~f{i^v^C}
	DisposeAUGraph = ~f{i^v}
	NewAUGraph = ~f{i^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Convolution.h
	vImageBoxConvolve_ARGB8888 = ~f{l^v^v^vLLII^CI}
	vImageBoxConvolve_Planar8 = ~f{l^v^v^vLLIICI}
	vImageConvolveMultiKernel_ARGB8888 = ~f{l^v^v^vLL^^sII^i^i^CI}
	vImageConvolveMultiKernel_ARGBFFFF = ~f{l^v^v^vLL^^fII^f^fI}
	vImageConvolveWithBias_ARGB8888 = ~f{l^v^v^vLL^sIIii^CI}
	vImageConvolveWithBias_ARGBFFFF = ~f{l^v^v^vLL^fIIf^fI}
	vImageConvolveWithBias_Planar8 = ~f{l^v^v^vLL^sIIiiCI}
	vImageConvolveWithBias_PlanarF = ~f{l^v^v^vLL^fIIffI}
	vImageConvolve_ARGB8888 = ~f{l^v^v^vLL^sIIi^CI}
	vImageConvolve_ARGBFFFF = ~f{l^v^v^vLL^fII^fI}
	vImageConvolve_Planar8 = ~f{l^v^v^vLL^sIIiCI}
	vImageConvolve_PlanarF = ~f{l^v^v^vLL^fIIfI}
	vImageRichardsonLucyDeConvolve_ARGB8888 = ~f{l^v^v^vLL^s^sIIIIii^CII}
	vImageRichardsonLucyDeConvolve_ARGBFFFF = ~f{l^v^v^vLL^f^fIIII^fII}
	vImageRichardsonLucyDeConvolve_Planar8 = ~f{l^v^v^vLL^s^sIIIIiiCII}
	vImageRichardsonLucyDeConvolve_PlanarF = ~f{l^v^v^vLL^f^fIIIIfII}
	vImageTentConvolve_ARGB8888 = ~f{l^v^v^vLLII^CI}
	vImageTentConvolve_Planar8 = ~f{l^v^v^vLLIICI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/alloca.h
	alloca = ~f{^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/BasicImageTypes.h
	vImagePNGDecompressionFilter = ~f{l^vLLIIII}
/usr/local/lib/clang/9.0.1/include/lzcntintrin.h
	__lzcnt32 = ~f{II}
	_lzcnt_u32 = ~f{II}
	_lzcnt_u64 = ~f{QQ}
/usr/local/lib/clang/9.0.1/include/stdatomic.h
	atomic_flag_clear = ~f{v^v}
	atomic_flag_clear_explicit = ~f{v^vI}
	atomic_flag_test_and_set = ~f{B^v}
	atomic_flag_test_and_set_explicit = ~f{B^vI}
	atomic_signal_fence = ~f{vI}
	atomic_thread_fence = ~f{vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSFileManagerShims.h
	__NSFileManagerEnumeratorAtURL = ~f{@@@@L%~f{B@@}}
	__NSFileManagerReplaceItemAtURL = ~f{@@@@@L^@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/file.h
	cupsFileClose = ~f{i^v}
	cupsFileCompression = ~f{i^v}
	cupsFileEOF = ~f{i^v}
	cupsFileFind = ~f{^c^c^ci^ci}
	cupsFileFlush = ~f{i^v}
	cupsFileGetChar = ~f{i^v}
	cupsFileGetConf = ~f{^c^v^cL^^c^i}
	cupsFileGetLine = ~f{L^v^cL}
	cupsFileGets = ~f{^c^v^cL}
	cupsFileLock = ~f{i^vi}
	cupsFileNumber = ~f{i^v}
	cupsFileOpen = ~f{^v^c^c}
	cupsFileOpenFd = ~f{^vi^c}
	cupsFilePeekChar = ~f{i^v}
	cupsFilePrintf = ~f{i^v^c$}
	cupsFilePutChar = ~f{i^vi}
	cupsFilePutConf = ~f{l^v^c^c}
	cupsFilePuts = ~f{i^v^c}
	cupsFileRead = ~f{l^v^cL}
	cupsFileRewind = ~f{q^v}
	cupsFileSeek = ~f{q^vq}
	cupsFileStderr = ~f{^v}
	cupsFileStdin = ~f{^v}
	cupsFileStdout = ~f{^v}
	cupsFileTell = ~f{q^v}
	cupsFileUnlock = ~f{i^v}
	cupsFileWrite = ~f{l^v^cL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/grp.h
	endgrent = ~f{v}
	getgrent = ~f{^v}
	getgrgid = ~f{^vI}
	getgrgid_r = ~f{iI^v^cL^^v}
	getgrnam = ~f{^v^c}
	getgrnam_r = ~f{i^c^v^cL^^v}
	getgruuid = ~f{^v^C}
	getgruuid_r = ~f{i^C^v^cL^^v}
	group_from_gid = ~f{^cIi}
	setgrent = ~f{v}
	setgrfile = ~f{v^c}
	setgroupent = ~f{ii}
/usr/local/lib/clang/9.0.1/include/movdirintrin.h
	_directstoreu_u32 = ~f{v^vI}
	_directstoreu_u64 = ~f{v^vL}
	_movdir64b = ~f{v^v^v}
/usr/local/lib/clang/9.0.1/include/avx512vp2intersectintrin.h
	_mm512_2intersect_epi32 = ~f{v~V{8q}~V{8q}^S^S}
	_mm512_2intersect_epi64 = ~f{v~V{8q}~V{8q}^C^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTTextTab.h
	CTTextTabCreate = ~f{^vCd^v}
	CTTextTabGetAlignment = ~f{C^v}
	CTTextTabGetLocation = ~f{d^v}
	CTTextTabGetOptions = ~f{^v^v}
	CTTextTabGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach_port.h
	mach_port_allocate = ~f{iII^I}
	mach_port_allocate_full = ~f{iIII^v^I}
	mach_port_allocate_name = ~f{iIII}
	mach_port_allocate_qos = ~f{iII^v^I}
	mach_port_construct = ~f{iI^vQ^I}
	mach_port_deallocate = ~f{iII}
	mach_port_destroy = ~f{iII}
	mach_port_destruct = ~f{iIIiQ}
	mach_port_dnrequest_info = ~f{iII^I^I}
	mach_port_extract_member = ~f{iIII}
	mach_port_extract_right = ~f{iIII^I^I}
	mach_port_get_attributes = ~f{iIIi^i^I}
	mach_port_get_context = ~f{iII^Q}
	mach_port_get_refs = ~f{iIII^I}
	mach_port_get_set_status = ~f{iII^^I^I}
	mach_port_get_srights = ~f{iII^I}
	mach_port_guard = ~f{iIIQI}
	mach_port_guard_with_flags = ~f{iIIQQ}
	mach_port_insert_member = ~f{iIII}
	mach_port_insert_right = ~f{iIIII}
	mach_port_kernel_object = ~f{iII^I^I}
	mach_port_kobject = ~f{iII^I^Q}
	mach_port_mod_refs = ~f{iIIIi}
	mach_port_move_member = ~f{iIII}
	mach_port_names = ~f{iI^^I^I^^I^I}
	mach_port_peek = ~f{iIII^I^I^i^c^I}
	mach_port_rename = ~f{iIII}
	mach_port_request_notification = ~f{iIIiIII^I}
	mach_port_set_attributes = ~f{iIIi^iI}
	mach_port_set_context = ~f{iIIQ}
	mach_port_set_mscount = ~f{iIII}
	mach_port_set_seqno = ~f{iIII}
	mach_port_space_basic_info = ~f{iI^v}
	mach_port_space_info = ~f{iI^v^^v^I^^v^I}
	mach_port_swap_guard = ~f{iIIQQ}
	mach_port_type = ~f{iII^I}
	mach_port_unguard = ~f{iIIQ}
	mig_strncpy_zerofill = ~f{i^c^ci}
	task_set_port_space = ~f{iIi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTFont.h
	CTFontCopyAttribute = ~f{^v^v^v}
	CTFontCopyAvailableTables = ~f{^v^vI}
	CTFontCopyCharacterSet = ~f{^v^v}
	CTFontCopyDefaultCascadeListForLanguages = ~f{^v^v^v}
	CTFontCopyDisplayName = ~f{^v^v}
	CTFontCopyFamilyName = ~f{^v^v}
	CTFontCopyFeatureSettings = ~f{^v^v}
	CTFontCopyFeatures = ~f{^v^v}
	CTFontCopyFontDescriptor = ~f{^v^v}
	CTFontCopyFullName = ~f{^v^v}
	CTFontCopyGraphicsFont = ~f{^v^v^^v}
	CTFontCopyLocalizedName = ~f{^v^v^v^^v}
	CTFontCopyName = ~f{^v^v^v}
	CTFontCopyPostScriptName = ~f{^v^v}
	CTFontCopySupportedLanguages = ~f{^v^v}
	CTFontCopyTable = ~f{^v^vII}
	CTFontCopyTraits = ~f{^v^v}
	CTFontCopyVariation = ~f{^v^v}
	CTFontCopyVariationAxes = ~f{^v^v}
	CTFontCreateCopyWithAttributes = ~f{^v^vd^v^v}
	CTFontCreateCopyWithFamily = ~f{^v^vd^v^v}
	CTFontCreateCopyWithSymbolicTraits = ~f{^v^vd^vII}
	CTFontCreateForString = ~f{^v^v^v{=ll}}
	CTFontCreateForStringWithLanguage = ~f{^v^v^v{=ll}^v}
	CTFontCreatePathForGlyph = ~f{^v^vS^v}
	CTFontCreateUIFontForLanguage = ~f{^vId^v}
	CTFontCreateWithFontDescriptor = ~f{^v^vd^v}
	CTFontCreateWithFontDescriptorAndOptions = ~f{^v^vd^vL}
	CTFontCreateWithGraphicsFont = ~f{^v^vd^v^v}
	CTFontCreateWithName = ~f{^v^vd^v}
	CTFontCreateWithNameAndOptions = ~f{^v^vd^vL}
	CTFontCreateWithPlatformFont = ~f{^vId^v^v}
	CTFontCreateWithQuickdrawInstance = ~f{^v^CsCd}
	CTFontDrawGlyphs = ~f{v^v^S^vL^v}
	CTFontGetAdvancesForGlyphs = ~f{d^vI^S^vl}
	CTFontGetAscent = ~f{d^v}
	CTFontGetBoundingBox = ~f{{={=dd}{=dd}}^v}
	CTFontGetBoundingRectsForGlyphs = ~f{{={=dd}{=dd}}^vI^S^vl}
	CTFontGetCapHeight = ~f{d^v}
	CTFontGetDescent = ~f{d^v}
	CTFontGetGlyphCount = ~f{l^v}
	CTFontGetGlyphWithName = ~f{S^v^v}
	CTFontGetGlyphsForCharacters = ~f{B^v^S^Sl}
	CTFontGetLeading = ~f{d^v}
	CTFontGetLigatureCaretPositions = ~f{l^vS^dl}
	CTFontGetMatrix = ~f{{=dddddd}^v}
	CTFontGetOpticalBoundsForGlyphs = ~f{{={=dd}{=dd}}^v^S^vlL}
	CTFontGetPlatformFont = ~f{I^v^^v}
	CTFontGetSize = ~f{d^v}
	CTFontGetSlantAngle = ~f{d^v}
	CTFontGetStringEncoding = ~f{I^v}
	CTFontGetSymbolicTraits = ~f{I^v}
	CTFontGetTypeID = ~f{L}
	CTFontGetUnderlinePosition = ~f{d^v}
	CTFontGetUnderlineThickness = ~f{d^v}
	CTFontGetUnitsPerEm = ~f{I^v}
	CTFontGetVerticalTranslationsForGlyphs = ~f{v^v^S^vl}
	CTFontGetXHeight = ~f{d^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Histogram.h
	vImageContrastStretch_ARGB8888 = ~f{l^v^vI}
	vImageContrastStretch_ARGBFFFF = ~f{l^v^v^vIffI}
	vImageContrastStretch_Planar8 = ~f{l^v^vI}
	vImageContrastStretch_PlanarF = ~f{l^v^v^vIffI}
	vImageEndsInContrastStretch_ARGB8888 = ~f{l^v^v^I^II}
	vImageEndsInContrastStretch_ARGBFFFF = ~f{l^v^v^v^I^IIffI}
	vImageEndsInContrastStretch_Planar8 = ~f{l^v^vIII}
	vImageEndsInContrastStretch_PlanarF = ~f{l^v^v^vIIIffI}
	vImageEqualization_ARGB8888 = ~f{l^v^vI}
	vImageEqualization_ARGBFFFF = ~f{l^v^v^vIffI}
	vImageEqualization_Planar8 = ~f{l^v^vI}
	vImageEqualization_PlanarF = ~f{l^v^v^vIffI}
	vImageHistogramCalculation_ARGB8888 = ~f{l^v^^LI}
	vImageHistogramCalculation_ARGBFFFF = ~f{l^v^^LIffI}
	vImageHistogramCalculation_Planar8 = ~f{l^v^LI}
	vImageHistogramCalculation_PlanarF = ~f{l^v^LIffI}
	vImageHistogramSpecification_ARGB8888 = ~f{l^v^v^^LI}
	vImageHistogramSpecification_ARGBFFFF = ~f{l^v^v^v^^LIffI}
	vImageHistogramSpecification_Planar8 = ~f{l^v^v^LI}
	vImageHistogramSpecification_PlanarF = ~f{l^v^v^v^LIffI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/path_monitor.h
	nw_path_monitor_cancel = ~f{v@}
	nw_path_monitor_create = ~f{@}
	nw_path_monitor_create_with_type = ~f{@I}
	nw_path_monitor_set_cancel_handler = ~f{v@%~f{v}}
	nw_path_monitor_set_queue = ~f{v@@}
	nw_path_monitor_set_update_handler = ~f{v@%~f{v@}}
	nw_path_monitor_start = ~f{v@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Headers/MPSImage.h
	MPSImageBatchIncrementReadCount = ~f{L@l}
	MPSImageBatchIterate = ~f{l@%~f{l@L}}
	MPSImageBatchResourceSize = ~f{L@}
	MPSImageBatchSynchronize = ~f{v@@}
/usr/local/lib/clang/9.0.1/include/avx512fintrin.h
	_cvtmask16_u32 = ~f{IS}
	_cvtu32_mask16 = ~f{SI}
	_kortest_mask16_u8 = ~f{CSS^C}
	_kortestc_mask16_u8 = ~f{CSS}
	_kortestz_mask16_u8 = ~f{CSS}
	_load_mask16 = ~f{S^S}
	_mm512_abs_epi32 = ~f{~V{8q}~V{8q}}
	_mm512_abs_epi64 = ~f{~V{8q}~V{8q}}
	_mm512_abs_pd = ~f{~V{8d}~V{8d}}
	_mm512_abs_ps = ~f{~V{16f}~V{16f}}
	_mm512_add_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_add_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_add_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_add_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_and_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_and_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_and_si512 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_andnot_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_andnot_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_andnot_si512 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_broadcast_f32x4 = ~f{~V{16f}~V{4f}}
	_mm512_broadcast_f64x4 = ~f{~V{8d}~V{4d}}
	_mm512_broadcast_i32x4 = ~f{~V{8q}~V{2q}}
	_mm512_broadcast_i64x4 = ~f{~V{8q}~V{4q}}
	_mm512_broadcastd_epi32 = ~f{~V{8q}~V{2q}}
	_mm512_broadcastq_epi64 = ~f{~V{8q}~V{2q}}
	_mm512_broadcastsd_pd = ~f{~V{8d}~V{2d}}
	_mm512_broadcastss_ps = ~f{~V{16f}~V{4f}}
	_mm512_castpd128_pd512 = ~f{~V{8d}~V{2d}}
	_mm512_castpd256_pd512 = ~f{~V{8d}~V{4d}}
	_mm512_castpd512_pd128 = ~f{~V{2d}~V{8d}}
	_mm512_castpd512_pd256 = ~f{~V{4d}~V{8d}}
	_mm512_castpd_ps = ~f{~V{16f}~V{8d}}
	_mm512_castpd_si512 = ~f{~V{8q}~V{8d}}
	_mm512_castps128_ps512 = ~f{~V{16f}~V{4f}}
	_mm512_castps256_ps512 = ~f{~V{16f}~V{8f}}
	_mm512_castps512_ps128 = ~f{~V{4f}~V{16f}}
	_mm512_castps512_ps256 = ~f{~V{8f}~V{16f}}
	_mm512_castps_pd = ~f{~V{8d}~V{16f}}
	_mm512_castps_si512 = ~f{~V{8q}~V{16f}}
	_mm512_castsi128_si512 = ~f{~V{8q}~V{2q}}
	_mm512_castsi256_si512 = ~f{~V{8q}~V{4q}}
	_mm512_castsi512_pd = ~f{~V{8d}~V{8q}}
	_mm512_castsi512_ps = ~f{~V{16f}~V{8q}}
	_mm512_castsi512_si128 = ~f{~V{2q}~V{8q}}
	_mm512_castsi512_si256 = ~f{~V{4q}~V{8q}}
	_mm512_ceil_pd = ~f{~V{8d}~V{8d}}
	_mm512_ceil_ps = ~f{~V{16f}~V{16f}}
	_mm512_cvtepi16_epi32 = ~f{~V{8q}~V{4q}}
	_mm512_cvtepi16_epi64 = ~f{~V{8q}~V{2q}}
	_mm512_cvtepi32_epi16 = ~f{~V{4q}~V{8q}}
	_mm512_cvtepi32_epi64 = ~f{~V{8q}~V{4q}}
	_mm512_cvtepi32_epi8 = ~f{~V{2q}~V{8q}}
	_mm512_cvtepi32_pd = ~f{~V{8d}~V{4q}}
	_mm512_cvtepi32_ps = ~f{~V{16f}~V{8q}}
	_mm512_cvtepi32lo_pd = ~f{~V{8d}~V{8q}}
	_mm512_cvtepi64_epi16 = ~f{~V{2q}~V{8q}}
	_mm512_cvtepi64_epi32 = ~f{~V{4q}~V{8q}}
	_mm512_cvtepi64_epi8 = ~f{~V{2q}~V{8q}}
	_mm512_cvtepi8_epi32 = ~f{~V{8q}~V{2q}}
	_mm512_cvtepi8_epi64 = ~f{~V{8q}~V{2q}}
	_mm512_cvtepu16_epi32 = ~f{~V{8q}~V{4q}}
	_mm512_cvtepu16_epi64 = ~f{~V{8q}~V{2q}}
	_mm512_cvtepu32_epi64 = ~f{~V{8q}~V{4q}}
	_mm512_cvtepu32_pd = ~f{~V{8d}~V{4q}}
	_mm512_cvtepu32_ps = ~f{~V{16f}~V{8q}}
	_mm512_cvtepu32lo_pd = ~f{~V{8d}~V{8q}}
	_mm512_cvtepu8_epi32 = ~f{~V{8q}~V{2q}}
	_mm512_cvtepu8_epi64 = ~f{~V{8q}~V{2q}}
	_mm512_cvtpd_epi32 = ~f{~V{4q}~V{8d}}
	_mm512_cvtpd_epu32 = ~f{~V{4q}~V{8d}}
	_mm512_cvtpd_ps = ~f{~V{8f}~V{8d}}
	_mm512_cvtpd_pslo = ~f{~V{16f}~V{8d}}
	_mm512_cvtph_ps = ~f{~V{16f}~V{4q}}
	_mm512_cvtps_epi32 = ~f{~V{8q}~V{16f}}
	_mm512_cvtps_epu32 = ~f{~V{8q}~V{16f}}
	_mm512_cvtps_pd = ~f{~V{8d}~V{8f}}
	_mm512_cvtpslo_pd = ~f{~V{8d}~V{16f}}
	_mm512_cvtsd_f64 = ~f{d~V{8d}}
	_mm512_cvtsepi32_epi16 = ~f{~V{4q}~V{8q}}
	_mm512_cvtsepi32_epi8 = ~f{~V{2q}~V{8q}}
	_mm512_cvtsepi64_epi16 = ~f{~V{2q}~V{8q}}
	_mm512_cvtsepi64_epi32 = ~f{~V{4q}~V{8q}}
	_mm512_cvtsepi64_epi8 = ~f{~V{2q}~V{8q}}
	_mm512_cvtss_f32 = ~f{f~V{16f}}
	_mm512_cvttpd_epi32 = ~f{~V{4q}~V{8d}}
	_mm512_cvttpd_epu32 = ~f{~V{4q}~V{8d}}
	_mm512_cvttps_epi32 = ~f{~V{8q}~V{16f}}
	_mm512_cvttps_epu32 = ~f{~V{8q}~V{16f}}
	_mm512_cvtusepi32_epi16 = ~f{~V{4q}~V{8q}}
	_mm512_cvtusepi32_epi8 = ~f{~V{2q}~V{8q}}
	_mm512_cvtusepi64_epi16 = ~f{~V{2q}~V{8q}}
	_mm512_cvtusepi64_epi32 = ~f{~V{4q}~V{8q}}
	_mm512_cvtusepi64_epi8 = ~f{~V{2q}~V{8q}}
	_mm512_div_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_div_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_floor_pd = ~f{~V{8d}~V{8d}}
	_mm512_floor_ps = ~f{~V{16f}~V{16f}}
	_mm512_fmadd_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	_mm512_fmadd_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}}
	_mm512_fmaddsub_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	_mm512_fmaddsub_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}}
	_mm512_fmsub_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	_mm512_fmsub_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}}
	_mm512_fmsubadd_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	_mm512_fmsubadd_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}}
	_mm512_fnmadd_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	_mm512_fnmadd_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}}
	_mm512_fnmsub_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	_mm512_fnmsub_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}}
	_mm512_getexp_pd = ~f{~V{8d}~V{8d}}
	_mm512_getexp_ps = ~f{~V{16f}~V{16f}}
	_mm512_int2mask = ~f{Si}
	_mm512_kand = ~f{SSS}
	_mm512_kandn = ~f{SSS}
	_mm512_kmov = ~f{SS}
	_mm512_knot = ~f{SS}
	_mm512_kor = ~f{SSS}
	_mm512_kortestc = ~f{iSS}
	_mm512_kortestz = ~f{iSS}
	_mm512_kunpackb = ~f{SSS}
	_mm512_kxnor = ~f{SSS}
	_mm512_kxor = ~f{SSS}
	_mm512_load_epi32 = ~f{~V{8q}^v}
	_mm512_load_epi64 = ~f{~V{8q}^v}
	_mm512_load_pd = ~f{~V{8d}^v}
	_mm512_load_ps = ~f{~V{16f}^v}
	_mm512_load_si512 = ~f{~V{8q}^v}
	_mm512_loadu_epi32 = ~f{~V{8q}^v}
	_mm512_loadu_epi64 = ~f{~V{8q}^v}
	_mm512_loadu_pd = ~f{~V{8d}^v}
	_mm512_loadu_ps = ~f{~V{16f}^v}
	_mm512_loadu_si512 = ~f{~V{8q}^v}
	_mm512_mask2_permutex2var_epi32 = ~f{~V{8q}~V{8q}~V{8q}S~V{8q}}
	_mm512_mask2_permutex2var_epi64 = ~f{~V{8q}~V{8q}~V{8q}C~V{8q}}
	_mm512_mask2_permutex2var_pd = ~f{~V{8d}~V{8d}~V{8q}C~V{8d}}
	_mm512_mask2_permutex2var_ps = ~f{~V{16f}~V{16f}~V{8q}S~V{16f}}
	_mm512_mask2int = ~f{iS}
	_mm512_mask3_fmadd_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}C}
	_mm512_mask3_fmadd_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}S}
	_mm512_mask3_fmaddsub_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}C}
	_mm512_mask3_fmaddsub_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}S}
	_mm512_mask3_fmsub_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}C}
	_mm512_mask3_fmsub_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}S}
	_mm512_mask3_fmsubadd_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}C}
	_mm512_mask3_fmsubadd_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}S}
	_mm512_mask3_fnmadd_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}C}
	_mm512_mask3_fnmadd_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}S}
	_mm512_mask3_fnmsub_pd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}C}
	_mm512_mask3_fnmsub_ps = ~f{~V{16f}~V{16f}~V{16f}~V{16f}S}
	_mm512_mask_abs_epi32 = ~f{~V{8q}~V{8q}S~V{8q}}
	_mm512_mask_abs_epi64 = ~f{~V{8q}~V{8q}C~V{8q}}
	_mm512_mask_abs_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_abs_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_add_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_add_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_add_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_add_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_and_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_and_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_andnot_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_andnot_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_blend_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_blend_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_blend_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_blend_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_broadcast_f32x4 = ~f{~V{16f}~V{16f}S~V{4f}}
	_mm512_mask_broadcast_f64x4 = ~f{~V{8d}~V{8d}C~V{4d}}
	_mm512_mask_broadcast_i32x4 = ~f{~V{8q}~V{8q}S~V{2q}}
	_mm512_mask_broadcast_i64x4 = ~f{~V{8q}~V{8q}C~V{4q}}
	_mm512_mask_broadcastd_epi32 = ~f{~V{8q}~V{8q}S~V{2q}}
	_mm512_mask_broadcastq_epi64 = ~f{~V{8q}~V{8q}C~V{2q}}
	_mm512_mask_broadcastsd_pd = ~f{~V{8d}~V{8d}C~V{2d}}
	_mm512_mask_broadcastss_ps = ~f{~V{16f}~V{16f}S~V{4f}}
	_mm512_mask_ceil_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_ceil_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_compress_epi32 = ~f{~V{8q}~V{8q}S~V{8q}}
	_mm512_mask_compress_epi64 = ~f{~V{8q}~V{8q}C~V{8q}}
	_mm512_mask_compress_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_compress_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_compressstoreu_epi32 = ~f{v^vS~V{8q}}
	_mm512_mask_compressstoreu_epi64 = ~f{v^vC~V{8q}}
	_mm512_mask_compressstoreu_pd = ~f{v^vC~V{8d}}
	_mm512_mask_compressstoreu_ps = ~f{v^vS~V{16f}}
	_mm512_mask_cvtepi16_epi32 = ~f{~V{8q}~V{8q}S~V{4q}}
	_mm512_mask_cvtepi16_epi64 = ~f{~V{8q}~V{8q}C~V{2q}}
	_mm512_mask_cvtepi32_epi16 = ~f{~V{4q}~V{4q}S~V{8q}}
	_mm512_mask_cvtepi32_epi64 = ~f{~V{8q}~V{8q}C~V{4q}}
	_mm512_mask_cvtepi32_epi8 = ~f{~V{2q}~V{2q}S~V{8q}}
	_mm512_mask_cvtepi32_pd = ~f{~V{8d}~V{8d}C~V{4q}}
	_mm512_mask_cvtepi32_ps = ~f{~V{16f}~V{16f}S~V{8q}}
	_mm512_mask_cvtepi32_storeu_epi16 = ~f{v^vS~V{8q}}
	_mm512_mask_cvtepi32_storeu_epi8 = ~f{v^vS~V{8q}}
	_mm512_mask_cvtepi32lo_pd = ~f{~V{8d}~V{8d}C~V{8q}}
	_mm512_mask_cvtepi64_epi16 = ~f{~V{2q}~V{2q}C~V{8q}}
	_mm512_mask_cvtepi64_epi32 = ~f{~V{4q}~V{4q}C~V{8q}}
	_mm512_mask_cvtepi64_epi8 = ~f{~V{2q}~V{2q}C~V{8q}}
	_mm512_mask_cvtepi64_storeu_epi16 = ~f{v^vC~V{8q}}
	_mm512_mask_cvtepi64_storeu_epi32 = ~f{v^vC~V{8q}}
	_mm512_mask_cvtepi64_storeu_epi8 = ~f{v^vC~V{8q}}
	_mm512_mask_cvtepi8_epi32 = ~f{~V{8q}~V{8q}S~V{2q}}
	_mm512_mask_cvtepi8_epi64 = ~f{~V{8q}~V{8q}C~V{2q}}
	_mm512_mask_cvtepu16_epi32 = ~f{~V{8q}~V{8q}S~V{4q}}
	_mm512_mask_cvtepu16_epi64 = ~f{~V{8q}~V{8q}C~V{2q}}
	_mm512_mask_cvtepu32_epi64 = ~f{~V{8q}~V{8q}C~V{4q}}
	_mm512_mask_cvtepu32_pd = ~f{~V{8d}~V{8d}C~V{4q}}
	_mm512_mask_cvtepu32_ps = ~f{~V{16f}~V{16f}S~V{8q}}
	_mm512_mask_cvtepu32lo_pd = ~f{~V{8d}~V{8d}C~V{8q}}
	_mm512_mask_cvtepu8_epi32 = ~f{~V{8q}~V{8q}S~V{2q}}
	_mm512_mask_cvtepu8_epi64 = ~f{~V{8q}~V{8q}C~V{2q}}
	_mm512_mask_cvtpd_epi32 = ~f{~V{4q}~V{4q}C~V{8d}}
	_mm512_mask_cvtpd_epu32 = ~f{~V{4q}~V{4q}C~V{8d}}
	_mm512_mask_cvtpd_ps = ~f{~V{8f}~V{8f}C~V{8d}}
	_mm512_mask_cvtpd_pslo = ~f{~V{16f}~V{16f}C~V{8d}}
	_mm512_mask_cvtph_ps = ~f{~V{16f}~V{16f}S~V{4q}}
	_mm512_mask_cvtps_epi32 = ~f{~V{8q}~V{8q}S~V{16f}}
	_mm512_mask_cvtps_epu32 = ~f{~V{8q}~V{8q}S~V{16f}}
	_mm512_mask_cvtps_pd = ~f{~V{8d}~V{8d}C~V{8f}}
	_mm512_mask_cvtpslo_pd = ~f{~V{8d}~V{8d}C~V{16f}}
	_mm512_mask_cvtsepi32_epi16 = ~f{~V{4q}~V{4q}S~V{8q}}
	_mm512_mask_cvtsepi32_epi8 = ~f{~V{2q}~V{2q}S~V{8q}}
	_mm512_mask_cvtsepi32_storeu_epi16 = ~f{v^vS~V{8q}}
	_mm512_mask_cvtsepi32_storeu_epi8 = ~f{v^vS~V{8q}}
	_mm512_mask_cvtsepi64_epi16 = ~f{~V{2q}~V{2q}C~V{8q}}
	_mm512_mask_cvtsepi64_epi32 = ~f{~V{4q}~V{4q}C~V{8q}}
	_mm512_mask_cvtsepi64_epi8 = ~f{~V{2q}~V{2q}C~V{8q}}
	_mm512_mask_cvtsepi64_storeu_epi16 = ~f{v^vC~V{8q}}
	_mm512_mask_cvtsepi64_storeu_epi32 = ~f{v^vC~V{8q}}
	_mm512_mask_cvtsepi64_storeu_epi8 = ~f{v^vC~V{8q}}
	_mm512_mask_cvttpd_epi32 = ~f{~V{4q}~V{4q}C~V{8d}}
	_mm512_mask_cvttpd_epu32 = ~f{~V{4q}~V{4q}C~V{8d}}
	_mm512_mask_cvttps_epi32 = ~f{~V{8q}~V{8q}S~V{16f}}
	_mm512_mask_cvttps_epu32 = ~f{~V{8q}~V{8q}S~V{16f}}
	_mm512_mask_cvtusepi32_epi16 = ~f{~V{4q}~V{4q}S~V{8q}}
	_mm512_mask_cvtusepi32_epi8 = ~f{~V{2q}~V{2q}S~V{8q}}
	_mm512_mask_cvtusepi32_storeu_epi16 = ~f{v^vS~V{8q}}
	_mm512_mask_cvtusepi32_storeu_epi8 = ~f{v^vS~V{8q}}
	_mm512_mask_cvtusepi64_epi16 = ~f{~V{2q}~V{2q}C~V{8q}}
	_mm512_mask_cvtusepi64_epi32 = ~f{~V{4q}~V{4q}C~V{8q}}
	_mm512_mask_cvtusepi64_epi8 = ~f{~V{2q}~V{2q}C~V{8q}}
	_mm512_mask_cvtusepi64_storeu_epi16 = ~f{v^vC~V{8q}}
	_mm512_mask_cvtusepi64_storeu_epi32 = ~f{v^vC~V{8q}}
	_mm512_mask_cvtusepi64_storeu_epi8 = ~f{v^vC~V{8q}}
	_mm512_mask_div_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_div_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_expand_epi32 = ~f{~V{8q}~V{8q}S~V{8q}}
	_mm512_mask_expand_epi64 = ~f{~V{8q}~V{8q}C~V{8q}}
	_mm512_mask_expand_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_expand_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_expandloadu_epi32 = ~f{~V{8q}~V{8q}S^v}
	_mm512_mask_expandloadu_epi64 = ~f{~V{8q}~V{8q}C^v}
	_mm512_mask_expandloadu_pd = ~f{~V{8d}~V{8d}C^v}
	_mm512_mask_expandloadu_ps = ~f{~V{16f}~V{16f}S^v}
	_mm512_mask_floor_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_floor_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_fmadd_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_fmadd_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_fmaddsub_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_fmaddsub_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_fmsub_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_fmsub_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_fmsubadd_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_fmsubadd_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_fnmadd_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_fnmadd_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_fnmsub_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_fnmsub_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_getexp_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_getexp_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_load_epi32 = ~f{~V{8q}~V{8q}S^v}
	_mm512_mask_load_epi64 = ~f{~V{8q}~V{8q}C^v}
	_mm512_mask_load_pd = ~f{~V{8d}~V{8d}C^v}
	_mm512_mask_load_ps = ~f{~V{16f}~V{16f}S^v}
	_mm512_mask_loadu_epi32 = ~f{~V{8q}~V{8q}S^v}
	_mm512_mask_loadu_epi64 = ~f{~V{8q}~V{8q}C^v}
	_mm512_mask_loadu_pd = ~f{~V{8d}~V{8d}C^v}
	_mm512_mask_loadu_ps = ~f{~V{16f}~V{16f}S^v}
	_mm512_mask_max_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_max_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_max_epu32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_max_epu64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_max_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_max_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_min_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_min_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_min_epu32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_min_epu64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_min_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_min_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_mov_epi32 = ~f{~V{8q}~V{8q}S~V{8q}}
	_mm512_mask_mov_epi64 = ~f{~V{8q}~V{8q}C~V{8q}}
	_mm512_mask_mov_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_mov_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_movedup_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_movehdup_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_moveldup_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_mul_epi32 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_mul_epu32 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_mul_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_mul_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_mullo_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_mullox_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_or_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_or_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_permutevar_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8q}}
	_mm512_mask_permutevar_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{8q}}
	_mm512_mask_permutex2var_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_permutex2var_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_permutex2var_pd = ~f{~V{8d}~V{8d}C~V{8q}~V{8d}}
	_mm512_mask_permutex2var_ps = ~f{~V{16f}~V{16f}S~V{8q}~V{16f}}
	_mm512_mask_permutexvar_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_permutexvar_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_permutexvar_pd = ~f{~V{8d}~V{8d}C~V{8q}~V{8d}}
	_mm512_mask_permutexvar_ps = ~f{~V{16f}~V{16f}S~V{8q}~V{16f}}
	_mm512_mask_rcp14_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_rcp14_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_reduce_add_epi32 = ~f{iS~V{8q}}
	_mm512_mask_reduce_add_epi64 = ~f{qC~V{8q}}
	_mm512_mask_reduce_add_pd = ~f{dC~V{8d}}
	_mm512_mask_reduce_add_ps = ~f{fS~V{16f}}
	_mm512_mask_reduce_and_epi32 = ~f{iS~V{8q}}
	_mm512_mask_reduce_and_epi64 = ~f{qC~V{8q}}
	_mm512_mask_reduce_max_epi32 = ~f{iS~V{8q}}
	_mm512_mask_reduce_max_epi64 = ~f{qC~V{8q}}
	_mm512_mask_reduce_max_epu32 = ~f{IS~V{8q}}
	_mm512_mask_reduce_max_epu64 = ~f{QC~V{8q}}
	_mm512_mask_reduce_max_pd = ~f{dC~V{8d}}
	_mm512_mask_reduce_max_ps = ~f{fS~V{16f}}
	_mm512_mask_reduce_min_epi32 = ~f{iS~V{8q}}
	_mm512_mask_reduce_min_epi64 = ~f{qC~V{8q}}
	_mm512_mask_reduce_min_epu32 = ~f{IS~V{8q}}
	_mm512_mask_reduce_min_epu64 = ~f{QC~V{8q}}
	_mm512_mask_reduce_min_pd = ~f{dC~V{8d}}
	_mm512_mask_reduce_min_ps = ~f{fS~V{16f}}
	_mm512_mask_reduce_mul_epi32 = ~f{iS~V{8q}}
	_mm512_mask_reduce_mul_epi64 = ~f{qC~V{8q}}
	_mm512_mask_reduce_mul_pd = ~f{dC~V{8d}}
	_mm512_mask_reduce_mul_ps = ~f{fS~V{16f}}
	_mm512_mask_reduce_or_epi32 = ~f{iS~V{8q}}
	_mm512_mask_reduce_or_epi64 = ~f{qC~V{8q}}
	_mm512_mask_rolv_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_rolv_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_rorv_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_rorv_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_rsqrt14_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_rsqrt14_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_scalef_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_scalef_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_set1_epi32 = ~f{~V{8q}~V{8q}Si}
	_mm512_mask_set1_epi64 = ~f{~V{8q}~V{8q}Cq}
	_mm512_mask_sll_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{2q}}
	_mm512_mask_sll_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{2q}}
	_mm512_mask_slli_epi32 = ~f{~V{8q}~V{8q}S~V{8q}i}
	_mm512_mask_slli_epi64 = ~f{~V{8q}~V{8q}C~V{8q}i}
	_mm512_mask_sllv_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_sllv_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_sqrt_pd = ~f{~V{8d}~V{8d}C~V{8d}}
	_mm512_mask_sqrt_ps = ~f{~V{16f}~V{16f}S~V{16f}}
	_mm512_mask_sra_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{2q}}
	_mm512_mask_sra_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{2q}}
	_mm512_mask_srai_epi32 = ~f{~V{8q}~V{8q}S~V{8q}i}
	_mm512_mask_srai_epi64 = ~f{~V{8q}~V{8q}C~V{8q}i}
	_mm512_mask_srav_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_srav_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_srl_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{2q}}
	_mm512_mask_srl_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{2q}}
	_mm512_mask_srli_epi32 = ~f{~V{8q}~V{8q}S~V{8q}i}
	_mm512_mask_srli_epi64 = ~f{~V{8q}~V{8q}C~V{8q}i}
	_mm512_mask_srlv_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_srlv_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_store_epi32 = ~f{v^vS~V{8q}}
	_mm512_mask_store_epi64 = ~f{v^vC~V{8q}}
	_mm512_mask_store_pd = ~f{v^vC~V{8d}}
	_mm512_mask_store_ps = ~f{v^vS~V{16f}}
	_mm512_mask_storeu_epi32 = ~f{v^vS~V{8q}}
	_mm512_mask_storeu_epi64 = ~f{v^vC~V{8q}}
	_mm512_mask_storeu_pd = ~f{v^vC~V{8d}}
	_mm512_mask_storeu_ps = ~f{v^vS~V{16f}}
	_mm512_mask_sub_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_sub_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_sub_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_sub_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_test_epi32_mask = ~f{SS~V{8q}~V{8q}}
	_mm512_mask_test_epi64_mask = ~f{CC~V{8q}~V{8q}}
	_mm512_mask_testn_epi32_mask = ~f{SS~V{8q}~V{8q}}
	_mm512_mask_testn_epi64_mask = ~f{CC~V{8q}~V{8q}}
	_mm512_mask_unpackhi_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_unpackhi_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_unpackhi_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_unpackhi_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_unpacklo_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_unpacklo_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_unpacklo_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_unpacklo_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_xor_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_xor_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_abs_epi32 = ~f{~V{8q}S~V{8q}}
	_mm512_maskz_abs_epi64 = ~f{~V{8q}C~V{8q}}
	_mm512_maskz_add_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_add_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_add_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_add_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_and_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_and_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_andnot_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_andnot_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_broadcast_f32x4 = ~f{~V{16f}S~V{4f}}
	_mm512_maskz_broadcast_f64x4 = ~f{~V{8d}C~V{4d}}
	_mm512_maskz_broadcast_i32x4 = ~f{~V{8q}S~V{2q}}
	_mm512_maskz_broadcast_i64x4 = ~f{~V{8q}C~V{4q}}
	_mm512_maskz_broadcastd_epi32 = ~f{~V{8q}S~V{2q}}
	_mm512_maskz_broadcastq_epi64 = ~f{~V{8q}C~V{2q}}
	_mm512_maskz_broadcastsd_pd = ~f{~V{8d}C~V{2d}}
	_mm512_maskz_broadcastss_ps = ~f{~V{16f}S~V{4f}}
	_mm512_maskz_compress_epi32 = ~f{~V{8q}S~V{8q}}
	_mm512_maskz_compress_epi64 = ~f{~V{8q}C~V{8q}}
	_mm512_maskz_compress_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_compress_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_cvtepi16_epi32 = ~f{~V{8q}S~V{4q}}
	_mm512_maskz_cvtepi16_epi64 = ~f{~V{8q}C~V{2q}}
	_mm512_maskz_cvtepi32_epi16 = ~f{~V{4q}S~V{8q}}
	_mm512_maskz_cvtepi32_epi64 = ~f{~V{8q}C~V{4q}}
	_mm512_maskz_cvtepi32_epi8 = ~f{~V{2q}S~V{8q}}
	_mm512_maskz_cvtepi32_pd = ~f{~V{8d}C~V{4q}}
	_mm512_maskz_cvtepi32_ps = ~f{~V{16f}S~V{8q}}
	_mm512_maskz_cvtepi64_epi16 = ~f{~V{2q}C~V{8q}}
	_mm512_maskz_cvtepi64_epi32 = ~f{~V{4q}C~V{8q}}
	_mm512_maskz_cvtepi64_epi8 = ~f{~V{2q}C~V{8q}}
	_mm512_maskz_cvtepi8_epi32 = ~f{~V{8q}S~V{2q}}
	_mm512_maskz_cvtepi8_epi64 = ~f{~V{8q}C~V{2q}}
	_mm512_maskz_cvtepu16_epi32 = ~f{~V{8q}S~V{4q}}
	_mm512_maskz_cvtepu16_epi64 = ~f{~V{8q}C~V{2q}}
	_mm512_maskz_cvtepu32_epi64 = ~f{~V{8q}C~V{4q}}
	_mm512_maskz_cvtepu32_pd = ~f{~V{8d}C~V{4q}}
	_mm512_maskz_cvtepu32_ps = ~f{~V{16f}S~V{8q}}
	_mm512_maskz_cvtepu8_epi32 = ~f{~V{8q}S~V{2q}}
	_mm512_maskz_cvtepu8_epi64 = ~f{~V{8q}C~V{2q}}
	_mm512_maskz_cvtpd_epi32 = ~f{~V{4q}C~V{8d}}
	_mm512_maskz_cvtpd_epu32 = ~f{~V{4q}C~V{8d}}
	_mm512_maskz_cvtpd_ps = ~f{~V{8f}C~V{8d}}
	_mm512_maskz_cvtph_ps = ~f{~V{16f}S~V{4q}}
	_mm512_maskz_cvtps_epi32 = ~f{~V{8q}S~V{16f}}
	_mm512_maskz_cvtps_epu32 = ~f{~V{8q}S~V{16f}}
	_mm512_maskz_cvtps_pd = ~f{~V{8d}C~V{8f}}
	_mm512_maskz_cvtsepi32_epi16 = ~f{~V{4q}S~V{8q}}
	_mm512_maskz_cvtsepi32_epi8 = ~f{~V{2q}S~V{8q}}
	_mm512_maskz_cvtsepi64_epi16 = ~f{~V{2q}C~V{8q}}
	_mm512_maskz_cvtsepi64_epi32 = ~f{~V{4q}C~V{8q}}
	_mm512_maskz_cvtsepi64_epi8 = ~f{~V{2q}C~V{8q}}
	_mm512_maskz_cvttpd_epi32 = ~f{~V{4q}C~V{8d}}
	_mm512_maskz_cvttpd_epu32 = ~f{~V{4q}C~V{8d}}
	_mm512_maskz_cvttps_epi32 = ~f{~V{8q}S~V{16f}}
	_mm512_maskz_cvttps_epu32 = ~f{~V{8q}S~V{16f}}
	_mm512_maskz_cvtusepi32_epi16 = ~f{~V{4q}S~V{8q}}
	_mm512_maskz_cvtusepi32_epi8 = ~f{~V{2q}S~V{8q}}
	_mm512_maskz_cvtusepi64_epi16 = ~f{~V{2q}C~V{8q}}
	_mm512_maskz_cvtusepi64_epi32 = ~f{~V{4q}C~V{8q}}
	_mm512_maskz_cvtusepi64_epi8 = ~f{~V{2q}C~V{8q}}
	_mm512_maskz_div_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_div_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_expand_epi32 = ~f{~V{8q}S~V{8q}}
	_mm512_maskz_expand_epi64 = ~f{~V{8q}C~V{8q}}
	_mm512_maskz_expand_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_expand_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_expandloadu_epi32 = ~f{~V{8q}S^v}
	_mm512_maskz_expandloadu_epi64 = ~f{~V{8q}C^v}
	_mm512_maskz_expandloadu_pd = ~f{~V{8d}C^v}
	_mm512_maskz_expandloadu_ps = ~f{~V{16f}S^v}
	_mm512_maskz_fmadd_pd = ~f{~V{8d}C~V{8d}~V{8d}~V{8d}}
	_mm512_maskz_fmadd_ps = ~f{~V{16f}S~V{16f}~V{16f}~V{16f}}
	_mm512_maskz_fmaddsub_pd = ~f{~V{8d}C~V{8d}~V{8d}~V{8d}}
	_mm512_maskz_fmaddsub_ps = ~f{~V{16f}S~V{16f}~V{16f}~V{16f}}
	_mm512_maskz_fmsub_pd = ~f{~V{8d}C~V{8d}~V{8d}~V{8d}}
	_mm512_maskz_fmsub_ps = ~f{~V{16f}S~V{16f}~V{16f}~V{16f}}
	_mm512_maskz_fmsubadd_pd = ~f{~V{8d}C~V{8d}~V{8d}~V{8d}}
	_mm512_maskz_fmsubadd_ps = ~f{~V{16f}S~V{16f}~V{16f}~V{16f}}
	_mm512_maskz_fnmadd_pd = ~f{~V{8d}C~V{8d}~V{8d}~V{8d}}
	_mm512_maskz_fnmadd_ps = ~f{~V{16f}S~V{16f}~V{16f}~V{16f}}
	_mm512_maskz_fnmsub_pd = ~f{~V{8d}C~V{8d}~V{8d}~V{8d}}
	_mm512_maskz_fnmsub_ps = ~f{~V{16f}S~V{16f}~V{16f}~V{16f}}
	_mm512_maskz_getexp_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_getexp_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_load_epi32 = ~f{~V{8q}S^v}
	_mm512_maskz_load_epi64 = ~f{~V{8q}C^v}
	_mm512_maskz_load_pd = ~f{~V{8d}C^v}
	_mm512_maskz_load_ps = ~f{~V{16f}S^v}
	_mm512_maskz_loadu_epi32 = ~f{~V{8q}S^v}
	_mm512_maskz_loadu_epi64 = ~f{~V{8q}C^v}
	_mm512_maskz_loadu_pd = ~f{~V{8d}C^v}
	_mm512_maskz_loadu_ps = ~f{~V{16f}S^v}
	_mm512_maskz_max_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_max_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_max_epu32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_max_epu64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_max_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_max_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_min_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_min_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_min_epu32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_min_epu64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_min_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_min_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_mov_epi32 = ~f{~V{8q}S~V{8q}}
	_mm512_maskz_mov_epi64 = ~f{~V{8q}C~V{8q}}
	_mm512_maskz_mov_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_mov_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_movedup_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_movehdup_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_moveldup_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_mul_epi32 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_mul_epu32 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_mul_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_mul_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_mullo_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_or_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_or_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_permutevar_pd = ~f{~V{8d}C~V{8d}~V{8q}}
	_mm512_maskz_permutevar_ps = ~f{~V{16f}S~V{16f}~V{8q}}
	_mm512_maskz_permutex2var_epi32 = ~f{~V{8q}S~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_permutex2var_epi64 = ~f{~V{8q}C~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_permutex2var_pd = ~f{~V{8d}C~V{8d}~V{8q}~V{8d}}
	_mm512_maskz_permutex2var_ps = ~f{~V{16f}S~V{16f}~V{8q}~V{16f}}
	_mm512_maskz_permutexvar_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_permutexvar_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_permutexvar_pd = ~f{~V{8d}C~V{8q}~V{8d}}
	_mm512_maskz_permutexvar_ps = ~f{~V{16f}S~V{8q}~V{16f}}
	_mm512_maskz_rcp14_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_rcp14_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_rolv_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_rolv_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_rorv_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_rorv_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_rsqrt14_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_rsqrt14_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_scalef_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_scalef_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_set1_epi32 = ~f{~V{8q}Si}
	_mm512_maskz_set1_epi64 = ~f{~V{8q}Cq}
	_mm512_maskz_sll_epi32 = ~f{~V{8q}S~V{8q}~V{2q}}
	_mm512_maskz_sll_epi64 = ~f{~V{8q}C~V{8q}~V{2q}}
	_mm512_maskz_slli_epi32 = ~f{~V{8q}S~V{8q}i}
	_mm512_maskz_slli_epi64 = ~f{~V{8q}C~V{8q}i}
	_mm512_maskz_sllv_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_sllv_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_sqrt_pd = ~f{~V{8d}C~V{8d}}
	_mm512_maskz_sqrt_ps = ~f{~V{16f}S~V{16f}}
	_mm512_maskz_sra_epi32 = ~f{~V{8q}S~V{8q}~V{2q}}
	_mm512_maskz_sra_epi64 = ~f{~V{8q}C~V{8q}~V{2q}}
	_mm512_maskz_srai_epi32 = ~f{~V{8q}S~V{8q}i}
	_mm512_maskz_srai_epi64 = ~f{~V{8q}C~V{8q}i}
	_mm512_maskz_srav_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_srav_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_srl_epi32 = ~f{~V{8q}S~V{8q}~V{2q}}
	_mm512_maskz_srl_epi64 = ~f{~V{8q}C~V{8q}~V{2q}}
	_mm512_maskz_srli_epi32 = ~f{~V{8q}S~V{8q}i}
	_mm512_maskz_srli_epi64 = ~f{~V{8q}C~V{8q}i}
	_mm512_maskz_srlv_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_srlv_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_sub_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_sub_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_sub_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_sub_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_unpackhi_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_unpackhi_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_unpackhi_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_unpackhi_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_unpacklo_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_unpacklo_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_unpacklo_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_unpacklo_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_xor_epi32 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_xor_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_max_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_max_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_max_epu32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_max_epu64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_max_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_max_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_min_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_epu32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_epu64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_min_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_movedup_pd = ~f{~V{8d}~V{8d}}
	_mm512_movehdup_ps = ~f{~V{16f}~V{16f}}
	_mm512_moveldup_ps = ~f{~V{16f}~V{16f}}
	_mm512_mul_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mul_epu32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mul_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_mul_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_mullo_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mullox_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_or_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_or_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_or_si512 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_permutevar_pd = ~f{~V{8d}~V{8d}~V{8q}}
	_mm512_permutevar_ps = ~f{~V{16f}~V{16f}~V{8q}}
	_mm512_permutex2var_epi32 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_permutex2var_epi64 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_permutex2var_pd = ~f{~V{8d}~V{8d}~V{8q}~V{8d}}
	_mm512_permutex2var_ps = ~f{~V{16f}~V{16f}~V{8q}~V{16f}}
	_mm512_permutexvar_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_permutexvar_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_permutexvar_pd = ~f{~V{8d}~V{8q}~V{8d}}
	_mm512_permutexvar_ps = ~f{~V{16f}~V{8q}~V{16f}}
	_mm512_rcp14_pd = ~f{~V{8d}~V{8d}}
	_mm512_rcp14_ps = ~f{~V{16f}~V{16f}}
	_mm512_reduce_add_epi32 = ~f{i~V{8q}}
	_mm512_reduce_add_epi64 = ~f{q~V{8q}}
	_mm512_reduce_add_pd = ~f{d~V{8d}}
	_mm512_reduce_add_ps = ~f{f~V{16f}}
	_mm512_reduce_and_epi32 = ~f{i~V{8q}}
	_mm512_reduce_and_epi64 = ~f{q~V{8q}}
	_mm512_reduce_max_epi32 = ~f{i~V{8q}}
	_mm512_reduce_max_epi64 = ~f{q~V{8q}}
	_mm512_reduce_max_epu32 = ~f{I~V{8q}}
	_mm512_reduce_max_epu64 = ~f{Q~V{8q}}
	_mm512_reduce_max_pd = ~f{d~V{8d}}
	_mm512_reduce_max_ps = ~f{f~V{16f}}
	_mm512_reduce_min_epi32 = ~f{i~V{8q}}
	_mm512_reduce_min_epi64 = ~f{q~V{8q}}
	_mm512_reduce_min_epu32 = ~f{I~V{8q}}
	_mm512_reduce_min_epu64 = ~f{Q~V{8q}}
	_mm512_reduce_min_pd = ~f{d~V{8d}}
	_mm512_reduce_min_ps = ~f{f~V{16f}}
	_mm512_reduce_mul_epi32 = ~f{i~V{8q}}
	_mm512_reduce_mul_epi64 = ~f{q~V{8q}}
	_mm512_reduce_mul_pd = ~f{d~V{8d}}
	_mm512_reduce_mul_ps = ~f{f~V{16f}}
	_mm512_reduce_or_epi32 = ~f{i~V{8q}}
	_mm512_reduce_or_epi64 = ~f{q~V{8q}}
	_mm512_rolv_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_rolv_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_rorv_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_rorv_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_rsqrt14_pd = ~f{~V{8d}~V{8d}}
	_mm512_rsqrt14_ps = ~f{~V{16f}~V{16f}}
	_mm512_scalef_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_scalef_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_set1_epi16 = ~f{~V{8q}s}
	_mm512_set1_epi32 = ~f{~V{8q}i}
	_mm512_set1_epi64 = ~f{~V{8q}q}
	_mm512_set1_epi8 = ~f{~V{8q}c}
	_mm512_set1_pd = ~f{~V{8d}d}
	_mm512_set1_ps = ~f{~V{16f}f}
	_mm512_set4_epi32 = ~f{~V{8q}iiii}
	_mm512_set4_epi64 = ~f{~V{8q}qqqq}
	_mm512_set4_pd = ~f{~V{8d}dddd}
	_mm512_set4_ps = ~f{~V{16f}ffff}
	_mm512_set_epi16 = ~f{~V{8q}ssssssssssssssssssssssssssssssss}
	_mm512_set_epi32 = ~f{~V{8q}iiiiiiiiiiiiiiii}
	_mm512_set_epi64 = ~f{~V{8q}qqqqqqqq}
	_mm512_set_epi8 = ~f{~V{8q}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}
	_mm512_set_pd = ~f{~V{8d}dddddddd}
	_mm512_set_ps = ~f{~V{16f}ffffffffffffffff}
	_mm512_setzero_pd = ~f{~V{8d}}
	_mm512_setzero_ps = ~f{~V{16f}}
	_mm512_setzero_si512 = ~f{~V{8q}}
	_mm512_sll_epi32 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_sll_epi64 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_slli_epi32 = ~f{~V{8q}~V{8q}i}
	_mm512_slli_epi64 = ~f{~V{8q}~V{8q}i}
	_mm512_sllv_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sllv_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sqrt_pd = ~f{~V{8d}~V{8d}}
	_mm512_sqrt_ps = ~f{~V{16f}~V{16f}}
	_mm512_sra_epi32 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_sra_epi64 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_srai_epi32 = ~f{~V{8q}~V{8q}i}
	_mm512_srai_epi64 = ~f{~V{8q}~V{8q}i}
	_mm512_srav_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_srav_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_srl_epi32 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_srl_epi64 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_srli_epi32 = ~f{~V{8q}~V{8q}i}
	_mm512_srli_epi64 = ~f{~V{8q}~V{8q}i}
	_mm512_srlv_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_srlv_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_store_epi32 = ~f{v^v~V{8q}}
	_mm512_store_epi64 = ~f{v^v~V{8q}}
	_mm512_store_pd = ~f{v^v~V{8d}}
	_mm512_store_ps = ~f{v^v~V{16f}}
	_mm512_store_si512 = ~f{v^v~V{8q}}
	_mm512_storeu_epi32 = ~f{v^v~V{8q}}
	_mm512_storeu_epi64 = ~f{v^v~V{8q}}
	_mm512_storeu_pd = ~f{v^v~V{8d}}
	_mm512_storeu_ps = ~f{v^v~V{16f}}
	_mm512_storeu_si512 = ~f{v^v~V{8q}}
	_mm512_stream_load_si512 = ~f{~V{8q}^v}
	_mm512_stream_pd = ~f{v^d~V{8d}}
	_mm512_stream_ps = ~f{v^f~V{16f}}
	_mm512_stream_si512 = ~f{v^~V{8q}~V{8q}}
	_mm512_sub_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sub_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sub_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_sub_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_test_epi32_mask = ~f{S~V{8q}~V{8q}}
	_mm512_test_epi64_mask = ~f{C~V{8q}~V{8q}}
	_mm512_testn_epi32_mask = ~f{S~V{8q}~V{8q}}
	_mm512_testn_epi64_mask = ~f{C~V{8q}~V{8q}}
	_mm512_undefined = ~f{~V{16f}}
	_mm512_undefined_epi32 = ~f{~V{8q}}
	_mm512_undefined_pd = ~f{~V{8d}}
	_mm512_undefined_ps = ~f{~V{16f}}
	_mm512_unpackhi_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_unpackhi_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_unpackhi_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_unpackhi_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_unpacklo_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_unpacklo_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_unpacklo_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_unpacklo_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_xor_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_xor_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_xor_si512 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_zextpd128_pd512 = ~f{~V{8d}~V{2d}}
	_mm512_zextpd256_pd512 = ~f{~V{8d}~V{4d}}
	_mm512_zextps128_ps512 = ~f{~V{16f}~V{4f}}
	_mm512_zextps256_ps512 = ~f{~V{16f}~V{8f}}
	_mm512_zextsi128_si512 = ~f{~V{8q}~V{2q}}
	_mm512_zextsi256_si512 = ~f{~V{8q}~V{4q}}
	_mm_cvtsd_u32 = ~f{I~V{2d}}
	_mm_cvtsd_u64 = ~f{Q~V{2d}}
	_mm_cvtss_u32 = ~f{I~V{4f}}
	_mm_cvtss_u64 = ~f{Q~V{4f}}
	_mm_cvttsd_i32 = ~f{i~V{2d}}
	_mm_cvttsd_i64 = ~f{q~V{2d}}
	_mm_cvttsd_u32 = ~f{I~V{2d}}
	_mm_cvttsd_u64 = ~f{Q~V{2d}}
	_mm_cvttss_i32 = ~f{i~V{4f}}
	_mm_cvttss_i64 = ~f{q~V{4f}}
	_mm_cvttss_u32 = ~f{I~V{4f}}
	_mm_cvttss_u64 = ~f{Q~V{4f}}
	_mm_cvtu32_sd = ~f{~V{2d}~V{2d}I}
	_mm_cvtu32_ss = ~f{~V{4f}~V{4f}I}
	_mm_cvtu64_sd = ~f{~V{2d}~V{2d}Q}
	_mm_cvtu64_ss = ~f{~V{4f}~V{4f}Q}
	_mm_getexp_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_getexp_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_mask3_fmadd_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fmadd_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fmsub_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fmsub_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fnmadd_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fnmadd_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fnmsub_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fnmsub_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask_add_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_add_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_cvtsd_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{2d}}
	_mm_mask_cvtss_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{4f}}
	_mm_mask_div_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_div_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fmadd_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fmadd_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fmsub_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fmsub_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fnmadd_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fnmadd_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fnmsub_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fnmsub_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_getexp_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_getexp_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_load_sd = ~f{~V{2d}~V{2d}C^d}
	_mm_mask_load_ss = ~f{~V{4f}~V{4f}C^f}
	_mm_mask_max_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_max_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_min_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_min_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_move_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_move_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_mul_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_mul_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_rcp14_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_rcp14_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_rsqrt14_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_rsqrt14_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_scalef_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_scalef_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_sqrt_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_sqrt_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_store_sd = ~f{v^dC~V{2d}}
	_mm_mask_store_ss = ~f{v^fC~V{4f}}
	_mm_mask_sub_sd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_sub_ss = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_add_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_add_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_cvtsd_ss = ~f{~V{4f}C~V{4f}~V{2d}}
	_mm_maskz_cvtss_sd = ~f{~V{2d}C~V{2d}~V{4f}}
	_mm_maskz_div_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_div_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_fmadd_sd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fmadd_ss = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fmsub_sd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fmsub_ss = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fnmadd_sd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fnmadd_ss = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fnmsub_sd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fnmsub_ss = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_getexp_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_getexp_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_load_sd = ~f{~V{2d}C^d}
	_mm_maskz_load_ss = ~f{~V{4f}C^f}
	_mm_maskz_max_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_max_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_min_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_min_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_move_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_move_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_mul_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_mul_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_rcp14_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_rcp14_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_rsqrt14_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_rsqrt14_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_scalef_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_scalef_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_sqrt_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_sqrt_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_sub_sd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_sub_ss = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_rcp14_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_rcp14_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_rsqrt14_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_rsqrt14_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_scalef_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_scalef_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_store_mask16 = ~f{v^SS}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/VideoToolbox.framework/Headers/VTUtilities.h
	VTCreateCGImageFromCVPixelBuffer = ~f{i^v^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/KeyPath.h
	__swift_keyPathGenericWitnessTable_addr = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/semaphore.h
	dispatch_semaphore_create = ~f{@l}
	dispatch_semaphore_signal = ~f{l@}
	dispatch_semaphore_wait = ~f{l@Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMessagePort.h
	CFMessagePortCreateLocal = ~f{^v^v^v^~f{^v^vi^v^v}^v^C}
	CFMessagePortCreateRemote = ~f{^v^v^v}
	CFMessagePortCreateRunLoopSource = ~f{^v^v^vl}
	CFMessagePortGetContext = ~f{v^v^v}
	CFMessagePortGetInvalidationCallBack = ~f{^~f{v^v^v}^v}
	CFMessagePortGetName = ~f{^v^v}
	CFMessagePortGetTypeID = ~f{L}
	CFMessagePortInvalidate = ~f{v^v}
	CFMessagePortIsRemote = ~f{C^v}
	CFMessagePortIsValid = ~f{C^v}
	CFMessagePortSendRequest = ~f{i^vi^vdd^v^^v}
	CFMessagePortSetDispatchQueue = ~f{v^v@}
	CFMessagePortSetInvalidationCallBack = ~f{v^v^~f{v^v^v}}
	CFMessagePortSetName = ~f{C^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLDevice.h
	MTLCopyAllDevices = ~f{@}
	MTLCreateSystemDefaultDevice = ~f{@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/data.h
	dispatch_data_apply = ~f{B@%~f{B@L^vL}}
	dispatch_data_copy_region = ~f{@@L^L}
	dispatch_data_create = ~f{@^vL@%~f{v}}
	dispatch_data_create_concat = ~f{@@@}
	dispatch_data_create_map = ~f{@@^^v^L}
	dispatch_data_create_subrange = ~f{@@LL}
	dispatch_data_get_size = ~f{L@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/ttyent.h
	endttyent = ~f{i}
	getttyent = ~f{^v}
	getttynam = ~f{^v^c}
	setttyent = ~f{i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/ipp.h
	ippAddBoolean = ~f{^v^vi^cc}
	ippAddBooleans = ~f{^v^vi^ci^c}
	ippAddCollection = ~f{^v^vi^c^v}
	ippAddCollections = ~f{^v^vi^ci^^v}
	ippAddDate = ~f{^v^vi^c^C}
	ippAddInteger = ~f{^v^vii^ci}
	ippAddIntegers = ~f{^v^vii^ci^i}
	ippAddOctetString = ~f{^v^vi^c^vi}
	ippAddOutOfBand = ~f{^v^vii^c}
	ippAddRange = ~f{^v^vi^cii}
	ippAddRanges = ~f{^v^vi^ci^i^i}
	ippAddResolution = ~f{^v^vi^cIii}
	ippAddResolutions = ~f{^v^vi^ciI^i^i}
	ippAddSeparator = ~f{^v^v}
	ippAddString = ~f{^v^vii^c^c^c}
	ippAddStringf = ~f{^v^vii^c^c^c$}
	ippAddStringfv = ~f{^v^vii^c^c^c^v}
	ippAddStrings = ~f{^v^vii^ci^c^^c}
	ippAttributeString = ~f{L^v^cL}
	ippContainsInteger = ~f{i^vi}
	ippContainsString = ~f{i^v^c}
	ippCopyAttribute = ~f{^v^v^vi}
	ippCopyAttributes = ~f{i^v^vi^~f{i^v^v^v}^v}
	ippCreateRequestedArray = ~f{^v^v}
	ippDateToTime = ~f{l^C}
	ippDelete = ~f{v^v}
	ippDeleteAttribute = ~f{v^v^v}
	ippDeleteValues = ~f{i^v^^vii}
	ippEnumString = ~f{^c^ci}
	ippEnumValue = ~f{i^c^c}
	ippErrorString = ~f{^ci}
	ippErrorValue = ~f{i^c}
	ippFindAttribute = ~f{^v^v^ci}
	ippFindNextAttribute = ~f{^v^v^ci}
	ippFirstAttribute = ~f{^v^v}
	ippGetBoolean = ~f{i^vi}
	ippGetCollection = ~f{^v^vi}
	ippGetCount = ~f{i^v}
	ippGetDate = ~f{^C^vi}
	ippGetGroupTag = ~f{i^v}
	ippGetInteger = ~f{i^vi}
	ippGetName = ~f{^c^v}
	ippGetOctetString = ~f{^v^vi^i}
	ippGetOperation = ~f{i^v}
	ippGetRange = ~f{i^vi^i}
	ippGetRequestId = ~f{i^v}
	ippGetResolution = ~f{i^vi^i^I}
	ippGetState = ~f{i^v}
	ippGetStatusCode = ~f{i^v}
	ippGetString = ~f{^c^vi^^c}
	ippGetValueTag = ~f{i^v}
	ippGetVersion = ~f{i^v^i}
	ippLength = ~f{L^v}
	ippNew = ~f{^v}
	ippNewRequest = ~f{^vi}
	ippNewResponse = ~f{^v^v}
	ippNextAttribute = ~f{^v^v}
	ippOpString = ~f{^ci}
	ippOpValue = ~f{i^c}
	ippPort = ~f{i}
	ippRead = ~f{i^v^v}
	ippReadFile = ~f{ii^v}
	ippReadIO = ~f{i^v^~f{l^v^CL}i^v^v}
	ippSetBoolean = ~f{i^v^^vii}
	ippSetCollection = ~f{i^v^^vi^v}
	ippSetDate = ~f{i^v^^vi^C}
	ippSetGroupTag = ~f{i^v^^vi}
	ippSetInteger = ~f{i^v^^vii}
	ippSetName = ~f{i^v^^v^c}
	ippSetOctetString = ~f{i^v^^vi^vi}
	ippSetOperation = ~f{i^vi}
	ippSetPort = ~f{vi}
	ippSetRange = ~f{i^v^^viii}
	ippSetRequestId = ~f{i^vi}
	ippSetResolution = ~f{i^v^^viIii}
	ippSetState = ~f{i^vi}
	ippSetStatusCode = ~f{i^vi}
	ippSetString = ~f{i^v^^vi^c}
	ippSetStringf = ~f{i^v^^vi^c$}
	ippSetStringfv = ~f{i^v^^vi^c^v}
	ippSetValueTag = ~f{i^v^^vi}
	ippSetVersion = ~f{i^vii}
	ippStateString = ~f{^ci}
	ippTagString = ~f{^ci}
	ippTagValue = ~f{i^c}
	ippTimeToDate = ~f{^Cl}
	ippValidateAttribute = ~f{i^v}
	ippValidateAttributes = ~f{i^v}
	ippWrite = ~f{i^v^v}
	ippWriteFile = ~f{ii^v}
	ippWriteIO = ~f{i^v^~f{l^v^CL}i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GSS.framework/Headers/gssapi_protos.h
	gss_accept_sec_context = ~f{I^I^^v^v^v^v^^v^^v^v^I^I^^v}
	gss_acquire_cred = ~f{I^I^vI^vi^^v^^v^I}
	gss_acquire_cred_with_password = ~f{I^I^v^vI^vi^^v^^v^I}
	gss_add_buffer_set_member = ~f{I^I^v^^v}
	gss_add_cred = ~f{I^I^v^v^viII^^v^^v^I^I}
	gss_add_oid_set_member = ~f{I^I^v^^v}
	gss_canonicalize_name = ~f{I^I^v^v^^v}
	gss_compare_name = ~f{I^I^v^v^i}
	gss_context_time = ~f{I^I^v^I}
	gss_create_empty_buffer_set = ~f{I^I^^v}
	gss_create_empty_oid_set = ~f{I^I^^v}
	gss_decapsulate_token = ~f{I^v^v^v}
	gss_delete_sec_context = ~f{I^I^^v^v}
	gss_destroy_cred = ~f{I^I^^v}
	gss_display_mech_attr = ~f{I^I^v^v^v^v}
	gss_display_name = ~f{I^I^v^v^^v}
	gss_display_status = ~f{I^IIi^v^I^v}
	gss_duplicate_name = ~f{I^I^v^^v}
	gss_duplicate_oid = ~f{I^I^v^^v}
	gss_encapsulate_token = ~f{I^v^v^v}
	gss_export_cred = ~f{I^I^v^v}
	gss_export_name = ~f{I^I^v^v}
	gss_export_sec_context = ~f{I^I^^v^v}
	gss_get_mic = ~f{I^I^vI^v^v}
	gss_import_cred = ~f{I^I^v^^v}
	gss_import_name = ~f{I^I^v^v^^v}
	gss_import_sec_context = ~f{I^I^v^^v}
	gss_indicate_mechs = ~f{I^I^^v}
	gss_indicate_mechs_by_attrs = ~f{I^I^v^v^v^^v}
	gss_init_sec_context = ~f{I^I^v^^v^v^vII^v^v^^v^v^I^I}
	gss_inquire_attrs_for_mech = ~f{I^I^v^^v^^v}
	gss_inquire_context = ~f{I^I^v^^v^^v^I^^v^I^i^i}
	gss_inquire_cred = ~f{I^I^v^^v^I^i^^v}
	gss_inquire_cred_by_mech = ~f{I^I^v^v^^v^I^I^i}
	gss_inquire_cred_by_oid = ~f{I^I^v^v^^v}
	gss_inquire_mech_for_saslname = ~f{I^I^v^^v}
	gss_inquire_mechs_for_name = ~f{I^I^v^^v}
	gss_inquire_name = ~f{I^I^v^i^^v^^v}
	gss_inquire_names_for_mech = ~f{I^I^v^^v}
	gss_inquire_saslname_for_mech = ~f{I^I^v^v^v^v}
	gss_inquire_sec_context_by_oid = ~f{I^I^v^v^^v}
	gss_iter_creds = ~f{I^II^v%~f{v^v^v}}
	gss_iter_creds_f = ~f{I^II^v^v^~f{v^v^v^v}}
	gss_krb5_ccache_name = ~f{I^I^c^^c}
	gss_krb5_copy_ccache = ~f{I^I^v^v}
	gss_krb5_export_lucid_sec_context = ~f{I^I^^vI^^v}
	gss_krb5_free_lucid_sec_context = ~f{I^I^v}
	gss_krb5_set_allowable_enctypes = ~f{I^I^vI^i}
	gss_oid_equal = ~f{i^v^v}
	gss_oid_to_str = ~f{I^I^v^v}
	gss_process_context_token = ~f{I^I^v^v}
	gss_pseudo_random = ~f{I^I^vi^vl^v}
	gss_release_buffer = ~f{I^I^v}
	gss_release_buffer_set = ~f{I^I^^v}
	gss_release_cred = ~f{I^I^^v}
	gss_release_name = ~f{I^I^^v}
	gss_release_oid = ~f{I^I^^v}
	gss_release_oid_set = ~f{I^I^^v}
	gss_seal = ~f{I^I^vii^v^i^v}
	gss_set_cred_option = ~f{I^I^^v^v^v}
	gss_set_sec_context_option = ~f{I^I^^v^v^v}
	gss_sign = ~f{I^I^vi^v^v}
	gss_test_oid_set_member = ~f{I^I^v^v^i}
	gss_unseal = ~f{I^I^v^v^v^i^i}
	gss_unwrap = ~f{I^I^v^v^v^i^I}
	gss_userok = ~f{i^v^c}
	gss_verify = ~f{I^I^v^v^v^i}
	gss_verify_mic = ~f{I^I^v^v^v^I}
	gss_wrap = ~f{I^I^viI^v^i^v}
	gss_wrap_size_limit = ~f{I^I^viII^I}
	gsskrb5_extract_authz_data_from_sec_context = ~f{I^I^vi^v}
	gsskrb5_register_acceptor_identity = ~f{I^c}
	krb5_gss_register_acceptor_identity = ~f{I^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/crt_externs.h
	_NSGetArgc = ~f{^i}
	_NSGetArgv = ~f{^^^c}
	_NSGetEnviron = ~f{^^^c}
	_NSGetMachExecuteHeader = ~f{^v}
	_NSGetProgname = ~f{^^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetDiagnostics.h
	CFNetDiagnosticCopyNetworkStatusPassively = ~f{l^v^^v}
	CFNetDiagnosticCreateWithStreams = ~f{^v^v^v^v}
	CFNetDiagnosticCreateWithURL = ~f{^v^v^v}
	CFNetDiagnosticDiagnoseProblemInteractively = ~f{l^v}
	CFNetDiagnosticSetName = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSCoderShims.h
	__NSCoderDecodeObject = ~f{@@^@}
	__NSCoderDecodeObjectForKey = ~f{@@@^@}
	__NSCoderDecodeObjectOfClassForKey = ~f{@@@@^@}
	__NSCoderDecodeObjectOfClassesForKey = ~f{@@@@^@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Convolution.h
	vImageBoxConvolve_ARGB8888 = ~f{l^v^v^vLLII^CI}
	vImageBoxConvolve_Planar8 = ~f{l^v^v^vLLIICI}
	vImageConvolveMultiKernel_ARGB8888 = ~f{l^v^v^vLL^^sII^i^i^CI}
	vImageConvolveMultiKernel_ARGBFFFF = ~f{l^v^v^vLL^^fII^f^fI}
	vImageConvolveWithBias_ARGB8888 = ~f{l^v^v^vLL^sIIii^CI}
	vImageConvolveWithBias_ARGBFFFF = ~f{l^v^v^vLL^fIIf^fI}
	vImageConvolveWithBias_Planar8 = ~f{l^v^v^vLL^sIIiiCI}
	vImageConvolveWithBias_PlanarF = ~f{l^v^v^vLL^fIIffI}
	vImageConvolve_ARGB8888 = ~f{l^v^v^vLL^sIIi^CI}
	vImageConvolve_ARGBFFFF = ~f{l^v^v^vLL^fII^fI}
	vImageConvolve_Planar8 = ~f{l^v^v^vLL^sIIiCI}
	vImageConvolve_PlanarF = ~f{l^v^v^vLL^fIIfI}
	vImageRichardsonLucyDeConvolve_ARGB8888 = ~f{l^v^v^vLL^s^sIIIIii^CII}
	vImageRichardsonLucyDeConvolve_ARGBFFFF = ~f{l^v^v^vLL^f^fIIII^fII}
	vImageRichardsonLucyDeConvolve_Planar8 = ~f{l^v^v^vLL^s^sIIIIiiCII}
	vImageRichardsonLucyDeConvolve_PlanarF = ~f{l^v^v^vLL^f^fIIIIfII}
	vImageTentConvolve_ARGB8888 = ~f{l^v^v^vLLII^CI}
	vImageTentConvolve_Planar8 = ~f{l^v^v^vLLIICI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKVector3.h
	GLKVector3Add = ~f{{=fff}{=fff}{=fff}}
	GLKVector3AddScalar = ~f{{=fff}{=fff}f}
	GLKVector3AllEqualToScalar = ~f{B{=fff}f}
	GLKVector3AllEqualToVector3 = ~f{B{=fff}{=fff}}
	GLKVector3AllGreaterThanOrEqualToScalar = ~f{B{=fff}f}
	GLKVector3AllGreaterThanOrEqualToVector3 = ~f{B{=fff}{=fff}}
	GLKVector3AllGreaterThanScalar = ~f{B{=fff}f}
	GLKVector3AllGreaterThanVector3 = ~f{B{=fff}{=fff}}
	GLKVector3CrossProduct = ~f{{=fff}{=fff}{=fff}}
	GLKVector3Distance = ~f{f{=fff}{=fff}}
	GLKVector3Divide = ~f{{=fff}{=fff}{=fff}}
	GLKVector3DivideScalar = ~f{{=fff}{=fff}f}
	GLKVector3DotProduct = ~f{f{=fff}{=fff}}
	GLKVector3Length = ~f{f{=fff}}
	GLKVector3Lerp = ~f{{=fff}{=fff}{=fff}f}
	GLKVector3Make = ~f{{=fff}fff}
	GLKVector3MakeWithArray = ~f{{=fff}^f}
	GLKVector3Maximum = ~f{{=fff}{=fff}{=fff}}
	GLKVector3Minimum = ~f{{=fff}{=fff}{=fff}}
	GLKVector3Multiply = ~f{{=fff}{=fff}{=fff}}
	GLKVector3MultiplyScalar = ~f{{=fff}{=fff}f}
	GLKVector3Negate = ~f{{=fff}{=fff}}
	GLKVector3Normalize = ~f{{=fff}{=fff}}
	GLKVector3Project = ~f{{=fff}{=fff}{=fff}}
	GLKVector3Subtract = ~f{{=fff}{=fff}{=fff}}
	GLKVector3SubtractScalar = ~f{{=fff}{=fff}f}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/secure/_stdio.h
	__snprintf_chk = ~f{i^cLiL^c$}
	__sprintf_chk = ~f{i^ciL^c$}
	__vsnprintf_chk = ~f{i^cLiL^c^v}
	__vsprintf_chk = ~f{i^ciL^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/UnicodeShims.h
	__swift_stdlib_u_charAge = ~f{vi^C}
	__swift_stdlib_u_charName = ~f{iiI^ci^i}
	__swift_stdlib_u_getIntPropertyValue = ~f{iii}
	__swift_stdlib_u_getNumericValue = ~f{di}
	__swift_stdlib_u_hasBinaryProperty = ~f{cii}
	__swift_stdlib_u_strToLower = ~f{i^Si^Si^c^i}
	__swift_stdlib_u_strToTitle = ~f{i^Si^Si^v^c^i}
	__swift_stdlib_u_strToUpper = ~f{i^Si^Si^c^i}
	__swift_stdlib_ubrk_close = ~f{v^v}
	__swift_stdlib_ubrk_following = ~f{i^vi}
	__swift_stdlib_ubrk_open = ~f{^vI^c^Si^i}
	__swift_stdlib_ubrk_preceding = ~f{i^vi}
	__swift_stdlib_ubrk_setText = ~f{v^v^Si^i}
	__swift_stdlib_ubrk_setUText = ~f{v^v^v^i}
	__swift_stdlib_unorm2_getNFCInstance = ~f{^v^i}
	__swift_stdlib_unorm2_hasBoundaryBefore = ~f{c^vi}
	__swift_stdlib_unorm2_normalize = ~f{i^v^Si^Si^i}
	__swift_stdlib_unorm2_spanQuickCheckYes = ~f{i^v^Si^i}
	__swift_stdlib_utext_openUChars = ~f{^v^v^Sq^i}
	__swift_stdlib_utext_openUTF8 = ~f{^v^v^cq^i}
	_swift_stdlib_unicode_strToLower = ~f{i^Si^Si}
	_swift_stdlib_unicode_strToUpper = ~f{i^Si^Si}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/fts.h
	fts_children = ~f{^v^vi}
	fts_close = ~f{i^v}
	fts_open = ~f{^v^^ci^~f{i^^v^^v}}
	fts_open_b = ~f{^v^^ci%~f{i^^v^^v}}
	fts_read = ~f{^v^v}
	fts_set = ~f{i^v^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MediaAccessibility.framework/Headers/MACaptionAppearance.h
	MACaptionAppearanceAddSelectedLanguage = ~f{Bl^v}
	MACaptionAppearanceCopyBackgroundColor = ~f{^vl^l}
	MACaptionAppearanceCopyFontDescriptorForStyle = ~f{^vl^ll}
	MACaptionAppearanceCopyForegroundColor = ~f{^vl^l}
	MACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics = ~f{^vl}
	MACaptionAppearanceCopySelectedLanguages = ~f{^vl}
	MACaptionAppearanceCopyWindowColor = ~f{^vl^l}
	MACaptionAppearanceDidDisplayCaptions = ~f{v^v}
	MACaptionAppearanceGetBackgroundOpacity = ~f{dl^l}
	MACaptionAppearanceGetDisplayType = ~f{ll}
	MACaptionAppearanceGetForegroundOpacity = ~f{dl^l}
	MACaptionAppearanceGetRelativeCharacterSize = ~f{dl^l}
	MACaptionAppearanceGetTextEdgeStyle = ~f{ll^l}
	MACaptionAppearanceGetWindowOpacity = ~f{dl^l}
	MACaptionAppearanceGetWindowRoundedCornerRadius = ~f{dl^l}
	MACaptionAppearanceSetDisplayType = ~f{vll}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Endian.h
	CoreEndianFlipData = ~f{iIIs^vLC}
	CoreEndianGetFlipper = ~f{iII^^~f{iIIs^vLC^v}^^v}
	CoreEndianInstallFlipper = ~f{iII^~f{iIIs^vLC^v}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/rbtree.h
	rb_tree_count = ~f{L^v}
	rb_tree_find_node = ~f{^v^v^v}
	rb_tree_find_node_geq = ~f{^v^v^v}
	rb_tree_find_node_leq = ~f{^v^v^v}
	rb_tree_init = ~f{v^v^v}
	rb_tree_insert_node = ~f{^v^v^v}
	rb_tree_iterate = ~f{^v^v^vI}
	rb_tree_remove_node = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/protocol_options.h
	nw_protocol_definition_is_equal = ~f{B@@}
	nw_protocol_metadata_copy_definition = ~f{@@}
	nw_protocol_options_copy_definition = ~f{@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDate.h
	CFAbsoluteTimeAddGregorianUnits = ~f{dd^v{=iiiiid}}
	CFAbsoluteTimeGetCurrent = ~f{d}
	CFAbsoluteTimeGetDayOfWeek = ~f{id^v}
	CFAbsoluteTimeGetDayOfYear = ~f{id^v}
	CFAbsoluteTimeGetDifferenceAsGregorianUnits = ~f{{=iiiiid}dd^vL}
	CFAbsoluteTimeGetGregorianDate = ~f{{=iccccd}d^v}
	CFAbsoluteTimeGetWeekOfYear = ~f{id^v}
	CFDateCompare = ~f{l^v^v^v}
	CFDateCreate = ~f{^v^vd}
	CFDateGetAbsoluteTime = ~f{d^v}
	CFDateGetTimeIntervalSinceDate = ~f{d^v^v}
	CFDateGetTypeID = ~f{L}
	CFGregorianDateGetAbsoluteTime = ~f{d{=iccccd}^v}
	CFGregorianDateIsValid = ~f{C{=iccccd}L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/search.h
	hcreate = ~f{iL}
	hdestroy = ~f{v}
	hsearch = ~f{^v{=^c^v}I}
	insque = ~f{v^v^v}
	lfind = ~f{^v^v^v^LL^~f{i^v^v}}
	lsearch = ~f{^v^v^v^LL^~f{i^v^v}}
	remque = ~f{v^v}
	tdelete = ~f{^v^v^^v^~f{i^v^v}}
	tfind = ~f{^v^v^^v^~f{i^v^v}}
	tsearch = ~f{^v^v^^v^~f{i^v^v}}
	twalk = ~f{v^v^~f{v^vIi}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/UIKitOverlayShims.h
	_swift_UIKit_UIFocusEnvironmentContainsEnvironment = ~f{B@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFObject.h
	CGPDFObjectGetType = ~f{i^v}
	CGPDFObjectGetValue = ~f{B^vi^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/net/ethernet.h
	ether_aton = ~f{^v^c}
	ether_hostton = ~f{i^c^v}
	ether_line = ~f{i^c^v^c}
	ether_ntoa = ~f{^c^v}
	ether_ntohost = ~f{i^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/ioctl.h
	ioctl = ~f{iiL$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/JavaScriptCore.framework/Headers/JSTypedArray.h
	JSObjectGetArrayBufferByteLength = ~f{L^v^v^^v}
	JSObjectGetArrayBufferBytesPtr = ~f{^v^v^v^^v}
	JSObjectGetTypedArrayBuffer = ~f{^v^v^v^^v}
	JSObjectGetTypedArrayByteLength = ~f{L^v^v^^v}
	JSObjectGetTypedArrayByteOffset = ~f{L^v^v^^v}
	JSObjectGetTypedArrayBytesPtr = ~f{^v^v^v^^v}
	JSObjectGetTypedArrayLength = ~f{L^v^v^^v}
	JSObjectMakeArrayBufferWithBytesNoCopy = ~f{^v^v^vL^~f{v^v^v}^v^^v}
	JSObjectMakeTypedArray = ~f{^v^vIL^^v}
	JSObjectMakeTypedArrayWithArrayBuffer = ~f{^v^vI^v^^v}
	JSObjectMakeTypedArrayWithArrayBufferAndOffset = ~f{^v^vI^vLL^^v}
	JSObjectMakeTypedArrayWithBytesNoCopy = ~f{^v^vI^vL^~f{v^v^v}^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/_xlocale.h
	___mb_cur_max = ~f{i}
	___mb_cur_max_l = ~f{i^v}
/usr/local/lib/clang/9.0.1/include/waitpkgintrin.h
	_tpause = ~f{CIQ}
	_umonitor = ~f{v^v}
	_umwait = ~f{CIQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/ObjectiveCOverlayShims.h
	_swift_objc_autoreleasePoolPop = ~f{v^v}
	_swift_objc_autoreleasePoolPush = ?
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLRenderPass.h
	MTLClearColorMake = ~f{{=dddd}dddd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumber.h
	CFBooleanGetTypeID = ~f{L}
	CFBooleanGetValue = ~f{C^v}
	CFNumberCompare = ~f{l^v^v^v}
	CFNumberCreate = ~f{^v^vl^v}
	CFNumberGetByteSize = ~f{l^v}
	CFNumberGetType = ~f{l^v}
	CFNumberGetTypeID = ~f{L}
	CFNumberGetValue = ~f{C^vl^v}
	CFNumberIsFloatType = ~f{C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTextureCache.h
	CVOpenGLESTextureCacheCreate = ~f{i^v^v@^v^^v}
	CVOpenGLESTextureCacheCreateTextureFromImage = ~f{i^v^v^v^vIiiiIIL^^v}
	CVOpenGLESTextureCacheFlush = ~f{v^vQ}
	CVOpenGLESTextureCacheGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/stdio.h
	renameat = ~f{ii^ci^c}
	renameatx_np = ~f{ii^ci^cI}
	renamex_np = ~f{i^c^cI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/txt_record.h
	nw_txt_record_access_bytes = ~f{B@%~f{B^CL}}
	nw_txt_record_access_key = ~f{B@^c%~f{B^cI^CL}}
	nw_txt_record_apply = ~f{B@%~f{B^cI^CL}}
	nw_txt_record_copy = ~f{@@}
	nw_txt_record_create_dictionary = ~f{@}
	nw_txt_record_create_with_bytes = ~f{@^CL}
	nw_txt_record_find_key = ~f{I@^c}
	nw_txt_record_get_key_count = ~f{L@}
	nw_txt_record_is_dictionary = ~f{B@}
	nw_txt_record_is_equal = ~f{B@@}
	nw_txt_record_remove_key = ~f{B@^c}
	nw_txt_record_set_key = ~f{B@^c^CL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKVector2.h
	GLKVector2Add = ~f{{=ff}{=ff}{=ff}}
	GLKVector2AddScalar = ~f{{=ff}{=ff}f}
	GLKVector2AllEqualToScalar = ~f{B{=ff}f}
	GLKVector2AllEqualToVector2 = ~f{B{=ff}{=ff}}
	GLKVector2AllGreaterThanOrEqualToScalar = ~f{B{=ff}f}
	GLKVector2AllGreaterThanOrEqualToVector2 = ~f{B{=ff}{=ff}}
	GLKVector2AllGreaterThanScalar = ~f{B{=ff}f}
	GLKVector2AllGreaterThanVector2 = ~f{B{=ff}{=ff}}
	GLKVector2Distance = ~f{f{=ff}{=ff}}
	GLKVector2Divide = ~f{{=ff}{=ff}{=ff}}
	GLKVector2DivideScalar = ~f{{=ff}{=ff}f}
	GLKVector2DotProduct = ~f{f{=ff}{=ff}}
	GLKVector2Length = ~f{f{=ff}}
	GLKVector2Lerp = ~f{{=ff}{=ff}{=ff}f}
	GLKVector2Make = ~f{{=ff}ff}
	GLKVector2MakeWithArray = ~f{{=ff}^f}
	GLKVector2Maximum = ~f{{=ff}{=ff}{=ff}}
	GLKVector2Minimum = ~f{{=ff}{=ff}{=ff}}
	GLKVector2Multiply = ~f{{=ff}{=ff}{=ff}}
	GLKVector2MultiplyScalar = ~f{{=ff}{=ff}f}
	GLKVector2Negate = ~f{{=ff}{=ff}}
	GLKVector2Normalize = ~f{{=ff}{=ff}}
	GLKVector2Project = ~f{{=ff}{=ff}{=ff}}
	GLKVector2Subtract = ~f{{=ff}{=ff}{=ff}}
	GLKVector2SubtractScalar = ~f{{=ff}{=ff}f}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIApplication.h
	UIApplicationMain = ~f{ii^^c@@}
	UIInterfaceOrientationIsLandscape = ~f{Bl}
	UIInterfaceOrientationIsPortrait = ~f{Bl}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/LinearAlgebra/matrix.h
	la_diagonal_matrix_from_vector = ~f{@@l}
	la_identity_matrix = ~f{@LIL}
	la_matrix_cols = ~f{L@}
	la_matrix_from_double_buffer = ~f{@^dLLLLL}
	la_matrix_from_double_buffer_nocopy = ~f{@^dLLLL^~f{v^v}L}
	la_matrix_from_float_buffer = ~f{@^fLLLLL}
	la_matrix_from_float_buffer_nocopy = ~f{@^fLLLL^~f{v^v}L}
	la_matrix_rows = ~f{L@}
	la_matrix_slice = ~f{@@llllLL}
	la_matrix_to_double_buffer = ~f{l^dL@}
	la_matrix_to_float_buffer = ~f{l^fL@}
	la_vector_from_matrix_col = ~f{@@L}
	la_vector_from_matrix_diagonal = ~f{@@l}
	la_vector_from_matrix_row = ~f{@@L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/CFHashingShims.h
	CFHashBytes = ~f{L^Cl}
	__CFHashBytes = ~f{L^Cl}
	__CFHashDouble = ~f{Ld}
	__CFHashInt = ~f{Ll}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/CommonCrypto/CommonRandom.h
	CCRandomGenerateBytes = ~f{i^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_inttypes.h
	strtoimax_l = ~f{l^c^^ci^v}
	strtoumax_l = ~f{L^c^^ci^v}
	wcstoimax_l = ~f{l^i^^ii^v}
	wcstoumax_l = ~f{L^i^^ii^v}
/usr/local/lib/clang/9.0.1/include/avx512vldqintrin.h
	_mm256_broadcast_f32x2 = ~f{~V{8f}~V{4f}}
	_mm256_broadcast_f64x2 = ~f{~V{4d}~V{2d}}
	_mm256_broadcast_i32x2 = ~f{~V{4q}~V{2q}}
	_mm256_broadcast_i64x2 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepi64_pd = ~f{~V{4d}~V{4q}}
	_mm256_cvtepi64_ps = ~f{~V{4f}~V{4q}}
	_mm256_cvtepu64_pd = ~f{~V{4d}~V{4q}}
	_mm256_cvtepu64_ps = ~f{~V{4f}~V{4q}}
	_mm256_cvtpd_epi64 = ~f{~V{4q}~V{4d}}
	_mm256_cvtpd_epu64 = ~f{~V{4q}~V{4d}}
	_mm256_cvtps_epi64 = ~f{~V{4q}~V{4f}}
	_mm256_cvtps_epu64 = ~f{~V{4q}~V{4f}}
	_mm256_cvttpd_epi64 = ~f{~V{4q}~V{4d}}
	_mm256_cvttpd_epu64 = ~f{~V{4q}~V{4d}}
	_mm256_cvttps_epi64 = ~f{~V{4q}~V{4f}}
	_mm256_cvttps_epu64 = ~f{~V{4q}~V{4f}}
	_mm256_mask_and_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_and_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_andnot_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_andnot_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_broadcast_f32x2 = ~f{~V{8f}~V{8f}C~V{4f}}
	_mm256_mask_broadcast_f64x2 = ~f{~V{4d}~V{4d}C~V{2d}}
	_mm256_mask_broadcast_i32x2 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_broadcast_i64x2 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepi64_pd = ~f{~V{4d}~V{4d}C~V{4q}}
	_mm256_mask_cvtepi64_ps = ~f{~V{4f}~V{4f}C~V{4q}}
	_mm256_mask_cvtepu64_pd = ~f{~V{4d}~V{4d}C~V{4q}}
	_mm256_mask_cvtepu64_ps = ~f{~V{4f}~V{4f}C~V{4q}}
	_mm256_mask_cvtpd_epi64 = ~f{~V{4q}~V{4q}C~V{4d}}
	_mm256_mask_cvtpd_epu64 = ~f{~V{4q}~V{4q}C~V{4d}}
	_mm256_mask_cvtps_epi64 = ~f{~V{4q}~V{4q}C~V{4f}}
	_mm256_mask_cvtps_epu64 = ~f{~V{4q}~V{4q}C~V{4f}}
	_mm256_mask_cvttpd_epi64 = ~f{~V{4q}~V{4q}C~V{4d}}
	_mm256_mask_cvttpd_epu64 = ~f{~V{4q}~V{4q}C~V{4d}}
	_mm256_mask_cvttps_epi64 = ~f{~V{4q}~V{4q}C~V{4f}}
	_mm256_mask_cvttps_epu64 = ~f{~V{4q}~V{4q}C~V{4f}}
	_mm256_mask_mullo_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_or_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_or_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_xor_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_xor_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_and_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_and_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_andnot_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_andnot_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_broadcast_f32x2 = ~f{~V{8f}C~V{4f}}
	_mm256_maskz_broadcast_f64x2 = ~f{~V{4d}C~V{2d}}
	_mm256_maskz_broadcast_i32x2 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_broadcast_i64x2 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepi64_pd = ~f{~V{4d}C~V{4q}}
	_mm256_maskz_cvtepi64_ps = ~f{~V{4f}C~V{4q}}
	_mm256_maskz_cvtepu64_pd = ~f{~V{4d}C~V{4q}}
	_mm256_maskz_cvtepu64_ps = ~f{~V{4f}C~V{4q}}
	_mm256_maskz_cvtpd_epi64 = ~f{~V{4q}C~V{4d}}
	_mm256_maskz_cvtpd_epu64 = ~f{~V{4q}C~V{4d}}
	_mm256_maskz_cvtps_epi64 = ~f{~V{4q}C~V{4f}}
	_mm256_maskz_cvtps_epu64 = ~f{~V{4q}C~V{4f}}
	_mm256_maskz_cvttpd_epi64 = ~f{~V{4q}C~V{4d}}
	_mm256_maskz_cvttpd_epu64 = ~f{~V{4q}C~V{4d}}
	_mm256_maskz_cvttps_epi64 = ~f{~V{4q}C~V{4f}}
	_mm256_maskz_cvttps_epu64 = ~f{~V{4q}C~V{4f}}
	_mm256_maskz_mullo_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_or_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_or_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_xor_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_xor_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_movepi32_mask = ~f{C~V{4q}}
	_mm256_movepi64_mask = ~f{C~V{4q}}
	_mm256_movm_epi32 = ~f{~V{4q}C}
	_mm256_movm_epi64 = ~f{~V{4q}C}
	_mm256_mullo_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm_broadcast_i32x2 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi64_pd = ~f{~V{2d}~V{2q}}
	_mm_cvtepi64_ps = ~f{~V{4f}~V{2q}}
	_mm_cvtepu64_pd = ~f{~V{2d}~V{2q}}
	_mm_cvtepu64_ps = ~f{~V{4f}~V{2q}}
	_mm_cvtpd_epi64 = ~f{~V{2q}~V{2d}}
	_mm_cvtpd_epu64 = ~f{~V{2q}~V{2d}}
	_mm_cvtps_epi64 = ~f{~V{2q}~V{4f}}
	_mm_cvtps_epu64 = ~f{~V{2q}~V{4f}}
	_mm_cvttpd_epi64 = ~f{~V{2q}~V{2d}}
	_mm_cvttpd_epu64 = ~f{~V{2q}~V{2d}}
	_mm_cvttps_epi64 = ~f{~V{2q}~V{4f}}
	_mm_cvttps_epu64 = ~f{~V{2q}~V{4f}}
	_mm_mask_and_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_and_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_andnot_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_andnot_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_broadcast_i32x2 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi64_pd = ~f{~V{2d}~V{2d}C~V{2q}}
	_mm_mask_cvtepi64_ps = ~f{~V{4f}~V{4f}C~V{2q}}
	_mm_mask_cvtepu64_pd = ~f{~V{2d}~V{2d}C~V{2q}}
	_mm_mask_cvtepu64_ps = ~f{~V{4f}~V{4f}C~V{2q}}
	_mm_mask_cvtpd_epi64 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvtpd_epu64 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvtps_epi64 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_cvtps_epu64 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_cvttpd_epi64 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvttpd_epu64 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvttps_epi64 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_cvttps_epu64 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_mullo_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_or_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_or_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_xor_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_xor_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_and_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_and_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_andnot_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_andnot_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_broadcast_i32x2 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi64_pd = ~f{~V{2d}C~V{2q}}
	_mm_maskz_cvtepi64_ps = ~f{~V{4f}C~V{2q}}
	_mm_maskz_cvtepu64_pd = ~f{~V{2d}C~V{2q}}
	_mm_maskz_cvtepu64_ps = ~f{~V{4f}C~V{2q}}
	_mm_maskz_cvtpd_epi64 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvtpd_epu64 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvtps_epi64 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_cvtps_epu64 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_cvttpd_epi64 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvttpd_epu64 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvttps_epi64 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_cvttps_epu64 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_mullo_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_or_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_or_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_xor_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_xor_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_movepi32_mask = ~f{C~V{2q}}
	_mm_movepi64_mask = ~f{C~V{2q}}
	_mm_movm_epi32 = ~f{~V{2q}C}
	_mm_movm_epi64 = ~f{~V{2q}C}
	_mm_mullo_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/semaphore.h
	sem_close = ~f{i^i}
	sem_destroy = ~f{i^i}
	sem_getvalue = ~f{i^i^i}
	sem_init = ~f{i^iiI}
	sem_open = ~f{^i^ci$}
	sem_post = ~f{i^i}
	sem_trywait = ~f{i^i}
	sem_unlink = ~f{i^c}
	sem_wait = ~f{i^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFOperatorTable.h
	CGPDFOperatorTableCreate = ~f{^v}
	CGPDFOperatorTableRelease = ~f{v^v}
	CGPDFOperatorTableRetain = ~f{^v^v}
	CGPDFOperatorTableSetCallback = ~f{v^v^c^~f{v^v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBinaryHeap.h
	CFBinaryHeapAddValue = ~f{v^v^v}
	CFBinaryHeapApplyFunction = ~f{v^v^~f{v^v^v}^v}
	CFBinaryHeapContainsValue = ~f{C^v^v}
	CFBinaryHeapCreate = ~f{^v^vl^v^v}
	CFBinaryHeapCreateCopy = ~f{^v^vl^v}
	CFBinaryHeapGetCount = ~f{l^v}
	CFBinaryHeapGetCountOfValue = ~f{l^v^v}
	CFBinaryHeapGetMinimum = ~f{^v^v}
	CFBinaryHeapGetMinimumIfPresent = ~f{C^v^^v}
	CFBinaryHeapGetTypeID = ~f{L}
	CFBinaryHeapGetValues = ~f{v^v^^v}
	CFBinaryHeapRemoveAllValues = ~f{v^v}
	CFBinaryHeapRemoveMinimumValue = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/Headers/AVAudioSequencer.h
	AVMakeBeatRange = ~f{{=dd}dd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioSession.h
	AudioSessionAddPropertyListener = ~f{iI^~f{v^vII^v}^v}
	AudioSessionGetProperty = ~f{iI^I^v}
	AudioSessionGetPropertySize = ~f{iI^I}
	AudioSessionInitialize = ~f{i^v^v^~f{v^vI}^v}
	AudioSessionRemovePropertyListener = ~f{iI}
	AudioSessionRemovePropertyListenerWithUserData = ~f{iI^~f{v^vII^v}^v}
	AudioSessionSetActive = ~f{iC}
	AudioSessionSetActiveWithFlags = ~f{iCI}
	AudioSessionSetProperty = ~f{iII^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/uri.h
	xmlBuildRelativeURI = ~f{^C^C^C}
	xmlBuildURI = ~f{^C^C^C}
	xmlCanonicPath = ~f{^C^C}
	xmlCreateURI = ~f{^v}
	xmlFreeURI = ~f{v^v}
	xmlNormalizeURIPath = ~f{i^c}
	xmlParseURI = ~f{^v^c}
	xmlParseURIRaw = ~f{^v^ci}
	xmlParseURIReference = ~f{i^v^c}
	xmlPathToURI = ~f{^C^C}
	xmlPrintURI = ~f{v^v^v}
	xmlSaveUri = ~f{^C^v}
	xmlURIEscape = ~f{^C^C}
	xmlURIEscapeStr = ~f{^C^C^C}
	xmlURIUnescapeString = ~f{^c^ci^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/poll.h
	poll = ~f{i^vIi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContext.h
	CGPDFContextAddDestinationAtPoint = ~f{v^v^v{=dd}}
	CGPDFContextAddDocumentMetadata = ~f{v^v^v}
	CGPDFContextBeginPage = ~f{v^v^v}
	CGPDFContextBeginTag = ~f{v^vi^v}
	CGPDFContextClose = ~f{v^v}
	CGPDFContextCreate = ~f{^v^v^v^v}
	CGPDFContextCreateWithURL = ~f{^v^v^v^v}
	CGPDFContextEndPage = ~f{v^v}
	CGPDFContextEndTag = ~f{v^v}
	CGPDFContextSetDestinationForRect = ~f{v^v^v{={=dd}{=dd}}}
	CGPDFContextSetOutline = ~f{v^v^v}
	CGPDFContextSetURLForRect = ~f{v^v^v{={=dd}{=dd}}}
	CGPDFTagTypeGetName = ~f{^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/LinearAlgebra/norms.h
	la_norm_as_double = ~f{d@L}
	la_norm_as_float = ~f{f@L}
	la_normalized_vector = ~f{@@L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMFormatDescriptionBridge.h
	CMAudioFormatDescriptionCopyAsBigEndianSoundDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMAudioFormatDescriptionCreateFromBigEndianSoundDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMAudioFormatDescriptionCreateFromBigEndianSoundDescriptionData = ~f{i^v^CL^v^^v}
	CMClosedCaptionFormatDescriptionCopyAsBigEndianClosedCaptionDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMClosedCaptionFormatDescriptionCreateFromBigEndianClosedCaptionDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMClosedCaptionFormatDescriptionCreateFromBigEndianClosedCaptionDescriptionData = ~f{i^v^CL^v^^v}
	CMDoesBigEndianSoundDescriptionRequireLegacyCBRSampleTableLayout = ~f{C^v^v}
	CMMetadataFormatDescriptionCopyAsBigEndianMetadataDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMMetadataFormatDescriptionCreateFromBigEndianMetadataDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMMetadataFormatDescriptionCreateFromBigEndianMetadataDescriptionData = ~f{i^v^CL^v^^v}
	CMSwapBigEndianClosedCaptionDescriptionToHost = ~f{i^CL}
	CMSwapBigEndianImageDescriptionToHost = ~f{i^CL}
	CMSwapBigEndianMetadataDescriptionToHost = ~f{i^CL}
	CMSwapBigEndianSoundDescriptionToHost = ~f{i^CL}
	CMSwapBigEndianTextDescriptionToHost = ~f{i^CL}
	CMSwapBigEndianTimeCodeDescriptionToHost = ~f{i^CL}
	CMSwapHostEndianClosedCaptionDescriptionToBig = ~f{i^CL}
	CMSwapHostEndianImageDescriptionToBig = ~f{i^CL}
	CMSwapHostEndianMetadataDescriptionToBig = ~f{i^CL}
	CMSwapHostEndianSoundDescriptionToBig = ~f{i^CL}
	CMSwapHostEndianTextDescriptionToBig = ~f{i^CL}
	CMSwapHostEndianTimeCodeDescriptionToBig = ~f{i^CL}
	CMTextFormatDescriptionCopyAsBigEndianTextDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMTextFormatDescriptionCreateFromBigEndianTextDescriptionBlockBuffer = ~f{i^v^v^vI^^v}
	CMTextFormatDescriptionCreateFromBigEndianTextDescriptionData = ~f{i^v^CL^vI^^v}
	CMTimeCodeFormatDescriptionCopyAsBigEndianTimeCodeDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMTimeCodeFormatDescriptionCreateFromBigEndianTimeCodeDescriptionBlockBuffer = ~f{i^v^v^v^^v}
	CMTimeCodeFormatDescriptionCreateFromBigEndianTimeCodeDescriptionData = ~f{i^v^CL^v^^v}
	CMVideoFormatDescriptionCopyAsBigEndianImageDescriptionBlockBuffer = ~f{i^v^vI^v^^v}
	CMVideoFormatDescriptionCreateFromBigEndianImageDescriptionBlockBuffer = ~f{i^v^vI^v^^v}
	CMVideoFormatDescriptionCreateFromBigEndianImageDescriptionData = ~f{i^v^CLI^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_stdlib.h
	atof_l = ~f{d^c^v}
	atoi_l = ~f{i^c^v}
	atol_l = ~f{l^c^v}
	atoll_l = ~f{q^c^v}
	mblen_l = ~f{i^cL^v}
	mbstowcs_l = ~f{L^i^cL^v}
	mbtowc_l = ~f{i^i^cL^v}
	strtod_l = ~f{d^c^^c^v}
	strtof_l = ~f{f^c^^c^v}
	strtol_l = ~f{l^c^^ci^v}
	strtold_l = ~f{D^c^^c^v}
	strtoll_l = ~f{q^c^^ci^v}
	strtoq_l = ~f{q^c^^ci^v}
	strtoul_l = ~f{L^c^^ci^v}
	strtoull_l = ~f{Q^c^^ci^v}
	strtouq_l = ~f{Q^c^^ci^v}
	wcstombs_l = ~f{L^c^iL^v}
	wctomb_l = ~f{i^ci^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AddressBook.framework/Headers/ABMultiValue.h
	ABMultiValueAddValueAndLabel = ~f{B^v^v^v^i}
	ABMultiValueCopyArrayOfAllValues = ~f{^v^v}
	ABMultiValueCopyLabelAtIndex = ~f{^v^vl}
	ABMultiValueCopyValueAtIndex = ~f{^v^vl}
	ABMultiValueCreateMutable = ~f{^vI}
	ABMultiValueCreateMutableCopy = ~f{^v^v}
	ABMultiValueGetCount = ~f{l^v}
	ABMultiValueGetFirstIndexOfValue = ~f{l^v^v}
	ABMultiValueGetIdentifierAtIndex = ~f{i^vl}
	ABMultiValueGetIndexForIdentifier = ~f{l^vi}
	ABMultiValueGetPropertyType = ~f{I^v}
	ABMultiValueInsertValueAndLabelAtIndex = ~f{B^v^v^vl^i}
	ABMultiValueRemoveValueAndLabelAtIndex = ~f{B^vl}
	ABMultiValueReplaceLabelAtIndex = ~f{B^v^vl}
	ABMultiValueReplaceValueAtIndex = ~f{B^v^vl}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/strings.h
	bcmp = ~f{i^v^vL}
	bcopy = ~f{v^v^vL}
	bzero = ~f{v^vL}
	ffs = ~f{ii}
	ffsl = ~f{il}
	ffsll = ~f{iq}
	fls = ~f{ii}
	flsl = ~f{il}
	flsll = ~f{iq}
	index = ~f{^c^ci}
	rindex = ~f{^c^ci}
	strcasecmp = ~f{i^c^c}
	strncasecmp = ~f{i^c^cL}
/usr/local/lib/clang/9.0.1/include/mm3dnow.h
	_m_femms = ~f{v}
	_m_pavgusb = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pf2id = ~f{~V{1q}~V{1q}}
	_m_pf2iw = ~f{~V{1q}~V{1q}}
	_m_pfacc = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfadd = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfcmpeq = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfcmpge = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfcmpgt = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfmax = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfmin = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfmul = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfnacc = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfpnacc = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfrcp = ~f{~V{1q}~V{1q}}
	_m_pfrcpit1 = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfrcpit2 = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfrsqrt = ~f{~V{1q}~V{1q}}
	_m_pfrsqrtit1 = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfsub = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pfsubr = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pi2fd = ~f{~V{1q}~V{1q}}
	_m_pi2fw = ~f{~V{1q}~V{1q}}
	_m_pmulhrw = ~f{~V{1q}~V{1q}~V{1q}}
	_m_pswapdsf = ~f{~V{1q}~V{1q}}
	_m_pswapdsi = ~f{~V{1q}~V{1q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFNetServices.h
	CFNetServiceBrowserCreate = ~f{^v^v^~f{v^vL^v^v^v}^v}
	CFNetServiceBrowserGetTypeID = ~f{L}
	CFNetServiceBrowserInvalidate = ~f{v^v}
	CFNetServiceBrowserScheduleWithRunLoop = ~f{v^v^v^v}
	CFNetServiceBrowserSearchForDomains = ~f{C^vC^v}
	CFNetServiceBrowserSearchForServices = ~f{C^v^v^v^v}
	CFNetServiceBrowserStopSearch = ~f{v^v^v}
	CFNetServiceBrowserUnscheduleFromRunLoop = ~f{v^v^v^v}
	CFNetServiceCancel = ~f{v^v}
	CFNetServiceCreate = ~f{^v^v^v^v^vi}
	CFNetServiceCreateCopy = ~f{^v^v^v}
	CFNetServiceCreateDictionaryWithTXTData = ~f{^v^v^v}
	CFNetServiceCreateTXTDataWithDictionary = ~f{^v^v^v}
	CFNetServiceGetAddressing = ~f{^v^v}
	CFNetServiceGetDomain = ~f{^v^v}
	CFNetServiceGetName = ~f{^v^v}
	CFNetServiceGetPortNumber = ~f{i^v}
	CFNetServiceGetTXTData = ~f{^v^v}
	CFNetServiceGetTargetHost = ~f{^v^v}
	CFNetServiceGetType = ~f{^v^v}
	CFNetServiceGetTypeID = ~f{L}
	CFNetServiceMonitorCreate = ~f{^v^v^v^~f{v^v^vi^v^v^v}^v}
	CFNetServiceMonitorGetTypeID = ~f{L}
	CFNetServiceMonitorInvalidate = ~f{v^v}
	CFNetServiceMonitorScheduleWithRunLoop = ~f{v^v^v^v}
	CFNetServiceMonitorStart = ~f{C^vi^v}
	CFNetServiceMonitorStop = ~f{v^v^v}
	CFNetServiceMonitorUnscheduleFromRunLoop = ~f{v^v^v^v}
	CFNetServiceRegister = ~f{C^v^v}
	CFNetServiceRegisterWithOptions = ~f{C^vL^v}
	CFNetServiceResolve = ~f{C^v^v}
	CFNetServiceResolveWithTimeout = ~f{C^vd^v}
	CFNetServiceScheduleWithRunLoop = ~f{v^v^v^v}
	CFNetServiceSetClient = ~f{C^v^~f{v^v^v^v}^v}
	CFNetServiceSetTXTData = ~f{C^v^v}
	CFNetServiceUnscheduleFromRunLoop = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/Quadrature/Integration.h
	quadrature_integrate = ~f{d^vdd^v^i^dL^v}
/usr/local/lib/clang/9.0.1/include/cpuid.h
	__get_cpuid = ~f{iI^I^I^I^I}
	__get_cpuid_count = ~f{iII^I^I^I^I}
	__get_cpuid_max = ~f{iI^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/shm.h
	shmat = ~f{^vi^vi}
	shmctl = ~f{iii^v}
	shmdt = ~f{i^v}
	shmget = ~f{iiLi}
	shmsys = ~f{ii$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/queue.h
	dispatch_after = ~f{vQ@%~f{v}}
	dispatch_after_f = ~f{vQ@^v^~f{v^v}}
	dispatch_apply = ~f{vL@%~f{vL}}
	dispatch_apply_f = ~f{vL@^v^~f{v^vL}}
	dispatch_assert_queue = ~f{v@}
	dispatch_assert_queue_barrier = ~f{v@}
	dispatch_assert_queue_not = ~f{v@}
	dispatch_async = ~f{v@%~f{v}}
	dispatch_async_and_wait = ~f{v@%~f{v}}
	dispatch_async_and_wait_f = ~f{v@^v^~f{v^v}}
	dispatch_async_f = ~f{v@^v^~f{v^v}}
	dispatch_barrier_async = ~f{v@%~f{v}}
	dispatch_barrier_async_and_wait = ~f{v@%~f{v}}
	dispatch_barrier_async_and_wait_f = ~f{v@^v^~f{v^v}}
	dispatch_barrier_async_f = ~f{v@^v^~f{v^v}}
	dispatch_barrier_sync = ~f{v@%~f{v}}
	dispatch_barrier_sync_f = ~f{v@^v^~f{v^v}}
	dispatch_get_current_queue = ~f{@}
	dispatch_get_global_queue = ~f{@lL}
	dispatch_get_main_queue = ~f{@}
	dispatch_get_specific = ~f{^v^v}
	dispatch_main = ~f{v}
	dispatch_queue_attr_make_initially_inactive = ~f{@@}
	dispatch_queue_attr_make_with_autorelease_frequency = ~f{@@L}
	dispatch_queue_attr_make_with_qos_class = ~f{@@Ii}
	dispatch_queue_create = ~f{@^c@}
	dispatch_queue_create_with_target = ~f{@^c@@}
	dispatch_queue_get_label = ~f{^c@}
	dispatch_queue_get_qos_class = ~f{I@^i}
	dispatch_queue_get_specific = ~f{^v@^v}
	dispatch_queue_set_specific = ~f{v@^v^v^~f{v^v}}
	dispatch_set_target_queue = ~f{v@@}
	dispatch_sync = ~f{v@%~f{v}}
	dispatch_sync_f = ~f{v@^v^~f{v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFunction.h
	CGFunctionCreate = ~f{^v^vL^dL^d^v}
	CGFunctionGetTypeID = ~f{L}
	CGFunctionRelease = ~f{v^v}
	CGFunctionRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecPolicy.h
	SecPolicyCopyProperties = ~f{^v^v}
	SecPolicyCreateBasicX509 = ~f{^v}
	SecPolicyCreateRevocation = ~f{^vL}
	SecPolicyCreateSSL = ~f{^vC^v}
	SecPolicyCreateWithProperties = ~f{^v^v^v}
	SecPolicyGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVOpenGLESTexture.h
	CVOpenGLESTextureGetCleanTexCoords = ~f{v^v^f^f^f^f}
	CVOpenGLESTextureGetName = ~f{I^v}
	CVOpenGLESTextureGetTarget = ~f{I^v}
	CVOpenGLESTextureGetTypeID = ~f{L}
	CVOpenGLESTextureIsFlipped = ~f{C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/iconv.h
	iconv = ~f{L^v^^c^L^^c^L}
	iconv_canonicalize = ~f{^c^c}
	iconv_close = ~f{i^v}
	iconv_open = ~f{^v^c^c}
	iconvctl = ~f{i^vi^v}
	iconvlist = ~f{v^~f{iI^^c^v}^v}
	libiconv_set_relocation_prefix = ~f{v^c^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/_ctermid.h
	ctermid = ~f{^c^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBag.h
	CFBagAddValue = ~f{v^v^v}
	CFBagApplyFunction = ~f{v^v^~f{v^v^v}^v}
	CFBagContainsValue = ~f{C^v^v}
	CFBagCreate = ~f{^v^v^^vl^v}
	CFBagCreateCopy = ~f{^v^v^v}
	CFBagCreateMutable = ~f{^v^vl^v}
	CFBagCreateMutableCopy = ~f{^v^vl^v}
	CFBagGetCount = ~f{l^v}
	CFBagGetCountOfValue = ~f{l^v^v}
	CFBagGetTypeID = ~f{L}
	CFBagGetValue = ~f{^v^v^v}
	CFBagGetValueIfPresent = ~f{C^v^v^^v}
	CFBagGetValues = ~f{v^v^^v}
	CFBagRemoveAllValues = ~f{v^v}
	CFBagRemoveValue = ~f{v^v^v}
	CFBagReplaceValue = ~f{v^v^v}
	CFBagSetValue = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/pwg.h
	pwgFormatSizeName = ~f{i^cL^c^cii^c}
	pwgInitSize = ~f{i^v^v^i}
	pwgMediaForLegacy = ~f{^v^c}
	pwgMediaForPPD = ~f{^v^c}
	pwgMediaForPWG = ~f{^v^c}
	pwgMediaForSize = ~f{^vii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPropertyList.h
	CFPropertyListCreateData = ~f{^v^v^vlL^^v}
	CFPropertyListCreateDeepCopy = ~f{^v^v^vL}
	CFPropertyListCreateFromStream = ~f{^v^v^vlL^l^^v}
	CFPropertyListCreateFromXMLData = ~f{^v^v^vL^^v}
	CFPropertyListCreateWithData = ~f{^v^v^vL^l^^v}
	CFPropertyListCreateWithStream = ~f{^v^v^vlL^l^^v}
	CFPropertyListCreateXMLData = ~f{^v^v^v}
	CFPropertyListIsValid = ~f{C^vl}
	CFPropertyListWrite = ~f{l^v^vlL^^v}
	CFPropertyListWriteToStream = ~f{l^v^vl^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/JavaScriptCore.framework/Headers/JSContextRef.h
	JSContextGetGlobalContext = ~f{^v^v}
	JSContextGetGlobalObject = ~f{^v^v}
	JSContextGetGroup = ~f{^v^v}
	JSContextGroupCreate = ~f{^v}
	JSContextGroupRelease = ~f{v^v}
	JSContextGroupRetain = ~f{^v^v}
	JSGlobalContextCopyName = ~f{^v^v}
	JSGlobalContextCreate = ~f{^v^v}
	JSGlobalContextCreateInGroup = ~f{^v^v^v}
	JSGlobalContextRelease = ~f{v^v}
	JSGlobalContextRetain = ~f{^v^v}
	JSGlobalContextSetName = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/VideoToolbox.framework/Headers/VTMultiPassStorage.h
	VTMultiPassStorageClose = ~f{i^v}
	VTMultiPassStorageCreate = ~f{i^v^v{={=qiIq}{=qiIq}}^v^^v}
	VTMultiPassStorageGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPAuthentication.h
	CFHTTPAuthenticationAppliesToRequest = ~f{C^v^v}
	CFHTTPAuthenticationCopyDomains = ~f{^v^v}
	CFHTTPAuthenticationCopyMethod = ~f{^v^v}
	CFHTTPAuthenticationCopyRealm = ~f{^v^v}
	CFHTTPAuthenticationCreateFromResponse = ~f{^v^v^v}
	CFHTTPAuthenticationGetTypeID = ~f{L}
	CFHTTPAuthenticationIsValid = ~f{C^v^v}
	CFHTTPAuthenticationRequiresAccountDomain = ~f{C^v}
	CFHTTPAuthenticationRequiresOrderedRequests = ~f{C^v}
	CFHTTPAuthenticationRequiresUserNameAndPassword = ~f{C^v}
	CFHTTPMessageApplyCredentialDictionary = ~f{C^v^v^v^v}
	CFHTTPMessageApplyCredentials = ~f{C^v^v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibility.h
	UIAccessibilityConvertFrameToScreenCoordinates = ~f{{={=dd}{=dd}}{={=dd}{=dd}}@}
	UIAccessibilityConvertPathToScreenCoordinates = ~f{@@@}
	UIAccessibilityDarkerSystemColorsEnabled = ~f{B}
	UIAccessibilityFocusedElement = ~f{@@}
	UIAccessibilityHearingDevicePairedEar = ~f{L}
	UIAccessibilityIsAssistiveTouchRunning = ~f{B}
	UIAccessibilityIsBoldTextEnabled = ~f{B}
	UIAccessibilityIsClosedCaptioningEnabled = ~f{B}
	UIAccessibilityIsGrayscaleEnabled = ~f{B}
	UIAccessibilityIsGuidedAccessEnabled = ~f{B}
	UIAccessibilityIsInvertColorsEnabled = ~f{B}
	UIAccessibilityIsMonoAudioEnabled = ~f{B}
	UIAccessibilityIsOnOffSwitchLabelsEnabled = ~f{B}
	UIAccessibilityIsReduceMotionEnabled = ~f{B}
	UIAccessibilityIsReduceTransparencyEnabled = ~f{B}
	UIAccessibilityIsShakeToUndoEnabled = ~f{B}
	UIAccessibilityIsSpeakScreenEnabled = ~f{B}
	UIAccessibilityIsSpeakSelectionEnabled = ~f{B}
	UIAccessibilityIsSwitchControlRunning = ~f{B}
	UIAccessibilityIsVideoAutoplayEnabled = ~f{B}
	UIAccessibilityIsVoiceOverRunning = ~f{B}
	UIAccessibilityPostNotification = ~f{vI@}
	UIAccessibilityRequestGuidedAccessSession = ~f{vB%~f{vB}}
	UIAccessibilityShouldDifferentiateWithoutColor = ~f{B}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/thread_state.h
	thread_get_register_pointer_values = ~f{iI^L^L^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSUndoManagerShims.h
	__NSUndoManagerRegisterWithTargetHandler = ~f{v@@%~f{v@}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AddressBook.framework/Headers/ABSource.h
	ABAddressBookCopyArrayOfAllSources = ~f{^v^v}
	ABAddressBookCopyDefaultSource = ~f{^v^v}
	ABAddressBookGetSourceWithRecordID = ~f{^v^vi}
/usr/local/lib/clang/9.0.1/include/wbnoinvdintrin.h
	_wbnoinvd = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/objc/objc-sync.h
	objc_sync_enter = ~f{i@}
	objc_sync_exit = ~f{i@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/utf8.h
	utf8_appendCharSafeBody = ~f{i^Ciii^c}
	utf8_back1SafeBody = ~f{i^Cii}
	utf8_nextCharSafeBody = ~f{i^C^iiic}
	utf8_prevCharSafeBody = ~f{i^Ci^iic}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/c14n.h
	xmlC14NDocDumpMemory = ~f{i^v^vi^^Ci^^C}
	xmlC14NDocSave = ~f{i^v^vi^^Ci^ci}
	xmlC14NDocSaveTo = ~f{i^v^vi^^Ci^v}
	xmlC14NExecute = ~f{i^v^~f{i^v^v^v}^vi^^Ci^v}
/usr/local/lib/clang/9.0.1/include/xsaveintrin.h
	_xrstor = ~f{v^vQ}
	_xrstor64 = ~f{v^vQ}
	_xsave = ~f{v^vQ}
	_xsave64 = ~f{v^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/JavaScriptCore.framework/Headers/JSValueRef.h
	JSValueCreateJSONString = ~f{^v^v^vI^^v}
	JSValueGetType = ~f{I^v^v}
	JSValueGetTypedArrayType = ~f{I^v^v^^v}
	JSValueIsArray = ~f{B^v^v}
	JSValueIsBoolean = ~f{B^v^v}
	JSValueIsDate = ~f{B^v^v}
	JSValueIsEqual = ~f{B^v^v^v^^v}
	JSValueIsInstanceOfConstructor = ~f{B^v^v^v^^v}
	JSValueIsNull = ~f{B^v^v}
	JSValueIsNumber = ~f{B^v^v}
	JSValueIsObject = ~f{B^v^v}
	JSValueIsObjectOfClass = ~f{B^v^v^v}
	JSValueIsStrictEqual = ~f{B^v^v^v}
	JSValueIsString = ~f{B^v^v}
	JSValueIsSymbol = ~f{B^v^v}
	JSValueIsUndefined = ~f{B^v^v}
	JSValueMakeBoolean = ~f{^v^vB}
	JSValueMakeFromJSONString = ~f{^v^v^v}
	JSValueMakeNull = ~f{^v^v}
	JSValueMakeNumber = ~f{^v^vd}
	JSValueMakeString = ~f{^v^v^v}
	JSValueMakeSymbol = ~f{^v^v^v}
	JSValueMakeUndefined = ~f{^v^v}
	JSValueProtect = ~f{v^v^v}
	JSValueToBoolean = ~f{B^v^v}
	JSValueToNumber = ~f{d^v^v^^v}
	JSValueToObject = ~f{^v^v^v^^v}
	JSValueToStringCopy = ~f{^v^v^v^^v}
	JSValueUnprotect = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/time.h
	dispatch_time = ~f{QQq}
	dispatch_walltime = ~f{Q^vq}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlschemas.h
	xmlSchemaDump = ~f{v^v^v}
	xmlSchemaFree = ~f{v^v}
	xmlSchemaFreeParserCtxt = ~f{v^v}
	xmlSchemaFreeValidCtxt = ~f{v^v}
	xmlSchemaGetParserErrors = ~f{i^v^^~f{v^v^c$}^^~f{v^v^c$}^^v}
	xmlSchemaGetValidErrors = ~f{i^v^^~f{v^v^c$}^^~f{v^v^c$}^^v}
	xmlSchemaIsValid = ~f{i^v}
	xmlSchemaNewDocParserCtxt = ~f{^v^v}
	xmlSchemaNewMemParserCtxt = ~f{^v^ci}
	xmlSchemaNewParserCtxt = ~f{^v^c}
	xmlSchemaNewValidCtxt = ~f{^v^v}
	xmlSchemaParse = ~f{^v^v}
	xmlSchemaSAXPlug = ~f{^v^v^^v^^v}
	xmlSchemaSAXUnplug = ~f{i^v}
	xmlSchemaSetParserErrors = ~f{v^v^~f{v^v^c$}^~f{v^v^c$}^v}
	xmlSchemaSetParserStructuredErrors = ~f{v^v^~f{v^v^v}^v}
	xmlSchemaSetValidErrors = ~f{v^v^~f{v^v^c$}^~f{v^v^c$}^v}
	xmlSchemaSetValidOptions = ~f{i^vi}
	xmlSchemaSetValidStructuredErrors = ~f{v^v^~f{v^v^v}^v}
	xmlSchemaValidCtxtGetOptions = ~f{i^v}
	xmlSchemaValidCtxtGetParserCtxt = ~f{^v^v}
	xmlSchemaValidateDoc = ~f{i^v^v}
	xmlSchemaValidateFile = ~f{i^v^ci}
	xmlSchemaValidateOneElement = ~f{i^v^v}
	xmlSchemaValidateSetFilename = ~f{v^v^c}
	xmlSchemaValidateSetLocator = ~f{v^v^~f{i^v^^c^L}^v}
	xmlSchemaValidateStream = ~f{i^v^vi^v^v}
/usr/local/lib/clang/9.0.1/include/ia32intrin.h
	__bsfd = ~f{ii}
	__bsfq = ~f{iq}
	__bsrd = ~f{ii}
	__bsrq = ~f{iq}
	__bswapd = ~f{ii}
	__bswapq = ~f{qq}
	__crc32b = ~f{IIC}
	__crc32d = ~f{III}
	__crc32q = ~f{QQQ}
	__crc32w = ~f{IIS}
	__popcntd = ~f{iI}
	__popcntq = ~f{qQ}
	__rdpmc = ~f{Qi}
	__rdtscp = ~f{Q^I}
	__readeflags = ~f{Q}
	__rolb = ~f{CCi}
	__rold = ~f{IIi}
	__rolq = ~f{QQi}
	__rolw = ~f{SSi}
	__rorb = ~f{CCi}
	__rord = ~f{IIi}
	__rorq = ~f{QQi}
	__rorw = ~f{SSi}
	__writeeflags = ~f{vQ}
	_bswap = ~f{ii}
	_wbinvd = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/resolv.h
	_res_9_h_errno_set = ~f{v^vi}
	res_9_b64_ntop = ~f{i^CL^cL}
	res_9_b64_pton = ~f{i^c^CL}
	res_9_close = ~f{v}
	res_9_dn_comp = ~f{i^c^Ci^^C^^C}
	res_9_dn_count_labels = ~f{i^c}
	res_9_dn_expand = ~f{i^C^C^C^ci}
	res_9_dn_skipname = ~f{i^C^C}
	res_9_dnok = ~f{i^c}
	res_9_findzonecut = ~f{i^v^cIi^cL^vi}
	res_9_findzonecut2 = ~f{i^v^cIi^cL^vi}
	res_9_fp_nquery = ~f{v^Ci^v}
	res_9_fp_query = ~f{v^C^v}
	res_9_fp_resstat = ~f{v^v^v}
	res_9_getlong = ~f{I^C}
	res_9_getservers = ~f{i^v^vi}
	res_9_getshort = ~f{S^C}
	res_9_hnok = ~f{i^c}
	res_9_hostalias_1 = ~f{^c^c}
	res_9_hostalias_2 = ~f{^c^v^c^cL}
	res_9_init = ~f{i}
	res_9_isourserver = ~f{i^v}
	res_9_loc_aton = ~f{i^c^C}
	res_9_loc_ntoa = ~f{^c^C^c}
	res_9_mailok = ~f{i^c}
	res_9_mkquery = ~f{ii^cii^Ci^C^Ci}
	res_9_nameinquery = ~f{i^cii^C^C}
	res_9_nametoclass = ~f{S^c^i}
	res_9_nametotype = ~f{S^c^i}
	res_9_nclose = ~f{v^v}
	res_9_ndestroy = ~f{v^v}
	res_9_ninit = ~f{i^v}
	res_9_nisourserver = ~f{i^v^v}
	res_9_nmkquery = ~f{i^vi^cii^Ci^C^Ci}
	res_9_nopt = ~f{i^vi^Cii}
	res_9_nquery = ~f{i^v^cii^Ci}
	res_9_nquerydomain = ~f{i^v^c^cii^Ci}
	res_9_nsearch = ~f{i^v^cii^Ci}
	res_9_nsend = ~f{i^v^Ci^Ci}
	res_9_nsendsigned = ~f{i^v^Ci^v^Ci}
	res_9_ownok = ~f{i^c}
	res_9_p_cdname = ~f{^C^C^C^v}
	res_9_p_cdnname = ~f{^C^C^Ci^v}
	res_9_p_class = ~f{^ci}
	res_9_p_fqname = ~f{^C^C^C^v}
	res_9_p_fqnname = ~f{^C^C^Ci^ci}
	res_9_p_option = ~f{^cL}
	res_9_p_query = ~f{v^C}
	res_9_p_rcode = ~f{^ci}
	res_9_p_secstodate = ~f{^cL}
	res_9_p_section = ~f{^cii}
	res_9_p_time = ~f{^cI}
	res_9_p_type = ~f{^ci}
	res_9_pquery = ~f{v^v^Ci^v}
	res_9_putlong = ~f{vI^C}
	res_9_putshort = ~f{vS^C}
	res_9_queriesmatch = ~f{i^C^C^C^C}
	res_9_query = ~f{i^cii^Ci}
	res_9_querydomain = ~f{i^c^cii^Ci}
	res_9_randomid = ~f{I}
	res_9_search = ~f{i^cii^Ci}
	res_9_send = ~f{i^Ci^Ci}
	res_9_sendsigned = ~f{i^Ci^v^Ci}
	res_9_setservers = ~f{v^v^vi}
	res_9_sym_ntop = ~f{^c^vi^i}
	res_9_sym_ntos = ~f{^c^vi^i}
	res_9_sym_ston = ~f{i^v^c^i}
	res_9_vinit = ~f{i^vi}
	res_buildprotolist = ~f{v}
	res_destroyprotolist = ~f{v}
	res_destroyservicelist = ~f{v}
	res_get_bitstringsuffix = ~f{^c^v}
	res_get_nibblesuffix = ~f{^c^v}
	res_get_nibblesuffix2 = ~f{^c^v}
	res_protocolname = ~f{^ci}
	res_servicename = ~f{^cS^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFScanner.h
	CGPDFScannerCreate = ~f{^v^v^v^v}
	CGPDFScannerGetContentStream = ~f{^v^v}
	CGPDFScannerPopArray = ~f{B^v^^v}
	CGPDFScannerPopBoolean = ~f{B^v^C}
	CGPDFScannerPopDictionary = ~f{B^v^^v}
	CGPDFScannerPopInteger = ~f{B^v^l}
	CGPDFScannerPopName = ~f{B^v^^c}
	CGPDFScannerPopNumber = ~f{B^v^d}
	CGPDFScannerPopObject = ~f{B^v^^v}
	CGPDFScannerPopStream = ~f{B^v^^v}
	CGPDFScannerPopString = ~f{B^v^^v}
	CGPDFScannerRelease = ~f{v^v}
	CGPDFScannerRetain = ~f{^v^v}
	CGPDFScannerScan = ~f{B^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioConverter.h
	AudioConverterConvertBuffer = ~f{i^vI^v^I^v}
	AudioConverterConvertComplexBuffer = ~f{i^vI^v^v}
	AudioConverterDispose = ~f{i^v}
	AudioConverterFillComplexBuffer = ~f{i^v^~f{i^v^I^v^^v^v}^v^I^v^v}
	AudioConverterGetProperty = ~f{i^vI^I^v}
	AudioConverterGetPropertyInfo = ~f{i^vI^I^C}
	AudioConverterNew = ~f{i^v^v^^v}
	AudioConverterNewSpecific = ~f{i^v^vI^v^^v}
	AudioConverterReset = ~f{i^v}
	AudioConverterSetProperty = ~f{i^vII^v}
/usr/local/lib/clang/9.0.1/include/avx512dqintrin.h
	_cvtmask8_u32 = ~f{IC}
	_cvtu32_mask8 = ~f{CI}
	_kadd_mask16 = ~f{SSS}
	_kadd_mask8 = ~f{CCC}
	_kand_mask8 = ~f{CCC}
	_kandn_mask8 = ~f{CCC}
	_knot_mask8 = ~f{CC}
	_kor_mask8 = ~f{CCC}
	_kortest_mask8_u8 = ~f{CCC^C}
	_kortestc_mask8_u8 = ~f{CCC}
	_kortestz_mask8_u8 = ~f{CCC}
	_ktest_mask16_u8 = ~f{CSS^C}
	_ktest_mask8_u8 = ~f{CCC^C}
	_ktestc_mask16_u8 = ~f{CSS}
	_ktestc_mask8_u8 = ~f{CCC}
	_ktestz_mask16_u8 = ~f{CSS}
	_ktestz_mask8_u8 = ~f{CCC}
	_kxnor_mask8 = ~f{CCC}
	_kxor_mask8 = ~f{CCC}
	_load_mask8 = ~f{C^C}
	_mm512_and_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_and_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_andnot_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_andnot_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_broadcast_f32x2 = ~f{~V{16f}~V{4f}}
	_mm512_broadcast_f32x8 = ~f{~V{16f}~V{8f}}
	_mm512_broadcast_f64x2 = ~f{~V{8d}~V{2d}}
	_mm512_broadcast_i32x2 = ~f{~V{8q}~V{2q}}
	_mm512_broadcast_i32x8 = ~f{~V{8q}~V{4q}}
	_mm512_broadcast_i64x2 = ~f{~V{8q}~V{2q}}
	_mm512_cvtepi64_pd = ~f{~V{8d}~V{8q}}
	_mm512_cvtepi64_ps = ~f{~V{8f}~V{8q}}
	_mm512_cvtepu64_pd = ~f{~V{8d}~V{8q}}
	_mm512_cvtepu64_ps = ~f{~V{8f}~V{8q}}
	_mm512_cvtpd_epi64 = ~f{~V{8q}~V{8d}}
	_mm512_cvtpd_epu64 = ~f{~V{8q}~V{8d}}
	_mm512_cvtps_epi64 = ~f{~V{8q}~V{8f}}
	_mm512_cvtps_epu64 = ~f{~V{8q}~V{8f}}
	_mm512_cvttpd_epi64 = ~f{~V{8q}~V{8d}}
	_mm512_cvttpd_epu64 = ~f{~V{8q}~V{8d}}
	_mm512_cvttps_epi64 = ~f{~V{8q}~V{8f}}
	_mm512_cvttps_epu64 = ~f{~V{8q}~V{8f}}
	_mm512_mask_and_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_and_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_andnot_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_andnot_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_broadcast_f32x2 = ~f{~V{16f}~V{16f}S~V{4f}}
	_mm512_mask_broadcast_f32x8 = ~f{~V{16f}~V{16f}S~V{8f}}
	_mm512_mask_broadcast_f64x2 = ~f{~V{8d}~V{8d}C~V{2d}}
	_mm512_mask_broadcast_i32x2 = ~f{~V{8q}~V{8q}S~V{2q}}
	_mm512_mask_broadcast_i32x8 = ~f{~V{8q}~V{8q}S~V{4q}}
	_mm512_mask_broadcast_i64x2 = ~f{~V{8q}~V{8q}C~V{2q}}
	_mm512_mask_cvtepi64_pd = ~f{~V{8d}~V{8d}C~V{8q}}
	_mm512_mask_cvtepi64_ps = ~f{~V{8f}~V{8f}C~V{8q}}
	_mm512_mask_cvtepu64_pd = ~f{~V{8d}~V{8d}C~V{8q}}
	_mm512_mask_cvtepu64_ps = ~f{~V{8f}~V{8f}C~V{8q}}
	_mm512_mask_cvtpd_epi64 = ~f{~V{8q}~V{8q}C~V{8d}}
	_mm512_mask_cvtpd_epu64 = ~f{~V{8q}~V{8q}C~V{8d}}
	_mm512_mask_cvtps_epi64 = ~f{~V{8q}~V{8q}C~V{8f}}
	_mm512_mask_cvtps_epu64 = ~f{~V{8q}~V{8q}C~V{8f}}
	_mm512_mask_cvttpd_epi64 = ~f{~V{8q}~V{8q}C~V{8d}}
	_mm512_mask_cvttpd_epu64 = ~f{~V{8q}~V{8q}C~V{8d}}
	_mm512_mask_cvttps_epi64 = ~f{~V{8q}~V{8q}C~V{8f}}
	_mm512_mask_cvttps_epu64 = ~f{~V{8q}~V{8q}C~V{8f}}
	_mm512_mask_mullo_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_or_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_or_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_mask_xor_pd = ~f{~V{8d}~V{8d}C~V{8d}~V{8d}}
	_mm512_mask_xor_ps = ~f{~V{16f}~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_and_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_and_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_andnot_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_andnot_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_broadcast_f32x2 = ~f{~V{16f}S~V{4f}}
	_mm512_maskz_broadcast_f32x8 = ~f{~V{16f}S~V{8f}}
	_mm512_maskz_broadcast_f64x2 = ~f{~V{8d}C~V{2d}}
	_mm512_maskz_broadcast_i32x2 = ~f{~V{8q}S~V{2q}}
	_mm512_maskz_broadcast_i32x8 = ~f{~V{8q}S~V{4q}}
	_mm512_maskz_broadcast_i64x2 = ~f{~V{8q}C~V{2q}}
	_mm512_maskz_cvtepi64_pd = ~f{~V{8d}C~V{8q}}
	_mm512_maskz_cvtepi64_ps = ~f{~V{8f}C~V{8q}}
	_mm512_maskz_cvtepu64_pd = ~f{~V{8d}C~V{8q}}
	_mm512_maskz_cvtepu64_ps = ~f{~V{8f}C~V{8q}}
	_mm512_maskz_cvtpd_epi64 = ~f{~V{8q}C~V{8d}}
	_mm512_maskz_cvtpd_epu64 = ~f{~V{8q}C~V{8d}}
	_mm512_maskz_cvtps_epi64 = ~f{~V{8q}C~V{8f}}
	_mm512_maskz_cvtps_epu64 = ~f{~V{8q}C~V{8f}}
	_mm512_maskz_cvttpd_epi64 = ~f{~V{8q}C~V{8d}}
	_mm512_maskz_cvttpd_epu64 = ~f{~V{8q}C~V{8d}}
	_mm512_maskz_cvttps_epi64 = ~f{~V{8q}C~V{8f}}
	_mm512_maskz_cvttps_epu64 = ~f{~V{8q}C~V{8f}}
	_mm512_maskz_mullo_epi64 = ~f{~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_or_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_or_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_maskz_xor_pd = ~f{~V{8d}C~V{8d}~V{8d}}
	_mm512_maskz_xor_ps = ~f{~V{16f}S~V{16f}~V{16f}}
	_mm512_movepi32_mask = ~f{S~V{8q}}
	_mm512_movepi64_mask = ~f{C~V{8q}}
	_mm512_movm_epi32 = ~f{~V{8q}S}
	_mm512_movm_epi64 = ~f{~V{8q}C}
	_mm512_mullo_epi64 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_or_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_or_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_mm512_xor_pd = ~f{~V{8d}~V{8d}~V{8d}}
	_mm512_xor_ps = ~f{~V{16f}~V{16f}~V{16f}}
	_store_mask8 = ~f{v^CC}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Headers/MPSKernelTypes.h
	MPSFindIntegerDivisionParams = ~f{{=SSSS}S}
	MPSGetCustomKernelBatchedDestinationIndex = ~f{L{=LLL}}
	MPSGetCustomKernelBatchedSourceIndex = ~f{L{=LLL}L}
	MPSGetCustomKernelBroadcastSourceIndex = ~f{L{=LLL}L}
	MPSGetCustomKernelMaxBatchSize = ~f{L{=LLL}}
	MPSGetImageType = ~f{I@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/JavaScriptCore.framework/Headers/JSStringRef.h
	JSStringCreateWithCharacters = ~f{^v^SL}
	JSStringCreateWithUTF8CString = ~f{^v^c}
	JSStringGetCharactersPtr = ~f{^S^v}
	JSStringGetLength = ~f{L^v}
	JSStringGetMaximumUTF8CStringSize = ~f{L^v}
	JSStringGetUTF8CString = ~f{L^v^cL}
	JSStringIsEqual = ~f{B^v^v}
	JSStringIsEqualToUTF8CString = ~f{B^v^c}
	JSStringRelease = ~f{v^v}
	JSStringRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/block.h
	dispatch_block_cancel = ~f{v%~f{v}}
	dispatch_block_create = ~f{%~f{v}L%~f{v}}
	dispatch_block_create_with_qos_class = ~f{%~f{v}LIi%~f{v}}
	dispatch_block_notify = ~f{v%~f{v}@%~f{v}}
	dispatch_block_perform = ~f{vL%~f{v}}
	dispatch_block_testcancel = ~f{l%~f{v}}
	dispatch_block_wait = ~f{l%~f{v}Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/Sparse/SolveImplementation.h
	SparseCleanup = ~f{v{=iii{=BCIIB}CC^vLLLL}}
	SparseConjugateGradient = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}idd^~f{v^c}}}
	SparseFactor = ~f{{=iii{=BCIIB}CC^vLLLL}C{=ii^l^i{=BCIIB}C}{=IC^i^i^~f{^vL}^~f{v^v}^~f{v^c}}}
	SparseGMRES = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}Ciidd^~f{v^c}}}
	SparseLSMR = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}diiddddi^~f{v^c}}}
	SparseRetain = ~f{{=iii{=BCIIB}CC^vLLLL}{=iii{=BCIIB}CC^vLLLL}}
	_SparseDestroyOpaqueSymbolic = ~f{v^v}
	_SparseGetOptionsFromSymbolicFactor = ~f{{=IC^i^i^~f{^vL}^~f{v^v}^~f{v^c}}^v}
	_SparseRetainSymbolic = ~f{v^v}
	_SparseSymbolicFactorQR = ~f{{=iii{=BCIIB}CC^vLLLL}C^v^v}
	_SparseSymbolicFactorSymmetric = ~f{{=iii{=BCIIB}CC^vLLLL}C^v^v}
	_SparseTrap = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/notify.h
	notify_cancel = ~f{Ii}
	notify_check = ~f{Ii^i}
	notify_get_state = ~f{Ii^Q}
	notify_is_valid_token = ~f{Bi}
	notify_post = ~f{I^c}
	notify_register_check = ~f{I^c^i}
	notify_register_dispatch = ~f{I^c^i@%~f{vi}}
	notify_register_file_descriptor = ~f{I^c^ii^i}
	notify_register_mach_port = ~f{I^c^Ii^i}
	notify_register_signal = ~f{I^ci^i}
	notify_resume = ~f{Ii}
	notify_set_state = ~f{IiQ}
	notify_suspend = ~f{Ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/LinearAlgebra/arithmetic.h
	la_difference = ~f{@@@}
	la_elementwise_product = ~f{@@@}
	la_inner_product = ~f{@@@}
	la_matrix_product = ~f{@@@}
	la_outer_product = ~f{@@@}
	la_scale_with_double = ~f{@@d}
	la_scale_with_float = ~f{@@f}
	la_sum = ~f{@@@}
	la_transpose = ~f{@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/utmpx.h
	endutxent = ~f{v}
	endutxent_wtmp = ~f{v}
	getlastlogx = ~f{^vI^v}
	getlastlogxbyname = ~f{^v^c^v}
	getutxent = ~f{^v}
	getutxent_wtmp = ~f{^v}
	getutxid = ~f{^v^v}
	getutxline = ~f{^v^v}
	pututxline = ~f{^v^v}
	setutxent = ~f{v}
	setutxent_wtmp = ~f{vi}
	utmpxname = ~f{i^c}
	wtmpxname = ~f{i^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/nanohttp.h
	xmlNanoHTTPAuthHeader = ~f{^c^v}
	xmlNanoHTTPCleanup = ~f{v}
	xmlNanoHTTPClose = ~f{v^v}
	xmlNanoHTTPContentLength = ~f{i^v}
	xmlNanoHTTPEncoding = ~f{^c^v}
	xmlNanoHTTPFetch = ~f{i^c^c^^c}
	xmlNanoHTTPInit = ~f{v}
	xmlNanoHTTPMethod = ~f{^v^c^c^c^^c^ci}
	xmlNanoHTTPMethodRedir = ~f{^v^c^c^c^^c^^c^ci}
	xmlNanoHTTPMimeType = ~f{^c^v}
	xmlNanoHTTPOpen = ~f{^v^c^^c}
	xmlNanoHTTPOpenRedir = ~f{^v^c^^c^^c}
	xmlNanoHTTPRead = ~f{i^v^vi}
	xmlNanoHTTPRedir = ~f{^c^v}
	xmlNanoHTTPReturnCode = ~f{i^v}
	xmlNanoHTTPSave = ~f{i^v^c}
	xmlNanoHTTPScanProxy = ~f{v^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/sysctl.h
	sysctl = ~f{i^iI^v^L^vL}
	sysctlbyname = ~f{i^c^v^L^vL}
	sysctlnametomib = ~f{i^c^i^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCNetworkConfiguration.h
	SCBondInterfaceCopyAll = ~f{^v^v}
	SCBondInterfaceCopyAvailableMemberInterfaces = ~f{^v^v}
	SCBondInterfaceCopyStatus = ~f{^v^v}
	SCBondInterfaceCreate = ~f{^v^v}
	SCBondInterfaceGetMemberInterfaces = ~f{^v^v}
	SCBondInterfaceGetOptions = ~f{^v^v}
	SCBondInterfaceRemove = ~f{C^v}
	SCBondInterfaceSetLocalizedDisplayName = ~f{C^v^v}
	SCBondInterfaceSetMemberInterfaces = ~f{C^v^v}
	SCBondInterfaceSetOptions = ~f{C^v^v}
	SCBondStatusGetInterfaceStatus = ~f{^v^v^v}
	SCBondStatusGetMemberInterfaces = ~f{^v^v}
	SCBondStatusGetTypeID = ~f{L}
	SCNetworkInterfaceCopyAll = ~f{^v}
	SCNetworkInterfaceCopyMTU = ~f{C^v^i^i^i}
	SCNetworkInterfaceCopyMediaOptions = ~f{C^v^^v^^v^^vC}
	SCNetworkInterfaceCopyMediaSubTypeOptions = ~f{^v^v^v}
	SCNetworkInterfaceCopyMediaSubTypes = ~f{^v^v}
	SCNetworkInterfaceCreateWithInterface = ~f{^v^v^v}
	SCNetworkInterfaceForceConfigurationRefresh = ~f{C^v}
	SCNetworkInterfaceGetBSDName = ~f{^v^v}
	SCNetworkInterfaceGetConfiguration = ~f{^v^v}
	SCNetworkInterfaceGetExtendedConfiguration = ~f{^v^v^v}
	SCNetworkInterfaceGetHardwareAddressString = ~f{^v^v}
	SCNetworkInterfaceGetInterface = ~f{^v^v}
	SCNetworkInterfaceGetInterfaceType = ~f{^v^v}
	SCNetworkInterfaceGetLocalizedDisplayName = ~f{^v^v}
	SCNetworkInterfaceGetSupportedInterfaceTypes = ~f{^v^v}
	SCNetworkInterfaceGetSupportedProtocolTypes = ~f{^v^v}
	SCNetworkInterfaceGetTypeID = ~f{L}
	SCNetworkInterfaceSetConfiguration = ~f{C^v^v}
	SCNetworkInterfaceSetExtendedConfiguration = ~f{C^v^v^v}
	SCNetworkInterfaceSetMTU = ~f{C^vi}
	SCNetworkInterfaceSetMediaOptions = ~f{C^v^v^v}
	SCNetworkProtocolGetConfiguration = ~f{^v^v}
	SCNetworkProtocolGetEnabled = ~f{C^v}
	SCNetworkProtocolGetProtocolType = ~f{^v^v}
	SCNetworkProtocolGetTypeID = ~f{L}
	SCNetworkProtocolSetConfiguration = ~f{C^v^v}
	SCNetworkProtocolSetEnabled = ~f{C^vC}
	SCNetworkServiceAddProtocolType = ~f{C^v^v}
	SCNetworkServiceCopy = ~f{^v^v^v}
	SCNetworkServiceCopyAll = ~f{^v^v}
	SCNetworkServiceCopyProtocol = ~f{^v^v^v}
	SCNetworkServiceCopyProtocols = ~f{^v^v}
	SCNetworkServiceCreate = ~f{^v^v^v}
	SCNetworkServiceEstablishDefaultConfiguration = ~f{C^v}
	SCNetworkServiceGetEnabled = ~f{C^v}
	SCNetworkServiceGetInterface = ~f{^v^v}
	SCNetworkServiceGetName = ~f{^v^v}
	SCNetworkServiceGetServiceID = ~f{^v^v}
	SCNetworkServiceGetTypeID = ~f{L}
	SCNetworkServiceRemove = ~f{C^v}
	SCNetworkServiceRemoveProtocolType = ~f{C^v^v}
	SCNetworkServiceSetEnabled = ~f{C^vC}
	SCNetworkServiceSetName = ~f{C^v^v}
	SCNetworkSetAddService = ~f{C^v^v}
	SCNetworkSetContainsInterface = ~f{C^v^v}
	SCNetworkSetCopy = ~f{^v^v^v}
	SCNetworkSetCopyAll = ~f{^v^v}
	SCNetworkSetCopyCurrent = ~f{^v^v}
	SCNetworkSetCopyServices = ~f{^v^v}
	SCNetworkSetCreate = ~f{^v^v}
	SCNetworkSetGetName = ~f{^v^v}
	SCNetworkSetGetServiceOrder = ~f{^v^v}
	SCNetworkSetGetSetID = ~f{^v^v}
	SCNetworkSetGetTypeID = ~f{L}
	SCNetworkSetRemove = ~f{C^v}
	SCNetworkSetRemoveService = ~f{C^v^v}
	SCNetworkSetSetCurrent = ~f{C^v}
	SCNetworkSetSetName = ~f{C^v^v}
	SCNetworkSetSetServiceOrder = ~f{C^v^v}
	SCVLANInterfaceCopyAll = ~f{^v^v}
	SCVLANInterfaceCopyAvailablePhysicalInterfaces = ~f{^v}
	SCVLANInterfaceCreate = ~f{^v^v^v^v}
	SCVLANInterfaceGetOptions = ~f{^v^v}
	SCVLANInterfaceGetPhysicalInterface = ~f{^v^v}
	SCVLANInterfaceGetTag = ~f{^v^v}
	SCVLANInterfaceRemove = ~f{C^v}
	SCVLANInterfaceSetLocalizedDisplayName = ~f{C^v^v}
	SCVLANInterfaceSetOptions = ~f{C^v^v}
	SCVLANInterfaceSetPhysicalInterfaceAndTag = ~f{C^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/bzlib.h
	BZ2_bzBuffToBuffCompress = ~f{i^c^I^cIiii}
	BZ2_bzBuffToBuffDecompress = ~f{i^c^I^cIii}
	BZ2_bzCompress = ~f{i^vi}
	BZ2_bzCompressEnd = ~f{i^v}
	BZ2_bzCompressInit = ~f{i^viii}
	BZ2_bzDecompress = ~f{i^v}
	BZ2_bzDecompressEnd = ~f{i^v}
	BZ2_bzDecompressInit = ~f{i^vii}
	BZ2_bzRead = ~f{i^i^v^vi}
	BZ2_bzReadClose = ~f{v^i^v}
	BZ2_bzReadGetUnused = ~f{v^i^v^^v^i}
	BZ2_bzReadOpen = ~f{^v^i^vii^vi}
	BZ2_bzWrite = ~f{v^i^v^vi}
	BZ2_bzWriteClose = ~f{v^i^vi^I^I}
	BZ2_bzWriteClose64 = ~f{v^i^vi^I^I^I^I}
	BZ2_bzWriteOpen = ~f{^v^i^viii}
	BZ2_bzclose = ~f{v^v}
	BZ2_bzdopen = ~f{^vi^c}
	BZ2_bzerror = ~f{^c^v^i}
	BZ2_bzflush = ~f{i^v}
	BZ2_bzlibVersion = ~f{^c}
	BZ2_bzopen = ~f{^v^c^c}
	BZ2_bzread = ~f{i^v^vi}
	BZ2_bzwrite = ~f{i^v^vi}
/usr/local/lib/clang/9.0.1/include/rtmintrin.h
	_xbegin = ~f{I}
	_xend = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFURL.h
	CFURLCanBeDecomposed = ~f{C^v}
	CFURLClearResourcePropertyCache = ~f{v^v}
	CFURLClearResourcePropertyCacheForKey = ~f{v^v^v}
	CFURLCopyAbsoluteURL = ~f{^v^v}
	CFURLCopyFileSystemPath = ~f{^v^vl}
	CFURLCopyFragment = ~f{^v^v^v}
	CFURLCopyHostName = ~f{^v^v}
	CFURLCopyLastPathComponent = ~f{^v^v}
	CFURLCopyNetLocation = ~f{^v^v}
	CFURLCopyParameterString = ~f{^v^v^v}
	CFURLCopyPassword = ~f{^v^v}
	CFURLCopyPath = ~f{^v^v}
	CFURLCopyPathExtension = ~f{^v^v}
	CFURLCopyQueryString = ~f{^v^v^v}
	CFURLCopyResourcePropertiesForKeys = ~f{^v^v^v^^v}
	CFURLCopyResourcePropertyForKey = ~f{C^v^v^v^^v}
	CFURLCopyResourceSpecifier = ~f{^v^v}
	CFURLCopyScheme = ~f{^v^v}
	CFURLCopyStrictPath = ~f{^v^v^C}
	CFURLCopyUserName = ~f{^v^v}
	CFURLCreateAbsoluteURLWithBytes = ~f{^v^v^ClI^vC}
	CFURLCreateBookmarkData = ~f{^v^v^vL^v^v^^v}
	CFURLCreateBookmarkDataFromAliasRecord = ~f{^v^v^v}
	CFURLCreateBookmarkDataFromFile = ~f{^v^v^v^^v}
	CFURLCreateByResolvingBookmarkData = ~f{^v^v^vL^v^v^C^^v}
	CFURLCreateCopyAppendingPathComponent = ~f{^v^v^v^vC}
	CFURLCreateCopyAppendingPathExtension = ~f{^v^v^v^v}
	CFURLCreateCopyDeletingLastPathComponent = ~f{^v^v^v}
	CFURLCreateCopyDeletingPathExtension = ~f{^v^v^v}
	CFURLCreateData = ~f{^v^v^vIC}
	CFURLCreateFilePathURL = ~f{^v^v^v^^v}
	CFURLCreateFileReferenceURL = ~f{^v^v^v^^v}
	CFURLCreateFromFSRef = ~f{^v^v^v}
	CFURLCreateFromFileSystemRepresentation = ~f{^v^v^ClC}
	CFURLCreateFromFileSystemRepresentationRelativeToBase = ~f{^v^v^ClC^v}
	CFURLCreateResourcePropertiesForKeysFromBookmarkData = ~f{^v^v^v^v}
	CFURLCreateResourcePropertyForKeyFromBookmarkData = ~f{^v^v^v^v}
	CFURLCreateStringByAddingPercentEscapes = ~f{^v^v^v^v^vI}
	CFURLCreateStringByReplacingPercentEscapes = ~f{^v^v^v^v}
	CFURLCreateStringByReplacingPercentEscapesUsingEncoding = ~f{^v^v^v^vI}
	CFURLCreateWithBytes = ~f{^v^v^ClI^v}
	CFURLCreateWithFileSystemPath = ~f{^v^v^vlC}
	CFURLCreateWithFileSystemPathRelativeToBase = ~f{^v^v^vlC^v}
	CFURLCreateWithString = ~f{^v^v^v^v}
	CFURLGetBaseURL = ~f{^v^v}
	CFURLGetByteRangeForComponent = ~f{{=ll}^vl^v}
	CFURLGetBytes = ~f{l^v^Cl}
	CFURLGetFSRef = ~f{C^v^v}
	CFURLGetFileSystemRepresentation = ~f{C^vC^Cl}
	CFURLGetPortNumber = ~f{i^v}
	CFURLGetString = ~f{^v^v}
	CFURLGetTypeID = ~f{L}
	CFURLHasDirectoryPath = ~f{C^v}
	CFURLIsFileReferenceURL = ~f{C^v}
	CFURLResourceIsReachable = ~f{C^v^^v}
	CFURLSetResourcePropertiesForKeys = ~f{C^v^v^^v}
	CFURLSetResourcePropertyForKey = ~f{C^v^v^v^^v}
	CFURLSetTemporaryResourcePropertyForKey = ~f{v^v^v^v}
	CFURLStartAccessingSecurityScopedResource = ~f{C^v}
	CFURLStopAccessingSecurityScopedResource = ~f{v^v}
	CFURLWriteBookmarkDataToFile = ~f{C^v^vL^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/tgmath.h
	__tg_acos = ~f{{=DD}{=DD}}
	__tg_acosh = ~f{{=DD}{=DD}}
	__tg_asin = ~f{{=DD}{=DD}}
	__tg_asinh = ~f{{=DD}{=DD}}
	__tg_atan = ~f{{=DD}{=DD}}
	__tg_atan2 = ~f{DDD}
	__tg_atanh = ~f{{=DD}{=DD}}
	__tg_carg = ~f{D{=DD}}
	__tg_cbrt = ~f{DD}
	__tg_ceil = ~f{DD}
	__tg_cimag = ~f{D{=DD}}
	__tg_conj = ~f{{=DD}{=DD}}
	__tg_copysign = ~f{DDD}
	__tg_cos = ~f{{=DD}{=DD}}
	__tg_cosh = ~f{{=DD}{=DD}}
	__tg_cproj = ~f{{=DD}{=DD}}
	__tg_creal = ~f{D{=DD}}
	__tg_erf = ~f{DD}
	__tg_erfc = ~f{DD}
	__tg_exp = ~f{{=DD}{=DD}}
	__tg_exp2 = ~f{DD}
	__tg_expm1 = ~f{DD}
	__tg_fabs = ~f{D{=DD}}
	__tg_fdim = ~f{DDD}
	__tg_floor = ~f{DD}
	__tg_fma = ~f{DDDD}
	__tg_fmax = ~f{DDD}
	__tg_fmin = ~f{DDD}
	__tg_fmod = ~f{DDD}
	__tg_frexp = ~f{DD^i}
	__tg_hypot = ~f{DDD}
	__tg_ilogb = ~f{iD}
	__tg_ldexp = ~f{DDi}
	__tg_lgamma = ~f{DD}
	__tg_llrint = ~f{qD}
	__tg_llround = ~f{qD}
	__tg_log = ~f{{=DD}{=DD}}
	__tg_log10 = ~f{DD}
	__tg_log1p = ~f{DD}
	__tg_log2 = ~f{DD}
	__tg_logb = ~f{DD}
	__tg_lrint = ~f{lD}
	__tg_lround = ~f{lD}
	__tg_nearbyint = ~f{DD}
	__tg_nextafter = ~f{DDD}
	__tg_nexttoward = ~f{DDD}
	__tg_pow = ~f{{=DD}{=DD}{=DD}}
	__tg_promote = ~f{{=DD}{=DD}}
	__tg_remainder = ~f{DDD}
	__tg_remquo = ~f{DDD^i}
	__tg_rint = ~f{DD}
	__tg_round = ~f{DD}
	__tg_scalbln = ~f{DDl}
	__tg_scalbn = ~f{DDi}
	__tg_sin = ~f{{=DD}{=DD}}
	__tg_sinh = ~f{{=DD}{=DD}}
	__tg_sqrt = ~f{{=DD}{=DD}}
	__tg_tan = ~f{{=DD}{=DD}}
	__tg_tanh = ~f{{=DD}{=DD}}
	__tg_tgamma = ~f{DD}
	__tg_trunc = ~f{DD}
/usr/local/lib/clang/9.0.1/include/mm_malloc.h
	_mm_free = ~f{v^v}
	_mm_malloc = ~f{^vLL}
	posix_memalign = ~f{i^^vLL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/parserInternals.h
	htmlCreateFileParserCtxt = ~f{^v^c^c}
	htmlInitAutoClose = ~f{v}
	inputPop = ~f{^v^v}
	inputPush = ~f{i^v^v}
	namePop = ~f{^C^v}
	namePush = ~f{i^v^C}
	nodePop = ~f{^v^v}
	nodePush = ~f{i^v^v}
	xmlCheckLanguageID = ~f{i^C}
	xmlCopyChar = ~f{ii^Ci}
	xmlCopyCharMultiByte = ~f{i^Ci}
	xmlCreateEntityParserCtxt = ~f{^v^C^C^C}
	xmlCreateFileParserCtxt = ~f{^v^c}
	xmlCreateMemoryParserCtxt = ~f{^v^ci}
	xmlCreateURLParserCtxt = ~f{^v^ci}
	xmlCurrentChar = ~f{i^v^i}
	xmlDecodeEntities = ~f{^C^viiCCC}
	xmlFreeInputStream = ~f{v^v}
	xmlHandleEntity = ~f{v^v^v}
	xmlIsLetter = ~f{ii}
	xmlNamespaceParseNCName = ~f{^C^v}
	xmlNamespaceParseNSDef = ~f{^C^v}
	xmlNamespaceParseQName = ~f{^C^v^^C}
	xmlNewEntityInputStream = ~f{^v^v^v}
	xmlNewInputFromFile = ~f{^v^v^c}
	xmlNewInputStream = ~f{^v^v}
	xmlNewStringInputStream = ~f{^v^v^C}
	xmlNextChar = ~f{v^v}
	xmlParseAttValue = ~f{^C^v}
	xmlParseAttribute = ~f{^C^v^^C}
	xmlParseAttributeListDecl = ~f{v^v}
	xmlParseAttributeType = ~f{i^v^^v}
	xmlParseCDSect = ~f{v^v}
	xmlParseCharData = ~f{v^vi}
	xmlParseCharRef = ~f{i^v}
	xmlParseComment = ~f{v^v}
	xmlParseContent = ~f{v^v}
	xmlParseDefaultDecl = ~f{i^v^^C}
	xmlParseDocTypeDecl = ~f{v^v}
	xmlParseElement = ~f{v^v}
	xmlParseElementChildrenContentDecl = ~f{^v^vi}
	xmlParseElementContentDecl = ~f{i^v^C^^v}
	xmlParseElementDecl = ~f{i^v}
	xmlParseElementMixedContentDecl = ~f{^v^vi}
	xmlParseEncName = ~f{^C^v}
	xmlParseEncodingDecl = ~f{^C^v}
	xmlParseEndTag = ~f{v^v}
	xmlParseEntityDecl = ~f{v^v}
	xmlParseEntityRef = ~f{^v^v}
	xmlParseEntityValue = ~f{^C^v^^C}
	xmlParseEnumeratedType = ~f{i^v^^v}
	xmlParseEnumerationType = ~f{^v^v}
	xmlParseExternalID = ~f{^C^v^^Ci}
	xmlParseExternalSubset = ~f{v^v^C^C}
	xmlParseMarkupDecl = ~f{v^v}
	xmlParseMisc = ~f{v^v}
	xmlParseName = ~f{^C^v}
	xmlParseNamespace = ~f{v^v}
	xmlParseNmtoken = ~f{^C^v}
	xmlParseNotationDecl = ~f{v^v}
	xmlParseNotationType = ~f{^v^v}
	xmlParsePEReference = ~f{v^v}
	xmlParsePI = ~f{v^v}
	xmlParsePITarget = ~f{^C^v}
	xmlParsePubidLiteral = ~f{^C^v}
	xmlParseQuotedString = ~f{^C^v}
	xmlParseReference = ~f{v^v}
	xmlParseSDDecl = ~f{i^v}
	xmlParseStartTag = ~f{^C^v}
	xmlParseSystemLiteral = ~f{^C^v}
	xmlParseTextDecl = ~f{v^v}
	xmlParseVersionInfo = ~f{^C^v}
	xmlParseVersionNum = ~f{^C^v}
	xmlParseXMLDecl = ~f{v^v}
	xmlParserHandlePEReference = ~f{v^v}
	xmlParserHandleReference = ~f{v^v}
	xmlParserInputShrink = ~f{v^v}
	xmlPopInput = ~f{C^v}
	xmlPushInput = ~f{i^v^v}
	xmlScanName = ~f{^C^v}
	xmlSetEntityReferenceFunc = ~f{v^~f{v^v^v^v}}
	xmlSkipBlankChars = ~f{i^v}
	xmlSplitQName = ~f{^C^v^C^^C}
	xmlStringCurrentChar = ~f{i^v^C^i}
	xmlStringDecodeEntities = ~f{^C^v^CiCCC}
	xmlStringLenDecodeEntities = ~f{^C^v^CiiCCC}
	xmlSwitchEncoding = ~f{i^vi}
	xmlSwitchInputEncoding = ~f{i^v^v^v}
	xmlSwitchToEncoding = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/cups.h
	cupsAddDest = ~f{i^c^ci^^v}
	cupsAddDestMediaOptions = ~f{i^v^v^vI^vi^^v}
	cupsAddIntegerOption = ~f{i^cii^^v}
	cupsAddOption = ~f{i^c^ci^^v}
	cupsCancelDestJob = ~f{i^v^vi}
	cupsCancelJob = ~f{i^ci}
	cupsCancelJob2 = ~f{i^v^cii}
	cupsCheckDestSupported = ~f{i^v^v^v^c^c}
	cupsCloseDestJob = ~f{i^v^v^vi}
	cupsConnectDest = ~f{^v^vIi^i^cL^~f{i^vI^v}^v}
	cupsConnectDestBlock = ~f{^v^vIi^i^cL%~f{iI^v}}
	cupsCopyDest = ~f{i^vi^^v}
	cupsCopyDestConflicts = ~f{i^v^v^vi^v^c^c^i^^v^i^^v}
	cupsCopyDestInfo = ~f{^v^v^v}
	cupsCreateDestJob = ~f{i^v^v^v^i^ci^v}
	cupsCreateJob = ~f{i^v^c^ci^v}
	cupsDoAuthentication = ~f{i^v^c^c}
	cupsDoFileRequest = ~f{^v^v^v^c^c}
	cupsDoIORequest = ~f{^v^v^v^cii}
	cupsDoRequest = ~f{^v^v^v^c}
	cupsEncodeOption = ~f{^v^vi^c^c}
	cupsEncodeOptions = ~f{v^vi^v}
	cupsEncodeOptions2 = ~f{v^vi^vi}
	cupsEncryption = ~f{I}
	cupsEnumDests = ~f{iIi^iII^~f{i^vI^v}^v}
	cupsEnumDestsBlock = ~f{iIi^iII%~f{iI^v}}
	cupsFindDestDefault = ~f{^v^v^v^v^c}
	cupsFindDestReady = ~f{^v^v^v^v^c}
	cupsFindDestSupported = ~f{^v^v^v^v^c}
	cupsFinishDestDocument = ~f{i^v^v^v}
	cupsFinishDocument = ~f{i^v^c}
	cupsFreeDestInfo = ~f{v^v}
	cupsFreeDests = ~f{vi^v}
	cupsFreeJobs = ~f{vi^v}
	cupsFreeOptions = ~f{vi^v}
	cupsGetClasses = ~f{i^^^c}
	cupsGetDefault = ~f{^c}
	cupsGetDefault2 = ~f{^c^v}
	cupsGetDest = ~f{^v^c^ci^v}
	cupsGetDestMediaByIndex = ~f{i^v^v^viI^v}
	cupsGetDestMediaByName = ~f{i^v^v^v^cI^v}
	cupsGetDestMediaBySize = ~f{i^v^v^viiI^v}
	cupsGetDestMediaCount = ~f{i^v^v^vI}
	cupsGetDestMediaDefault = ~f{i^v^v^vI^v}
	cupsGetDestWithURI = ~f{^v^c^c}
	cupsGetDests = ~f{i^^v}
	cupsGetDests2 = ~f{i^v^^v}
	cupsGetFd = ~f{i^v^ci}
	cupsGetFile = ~f{i^v^c^c}
	cupsGetIntegerOption = ~f{i^ci^v}
	cupsGetJobs = ~f{i^^v^cii}
	cupsGetJobs2 = ~f{i^v^^v^cii}
	cupsGetNamedDest = ~f{^v^v^c^c}
	cupsGetOption = ~f{^c^ci^v}
	cupsGetPassword = ~f{^c^c}
	cupsGetPassword2 = ~f{^c^c^v^c^c}
	cupsGetPrinters = ~f{i^^^c}
	cupsGetResponse = ~f{^v^v^c}
	cupsHashData = ~f{l^c^vL^CL}
	cupsHashString = ~f{^c^CL^cL}
	cupsLastError = ~f{i}
	cupsLastErrorString = ~f{^c}
	cupsLocalizeDestMedia = ~f{^c^v^v^vI^v}
	cupsLocalizeDestOption = ~f{^c^v^v^v^c}
	cupsLocalizeDestValue = ~f{^c^v^v^v^c^c}
	cupsMakeServerCredentials = ~f{i^c^ci^^cl}
	cupsNotifySubject = ~f{^c^v^v}
	cupsNotifyText = ~f{^c^v^v}
	cupsParseOptions = ~f{i^ci^^v}
	cupsPrintFile = ~f{i^c^c^ci^v}
	cupsPrintFile2 = ~f{i^v^c^c^ci^v}
	cupsPrintFiles = ~f{i^ci^^c^ci^v}
	cupsPrintFiles2 = ~f{i^v^ci^^c^ci^v}
	cupsPutFd = ~f{i^v^ci}
	cupsPutFile = ~f{i^v^c^c}
	cupsReadResponseData = ~f{l^v^cL}
	cupsRemoveDest = ~f{i^c^ci^^v}
	cupsRemoveOption = ~f{i^ci^^v}
	cupsSendRequest = ~f{i^v^v^cL}
	cupsServer = ~f{^c}
	cupsSetClientCertCB = ~f{v^~f{i^v^v^v^v}^v}
	cupsSetCredentials = ~f{i^v}
	cupsSetDefaultDest = ~f{v^c^ci^v}
	cupsSetDests = ~f{vi^v}
	cupsSetDests2 = ~f{i^vi^v}
	cupsSetEncryption = ~f{vI}
	cupsSetPasswordCB = ~f{v^~f{^c^c}}
	cupsSetPasswordCB2 = ~f{v^~f{^c^c^v^c^c^v}^v}
	cupsSetServer = ~f{v^c}
	cupsSetServerCertCB = ~f{v^~f{i^v^v^v^v}^v}
	cupsSetServerCredentials = ~f{i^c^ci}
	cupsSetUser = ~f{v^c}
	cupsSetUserAgent = ~f{v^c}
	cupsStartDestDocument = ~f{i^v^v^vi^c^ci^vi}
	cupsStartDocument = ~f{i^v^ci^c^ci}
	cupsTempFd = ~f{i^ci}
	cupsTempFile = ~f{^c^ci}
	cupsTempFile2 = ~f{^v^ci}
	cupsUser = ~f{^c}
	cupsUserAgent = ~f{^c}
	cupsWriteRequestData = ~f{i^v^cL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libkern/OSByteOrder.h
	OSHostByteOrder = ~f{i}
	_OSReadInt16 = ~f{S^vL}
	_OSReadInt32 = ~f{I^vL}
	_OSReadInt64 = ~f{Q^vL}
	_OSWriteInt16 = ~f{v^vLS}
	_OSWriteInt32 = ~f{v^vLI}
	_OSWriteInt64 = ~f{v^vLQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/wait.h
	wait = ~f{i^i}
	wait3 = ~f{i^ii^v}
	wait4 = ~f{ii^ii^v}
	waitid = ~f{iII^vi}
	waitpid = ~f{ii^ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Conversion.h
	vImageBufferFill_ARGB16S = ~f{l^v^sI}
	vImageBufferFill_ARGB16U = ~f{l^v^SI}
	vImageBufferFill_ARGB8888 = ~f{l^v^CI}
	vImageBufferFill_ARGBFFFF = ~f{l^v^fI}
	vImageBufferFill_CbCr16U = ~f{l^v^SI}
	vImageBufferFill_CbCr8 = ~f{l^v^CI}
	vImageByteSwap_Planar16U = ~f{l^v^vI}
	vImageClip_PlanarF = ~f{l^v^vffI}
	vImageConvert_12UTo16U = ~f{l^v^vI}
	vImageConvert_16Fto16Q12 = ~f{l^v^vI}
	vImageConvert_16Fto16U = ~f{l^v^vI}
	vImageConvert_16Q12to16F = ~f{l^v^vI}
	vImageConvert_16Q12to16U = ~f{l^v^vI}
	vImageConvert_16Q12to8 = ~f{l^v^vI}
	vImageConvert_16Q12toF = ~f{l^v^vI}
	vImageConvert_16SToF = ~f{l^v^vffI}
	vImageConvert_16UTo12U = ~f{l^v^vI}
	vImageConvert_16UToF = ~f{l^v^vffI}
	vImageConvert_16UToPlanar8 = ~f{l^v^vI}
	vImageConvert_16Uto16F = ~f{l^v^vI}
	vImageConvert_16Uto16Q12 = ~f{l^v^vI}
	vImageConvert_420Yp8_Cb8_Cr8ToARGB8888 = ~f{l^v^v^v^v^v^CCI}
	vImageConvert_420Yp8_CbCr8ToARGB8888 = ~f{l^v^v^v^v^CCI}
	vImageConvert_422CbYpCrYp16ToARGB16U = ~f{l^v^v^v^CSI}
	vImageConvert_422CbYpCrYp16ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_422CbYpCrYp8ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_422CbYpCrYp8_AA8ToARGB8888 = ~f{l^v^v^v^v^CI}
	vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB16Q12 = ~f{l^v^v^v^CsI}
	vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_422YpCbYpCr8ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_444AYpCbCr16ToARGB16U = ~f{l^v^v^v^CI}
	vImageConvert_444AYpCbCr16ToARGB8888 = ~f{l^v^v^v^CI}
	vImageConvert_444AYpCbCr8ToARGB8888 = ~f{l^v^v^v^CI}
	vImageConvert_444CbYpCrA8ToARGB8888 = ~f{l^v^v^v^CI}
	vImageConvert_444CrYpCb10ToARGB16Q12 = ~f{l^v^v^v^CsI}
	vImageConvert_444CrYpCb10ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_444CrYpCb8ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_8to16Q12 = ~f{l^v^vI}
	vImageConvert_ARGB1555toARGB8888 = ~f{l^v^vI}
	vImageConvert_ARGB1555toPlanar8 = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB1555toRGB565 = ~f{l^v^vI}
	vImageConvert_ARGB16Q12To422CrYpCbYpCbYpCbYpCrYpCrYp10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16Q12To444CrYpCb10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16Q12ToARGB2101010 = ~f{l^v^viiii^CI}
	vImageConvert_ARGB16Q12ToRGBA1010102 = ~f{l^v^viiii^CI}
	vImageConvert_ARGB16Q12ToXRGB2101010 = ~f{l^v^viiii^CI}
	vImageConvert_ARGB16UTo422CbYpCrYp16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16UTo444AYpCbCr16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16UToARGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB16UToARGB8888 = ~f{l^v^v^CC^CI}
	vImageConvert_ARGB16UToRGBA1010102 = ~f{l^v^vii^CI}
	vImageConvert_ARGB16UToXRGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB16UtoARGB8888_dithered = ~f{l^v^vi^CI}
	vImageConvert_ARGB16UtoPlanar16U = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB16UtoRGB16U = ~f{l^v^vI}
	vImageConvert_ARGB2101010ToARGB16F = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGB16Q12 = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGB16U = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGB8888 = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGBFFFF = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888To420Yp8_Cb8_Cr8 = ~f{l^v^v^v^v^v^CI}
	vImageConvert_ARGB8888To420Yp8_CbCr8 = ~f{l^v^v^v^v^CI}
	vImageConvert_ARGB8888To422CbYpCrYp16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To422CbYpCrYp8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To422CbYpCrYp8_AA8 = ~f{l^v^v^v^v^CI}
	vImageConvert_ARGB8888To422CrYpCbYpCbYpCbYpCrYpCrYp10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To422YpCbYpCr8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444AYpCbCr16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444AYpCbCr8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444CbYpCrA8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444CrYpCb10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444CrYpCb8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888ToARGB16U = ~f{l^v^v^CC^SI}
	vImageConvert_ARGB8888ToARGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888ToRGB16U = ~f{l^v^v^CC^SI}
	vImageConvert_ARGB8888ToRGBA1010102 = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888ToXRGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888toARGB1555 = ~f{l^v^vI}
	vImageConvert_ARGB8888toARGB1555_dithered = ~f{l^v^v^viI}
	vImageConvert_ARGB8888toPlanar16Q12 = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB8888toPlanar8 = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB8888toPlanarF = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_ARGB8888toRGB565 = ~f{l^v^vI}
	vImageConvert_ARGB8888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_ARGB8888toRGB888 = ~f{l^v^vI}
	vImageConvert_ARGBFFFFToARGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGBFFFFToXRGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGBFFFFtoARGB8888_dithered = ~f{l^v^v^f^fi^CI}
	vImageConvert_ARGBFFFFtoPlanar8 = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_ARGBFFFFtoPlanarF = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGBFFFFtoRGBFFF = ~f{l^v^vI}
	vImageConvert_ARGBToYpCbCr_GenerateConversion = ~f{l^v^v^vIII}
	vImageConvert_BGRA16UtoRGB16U = ~f{l^v^vI}
	vImageConvert_BGRA8888toRGB565 = ~f{l^v^vI}
	vImageConvert_BGRA8888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_BGRA8888toRGB888 = ~f{l^v^vI}
	vImageConvert_BGRAFFFFtoRGBFFF = ~f{l^v^vI}
	vImageConvert_BGRX8888ToPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_BGRXFFFFToPlanarF = ~f{l^v^v^v^vI}
	vImageConvert_ChunkyToPlanar8 = ~f{l^^v^^vILLLLI}
	vImageConvert_ChunkyToPlanarF = ~f{l^^v^^vILLLLI}
	vImageConvert_FTo16S = ~f{l^v^vffI}
	vImageConvert_FTo16U = ~f{l^v^vffI}
	vImageConvert_Fto16Q12 = ~f{l^v^vI}
	vImageConvert_Indexed1toPlanar8 = ~f{l^v^v^CI}
	vImageConvert_Indexed2toPlanar8 = ~f{l^v^v^CI}
	vImageConvert_Indexed4toPlanar8 = ~f{l^v^v^CI}
	vImageConvert_Planar16FtoPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar16FtoPlanarF = ~f{l^v^vI}
	vImageConvert_Planar16Q12toARGB16F = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar16Q12toARGB8888 = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar16Q12toRGB16F = ~f{l^v^v^v^vI}
	vImageConvert_Planar16Q12toRGB888 = ~f{l^v^v^v^vI}
	vImageConvert_Planar16UtoARGB16U = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar16UtoPlanar8_dithered = ~f{l^v^viI}
	vImageConvert_Planar16UtoRGB16U = ~f{l^v^v^v^vI}
	vImageConvert_Planar1toPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar2toPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar4toPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar8To16U = ~f{l^v^vI}
	vImageConvert_Planar8ToARGBFFFF = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_Planar8ToBGRX8888 = ~f{l^v^v^vC^vI}
	vImageConvert_Planar8ToBGRXFFFF = ~f{l^v^v^vf^v^f^fI}
	vImageConvert_Planar8ToXRGB8888 = ~f{lC^v^v^v^vI}
	vImageConvert_Planar8ToXRGBFFFF = ~f{lf^v^v^v^v^f^fI}
	vImageConvert_Planar8toARGB1555 = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar8toARGB8888 = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar8toIndexed1 = ~f{l^v^v^v^CiI}
	vImageConvert_Planar8toIndexed2 = ~f{l^v^v^v^CiI}
	vImageConvert_Planar8toIndexed4 = ~f{l^v^v^v^CiI}
	vImageConvert_Planar8toPlanar1 = ~f{l^v^v^viI}
	vImageConvert_Planar8toPlanar16F = ~f{l^v^vI}
	vImageConvert_Planar8toPlanar2 = ~f{l^v^v^viI}
	vImageConvert_Planar8toPlanar4 = ~f{l^v^v^viI}
	vImageConvert_Planar8toPlanarF = ~f{l^v^vffI}
	vImageConvert_Planar8toRGB565 = ~f{l^v^v^v^vI}
	vImageConvert_Planar8toRGB888 = ~f{l^v^v^v^vI}
	vImageConvert_PlanarFToARGB8888 = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_PlanarFToBGRX8888 = ~f{l^v^v^vC^v^f^fI}
	vImageConvert_PlanarFToBGRXFFFF = ~f{l^v^v^vf^vI}
	vImageConvert_PlanarFToXRGB8888 = ~f{lC^v^v^v^v^f^fI}
	vImageConvert_PlanarFToXRGBFFFF = ~f{lf^v^v^v^vI}
	vImageConvert_PlanarFtoARGBFFFF = ~f{l^v^v^v^v^vI}
	vImageConvert_PlanarFtoPlanar16F = ~f{l^v^vI}
	vImageConvert_PlanarFtoPlanar8 = ~f{l^v^vffI}
	vImageConvert_PlanarFtoPlanar8_dithered = ~f{l^v^vffiI}
	vImageConvert_PlanarFtoRGBFFF = ~f{l^v^v^v^vI}
	vImageConvert_PlanarToChunky8 = ~f{l^^v^^vILLLLI}
	vImageConvert_PlanarToChunkyF = ~f{l^^v^^vILLLLI}
	vImageConvert_RGB16UToARGB8888 = ~f{l^v^v^CC^CI}
	vImageConvert_RGB16UtoARGB16U = ~f{l^v^vS^vBI}
	vImageConvert_RGB16UtoBGRA16U = ~f{l^v^vS^vBI}
	vImageConvert_RGB16UtoPlanar16U = ~f{l^v^v^v^vI}
	vImageConvert_RGB16UtoRGB888_dithered = ~f{l^v^viI}
	vImageConvert_RGB16UtoRGBA16U = ~f{l^v^vS^vBI}
	vImageConvert_RGB565toARGB1555 = ~f{l^v^viI}
	vImageConvert_RGB565toARGB8888 = ~f{lC^v^vI}
	vImageConvert_RGB565toBGRA8888 = ~f{lC^v^vI}
	vImageConvert_RGB565toPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_RGB565toRGB888 = ~f{l^v^vI}
	vImageConvert_RGB565toRGBA5551 = ~f{l^v^viI}
	vImageConvert_RGB565toRGBA8888 = ~f{lC^v^vI}
	vImageConvert_RGB888toARGB8888 = ~f{l^v^vC^vBI}
	vImageConvert_RGB888toBGRA8888 = ~f{l^v^vC^vBI}
	vImageConvert_RGB888toPlanar16Q12 = ~f{l^v^v^v^vI}
	vImageConvert_RGB888toPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_RGB888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_RGB888toRGBA8888 = ~f{l^v^vC^vBI}
	vImageConvert_RGBA1010102ToARGB16Q12 = ~f{l^v^vii^CI}
	vImageConvert_RGBA1010102ToARGB16U = ~f{l^v^vii^CI}
	vImageConvert_RGBA1010102ToARGB8888 = ~f{l^v^vii^CI}
	vImageConvert_RGBA16UtoRGB16U = ~f{l^v^vI}
	vImageConvert_RGBA5551toRGB565 = ~f{l^v^vI}
	vImageConvert_RGBA5551toRGBA8888 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGB565 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_RGBA8888toRGB888 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGBA5551 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGBA5551_dithered = ~f{l^v^v^viI}
	vImageConvert_RGBAFFFFtoRGBFFF = ~f{l^v^vI}
	vImageConvert_RGBFFFtoARGBFFFF = ~f{l^v^vf^vBI}
	vImageConvert_RGBFFFtoBGRAFFFF = ~f{l^v^vf^vBI}
	vImageConvert_RGBFFFtoPlanarF = ~f{l^v^v^v^vI}
	vImageConvert_RGBFFFtoRGB888_dithered = ~f{l^v^v^f^fiI}
	vImageConvert_RGBFFFtoRGBAFFFF = ~f{l^v^vf^vBI}
	vImageConvert_XRGB2101010ToARGB16F = ~f{l^vf^vii^CI}
	vImageConvert_XRGB2101010ToARGB16Q12 = ~f{l^vs^vii^CI}
	vImageConvert_XRGB2101010ToARGB16U = ~f{l^vS^vii^CI}
	vImageConvert_XRGB2101010ToARGB8888 = ~f{l^vC^vii^CI}
	vImageConvert_XRGB2101010ToARGBFFFF = ~f{l^vf^vii^CI}
	vImageConvert_XRGB8888ToPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_XRGBFFFFToPlanarF = ~f{l^v^v^v^vI}
	vImageConvert_YpCbCrToARGB_GenerateConversion = ~f{l^v^v^vIII}
	vImageCopyBuffer = ~f{l^v^vLI}
	vImageExtractChannel_ARGB16U = ~f{l^v^vlI}
	vImageExtractChannel_ARGB8888 = ~f{l^v^vlI}
	vImageExtractChannel_ARGBFFFF = ~f{l^v^vlI}
	vImageFlatten_ARGB16Q12 = ~f{l^v^v^sBI}
	vImageFlatten_ARGB16U = ~f{l^v^v^SBI}
	vImageFlatten_ARGB8888 = ~f{l^v^v^CBI}
	vImageFlatten_ARGB8888ToRGB888 = ~f{l^v^v^CBI}
	vImageFlatten_ARGBFFFF = ~f{l^v^v^fBI}
	vImageFlatten_ARGBFFFFToRGBFFF = ~f{l^v^v^fBI}
	vImageFlatten_BGRA8888ToRGB888 = ~f{l^v^v^CBI}
	vImageFlatten_BGRAFFFFToRGBFFF = ~f{l^v^v^fBI}
	vImageFlatten_RGBA16Q12 = ~f{l^v^v^sBI}
	vImageFlatten_RGBA16U = ~f{l^v^v^SBI}
	vImageFlatten_RGBA8888 = ~f{l^v^v^CBI}
	vImageFlatten_RGBA8888ToRGB888 = ~f{l^v^v^CBI}
	vImageFlatten_RGBAFFFF = ~f{l^v^v^fBI}
	vImageFlatten_RGBAFFFFToRGBFFF = ~f{l^v^v^fBI}
	vImageOverwriteChannelsWithPixel_ARGB16U = ~f{l^S^v^vCI}
	vImageOverwriteChannelsWithPixel_ARGB8888 = ~f{l^C^v^vCI}
	vImageOverwriteChannelsWithPixel_ARGBFFFF = ~f{l^f^v^vCI}
	vImageOverwriteChannelsWithScalar_ARGB8888 = ~f{lC^v^vCI}
	vImageOverwriteChannelsWithScalar_ARGBFFFF = ~f{lf^v^vCI}
	vImageOverwriteChannelsWithScalar_Planar16S = ~f{ls^vI}
	vImageOverwriteChannelsWithScalar_Planar16U = ~f{lS^vI}
	vImageOverwriteChannelsWithScalar_Planar8 = ~f{lC^vI}
	vImageOverwriteChannelsWithScalar_PlanarF = ~f{lf^vI}
	vImageOverwriteChannels_ARGB8888 = ~f{l^v^v^vCI}
	vImageOverwriteChannels_ARGBFFFF = ~f{l^v^v^vCI}
	vImagePermuteChannelsWithMaskedInsert_ARGB16U = ~f{l^v^v^CC^SI}
	vImagePermuteChannelsWithMaskedInsert_ARGB8888 = ~f{l^v^v^CC^CI}
	vImagePermuteChannelsWithMaskedInsert_ARGBFFFF = ~f{l^v^v^CC^fI}
	vImagePermuteChannels_ARGB16U = ~f{l^v^v^CI}
	vImagePermuteChannels_ARGB8888 = ~f{l^v^v^CI}
	vImagePermuteChannels_ARGBFFFF = ~f{l^v^v^CI}
	vImagePermuteChannels_RGB888 = ~f{l^v^v^CI}
	vImageSelectChannels_ARGB8888 = ~f{l^v^v^vCI}
	vImageSelectChannels_ARGBFFFF = ~f{l^v^v^vCI}
	vImageTableLookUp_ARGB8888 = ~f{l^v^v^C^C^C^CI}
	vImageTableLookUp_Planar8 = ~f{l^v^v^CI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libkern/i386/_OSByteOrder.h
	_OSSwapInt16 = ~f{SS}
	_OSSwapInt32 = ~f{II}
	_OSSwapInt64 = ~f{QQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/malloc/_malloc.h
	aligned_alloc = ~f{^vLL}
	calloc = ~f{^vLL}
	free = ~f{v^v}
	malloc = ~f{^vL}
	posix_memalign = ~f{i^^vLL}
	realloc = ~f{^v^vL}
	valloc = ~f{^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/ethernet_channel.h
	nw_ethernet_channel_cancel = ~f{v@}
	nw_ethernet_channel_create = ~f{@S@}
	nw_ethernet_channel_send = ~f{v@@S^C%~f{v@}}
	nw_ethernet_channel_set_queue = ~f{v@@}
	nw_ethernet_channel_set_receive_handler = ~f{v@%~f{v@S^C^C}}
	nw_ethernet_channel_set_state_changed_handler = ~f{v@%~f{vI@}}
	nw_ethernet_channel_start = ~f{v@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xinclude.h
	xmlXIncludeFreeContext = ~f{v^v}
	xmlXIncludeNewContext = ~f{^v^v}
	xmlXIncludeProcess = ~f{i^v}
	xmlXIncludeProcessFlags = ~f{i^vi}
	xmlXIncludeProcessFlagsData = ~f{i^vi^v}
	xmlXIncludeProcessNode = ~f{i^v^v}
	xmlXIncludeProcessTree = ~f{i^v}
	xmlXIncludeProcessTreeFlags = ~f{i^vi}
	xmlXIncludeProcessTreeFlagsData = ~f{i^vi^v}
	xmlXIncludeSetFlags = ~f{i^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach-o/nlist.h
	nlist = ~f{i^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFFTPStream.h
	CFFTPCreateParsedResourceListing = ~f{l^v^Cl^^v}
	CFReadStreamCreateWithFTPURL = ~f{^v^v^v}
	CFWriteStreamCreateWithFTPURL = ~f{^v^v^v}
/usr/local/lib/clang/9.0.1/include/avx2intrin.h
	_mm256_abs_epi16 = ~f{~V{4q}~V{4q}}
	_mm256_abs_epi32 = ~f{~V{4q}~V{4q}}
	_mm256_abs_epi8 = ~f{~V{4q}~V{4q}}
	_mm256_add_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_add_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_add_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_add_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_adds_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_adds_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_adds_epu16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_adds_epu8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_and_si256 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_andnot_si256 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_avg_epu16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_avg_epu8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_blendv_epi8 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_broadcastb_epi8 = ~f{~V{4q}~V{2q}}
	_mm256_broadcastd_epi32 = ~f{~V{4q}~V{2q}}
	_mm256_broadcastq_epi64 = ~f{~V{4q}~V{2q}}
	_mm256_broadcastsd_pd = ~f{~V{4d}~V{2d}}
	_mm256_broadcastsi128_si256 = ~f{~V{4q}~V{2q}}
	_mm256_broadcastss_ps = ~f{~V{8f}~V{4f}}
	_mm256_broadcastw_epi16 = ~f{~V{4q}~V{2q}}
	_mm256_cmpeq_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cmpeq_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cmpeq_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cmpeq_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cmpgt_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cmpgt_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cmpgt_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cmpgt_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_cvtepi16_epi32 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepi16_epi64 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepi32_epi64 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepi8_epi16 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepi8_epi32 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepi8_epi64 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepu16_epi32 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepu16_epi64 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepu32_epi64 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepu8_epi16 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepu8_epi32 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepu8_epi64 = ~f{~V{4q}~V{2q}}
	_mm256_hadd_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_hadd_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_hadds_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_hsub_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_hsub_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_hsubs_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_madd_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_maddubs_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_maskload_epi32 = ~f{~V{4q}^i~V{4q}}
	_mm256_maskload_epi64 = ~f{~V{4q}^q~V{4q}}
	_mm256_maskstore_epi32 = ~f{v^i~V{4q}~V{4q}}
	_mm256_maskstore_epi64 = ~f{v^q~V{4q}~V{4q}}
	_mm256_max_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_max_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_max_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_max_epu16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_max_epu32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_max_epu8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epu16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epu32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epu8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_movemask_epi8 = ~f{i~V{4q}}
	_mm256_mul_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_mul_epu32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_mulhi_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_mulhi_epu16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_mulhrs_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_mullo_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_mullo_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_or_si256 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_packs_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_packs_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_packus_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_packus_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_permutevar8x32_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_permutevar8x32_ps = ~f{~V{8f}~V{8f}~V{4q}}
	_mm256_sad_epu8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_shuffle_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sign_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sign_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sign_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sll_epi16 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_sll_epi32 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_sll_epi64 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_slli_epi16 = ~f{~V{4q}~V{4q}i}
	_mm256_slli_epi32 = ~f{~V{4q}~V{4q}i}
	_mm256_slli_epi64 = ~f{~V{4q}~V{4q}i}
	_mm256_sllv_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sllv_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sra_epi16 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_sra_epi32 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_srai_epi16 = ~f{~V{4q}~V{4q}i}
	_mm256_srai_epi32 = ~f{~V{4q}~V{4q}i}
	_mm256_srav_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_srl_epi16 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_srl_epi32 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_srl_epi64 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_srli_epi16 = ~f{~V{4q}~V{4q}i}
	_mm256_srli_epi32 = ~f{~V{4q}~V{4q}i}
	_mm256_srli_epi64 = ~f{~V{4q}~V{4q}i}
	_mm256_srlv_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_srlv_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_stream_load_si256 = ~f{~V{4q}^~V{4q}}
	_mm256_sub_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sub_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sub_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sub_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_subs_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_subs_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_subs_epu16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_subs_epu8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpackhi_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpackhi_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpackhi_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpackhi_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpacklo_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpacklo_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpacklo_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_unpacklo_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_xor_si256 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm_broadcastb_epi8 = ~f{~V{2q}~V{2q}}
	_mm_broadcastd_epi32 = ~f{~V{2q}~V{2q}}
	_mm_broadcastq_epi64 = ~f{~V{2q}~V{2q}}
	_mm_broadcastsd_pd = ~f{~V{2d}~V{2d}}
	_mm_broadcastss_ps = ~f{~V{4f}~V{4f}}
	_mm_broadcastw_epi16 = ~f{~V{2q}~V{2q}}
	_mm_maskload_epi32 = ~f{~V{2q}^i~V{2q}}
	_mm_maskload_epi64 = ~f{~V{2q}^q~V{2q}}
	_mm_maskstore_epi32 = ~f{v^i~V{2q}~V{2q}}
	_mm_maskstore_epi64 = ~f{v^q~V{2q}~V{2q}}
	_mm_sllv_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sllv_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srav_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srlv_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srlv_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/malloc/malloc.h
	malloc_create_zone = ~f{^vLI}
	malloc_default_purgeable_zone = ~f{^v}
	malloc_default_zone = ~f{^v}
	malloc_destroy_zone = ~f{v^v}
	malloc_get_all_zones = ~f{iI~f{iILL^^v}^^L^I}
	malloc_get_zone_name = ~f{^c^v}
	malloc_good_size = ~f{LL}
	malloc_make_nonpurgeable = ~f{i^v}
	malloc_make_purgeable = ~f{v^v}
	malloc_printf = ~f{v^c$}
	malloc_set_zone_name = ~f{v^v^c}
	malloc_size = ~f{L^v}
	malloc_zone_batch_free = ~f{v^v^^vI}
	malloc_zone_batch_malloc = ~f{I^vL^^vI}
	malloc_zone_calloc = ~f{^v^vLL}
	malloc_zone_check = ~f{I^v}
	malloc_zone_disable_discharge_checking = ~f{v^v}
	malloc_zone_discharge = ~f{v^v^v}
	malloc_zone_enable_discharge_checking = ~f{I^v}
	malloc_zone_enumerate_discharged_pointers = ~f{v^v%~f{v^v^v}}
	malloc_zone_free = ~f{v^v^v}
	malloc_zone_from_ptr = ~f{^v^v}
	malloc_zone_log = ~f{v^v^v}
	malloc_zone_malloc = ~f{^v^vL}
	malloc_zone_memalign = ~f{^v^vLL}
	malloc_zone_pressure_relief = ~f{L^vL}
	malloc_zone_print = ~f{v^vI}
	malloc_zone_print_ptr_info = ~f{v^v}
	malloc_zone_realloc = ~f{^v^v^vL}
	malloc_zone_register = ~f{v^v}
	malloc_zone_statistics = ~f{v^v^v}
	malloc_zone_unregister = ~f{v^v}
	malloc_zone_valloc = ~f{^v^vL}
	mstats = ~f{{=LLLLL}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread.h
	pthread_atfork = ~f{i^~f{v}^~f{v}^~f{v}}
	pthread_attr_destroy = ~f{i^v}
	pthread_attr_getdetachstate = ~f{i^v^i}
	pthread_attr_getguardsize = ~f{i^v^L}
	pthread_attr_getinheritsched = ~f{i^v^i}
	pthread_attr_getschedparam = ~f{i^v^v}
	pthread_attr_getschedpolicy = ~f{i^v^i}
	pthread_attr_getscope = ~f{i^v^i}
	pthread_attr_getstack = ~f{i^v^^v^L}
	pthread_attr_getstackaddr = ~f{i^v^^v}
	pthread_attr_getstacksize = ~f{i^v^L}
	pthread_attr_init = ~f{i^v}
	pthread_attr_setdetachstate = ~f{i^vi}
	pthread_attr_setguardsize = ~f{i^vL}
	pthread_attr_setinheritsched = ~f{i^vi}
	pthread_attr_setschedparam = ~f{i^v^v}
	pthread_attr_setschedpolicy = ~f{i^vi}
	pthread_attr_setscope = ~f{i^vi}
	pthread_attr_setstack = ~f{i^v^vL}
	pthread_attr_setstackaddr = ~f{i^v^v}
	pthread_attr_setstacksize = ~f{i^vL}
	pthread_cancel = ~f{i^v}
	pthread_cond_broadcast = ~f{i^v}
	pthread_cond_destroy = ~f{i^v}
	pthread_cond_init = ~f{i^v^v}
	pthread_cond_signal = ~f{i^v}
	pthread_cond_signal_thread_np = ~f{i^v^v}
	pthread_cond_timedwait = ~f{i^v^v^v}
	pthread_cond_timedwait_relative_np = ~f{i^v^v^v}
	pthread_cond_wait = ~f{i^v^v}
	pthread_condattr_destroy = ~f{i^v}
	pthread_condattr_getpshared = ~f{i^v^i}
	pthread_condattr_init = ~f{i^v}
	pthread_condattr_setpshared = ~f{i^vi}
	pthread_create = ~f{i^^v^v^~f{^v^v}^v}
	pthread_create_suspended_np = ~f{i^^v^v^~f{^v^v}^v}
	pthread_detach = ~f{i^v}
	pthread_equal = ~f{i^v^v}
	pthread_exit = ~f{v^v}
	pthread_from_mach_thread_np = ~f{^vI}
	pthread_get_stackaddr_np = ~f{^v^v}
	pthread_get_stacksize_np = ~f{L^v}
	pthread_getconcurrency = ~f{i}
	pthread_getname_np = ~f{i^v^cL}
	pthread_getschedparam = ~f{i^v^i^v}
	pthread_getspecific = ~f{^vL}
	pthread_is_threaded_np = ~f{i}
	pthread_join = ~f{i^v^^v}
	pthread_key_create = ~f{i^L^~f{v^v}}
	pthread_key_delete = ~f{iL}
	pthread_kill = ~f{i^vi}
	pthread_mach_thread_np = ~f{I^v}
	pthread_main_np = ~f{i}
	pthread_mutex_destroy = ~f{i^v}
	pthread_mutex_getprioceiling = ~f{i^v^i}
	pthread_mutex_init = ~f{i^v^v}
	pthread_mutex_lock = ~f{i^v}
	pthread_mutex_setprioceiling = ~f{i^vi^i}
	pthread_mutex_trylock = ~f{i^v}
	pthread_mutex_unlock = ~f{i^v}
	pthread_mutexattr_destroy = ~f{i^v}
	pthread_mutexattr_getpolicy_np = ~f{i^v^i}
	pthread_mutexattr_getprioceiling = ~f{i^v^i}
	pthread_mutexattr_getprotocol = ~f{i^v^i}
	pthread_mutexattr_getpshared = ~f{i^v^i}
	pthread_mutexattr_gettype = ~f{i^v^i}
	pthread_mutexattr_init = ~f{i^v}
	pthread_mutexattr_setpolicy_np = ~f{i^vi}
	pthread_mutexattr_setprioceiling = ~f{i^vi}
	pthread_mutexattr_setprotocol = ~f{i^vi}
	pthread_mutexattr_setpshared = ~f{i^vi}
	pthread_mutexattr_settype = ~f{i^vi}
	pthread_once = ~f{i^v^~f{v}}
	pthread_rwlock_destroy = ~f{i^v}
	pthread_rwlock_init = ~f{i^v^v}
	pthread_rwlock_rdlock = ~f{i^v}
	pthread_rwlock_tryrdlock = ~f{i^v}
	pthread_rwlock_trywrlock = ~f{i^v}
	pthread_rwlock_unlock = ~f{i^v}
	pthread_rwlock_wrlock = ~f{i^v}
	pthread_rwlockattr_destroy = ~f{i^v}
	pthread_rwlockattr_getpshared = ~f{i^v^i}
	pthread_rwlockattr_init = ~f{i^v}
	pthread_rwlockattr_setpshared = ~f{i^vi}
	pthread_self = ~f{^v}
	pthread_setcancelstate = ~f{ii^i}
	pthread_setcanceltype = ~f{ii^i}
	pthread_setconcurrency = ~f{ii}
	pthread_setname_np = ~f{i^c}
	pthread_setschedparam = ~f{i^vi^v}
	pthread_setspecific = ~f{iL^v}
	pthread_sigmask = ~f{ii^I^I}
	pthread_testcancel = ~f{v}
	pthread_threadid_np = ~f{i^v^Q}
	pthread_yield_np = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/dir.h
	cupsDirClose = ~f{v^v}
	cupsDirOpen = ~f{^v^c}
	cupsDirRead = ~f{^v^v}
	cupsDirRewind = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFPage.h
	CGPDFPageGetBoxRect = ~f{{={=dd}{=dd}}^vi}
	CGPDFPageGetDictionary = ~f{^v^v}
	CGPDFPageGetDocument = ~f{^v^v}
	CGPDFPageGetDrawingTransform = ~f{{=dddddd}^vi{={=dd}{=dd}}iB}
	CGPDFPageGetPageNumber = ~f{L^v}
	CGPDFPageGetRotationAngle = ~f{i^v}
	CGPDFPageGetTypeID = ~f{L}
	CGPDFPageRelease = ~f{v^v}
	CGPDFPageRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/Headers/AVAudioTypes.h
	AVAudioMake3DAngularOrientation = ~f{{=fff}fff}
	AVAudioMake3DPoint = ~f{{=fff}fff}
	AVAudioMake3DVector = ~f{{=fff}fff}
	AVAudioMake3DVectorOrientation = ~f{{={=fff}{=fff}}{=fff}{=fff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioFormat.h
	AudioFormatGetProperty = ~f{iII^v^I^v}
	AudioFormatGetPropertyInfo = ~f{iII^v^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/encoding.h
	UTF8Toisolat1 = ~f{i^C^i^C^i}
	isolat1ToUTF8 = ~f{i^C^i^C^i}
	xmlAddEncodingAlias = ~f{i^c^c}
	xmlCharEncCloseFunc = ~f{i^v}
	xmlCharEncFirstLine = ~f{i^v^v^v}
	xmlCharEncInFunc = ~f{i^v^v^v}
	xmlCharEncOutFunc = ~f{i^v^v^v}
	xmlCleanupCharEncodingHandlers = ~f{v}
	xmlCleanupEncodingAliases = ~f{v}
	xmlDelEncodingAlias = ~f{i^c}
	xmlDetectCharEncoding = ~f{i^Ci}
	xmlFindCharEncodingHandler = ~f{^v^c}
	xmlGetCharEncodingHandler = ~f{^vi}
	xmlGetCharEncodingName = ~f{^ci}
	xmlGetEncodingAlias = ~f{^c^c}
	xmlInitCharEncodingHandlers = ~f{v}
	xmlNewCharEncodingHandler = ~f{^v^c^~f{i^C^i^C^i}^~f{i^C^i^C^i}}
	xmlParseCharEncoding = ~f{i^c}
	xmlRegisterCharEncodingHandler = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMBufferQueue.h
	CMBufferQueueCallForEachBuffer = ~f{i^v^~f{i^v^v}^v}
	CMBufferQueueContainsEndOfData = ~f{C^v}
	CMBufferQueueCreate = ~f{i^vl^v^^v}
	CMBufferQueueCreateWithHandlers = ~f{i^vl^v^^v}
	CMBufferQueueDequeueAndRetain = ~f{^v^v}
	CMBufferQueueDequeueIfDataReadyAndRetain = ~f{^v^v}
	CMBufferQueueEnqueue = ~f{i^v^v}
	CMBufferQueueGetBufferCount = ~f{l^v}
	CMBufferQueueGetCallbacksForSampleBuffersSortedByOutputPTS = ~f{^v}
	CMBufferQueueGetCallbacksForUnsortedSampleBuffers = ~f{^v}
	CMBufferQueueGetDuration = ~f{{=qiIq}^v}
	CMBufferQueueGetEndPresentationTimeStamp = ~f{{=qiIq}^v}
	CMBufferQueueGetFirstDecodeTimeStamp = ~f{{=qiIq}^v}
	CMBufferQueueGetFirstPresentationTimeStamp = ~f{{=qiIq}^v}
	CMBufferQueueGetHead = ~f{^v^v}
	CMBufferQueueGetMaxPresentationTimeStamp = ~f{{=qiIq}^v}
	CMBufferQueueGetMinDecodeTimeStamp = ~f{{=qiIq}^v}
	CMBufferQueueGetMinPresentationTimeStamp = ~f{{=qiIq}^v}
	CMBufferQueueGetTotalSize = ~f{L^v}
	CMBufferQueueGetTypeID = ~f{L}
	CMBufferQueueInstallTrigger = ~f{i^v^~f{v^v^v}^vi{=qiIq}^^v}
	CMBufferQueueInstallTriggerHandler = ~f{i^vi{=qiIq}^^v%~f{v^v}}
	CMBufferQueueInstallTriggerHandlerWithIntegerThreshold = ~f{i^vil^^v%~f{v^v}}
	CMBufferQueueInstallTriggerWithIntegerThreshold = ~f{i^v^~f{v^v^v}^vil^^v}
	CMBufferQueueIsAtEndOfData = ~f{C^v}
	CMBufferQueueIsEmpty = ~f{C^v}
	CMBufferQueueMarkEndOfData = ~f{i^v}
	CMBufferQueueRemoveTrigger = ~f{i^v^v}
	CMBufferQueueReset = ~f{i^v}
	CMBufferQueueResetWithCallback = ~f{i^v^~f{v^v^v}^v}
	CMBufferQueueSetValidationCallback = ~f{i^v^~f{i^v^v^v}^v}
	CMBufferQueueSetValidationHandler = ~f{i^v%~f{i^v^v}}
	CMBufferQueueTestTrigger = ~f{C^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/object.h
	_dispatch_object_validate = ~f{v@}
	dispatch_activate = ~f{v@}
	dispatch_cancel = ~f{v^v}
	dispatch_debug = ~f{v@^c$}
	dispatch_debugv = ~f{v@^c^v}
	dispatch_get_context = ~f{^v@}
	dispatch_notify = ~f{v^v@%~f{v}}
	dispatch_release = ~f{v@}
	dispatch_resume = ~f{v@}
	dispatch_retain = ~f{v@}
	dispatch_set_context = ~f{v@^v}
	dispatch_set_finalizer_f = ~f{v@^~f{v^v}}
	dispatch_set_qos_class_floor = ~f{v@Ii}
	dispatch_suspend = ~f{v@}
	dispatch_testcancel = ~f{l^v}
	dispatch_wait = ~f{l^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach-o/i386/swap.h
	swap_i386_exception_state = ~f{v^vI}
	swap_i386_float_state = ~f{v^vI}
	swap_i386_thread_state = ~f{v^vI}
	swap_x86_debug_state = ~f{v^vI}
	swap_x86_debug_state32 = ~f{v^vI}
	swap_x86_debug_state64 = ~f{v^vI}
	swap_x86_exception_state = ~f{v^vI}
	swap_x86_exception_state64 = ~f{v^vI}
	swap_x86_float_state = ~f{v^vI}
	swap_x86_float_state64 = ~f{v^vI}
	swap_x86_state_hdr = ~f{v^vI}
	swap_x86_thread_state = ~f{v^vI}
	swap_x86_thread_state64 = ~f{v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/zlib.h
	adler32 = ~f{LL^CI}
	adler32_combine = ~f{LLLl}
	adler32_z = ~f{LL^CL}
	compress = ~f{i^C^L^CL}
	compress2 = ~f{i^C^L^CLi}
	compressBound = ~f{LL}
	crc32 = ~f{LL^CI}
	crc32_combine = ~f{LLLl}
	crc32_z = ~f{LL^CL}
	deflate = ~f{i^vi}
	deflateBound = ~f{L^vL}
	deflateCopy = ~f{i^v^v}
	deflateEnd = ~f{i^v}
	deflateGetDictionary = ~f{i^v^C^I}
	deflateInit2_ = ~f{i^viiiii^ci}
	deflateInit_ = ~f{i^vi^ci}
	deflateParams = ~f{i^vii}
	deflatePending = ~f{i^v^I^i}
	deflatePrime = ~f{i^vii}
	deflateReset = ~f{i^v}
	deflateResetKeep = ~f{i^v}
	deflateSetDictionary = ~f{i^v^CI}
	deflateSetHeader = ~f{i^v^v}
	deflateTune = ~f{i^viiii}
	get_crc_table = ~f{^L}
	gzbuffer = ~f{i^vI}
	gzclearerr = ~f{v^v}
	gzclose = ~f{i^v}
	gzclose_r = ~f{i^v}
	gzclose_w = ~f{i^v}
	gzdirect = ~f{i^v}
	gzdopen = ~f{^vi^c}
	gzeof = ~f{i^v}
	gzerror = ~f{^c^v^i}
	gzflush = ~f{i^vi}
	gzfread = ~f{L^vLL^v}
	gzfwrite = ~f{L^vLL^v}
	gzgetc = ~f{i^v}
	gzgetc_ = ~f{i^v}
	gzgets = ~f{^c^v^ci}
	gzoffset = ~f{l^v}
	gzopen = ~f{^v^c^c}
	gzprintf = ~f{i^v^c$}
	gzputc = ~f{i^vi}
	gzputs = ~f{i^v^c}
	gzread = ~f{i^v^vI}
	gzrewind = ~f{i^v}
	gzseek = ~f{l^vli}
	gzsetparams = ~f{i^vii}
	gztell = ~f{l^v}
	gzungetc = ~f{ii^v}
	gzvprintf = ~f{i^v^c^v}
	gzwrite = ~f{i^v^vI}
	inflate = ~f{i^vi}
	inflateBack = ~f{i^v^~f{I^v^^C}^v^~f{i^v^CI}^v}
	inflateBackEnd = ~f{i^v}
	inflateBackInit_ = ~f{i^vi^C^ci}
	inflateCodesUsed = ~f{L^v}
	inflateCopy = ~f{i^v^v}
	inflateEnd = ~f{i^v}
	inflateGetDictionary = ~f{i^v^C^I}
	inflateGetHeader = ~f{i^v^v}
	inflateInit2_ = ~f{i^vi^ci}
	inflateInit_ = ~f{i^v^ci}
	inflateMark = ~f{l^v}
	inflatePrime = ~f{i^vii}
	inflateReset = ~f{i^v}
	inflateReset2 = ~f{i^vi}
	inflateResetKeep = ~f{i^v}
	inflateSetDictionary = ~f{i^v^CI}
	inflateSync = ~f{i^v}
	inflateSyncPoint = ~f{i^v}
	inflateUndermine = ~f{i^vi}
	inflateValidate = ~f{i^vi}
	uncompress = ~f{i^C^L^CL}
	uncompress2 = ~f{i^C^L^C^L}
	zError = ~f{^ci}
	zlibCompileFlags = ~f{L}
	zlibVersion = ~f{^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFDictionary.h
	CFDictionaryAddValue = ~f{v^v^v^v}
	CFDictionaryApplyFunction = ~f{v^v^~f{v^v^v^v}^v}
	CFDictionaryContainsKey = ~f{C^v^v}
	CFDictionaryContainsValue = ~f{C^v^v}
	CFDictionaryCreate = ~f{^v^v^^v^^vl^v^v}
	CFDictionaryCreateCopy = ~f{^v^v^v}
	CFDictionaryCreateMutable = ~f{^v^vl^v^v}
	CFDictionaryCreateMutableCopy = ~f{^v^vl^v}
	CFDictionaryGetCount = ~f{l^v}
	CFDictionaryGetCountOfKey = ~f{l^v^v}
	CFDictionaryGetCountOfValue = ~f{l^v^v}
	CFDictionaryGetKeysAndValues = ~f{v^v^^v^^v}
	CFDictionaryGetTypeID = ~f{L}
	CFDictionaryGetValue = ~f{^v^v^v}
	CFDictionaryGetValueIfPresent = ~f{C^v^v^^v}
	CFDictionaryRemoveAllValues = ~f{v^v}
	CFDictionaryRemoveValue = ~f{v^v^v}
	CFDictionaryReplaceValue = ~f{v^v^v^v}
	CFDictionarySetValue = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFContentStream.h
	CGPDFContentStreamCreateWithPage = ~f{^v^v}
	CGPDFContentStreamCreateWithStream = ~f{^v^v^v^v}
	CGPDFContentStreamGetResource = ~f{^v^v^c^c}
	CGPDFContentStreamGetStreams = ~f{^v^v}
	CGPDFContentStreamRelease = ~f{v^v}
	CGPDFContentStreamRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMAttachment.h
	CMCopyDictionaryOfAttachments = ~f{^v^v^vI}
	CMGetAttachment = ~f{^v^v^v^I}
	CMPropagateAttachments = ~f{v^v^v}
	CMRemoveAllAttachments = ~f{v^v}
	CMRemoveAttachment = ~f{v^v^v}
	CMSetAttachment = ~f{v^v^v^vI}
	CMSetAttachments = ~f{v^v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/thread_act.h
	act_get_state = ~f{iIi^I^I}
	act_set_state = ~f{iIi^II}
	etap_trace_thread = ~f{iII}
	mig_strncpy_zerofill = ~f{i^c^ci}
	thread_abort = ~f{iI}
	thread_abort_safely = ~f{iI}
	thread_assign = ~f{iII}
	thread_assign_default = ~f{iI}
	thread_depress_abort = ~f{iI}
	thread_get_assignment = ~f{iI^I}
	thread_get_exception_ports = ~f{iII^I^I^I^i^i}
	thread_get_mach_voucher = ~f{iII^I}
	thread_get_special_port = ~f{iIi^I}
	thread_get_state = ~f{iIi^I^I}
	thread_info = ~f{iII^i^I}
	thread_policy = ~f{iIi^iII}
	thread_policy_get = ~f{iII^i^I^I}
	thread_policy_set = ~f{iII^iI}
	thread_resume = ~f{iI}
	thread_sample = ~f{iII}
	thread_set_exception_ports = ~f{iIIIii}
	thread_set_mach_voucher = ~f{iII}
	thread_set_policy = ~f{iIIi^iI^iI}
	thread_set_special_port = ~f{iIiI}
	thread_set_state = ~f{iIi^II}
	thread_suspend = ~f{iI}
	thread_swap_exception_ports = ~f{iIIIii^I^I^I^i^i}
	thread_swap_mach_voucher = ~f{iII^I}
	thread_terminate = ~f{iI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/termios.h
	tcgetsid = ~f{ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/memory_entry.h
	mach_memory_entry_access_tracking = ~f{iI^i^I^I}
	mach_memory_entry_ownership = ~f{iIIii}
	mach_memory_entry_purgable_control = ~f{iIi^i}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/_locale.h
	localeconv = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGLayer.h
	CGContextDrawLayerAtPoint = ~f{v^v{=dd}^v}
	CGContextDrawLayerInRect = ~f{v^v{={=dd}{=dd}}^v}
	CGLayerCreateWithContext = ~f{^v^v{=dd}^v}
	CGLayerGetContext = ~f{^v^v}
	CGLayerGetSize = ~f{{=dd}^v}
	CGLayerGetTypeID = ~f{L}
	CGLayerRelease = ~f{v^v}
	CGLayerRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libkern/OSAtomicDeprecated.h
	OSAtomicAdd32 = ~f{ii^i}
	OSAtomicAdd32Barrier = ~f{ii^i}
	OSAtomicAdd64 = ~f{qq^q}
	OSAtomicAdd64Barrier = ~f{qq^q}
	OSAtomicAnd32 = ~f{iI^I}
	OSAtomicAnd32Barrier = ~f{iI^I}
	OSAtomicAnd32Orig = ~f{iI^I}
	OSAtomicAnd32OrigBarrier = ~f{iI^I}
	OSAtomicCompareAndSwap32 = ~f{Bii^i}
	OSAtomicCompareAndSwap32Barrier = ~f{Bii^i}
	OSAtomicCompareAndSwap64 = ~f{Bqq^q}
	OSAtomicCompareAndSwap64Barrier = ~f{Bqq^q}
	OSAtomicCompareAndSwapInt = ~f{Bii^i}
	OSAtomicCompareAndSwapIntBarrier = ~f{Bii^i}
	OSAtomicCompareAndSwapLong = ~f{Bll^l}
	OSAtomicCompareAndSwapLongBarrier = ~f{Bll^l}
	OSAtomicCompareAndSwapPtr = ~f{B^v^v^^v}
	OSAtomicCompareAndSwapPtrBarrier = ~f{B^v^v^^v}
	OSAtomicDecrement32 = ~f{i^i}
	OSAtomicDecrement32Barrier = ~f{i^i}
	OSAtomicDecrement64 = ~f{q^q}
	OSAtomicDecrement64Barrier = ~f{q^q}
	OSAtomicIncrement32 = ~f{i^i}
	OSAtomicIncrement32Barrier = ~f{i^i}
	OSAtomicIncrement64 = ~f{q^q}
	OSAtomicIncrement64Barrier = ~f{q^q}
	OSAtomicOr32 = ~f{iI^I}
	OSAtomicOr32Barrier = ~f{iI^I}
	OSAtomicOr32Orig = ~f{iI^I}
	OSAtomicOr32OrigBarrier = ~f{iI^I}
	OSAtomicTestAndClear = ~f{BI^v}
	OSAtomicTestAndClearBarrier = ~f{BI^v}
	OSAtomicTestAndSet = ~f{BI^v}
	OSAtomicTestAndSetBarrier = ~f{BI^v}
	OSAtomicXor32 = ~f{iI^I}
	OSAtomicXor32Barrier = ~f{iI^I}
	OSAtomicXor32Orig = ~f{iI^I}
	OSAtomicXor32OrigBarrier = ~f{iI^I}
	OSMemoryBarrier = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/auth_unix.h
	xdr_authunix_parms = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/signpost.h
	_os_signpost_emit_with_name_impl = ~f{v^v@CQ^c^c^CI}
	os_signpost_enabled = ~f{B@}
	os_signpost_id_generate = ~f{Q@}
	os_signpost_id_make_with_pointer = ~f{Q@^v}
/usr/local/lib/clang/9.0.1/include/avx512vpopcntdqvlintrin.h
	_mm256_mask_popcnt_epi32 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_popcnt_epi64 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_maskz_popcnt_epi32 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_popcnt_epi64 = ~f{~V{4q}C~V{4q}}
	_mm256_popcnt_epi32 = ~f{~V{4q}~V{4q}}
	_mm256_popcnt_epi64 = ~f{~V{4q}~V{4q}}
	_mm_mask_popcnt_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_popcnt_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_maskz_popcnt_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_popcnt_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_popcnt_epi32 = ~f{~V{2q}~V{2q}}
	_mm_popcnt_epi64 = ~f{~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/dict.h
	xmlDictCleanup = ~f{v}
	xmlDictCreate = ~f{^v}
	xmlDictCreateSub = ~f{^v^v}
	xmlDictExists = ~f{^C^v^Ci}
	xmlDictFree = ~f{v^v}
	xmlDictGetUsage = ~f{L^v}
	xmlDictLookup = ~f{^C^v^Ci}
	xmlDictOwns = ~f{i^v^C}
	xmlDictQLookup = ~f{^C^v^C^C}
	xmlDictReference = ~f{i^v}
	xmlDictSetLimit = ~f{L^vL}
	xmlDictSize = ~f{i^v}
	xmlInitializeDict = ~f{i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioComponent.h
	AudioComponentCopyConfigurationInfo = ~f{i^v^^v}
	AudioComponentCopyName = ~f{i^v^^v}
	AudioComponentCount = ~f{I^v}
	AudioComponentFindNext = ~f{^v^v^v}
	AudioComponentGetDescription = ~f{i^v^v}
	AudioComponentGetVersion = ~f{i^v^I}
	AudioComponentInstanceCanDo = ~f{C^vs}
	AudioComponentInstanceDispose = ~f{i^v}
	AudioComponentInstanceGetComponent = ~f{^v^v}
	AudioComponentInstanceNew = ~f{i^v^^v}
	AudioComponentInstantiate = ~f{v^vI%~f{v^vi}}
	AudioComponentRegister = ~f{^v^v^vI^~f{^v^v}}
	AudioComponentValidate = ~f{i^v^v^I}
/usr/local/lib/clang/9.0.1/include/avx512bf16intrin.h
	_mm512_cvtne2ps_pbh = ~f{~V{32s}~V{16f}~V{16f}}
	_mm512_cvtneps_pbh = ~f{~V{16s}~V{16f}}
	_mm512_cvtpbh_ps = ~f{~V{16f}~V{16s}}
	_mm512_dpbf16_ps = ~f{~V{16f}~V{16f}~V{32s}~V{32s}}
	_mm512_mask_cvtne2ps_pbh = ~f{~V{32s}~V{32s}I~V{16f}~V{16f}}
	_mm512_mask_cvtneps_pbh = ~f{~V{16s}~V{16s}S~V{16f}}
	_mm512_mask_cvtpbh_ps = ~f{~V{16f}~V{16f}S~V{16s}}
	_mm512_mask_dpbf16_ps = ~f{~V{16f}~V{16f}S~V{32s}~V{32s}}
	_mm512_maskz_cvtne2ps_pbh = ~f{~V{32s}I~V{16f}~V{16f}}
	_mm512_maskz_cvtneps_pbh = ~f{~V{16s}S~V{16f}}
	_mm512_maskz_cvtpbh_ps = ~f{~V{16f}S~V{16s}}
	_mm512_maskz_dpbf16_ps = ~f{~V{16f}S~V{16f}~V{32s}~V{32s}}
	_mm_cvtsbh_ss = ~f{fS}
/usr/local/lib/clang/9.0.1/include/popcntintrin.h
	_mm_popcnt_u32 = ~f{iI}
	_mm_popcnt_u64 = ~f{qQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFHost.h
	CFHostCancelInfoResolution = ~f{v^vi}
	CFHostCreateCopy = ~f{^v^v^v}
	CFHostCreateWithAddress = ~f{^v^v^v}
	CFHostCreateWithName = ~f{^v^v^v}
	CFHostGetAddressing = ~f{^v^v^C}
	CFHostGetNames = ~f{^v^v^C}
	CFHostGetReachability = ~f{^v^v^C}
	CFHostGetTypeID = ~f{L}
	CFHostScheduleWithRunLoop = ~f{v^v^v^v}
	CFHostSetClient = ~f{C^v^~f{v^vi^v^v}^v}
	CFHostStartInfoResolution = ~f{C^vi^v}
	CFHostUnscheduleFromRunLoop = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlIO.h
	__xmlOutputBufferCreateFilename = ~f{^v^c^vi}
	__xmlParserInputBufferCreateFilename = ~f{^v^ci}
	xmlAllocOutputBuffer = ~f{^v^v}
	xmlAllocParserInputBuffer = ~f{^vi}
	xmlCheckFilename = ~f{i^c}
	xmlCheckHTTPInput = ~f{^v^v^v}
	xmlCleanupInputCallbacks = ~f{v}
	xmlCleanupOutputCallbacks = ~f{v}
	xmlFileClose = ~f{i^v}
	xmlFileMatch = ~f{i^c}
	xmlFileOpen = ~f{^v^c}
	xmlFileRead = ~f{i^v^ci}
	xmlFreeParserInputBuffer = ~f{v^v}
	xmlIOFTPClose = ~f{i^v}
	xmlIOFTPMatch = ~f{i^c}
	xmlIOFTPOpen = ~f{^v^c}
	xmlIOFTPRead = ~f{i^v^ci}
	xmlIOHTTPClose = ~f{i^v}
	xmlIOHTTPMatch = ~f{i^c}
	xmlIOHTTPOpen = ~f{^v^c}
	xmlIOHTTPOpenW = ~f{^v^ci}
	xmlIOHTTPRead = ~f{i^v^ci}
	xmlNoNetExternalEntityLoader = ~f{^v^c^c^v}
	xmlNormalizeWindowsPath = ~f{^C^C}
	xmlOutputBufferClose = ~f{i^v}
	xmlOutputBufferCreateBuffer = ~f{^v^v^v}
	xmlOutputBufferCreateFd = ~f{^vi^v}
	xmlOutputBufferCreateFile = ~f{^v^v^v}
	xmlOutputBufferCreateFilename = ~f{^v^c^vi}
	xmlOutputBufferCreateIO = ~f{^v^~f{i^v^ci}^~f{i^v}^v^v}
	xmlOutputBufferFlush = ~f{i^v}
	xmlOutputBufferGetContent = ~f{^C^v}
	xmlOutputBufferGetSize = ~f{L^v}
	xmlOutputBufferWrite = ~f{i^vi^c}
	xmlOutputBufferWriteEscape = ~f{i^v^C^~f{i^C^i^C^i}}
	xmlOutputBufferWriteString = ~f{i^v^c}
	xmlParserGetDirectory = ~f{^c^c}
	xmlParserInputBufferCreateFd = ~f{^vii}
	xmlParserInputBufferCreateFile = ~f{^v^vi}
	xmlParserInputBufferCreateFilename = ~f{^v^ci}
	xmlParserInputBufferCreateIO = ~f{^v^~f{i^v^ci}^~f{i^v}^vi}
	xmlParserInputBufferCreateMem = ~f{^v^cii}
	xmlParserInputBufferCreateStatic = ~f{^v^cii}
	xmlParserInputBufferGrow = ~f{i^vi}
	xmlParserInputBufferPush = ~f{i^vi^c}
	xmlParserInputBufferRead = ~f{i^vi}
	xmlPopInputCallbacks = ~f{i}
	xmlRegisterDefaultInputCallbacks = ~f{v}
	xmlRegisterDefaultOutputCallbacks = ~f{v}
	xmlRegisterHTTPPostCallbacks = ~f{v}
	xmlRegisterInputCallbacks = ~f{i^~f{i^c}^~f{^v^c}^~f{i^v^ci}^~f{i^v}}
	xmlRegisterOutputCallbacks = ~f{i^~f{i^c}^~f{^v^c}^~f{i^v^ci}^~f{i^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/qos.h
	qos_class_main = ~f{I}
	qos_class_self = ~f{I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach_host.h
	_host_page_size = ~f{iI^L}
	host_check_multiuser_mode = ~f{iI^I}
	host_create_mach_voucher = ~f{iI^CI^I}
	host_get_atm_diagnostic_flag = ~f{iI^I}
	host_get_clock_service = ~f{iIi^I}
	host_get_io_master = ~f{iI^I}
	host_get_multiuser_config_flags = ~f{iI^I}
	host_info = ~f{iIi^i^I}
	host_kernel_version = ~f{iI^c}
	host_lockgroup_info = ~f{iI^^v^I}
	host_processor_info = ~f{iIi^I^^i^I}
	host_register_mach_voucher_attr_manager = ~f{iIIQ^I^I}
	host_register_well_known_mach_voucher_attr_manager = ~f{iIIQI^I}
	host_request_notification = ~f{iIiI}
	host_set_atm_diagnostic_flag = ~f{iII}
	host_set_multiuser_config_flags = ~f{iII}
	host_statistics = ~f{iIi^i^I}
	host_statistics64 = ~f{iIi^i^I}
	host_virtual_physical_table_info = ~f{iI^^v^I}
	kmod_get_info = ~f{iI^^v^I}
	mach_memory_info = ~f{iI^^v^I^^v^I^^v^I}
	mach_memory_object_memory_entry = ~f{iIILiI^I}
	mach_memory_object_memory_entry_64 = ~f{iIIQiI^I}
	mach_zone_info = ~f{iI^^v^I^^v^I}
	mach_zone_info_for_zone = ~f{iI{=cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}^v}
	mig_strncpy_zerofill = ~f{i^c^ci}
	processor_set_create = ~f{iI^I^I}
	processor_set_default = ~f{iI^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/auth.h
	authdes_create = ~f{^v^cI^v^v}
	authnone_create = ~f{^v}
	authunix_create = ~f{^v^ciii^i}
	authunix_create_default = ~f{^v}
	xdr_des_block = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPStream.h
	CFReadStreamCreateForHTTPRequest = ~f{^v^v^v}
	CFReadStreamCreateForStreamedHTTPRequest = ~f{^v^v^v^v}
/usr/local/lib/clang/9.0.1/include/avx512vlvp2intersectintrin.h
	_mm256_2intersect_epi32 = ~f{v~V{4q}~V{4q}^C^C}
	_mm256_2intersect_epi64 = ~f{v~V{4q}~V{4q}^C^C}
	_mm_2intersect_epi32 = ~f{v~V{2q}~V{2q}^C^C}
	_mm_2intersect_epi64 = ~f{v~V{2q}~V{2q}^C^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/LinearAlgebra/arithmetic.h
	la_difference = ~f{@@@}
	la_elementwise_product = ~f{@@@}
	la_inner_product = ~f{@@@}
	la_matrix_product = ~f{@@@}
	la_outer_product = ~f{@@@}
	la_scale_with_double = ~f{@@d}
	la_scale_with_float = ~f{@@f}
	la_sum = ~f{@@@}
	la_transpose = ~f{@@}
/usr/local/lib/clang/9.0.1/include/avx512vlcdintrin.h
	_mm256_broadcastmb_epi64 = ~f{~V{4q}C}
	_mm256_broadcastmw_epi32 = ~f{~V{4q}S}
	_mm256_conflict_epi32 = ~f{~V{4q}~V{4q}}
	_mm256_conflict_epi64 = ~f{~V{4q}~V{4q}}
	_mm256_lzcnt_epi32 = ~f{~V{4q}~V{4q}}
	_mm256_lzcnt_epi64 = ~f{~V{4q}~V{4q}}
	_mm256_mask_conflict_epi32 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_conflict_epi64 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_lzcnt_epi32 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_lzcnt_epi64 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_maskz_conflict_epi32 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_conflict_epi64 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_lzcnt_epi32 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_lzcnt_epi64 = ~f{~V{4q}C~V{4q}}
	_mm_broadcastmb_epi64 = ~f{~V{2q}C}
	_mm_broadcastmw_epi32 = ~f{~V{2q}S}
	_mm_conflict_epi32 = ~f{~V{2q}~V{2q}}
	_mm_conflict_epi64 = ~f{~V{2q}~V{2q}}
	_mm_lzcnt_epi32 = ~f{~V{2q}~V{2q}}
	_mm_lzcnt_epi64 = ~f{~V{2q}~V{2q}}
	_mm_mask_conflict_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_conflict_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_lzcnt_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_lzcnt_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_maskz_conflict_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_conflict_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_lzcnt_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_lzcnt_epi64 = ~f{~V{2q}C~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach_init.h
	host_page_size = ~f{iI^L}
	mach_host_self = ~f{I}
	mach_thread_self = ~f{I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/array.h
	cupsArrayAdd = ~f{i^v^v}
	cupsArrayClear = ~f{v^v}
	cupsArrayCount = ~f{i^v}
	cupsArrayCurrent = ~f{^v^v}
	cupsArrayDelete = ~f{v^v}
	cupsArrayDup = ~f{^v^v}
	cupsArrayFind = ~f{^v^v^v}
	cupsArrayFirst = ~f{^v^v}
	cupsArrayGetIndex = ~f{i^v}
	cupsArrayGetInsert = ~f{i^v}
	cupsArrayIndex = ~f{^v^vi}
	cupsArrayInsert = ~f{i^v^v}
	cupsArrayLast = ~f{^v^v}
	cupsArrayNew = ~f{^v^~f{i^v^v^v}^v}
	cupsArrayNew2 = ~f{^v^~f{i^v^v^v}^v^~f{i^v^v}i}
	cupsArrayNew3 = ~f{^v^~f{i^v^v^v}^v^~f{i^v^v}i^~f{^v^v^v}^~f{v^v^v}}
	cupsArrayNext = ~f{^v^v}
	cupsArrayPrev = ~f{^v^v}
	cupsArrayRemove = ~f{i^v^v}
	cupsArrayRestore = ~f{^v^v}
	cupsArraySave = ~f{i^v}
	cupsArrayUserData = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioOutputUnit.h
	AudioOutputUnitStart = ~f{i^v}
	AudioOutputUnitStop = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/nanoftp.h
	xmlNanoFTPCheckResponse = ~f{i^v}
	xmlNanoFTPCleanup = ~f{v}
	xmlNanoFTPClose = ~f{i^v}
	xmlNanoFTPCloseConnection = ~f{i^v}
	xmlNanoFTPConnect = ~f{i^v}
	xmlNanoFTPConnectTo = ~f{^v^ci}
	xmlNanoFTPCwd = ~f{i^v^c}
	xmlNanoFTPDele = ~f{i^v^c}
	xmlNanoFTPFreeCtxt = ~f{v^v}
	xmlNanoFTPGet = ~f{i^v^~f{v^v^ci}^v^c}
	xmlNanoFTPGetConnection = ~f{i^v}
	xmlNanoFTPGetResponse = ~f{i^v}
	xmlNanoFTPGetSocket = ~f{i^v^c}
	xmlNanoFTPInit = ~f{v}
	xmlNanoFTPList = ~f{i^v^~f{v^v^c^c^c^cLii^ciii}^v^c}
	xmlNanoFTPNewCtxt = ~f{^v^c}
	xmlNanoFTPOpen = ~f{^v^c}
	xmlNanoFTPProxy = ~f{v^ci^c^ci}
	xmlNanoFTPQuit = ~f{i^v}
	xmlNanoFTPRead = ~f{i^v^vi}
	xmlNanoFTPScanProxy = ~f{v^c}
	xmlNanoFTPUpdateURL = ~f{i^v^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xattr_flags.h
	xattr_flags_from_name = ~f{Q^c}
	xattr_intent_with_flags = ~f{iIQ}
	xattr_name_with_flags = ~f{^c^cQ}
	xattr_name_without_flags = ~f{^c^c}
	xattr_preserve_for_intent = ~f{i^cI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/LinearAlgebra/matrix.h
	la_diagonal_matrix_from_vector = ~f{@@l}
	la_identity_matrix = ~f{@LIL}
	la_matrix_cols = ~f{L@}
	la_matrix_from_double_buffer = ~f{@^dLLLLL}
	la_matrix_from_double_buffer_nocopy = ~f{@^dLLLL^~f{v^v}L}
	la_matrix_from_float_buffer = ~f{@^fLLLLL}
	la_matrix_from_float_buffer_nocopy = ~f{@^fLLLL^~f{v^v}L}
	la_matrix_rows = ~f{L@}
	la_matrix_slice = ~f{@@llllLL}
	la_matrix_to_double_buffer = ~f{l^dL@}
	la_matrix_to_float_buffer = ~f{l^fL@}
	la_vector_from_matrix_col = ~f{@@L}
	la_vector_from_matrix_diagonal = ~f{@@l}
	la_vector_from_matrix_row = ~f{@@L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/select.h
	pselect = ~f{ii^v^v^v^v^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/path.h
	nw_path_copy_effective_local_endpoint = ~f{@@}
	nw_path_copy_effective_remote_endpoint = ~f{@@}
	nw_path_enumerate_gateways = ~f{v@%~f{B@}}
	nw_path_enumerate_interfaces = ~f{v@%~f{B@}}
	nw_path_get_status = ~f{I@}
	nw_path_has_dns = ~f{B@}
	nw_path_has_ipv4 = ~f{B@}
	nw_path_has_ipv6 = ~f{B@}
	nw_path_is_constrained = ~f{B@}
	nw_path_is_equal = ~f{B@@}
	nw_path_is_expensive = ~f{B@}
	nw_path_uses_interface_type = ~f{B@I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSCalendarShims.h
	__NSCalendarAutoupdating = ?
	__NSCalendarCreate = ~f{@@}
	__NSCalendarCurrent = ?
	__NSCalendarIsAutoupdating = ~f{B@}
/usr/local/lib/clang/9.0.1/include/avx512bitalgintrin.h
	_mm512_bitshuffle_epi64_mask = ~f{Q~V{8q}~V{8q}}
	_mm512_mask_bitshuffle_epi64_mask = ~f{QQ~V{8q}~V{8q}}
	_mm512_mask_popcnt_epi16 = ~f{~V{8q}~V{8q}I~V{8q}}
	_mm512_mask_popcnt_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}}
	_mm512_maskz_popcnt_epi16 = ~f{~V{8q}I~V{8q}}
	_mm512_maskz_popcnt_epi8 = ~f{~V{8q}Q~V{8q}}
	_mm512_popcnt_epi16 = ~f{~V{8q}~V{8q}}
	_mm512_popcnt_epi8 = ~f{~V{8q}~V{8q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/ifaddrs.h
	freeifaddrs = ~f{v^v}
	freeifmaddrs = ~f{v^v}
	getifaddrs = ~f{i^^v}
	getifmaddrs = ~f{i^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/LinearAlgebra/object.h
	la_add_attributes = ~f{v@L}
	la_release = ~f{v@}
	la_remove_attributes = ~f{v@L}
	la_retain = ~f{@@}
	la_status = ~f{l@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlversion.h
	xmlCheckVersion = ~f{vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/BasicImageTypes.h
	vImagePNGDecompressionFilter = ~f{l^vLLIIII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/parser.h
	xmlByteConsumed = ~f{l^v}
	xmlCleanupParser = ~f{v}
	xmlClearNodeInfoSeq = ~f{v^v}
	xmlClearParserCtxt = ~f{v^v}
	xmlCreateDocParserCtxt = ~f{^v^C}
	xmlCreateIOParserCtxt = ~f{^v^v^v^~f{i^v^ci}^~f{i^v}^vi}
	xmlCreatePushParserCtxt = ~f{^v^v^v^ci^c}
	xmlCtxtReadDoc = ~f{^v^v^C^c^ci}
	xmlCtxtReadFd = ~f{^v^vi^c^ci}
	xmlCtxtReadFile = ~f{^v^v^c^ci}
	xmlCtxtReadIO = ~f{^v^v^~f{i^v^ci}^~f{i^v}^v^c^ci}
	xmlCtxtReadMemory = ~f{^v^v^ci^c^ci}
	xmlCtxtReset = ~f{v^v}
	xmlCtxtResetPush = ~f{i^v^ci^c^c}
	xmlCtxtUseOptions = ~f{i^vi}
	xmlFreeParserCtxt = ~f{v^v}
	xmlGetExternalEntityLoader = ~f{^~f{^v^c^c^v}}
	xmlGetFeature = ~f{i^v^c^v}
	xmlGetFeaturesList = ~f{i^i^^c}
	xmlHasFeature = ~f{iI}
	xmlIOParseDTD = ~f{^v^v^vi}
	xmlInitNodeInfoSeq = ~f{v^v}
	xmlInitParser = ~f{v}
	xmlInitParserCtxt = ~f{i^v}
	xmlKeepBlanksDefault = ~f{ii}
	xmlLineNumbersDefault = ~f{ii}
	xmlLoadExternalEntity = ~f{^v^c^c^v}
	xmlNewIOInputStream = ~f{^v^v^vi}
	xmlNewParserCtxt = ~f{^v}
	xmlParseBalancedChunkMemory = ~f{i^v^v^vi^C^^v}
	xmlParseBalancedChunkMemoryRecover = ~f{i^v^v^vi^C^^vi}
	xmlParseChunk = ~f{i^v^cii}
	xmlParseCtxtExternalEntity = ~f{i^v^C^C^^v}
	xmlParseDTD = ~f{^v^C^C}
	xmlParseDoc = ~f{^v^C}
	xmlParseDocument = ~f{i^v}
	xmlParseEntity = ~f{^v^c}
	xmlParseExtParsedEnt = ~f{i^v}
	xmlParseExternalEntity = ~f{i^v^v^vi^C^C^^v}
	xmlParseFile = ~f{^v^c}
	xmlParseInNodeContext = ~f{I^v^cii^^v}
	xmlParseMemory = ~f{^v^ci}
	xmlParserAddNodeInfo = ~f{v^v^v}
	xmlParserFindNodeInfo = ~f{^v^v^v}
	xmlParserFindNodeInfoIndex = ~f{L^v^v}
	xmlParserInputGrow = ~f{i^vi}
	xmlParserInputRead = ~f{i^vi}
	xmlPedanticParserDefault = ~f{ii}
	xmlReadDoc = ~f{^v^C^c^ci}
	xmlReadFd = ~f{^vi^c^ci}
	xmlReadFile = ~f{^v^c^ci}
	xmlReadIO = ~f{^v^~f{i^v^ci}^~f{i^v}^v^c^ci}
	xmlReadMemory = ~f{^v^ci^c^ci}
	xmlRecoverDoc = ~f{^v^C}
	xmlRecoverFile = ~f{^v^c}
	xmlRecoverMemory = ~f{^v^ci}
	xmlSAXParseDTD = ~f{^v^v^C^C}
	xmlSAXParseDoc = ~f{^v^v^Ci}
	xmlSAXParseEntity = ~f{^v^v^c}
	xmlSAXParseFile = ~f{^v^v^ci}
	xmlSAXParseFileWithData = ~f{^v^v^ci^v}
	xmlSAXParseMemory = ~f{^v^v^cii}
	xmlSAXParseMemoryWithData = ~f{^v^v^cii^v}
	xmlSAXUserParseFile = ~f{i^v^v^c}
	xmlSAXUserParseMemory = ~f{i^v^v^ci}
	xmlSetExternalEntityLoader = ~f{v^~f{^v^c^c^v}}
	xmlSetFeature = ~f{i^v^c^v}
	xmlSetupParserForBuffer = ~f{v^v^C^c}
	xmlStopParser = ~f{v^v}
	xmlSubstituteEntitiesDefault = ~f{ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUUID.h
	CFUUIDCreate = ~f{^v^v}
	CFUUIDCreateFromString = ~f{^v^v^v}
	CFUUIDCreateFromUUIDBytes = ~f{^v^v{=CCCCCCCCCCCCCCCC}}
	CFUUIDCreateString = ~f{^v^v^v}
	CFUUIDCreateWithBytes = ~f{^v^vCCCCCCCCCCCCCCCC}
	CFUUIDGetConstantUUIDWithBytes = ~f{^v^vCCCCCCCCCCCCCCCC}
	CFUUIDGetTypeID = ~f{L}
	CFUUIDGetUUIDBytes = ~f{{=CCCCCCCCCCCCCCCC}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sched.h
	sched_get_priority_max = ~f{ii}
	sched_get_priority_min = ~f{ii}
	sched_yield = ~f{i}
/usr/local/lib/clang/9.0.1/include/lwpintrin.h
	__llwpcb = ~f{v^v}
	__slwpcb = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/clapack.h
	cbdsqr_ = ~f{i^c^i^i^i^i^f^f^v^i^v^i^v^i^f^i}
	cgbbrd_ = ~f{i^c^i^i^i^i^i^v^i^f^f^v^i^v^i^v^i^v^f^i}
	cgbcon_ = ~f{i^c^i^i^i^v^i^i^f^f^v^f^i}
	cgbequ_ = ~f{i^i^i^i^i^v^i^f^f^f^f^f^i}
	cgbequb_ = ~f{i^i^i^i^i^v^i^f^f^f^f^f^i}
	cgbrfs_ = ~f{i^c^i^i^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	cgbsv_ = ~f{i^i^i^i^i^v^i^i^v^i^i}
	cgbsvx_ = ~f{i^c^c^i^i^i^i^v^i^v^i^i^c^f^f^v^i^v^i^f^f^f^v^f^i}
	cgbtf2_ = ~f{i^i^i^i^i^v^i^i^i}
	cgbtrf_ = ~f{i^i^i^i^i^v^i^i^i}
	cgbtrs_ = ~f{i^c^i^i^i^i^v^i^i^v^i^i}
	cgebak_ = ~f{i^c^c^i^i^i^f^i^v^i^i}
	cgebal_ = ~f{i^c^i^v^i^i^i^f^i}
	cgebd2_ = ~f{i^i^i^v^i^f^f^v^v^v^i}
	cgebrd_ = ~f{i^i^i^v^i^f^f^v^v^v^i^i}
	cgecon_ = ~f{i^c^i^v^i^f^f^v^f^i}
	cgeequ_ = ~f{i^i^i^v^i^f^f^f^f^f^i}
	cgeequb_ = ~f{i^i^i^v^i^f^f^f^f^f^i}
	cgees_ = ~f{i^c^c^?^i^v^i^i^v^v^i^v^i^f^i^i}
	cgeesx_ = ~f{i^c^c^?^c^i^v^i^i^v^v^i^f^f^v^i^f^i^i}
	cgeev_ = ~f{i^c^c^i^v^i^v^v^i^v^i^v^i^f^i}
	cgeevx_ = ~f{i^c^c^c^c^i^v^i^v^v^i^v^i^i^i^f^f^f^f^v^i^f^i}
	cgegs_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	cgegv_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	cgehd2_ = ~f{i^i^i^i^v^i^v^v^i}
	cgehrd_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cgelq2_ = ~f{i^i^i^v^i^v^v^i}
	cgelqf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgels_ = ~f{i^c^i^i^i^v^i^v^i^v^i^i}
	cgelsd_ = ~f{i^i^i^i^v^i^v^i^f^f^i^v^i^f^i^i}
	cgelss_ = ~f{i^i^i^i^v^i^v^i^f^f^i^v^i^f^i}
	cgelsx_ = ~f{i^i^i^i^v^i^v^i^i^f^i^v^f^i}
	cgelsy_ = ~f{i^i^i^i^v^i^v^i^i^f^i^v^i^f^i}
	cgeql2_ = ~f{i^i^i^v^i^v^v^i}
	cgeqlf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgeqp3_ = ~f{i^i^i^v^i^i^v^v^i^f^i}
	cgeqpf_ = ~f{i^i^i^v^i^i^v^v^f^i}
	cgeqr2_ = ~f{i^i^i^v^i^v^v^i}
	cgeqrf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgerfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	cgerq2_ = ~f{i^i^i^v^i^v^v^i}
	cgerqf_ = ~f{i^i^i^v^i^v^v^i^i}
	cgesc2_ = ~f{i^i^v^i^v^i^i^f}
	cgesdd_ = ~f{i^c^i^i^v^i^f^v^i^v^i^v^i^f^i^i}
	cgesv_ = ~f{i^i^i^v^i^i^v^i^i}
	cgesvd_ = ~f{i^c^c^i^i^v^i^f^v^i^v^i^v^i^f^i}
	cgesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^c^f^f^v^i^v^i^f^f^f^v^f^i}
	cgetc2_ = ~f{i^i^v^i^i^i^i}
	cgetf2_ = ~f{i^i^i^v^i^i^i}
	cgetrf_ = ~f{i^i^i^v^i^i^i}
	cgetri_ = ~f{i^i^v^i^i^v^i^i}
	cgetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	cggbak_ = ~f{i^c^c^i^i^i^f^f^i^v^i^i}
	cggbal_ = ~f{i^c^i^v^i^v^i^i^i^f^f^f^i}
	cgges_ = ~f{i^c^c^c^?^i^v^i^v^i^i^v^v^v^i^v^i^v^i^f^i^i}
	cggesx_ = ~f{i^c^c^c^?^c^i^v^i^v^i^i^v^v^v^i^v^i^f^f^v^i^f^i^i^i^i}
	cggev_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	cggevx_ = ~f{i^c^c^c^c^i^v^i^v^i^v^v^v^i^v^i^i^i^f^f^f^f^f^f^v^i^f^i^i^i}
	cggglm_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	cgghrd_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^i^i}
	cgglse_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	cggqrf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	cggrqf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	cggsvd_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^f^f^v^i^v^i^v^i^v^f^i^i}
	cggsvp_ = ~f{i^c^c^c^i^i^i^v^i^v^i^f^f^i^i^v^i^v^i^v^i^i^f^v^v^i}
	cgtcon_ = ~f{i^c^i^v^v^v^v^i^f^f^v^i}
	cgtrfs_ = ~f{i^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^f^f^v^f^i}
	cgtsv_ = ~f{i^i^i^v^v^v^v^i^i}
	cgtsvx_ = ~f{i^c^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^f^f^f^v^f^i}
	cgttrf_ = ~f{i^i^v^v^v^v^i^i}
	cgttrs_ = ~f{i^c^i^i^v^v^v^v^i^v^i^i}
	cgtts2_ = ~f{i^i^i^i^v^v^v^v^i^v^i}
	chbev_ = ~f{i^c^c^i^i^v^i^f^v^i^v^f^i}
	chbevd_ = ~f{i^c^c^i^i^v^i^f^v^i^v^i^f^i^i^i^i}
	chbevx_ = ~f{i^c^c^c^i^i^v^i^v^i^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chbgst_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^f^i}
	chbgv_ = ~f{i^c^c^i^i^i^v^i^v^i^f^v^i^v^f^i}
	chbgvd_ = ~f{i^c^c^i^i^i^v^i^v^i^f^v^i^v^i^f^i^i^i^i}
	chbgvx_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chbtrd_ = ~f{i^c^c^i^i^v^i^f^f^v^i^v^i}
	checon_ = ~f{i^c^i^v^i^i^f^f^v^i}
	cheequb_ = ~f{i^c^i^v^i^f^f^f^v^i}
	cheev_ = ~f{i^c^c^i^v^i^f^v^i^f^i}
	cheevd_ = ~f{i^c^c^i^v^i^f^v^i^f^i^i^i^i}
	cheevr_ = ~f{i^c^c^c^i^v^i^f^f^i^i^f^i^f^v^i^i^v^i^f^i^i^i^i}
	cheevx_ = ~f{i^c^c^c^i^v^i^f^f^i^i^f^i^f^v^i^v^i^f^i^i^i}
	chegs2_ = ~f{i^i^c^i^v^i^v^i^i}
	chegst_ = ~f{i^i^c^i^v^i^v^i^i}
	chegv_ = ~f{i^i^c^c^i^v^i^v^i^f^v^i^f^i}
	chegvd_ = ~f{i^i^c^c^i^v^i^v^i^f^v^i^f^i^i^i^i}
	chegvx_ = ~f{i^i^c^c^c^i^v^i^v^i^f^f^i^i^f^i^f^v^i^v^i^f^i^i^i}
	cherfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	chesv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	chesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^f^f^f^v^i^f^i}
	chetd2_ = ~f{i^c^i^v^i^f^f^v^i}
	chetf2_ = ~f{i^c^i^v^i^i^i}
	chetrd_ = ~f{i^c^i^v^i^f^f^v^v^i^i}
	chetrf_ = ~f{i^c^i^v^i^i^v^i^i}
	chetri_ = ~f{i^c^i^v^i^i^v^i}
	chetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	chfrk_ = ~f{i^c^c^c^i^i^f^v^i^f^v}
	chgeqz_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^v^v^i^v^i^v^i^f^i}
	chla_transtype__ = ~f{v^ci^i}
	chpcon_ = ~f{i^c^i^v^i^f^f^v^i}
	chpev_ = ~f{i^c^c^i^v^f^v^i^v^f^i}
	chpevd_ = ~f{i^c^c^i^v^f^v^i^v^i^f^i^i^i^i}
	chpevx_ = ~f{i^c^c^c^i^v^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chpgst_ = ~f{i^i^c^i^v^v^i}
	chpgv_ = ~f{i^i^c^c^i^v^v^f^v^i^v^f^i}
	chpgvd_ = ~f{i^i^c^c^i^v^v^f^v^i^v^i^f^i^i^i^i}
	chpgvx_ = ~f{i^i^c^c^c^i^v^v^f^f^i^i^f^i^f^v^i^v^f^i^i^i}
	chprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^f^f^v^f^i}
	chpsv_ = ~f{i^c^i^i^v^i^v^i^i}
	chpsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^f^f^f^v^f^i}
	chptrd_ = ~f{i^c^i^v^f^f^v^i}
	chptrf_ = ~f{i^c^i^v^i^i}
	chptri_ = ~f{i^c^i^v^i^v^i}
	chptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	chsein_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i^i^v^f^i^i^i}
	chseqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	clabrd_ = ~f{i^i^i^i^v^i^f^f^v^v^v^i^v^i}
	clacgv_ = ~f{i^i^v^i}
	clacn2_ = ~f{i^i^v^v^f^i^i}
	clacon_ = ~f{i^i^v^v^f^i}
	clacp2_ = ~f{i^c^i^i^f^i^v^i}
	clacpy_ = ~f{i^c^i^i^v^i^v^i}
	clacrm_ = ~f{i^i^i^v^i^f^i^v^i^f}
	clacrt_ = ~f{i^i^v^i^v^i^v^v}
	cladiv_ = ~f{v^v^v^v}
	claed0_ = ~f{i^i^i^f^f^v^i^v^i^f^i^i}
	claed7_ = ~f{i^i^i^i^i^i^i^f^v^i^f^i^f^i^i^i^i^i^f^v^f^i^i}
	claed8_ = ~f{i^i^i^i^v^i^f^f^i^f^f^v^i^f^i^i^i^i^i^i^f^i}
	claein_ = ~f{i^i^i^i^v^i^v^v^v^i^f^f^f^i}
	claesy_ = ~f{i^v^v^v^v^v^v^v^v}
	claev2_ = ~f{i^v^v^v^f^f^f^v}
	clag2z_ = ~f{i^i^i^v^i^v^i^i}
	clags2_ = ~f{i^i^f^v^f^f^v^f^f^v^f^v^f^v}
	clagtm_ = ~f{i^c^i^i^f^v^v^v^v^i^f^v^i}
	clahef_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	clahqr_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^i}
	clahr2_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	clahrd_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	claic1_ = ~f{i^i^i^v^f^v^v^f^v^v}
	clals0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^i^i^i^f^i^f^f^f^f^i^f^f^f^i}
	clalsa_ = ~f{i^i^i^i^i^v^i^v^i^f^i^f^i^f^f^f^f^i^i^i^i^f^f^f^f^i^i}
	clalsd_ = ~f{i^c^i^i^i^f^f^v^i^f^i^v^f^i^i}
	clangb_ = ~f{d^c^i^i^i^v^i^f}
	clange_ = ~f{d^c^i^i^v^i^f}
	clangt_ = ~f{d^c^i^v^v^v}
	clanhb_ = ~f{d^c^c^i^i^v^i^f}
	clanhe_ = ~f{d^c^c^i^v^i^f}
	clanhf_ = ~f{d^c^c^c^i^v^f}
	clanhp_ = ~f{d^c^c^i^v^f}
	clanhs_ = ~f{d^c^i^v^i^f}
	clanht_ = ~f{d^c^i^f^v}
	clansb_ = ~f{d^c^c^i^i^v^i^f}
	clansp_ = ~f{d^c^c^i^v^f}
	clansy_ = ~f{d^c^c^i^v^i^f}
	clantb_ = ~f{d^c^c^c^i^i^v^i^f}
	clantp_ = ~f{d^c^c^c^i^v^f}
	clantr_ = ~f{d^c^c^c^i^i^v^i^f}
	clapll_ = ~f{i^i^v^i^v^i^f}
	clapmt_ = ~f{i^i^i^i^v^i^i}
	claqgb_ = ~f{i^i^i^i^i^v^i^f^f^f^f^f^c}
	claqge_ = ~f{i^i^i^v^i^f^f^f^f^f^c}
	claqhb_ = ~f{i^c^i^i^v^i^f^f^f^c}
	claqhe_ = ~f{i^c^i^v^i^f^f^f^c}
	claqhp_ = ~f{i^c^i^v^f^f^f^c}
	claqp2_ = ~f{i^i^i^i^v^i^i^v^f^f^v}
	claqps_ = ~f{i^i^i^i^i^i^v^i^i^v^f^f^v^v^i}
	claqr0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	claqr1_ = ~f{i^i^v^i^v^v^v}
	claqr2_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	claqr3_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	claqr4_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	claqr5_ = ~f{i^i^i^i^i^i^i^i^v^v^i^i^i^v^i^v^i^v^i^i^v^i^i^v^i}
	claqsb_ = ~f{i^c^i^i^v^i^f^f^f^c}
	claqsp_ = ~f{i^c^i^v^f^f^f^c}
	claqsy_ = ~f{i^c^i^v^i^f^f^f^c}
	clar1v_ = ~f{i^i^i^i^f^f^f^f^f^f^f^v^i^i^f^f^i^i^f^f^f^f}
	clar2v_ = ~f{i^i^v^v^v^i^f^v^i}
	clarcm_ = ~f{i^i^i^f^i^v^i^v^i^f}
	clarf_ = ~f{i^c^i^i^v^i^v^v^i^v}
	clarfb_ = ~f{i^c^c^c^c^i^i^i^v^i^v^i^v^i^v^i}
	clarfg_ = ~f{i^i^v^v^i^v}
	clarfp_ = ~f{i^i^v^v^i^v}
	clarft_ = ~f{i^c^c^i^i^v^i^v^v^i}
	clarfx_ = ~f{i^c^i^i^v^v^v^i^v}
	clargv_ = ~f{i^i^v^i^v^i^f^i}
	clarnv_ = ~f{i^i^i^i^v}
	clarrv_ = ~f{i^i^f^f^f^f^f^i^i^i^i^f^f^f^f^f^f^i^i^f^v^i^i^f^i^i}
	clarscl2_ = ~f{i^i^i^f^v^i}
	clartg_ = ~f{i^v^v^f^v^v}
	clartv_ = ~f{i^i^v^i^v^i^f^v^i}
	clarz_ = ~f{i^c^i^i^i^v^i^v^v^i^v}
	clarzb_ = ~f{i^c^c^c^c^i^i^i^i^v^i^v^i^v^i^v^i}
	clarzt_ = ~f{i^c^c^i^i^v^i^v^v^i}
	clascl2_ = ~f{i^i^i^f^v^i}
	clascl_ = ~f{i^c^i^i^f^f^i^i^v^i^i}
	claset_ = ~f{i^c^i^i^v^v^v^i}
	clasr_ = ~f{i^c^c^c^i^i^f^f^v^i}
	classq_ = ~f{i^i^v^i^f^f}
	claswp_ = ~f{i^i^v^i^i^i^i^i}
	clasyf_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	clatbs_ = ~f{i^c^c^c^c^i^i^v^i^v^f^f^i}
	clatdf_ = ~f{i^i^i^v^i^v^f^f^i^i}
	clatps_ = ~f{i^c^c^c^c^i^v^v^f^f^i}
	clatrd_ = ~f{i^c^i^i^v^i^f^v^v^i}
	clatrs_ = ~f{i^c^c^c^c^i^v^i^v^f^f^i}
	clatrz_ = ~f{i^i^i^i^v^i^v^v}
	clatzm_ = ~f{i^c^i^i^v^i^v^v^v^i^v}
	clauu2_ = ~f{i^c^i^v^i^i}
	clauum_ = ~f{i^c^i^v^i^i}
	cpbcon_ = ~f{i^c^i^i^v^i^f^f^v^f^i}
	cpbequ_ = ~f{i^c^i^i^v^i^f^f^f^i}
	cpbrfs_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^f^f^v^f^i}
	cpbstf_ = ~f{i^c^i^i^v^i^i}
	cpbsv_ = ~f{i^c^i^i^i^v^i^v^i^i}
	cpbsvx_ = ~f{i^c^c^i^i^i^v^i^v^i^c^f^v^i^v^i^f^f^f^v^f^i}
	cpbtf2_ = ~f{i^c^i^i^v^i^i}
	cpbtrf_ = ~f{i^c^i^i^v^i^i}
	cpbtrs_ = ~f{i^c^i^i^i^v^i^v^i^i}
	cpftrf_ = ~f{i^c^c^i^v^i}
	cpftri_ = ~f{i^c^c^i^v^i}
	cpftrs_ = ~f{i^c^c^i^i^v^v^i^i}
	cpocon_ = ~f{i^c^i^v^i^f^f^v^f^i}
	cpoequ_ = ~f{i^i^v^i^f^f^f^i}
	cpoequb_ = ~f{i^i^v^i^f^f^f^i}
	cporfs_ = ~f{i^c^i^i^v^i^v^i^v^i^v^i^f^f^v^f^i}
	cposv_ = ~f{i^c^i^i^v^i^v^i^i}
	cposvx_ = ~f{i^c^c^i^i^v^i^v^i^c^f^v^i^v^i^f^f^f^v^f^i}
	cpotf2_ = ~f{i^c^i^v^i^i}
	cpotrf_ = ~f{i^c^i^v^i^i}
	cpotri_ = ~f{i^c^i^v^i^i}
	cpotrs_ = ~f{i^c^i^i^v^i^v^i^i}
	cppcon_ = ~f{i^c^i^v^f^f^v^f^i}
	cppequ_ = ~f{i^c^i^v^f^f^f^i}
	cpprfs_ = ~f{i^c^i^i^v^v^v^i^v^i^f^f^v^f^i}
	cppsv_ = ~f{i^c^i^i^v^v^i^i}
	cppsvx_ = ~f{i^c^c^i^i^v^v^c^f^v^i^v^i^f^f^f^v^f^i}
	cpptrf_ = ~f{i^c^i^v^i}
	cpptri_ = ~f{i^c^i^v^i}
	cpptrs_ = ~f{i^c^i^i^v^v^i^i}
	cpstf2_ = ~f{i^c^i^v^i^i^i^f^f^i}
	cpstrf_ = ~f{i^c^i^v^i^i^i^f^f^i}
	cptcon_ = ~f{i^i^f^v^f^f^f^i}
	cpteqr_ = ~f{i^c^i^f^f^v^i^f^i}
	cptrfs_ = ~f{i^c^i^i^f^v^f^v^v^i^v^i^f^f^v^f^i}
	cptsv_ = ~f{i^i^i^f^v^v^i^i}
	cptsvx_ = ~f{i^c^i^i^f^v^f^v^v^i^v^i^f^f^f^v^f^i}
	cpttrf_ = ~f{i^i^f^v^i}
	cpttrs_ = ~f{i^c^i^i^f^v^v^i^i}
	cptts2_ = ~f{i^i^i^i^f^v^v^i}
	crot_ = ~f{i^i^v^i^v^i^f^v}
	cspcon_ = ~f{i^c^i^v^i^f^f^v^i}
	cspmv_ = ~f{i^c^i^v^v^v^i^v^v^i}
	cspr_ = ~f{i^c^i^v^v^i^v}
	csprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^f^f^v^f^i}
	cspsv_ = ~f{i^c^i^i^v^i^v^i^i}
	cspsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^f^f^f^v^f^i}
	csptrf_ = ~f{i^c^i^v^i^i}
	csptri_ = ~f{i^c^i^v^i^v^i}
	csptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	csrscl_ = ~f{i^i^f^v^i}
	cstedc_ = ~f{i^c^i^f^f^v^i^v^i^f^i^i^i^i}
	cstegr_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^v^i^i^f^i^i^i^i}
	cstein_ = ~f{i^i^f^f^i^f^i^i^v^i^f^i^i^i}
	cstemr_ = ~f{i^c^c^i^f^f^f^f^i^i^i^f^v^i^i^i^i^f^i^i^i^i}
	csteqr_ = ~f{i^c^i^f^f^v^i^f^i}
	csycon_ = ~f{i^c^i^v^i^i^f^f^v^i}
	csyequb_ = ~f{i^c^i^v^i^f^f^f^v^i}
	csymv_ = ~f{i^c^i^v^v^i^v^i^v^v^i}
	csyr_ = ~f{i^c^i^v^v^i^v^i}
	csyrfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^f^f^v^f^i}
	csysv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	csysvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^f^f^f^v^i^f^i}
	csytf2_ = ~f{i^c^i^v^i^i^i}
	csytrf_ = ~f{i^c^i^v^i^i^v^i^i}
	csytri_ = ~f{i^c^i^v^i^i^v^i}
	csytrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	ctbcon_ = ~f{i^c^c^c^i^i^v^i^f^v^f^i}
	ctbrfs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^f^f^v^f^i}
	ctbtrs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^i}
	ctfsm_ = ~f{i^c^c^c^c^c^i^i^v^v^v^i}
	ctftri_ = ~f{i^c^c^c^i^v^i}
	ctfttp_ = ~f{i^c^c^i^v^v^i}
	ctfttr_ = ~f{i^c^c^i^v^v^i^i}
	ctgevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^i^i^v^f^i}
	ctgex2_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i}
	ctgexc_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i^i}
	ctgsen_ = ~f{i^i^i^i^i^i^v^i^v^i^v^v^v^i^v^i^i^f^f^f^v^i^i^i^i}
	ctgsja_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^f^f^f^f^v^i^v^i^v^i^v^i^i}
	ctgsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^f^f^i^i^v^i^i^i}
	ctgsy2_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^f^f^f^i}
	ctgsyl_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^f^f^v^i^i^i}
	ctpcon_ = ~f{i^c^c^c^i^v^f^v^f^i}
	ctprfs_ = ~f{i^c^c^c^i^i^v^v^i^v^i^f^f^v^f^i}
	ctptri_ = ~f{i^c^c^i^v^i}
	ctptrs_ = ~f{i^c^c^c^i^i^v^v^i^i}
	ctpttf_ = ~f{i^c^c^i^v^v^i}
	ctpttr_ = ~f{i^c^i^v^v^i^i}
	ctrcon_ = ~f{i^c^c^c^i^v^i^f^v^f^i}
	ctrevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^i^i^v^f^i}
	ctrexc_ = ~f{i^c^i^v^i^v^i^i^i^i}
	ctrrfs_ = ~f{i^c^c^c^i^i^v^i^v^i^v^i^f^f^v^f^i}
	ctrsen_ = ~f{i^c^c^i^i^v^i^v^i^v^i^f^f^v^i^i}
	ctrsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^f^f^i^i^v^i^f^i}
	ctrsyl_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^f^i}
	ctrti2_ = ~f{i^c^c^i^v^i^i}
	ctrtri_ = ~f{i^c^c^i^v^i^i}
	ctrtrs_ = ~f{i^c^c^c^i^i^v^i^v^i^i}
	ctrttf_ = ~f{i^c^c^i^v^i^v^i}
	ctrttp_ = ~f{i^c^i^v^i^v^i}
	ctzrqf_ = ~f{i^i^i^v^i^v^i}
	ctzrzf_ = ~f{i^i^i^v^i^v^v^i^i}
	cung2l_ = ~f{i^i^i^i^v^i^v^v^i}
	cung2r_ = ~f{i^i^i^i^v^i^v^v^i}
	cungbr_ = ~f{i^c^i^i^i^v^i^v^v^i^i}
	cunghr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungl2_ = ~f{i^i^i^i^v^i^v^v^i}
	cunglq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungql_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungqr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungr2_ = ~f{i^i^i^i^v^i^v^v^i}
	cungrq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	cungtr_ = ~f{i^c^i^v^i^v^v^i^i}
	cunm2l_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunm2r_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunmbr_ = ~f{i^c^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmhr_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	cunml2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunmlq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmql_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmr2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	cunmr3_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i}
	cunmrq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	cunmrz_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	cunmtr_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i}
	cupgtr_ = ~f{i^c^i^v^v^v^i^v^i}
	cupmtr_ = ~f{i^c^c^c^i^i^v^v^v^i^v^i}
	dbdsdc_ = ~f{i^c^c^i^d^d^d^i^d^i^d^i^d^i^i}
	dbdsqr_ = ~f{i^c^i^i^i^i^d^d^d^i^d^i^d^i^d^i}
	ddisna_ = ~f{i^c^i^i^d^d^i}
	dgbbrd_ = ~f{i^c^i^i^i^i^i^d^i^d^d^d^i^d^i^d^i^d^i}
	dgbcon_ = ~f{i^c^i^i^i^d^i^i^d^d^d^i^i}
	dgbequ_ = ~f{i^i^i^i^i^d^i^d^d^d^d^d^i}
	dgbequb_ = ~f{i^i^i^i^i^d^i^d^d^d^d^d^i}
	dgbrfs_ = ~f{i^c^i^i^i^i^d^i^d^i^i^d^i^d^i^d^d^d^i^i}
	dgbsv_ = ~f{i^i^i^i^i^d^i^i^d^i^i}
	dgbsvx_ = ~f{i^c^c^i^i^i^i^d^i^d^i^i^c^d^d^d^i^d^i^d^d^d^d^i^i}
	dgbtf2_ = ~f{i^i^i^i^i^d^i^i^i}
	dgbtrf_ = ~f{i^i^i^i^i^d^i^i^i}
	dgbtrs_ = ~f{i^c^i^i^i^i^d^i^i^d^i^i}
	dgebak_ = ~f{i^c^c^i^i^i^d^i^d^i^i}
	dgebal_ = ~f{i^c^i^d^i^i^i^d^i}
	dgebd2_ = ~f{i^i^i^d^i^d^d^d^d^d^i}
	dgebrd_ = ~f{i^i^i^d^i^d^d^d^d^d^i^i}
	dgecon_ = ~f{i^c^i^d^i^d^d^d^i^i}
	dgeequ_ = ~f{i^i^i^d^i^d^d^d^d^d^i}
	dgeequb_ = ~f{i^i^i^d^i^d^d^d^d^d^i}
	dgees_ = ~f{i^c^c^?^i^d^i^i^d^d^d^i^d^i^i^i}
	dgeesx_ = ~f{i^c^c^?^c^i^d^i^i^d^d^d^i^d^d^d^i^i^i^i^i}
	dgeev_ = ~f{i^c^c^i^d^i^d^d^d^i^d^i^d^i^i}
	dgeevx_ = ~f{i^c^c^c^c^i^d^i^d^d^d^i^d^i^i^i^d^d^d^d^d^i^i^i}
	dgegs_ = ~f{i^c^c^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dgegv_ = ~f{i^c^c^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dgehd2_ = ~f{i^i^i^i^d^i^d^d^i}
	dgehrd_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dgejsv_ = ~f{i^c^c^c^c^c^c^i^i^d^i^d^d^i^d^i^d^i^i^i}
	dgelq2_ = ~f{i^i^i^d^i^d^d^i}
	dgelqf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgels_ = ~f{i^c^i^i^i^d^i^d^i^d^i^i}
	dgelsd_ = ~f{i^i^i^i^d^i^d^i^d^d^i^d^i^i^i}
	dgelss_ = ~f{i^i^i^i^d^i^d^i^d^d^i^d^i^i}
	dgelsx_ = ~f{i^i^i^i^d^i^d^i^i^d^i^d^i}
	dgelsy_ = ~f{i^i^i^i^d^i^d^i^i^d^i^d^i^i}
	dgeql2_ = ~f{i^i^i^d^i^d^d^i}
	dgeqlf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgeqp3_ = ~f{i^i^i^d^i^i^d^d^i^i}
	dgeqpf_ = ~f{i^i^i^d^i^i^d^d^i}
	dgeqr2_ = ~f{i^i^i^d^i^d^d^i}
	dgeqrf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgerfs_ = ~f{i^c^i^i^d^i^d^i^i^d^i^d^i^d^d^d^i^i}
	dgerq2_ = ~f{i^i^i^d^i^d^d^i}
	dgerqf_ = ~f{i^i^i^d^i^d^d^i^i}
	dgesc2_ = ~f{i^i^d^i^d^i^i^d}
	dgesdd_ = ~f{i^c^i^i^d^i^d^d^i^d^i^d^i^i^i}
	dgesv_ = ~f{i^i^i^d^i^i^d^i^i}
	dgesvd_ = ~f{i^c^c^i^i^d^i^d^d^i^d^i^d^i^i}
	dgesvj_ = ~f{i^c^c^c^i^i^d^i^d^i^d^i^d^i^i}
	dgesvx_ = ~f{i^c^c^i^i^d^i^d^i^i^c^d^d^d^i^d^i^d^d^d^d^i^i}
	dgetc2_ = ~f{i^i^d^i^i^i^i}
	dgetf2_ = ~f{i^i^i^d^i^i^i}
	dgetrf_ = ~f{i^i^i^d^i^i^i}
	dgetri_ = ~f{i^i^d^i^i^d^i^i}
	dgetrs_ = ~f{i^c^i^i^d^i^i^d^i^i}
	dggbak_ = ~f{i^c^c^i^i^i^d^d^i^d^i^i}
	dggbal_ = ~f{i^c^i^d^i^d^i^i^i^d^d^d^i}
	dgges_ = ~f{i^c^c^c^?^i^d^i^d^i^i^d^d^d^d^i^d^i^d^i^i^i}
	dggesx_ = ~f{i^c^c^c^?^c^i^d^i^d^i^i^d^d^d^d^i^d^i^d^d^d^i^i^i^i^i}
	dggev_ = ~f{i^c^c^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dggevx_ = ~f{i^c^c^c^c^i^d^i^d^i^d^d^d^d^i^d^i^i^i^d^d^d^d^d^d^d^i^i^i^i}
	dggglm_ = ~f{i^i^i^i^d^i^d^i^d^d^d^d^i^i}
	dgghrd_ = ~f{i^c^c^i^i^i^d^i^d^i^d^i^d^i^i}
	dgglse_ = ~f{i^i^i^i^d^i^d^i^d^d^d^d^i^i}
	dggqrf_ = ~f{i^i^i^i^d^i^d^d^i^d^d^i^i}
	dggrqf_ = ~f{i^i^i^i^d^i^d^d^i^d^d^i^i}
	dggsvd_ = ~f{i^c^c^c^i^i^i^i^i^d^i^d^i^d^d^d^i^d^i^d^i^d^i^i}
	dggsvp_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^d^i^i^d^i^d^i^d^i^i^d^d^i}
	dgsvj0_ = ~f{i^c^i^i^d^i^d^d^i^d^i^d^d^d^i^d^i^i}
	dgsvj1_ = ~f{i^c^i^i^i^d^i^d^d^i^d^i^d^d^d^i^d^i^i}
	dgtcon_ = ~f{i^c^i^d^d^d^d^i^d^d^d^i^i}
	dgtrfs_ = ~f{i^c^i^i^d^d^d^d^d^d^d^i^d^i^d^i^d^d^d^i^i}
	dgtsv_ = ~f{i^i^i^d^d^d^d^i^i}
	dgtsvx_ = ~f{i^c^c^i^i^d^d^d^d^d^d^d^i^d^i^d^i^d^d^d^d^i^i}
	dgttrf_ = ~f{i^i^d^d^d^d^i^i}
	dgttrs_ = ~f{i^c^i^i^d^d^d^d^i^d^i^i}
	dgtts2_ = ~f{i^i^i^i^d^d^d^d^i^d^i}
	dhgeqz_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^d^d^d^i^d^i^d^i^i}
	dhsein_ = ~f{i^c^c^c^i^i^d^i^d^d^d^i^d^i^i^i^d^i^i^i}
	dhseqr_ = ~f{i^c^c^i^i^i^d^i^d^d^d^i^d^i^i}
	disnan_ = ~f{i^d}
	dlabad_ = ~f{i^d^d}
	dlabrd_ = ~f{i^i^i^i^d^i^d^d^d^d^d^i^d^i}
	dlacn2_ = ~f{i^i^d^d^i^d^i^i}
	dlacon_ = ~f{i^i^d^d^i^d^i}
	dlacpy_ = ~f{i^c^i^i^d^i^d^i}
	dladiv_ = ~f{i^d^d^d^d^d^d}
	dlae2_ = ~f{i^d^d^d^d^d}
	dlaebz_ = ~f{i^i^i^i^i^i^i^d^d^d^d^d^d^i^d^d^i^i^d^i^i}
	dlaed0_ = ~f{i^i^i^i^d^d^d^i^d^i^d^i^i}
	dlaed1_ = ~f{i^i^d^d^i^i^d^i^d^i^i}
	dlaed2_ = ~f{i^i^i^i^d^d^i^i^d^d^d^d^d^i^i^i^i^i}
	dlaed3_ = ~f{i^i^i^i^d^d^i^d^d^d^i^i^d^d^i}
	dlaed4_ = ~f{i^i^i^d^d^d^d^d^i}
	dlaed5_ = ~f{i^i^d^d^d^d^d}
	dlaed6_ = ~f{i^i^i^d^d^d^d^d^i}
	dlaed7_ = ~f{i^i^i^i^i^i^i^d^d^i^i^d^i^d^i^i^i^i^i^d^d^i^i}
	dlaed8_ = ~f{i^i^i^i^i^d^d^i^i^d^i^d^d^d^i^d^i^i^i^d^i^i^i}
	dlaed9_ = ~f{i^i^i^i^i^d^d^i^d^d^d^d^i^i}
	dlaeda_ = ~f{i^i^i^i^i^i^i^i^i^d^d^i^d^d^i}
	dlaein_ = ~f{i^i^i^i^d^i^d^d^d^d^d^i^d^d^d^d^i}
	dlaev2_ = ~f{i^d^d^d^d^d^d^d}
	dlaexc_ = ~f{i^i^i^d^i^d^i^i^i^i^d^i}
	dlag2_ = ~f{i^d^i^d^i^d^d^d^d^d^d}
	dlag2s_ = ~f{i^i^i^d^i^f^i^i}
	dlags2_ = ~f{i^i^d^d^d^d^d^d^d^d^d^d^d^d}
	dlagtf_ = ~f{i^i^d^d^d^d^d^d^i^i}
	dlagtm_ = ~f{i^c^i^i^d^d^d^d^d^i^d^d^i}
	dlagts_ = ~f{i^i^i^d^d^d^d^i^d^d^i}
	dlagv2_ = ~f{i^d^i^d^i^d^d^d^d^d^d^d}
	dlahqr_ = ~f{i^i^i^i^i^i^d^i^d^d^i^i^d^i^i}
	dlahr2_ = ~f{i^i^i^i^d^i^d^d^i^d^i}
	dlahrd_ = ~f{i^i^i^i^d^i^d^d^i^d^i}
	dlaic1_ = ~f{i^i^i^d^d^d^d^d^d^d}
	dlaisnan_ = ~f{i^d^d}
	dlaln2_ = ~f{i^i^i^i^d^d^d^i^d^d^d^i^d^d^d^i^d^d^i}
	dlals0_ = ~f{i^i^i^i^i^i^d^i^d^i^i^i^i^i^d^i^d^d^d^d^i^d^d^d^i}
	dlalsa_ = ~f{i^i^i^i^i^d^i^d^i^d^i^d^i^d^d^d^d^i^i^i^i^d^d^d^d^i^i}
	dlalsd_ = ~f{i^c^i^i^i^d^d^d^i^d^i^d^i^i}
	dlamc1_ = ~f{i^i^i^i^i}
	dlamc2_ = ~f{i^i^i^i^d^i^d^i^d}
	dlamc3_ = ~f{d^d^d}
	dlamc4_ = ~f{i^i^d^i}
	dlamc5_ = ~f{i^i^i^i^i^i^d}
	dlamch_ = ~f{d^c}
	dlamrg_ = ~f{i^i^i^d^i^i^i}
	dlaneg_ = ~f{i^i^d^d^d^d^i}
	dlangb_ = ~f{d^c^i^i^i^d^i^d}
	dlange_ = ~f{d^c^i^i^d^i^d}
	dlangt_ = ~f{d^c^i^d^d^d}
	dlanhs_ = ~f{d^c^i^d^i^d}
	dlansb_ = ~f{d^c^c^i^i^d^i^d}
	dlansf_ = ~f{d^c^c^c^i^d^d}
	dlansp_ = ~f{d^c^c^i^d^d}
	dlanst_ = ~f{d^c^i^d^d}
	dlansy_ = ~f{d^c^c^i^d^i^d}
	dlantb_ = ~f{d^c^c^c^i^i^d^i^d}
	dlantp_ = ~f{d^c^c^c^i^d^d}
	dlantr_ = ~f{d^c^c^c^i^i^d^i^d}
	dlanv2_ = ~f{i^d^d^d^d^d^d^d^d^d^d}
	dlapll_ = ~f{i^i^d^i^d^i^d}
	dlapmt_ = ~f{i^i^i^i^d^i^i}
	dlapy2_ = ~f{d^d^d}
	dlapy3_ = ~f{d^d^d^d}
	dlaqgb_ = ~f{i^i^i^i^i^d^i^d^d^d^d^d^c}
	dlaqge_ = ~f{i^i^i^d^i^d^d^d^d^d^c}
	dlaqp2_ = ~f{i^i^i^i^d^i^i^d^d^d^d}
	dlaqps_ = ~f{i^i^i^i^i^i^d^i^i^d^d^d^d^d^i}
	dlaqr0_ = ~f{i^i^i^i^i^i^d^i^d^d^i^i^d^i^d^i^i}
	dlaqr1_ = ~f{i^i^d^i^d^d^d^d^d}
	dlaqr2_ = ~f{i^i^i^i^i^i^i^d^i^i^i^d^i^i^i^d^d^d^i^i^d^i^i^d^i^d^i}
	dlaqr3_ = ~f{i^i^i^i^i^i^i^d^i^i^i^d^i^i^i^d^d^d^i^i^d^i^i^d^i^d^i}
	dlaqr4_ = ~f{i^i^i^i^i^i^d^i^d^d^i^i^d^i^d^i^i}
	dlaqr5_ = ~f{i^i^i^i^i^i^i^i^d^d^d^i^i^i^d^i^d^i^d^i^i^d^i^i^d^i}
	dlaqsb_ = ~f{i^c^i^i^d^i^d^d^d^c}
	dlaqsp_ = ~f{i^c^i^d^d^d^d^c}
	dlaqsy_ = ~f{i^c^i^d^i^d^d^d^c}
	dlaqtr_ = ~f{i^i^i^i^d^i^d^d^d^d^d^i}
	dlar1v_ = ~f{i^i^i^i^d^d^d^d^d^d^d^d^i^i^d^d^i^i^d^d^d^d}
	dlar2v_ = ~f{i^i^d^d^d^i^d^d^i}
	dlarf_ = ~f{i^c^i^i^d^i^d^d^i^d}
	dlarfb_ = ~f{i^c^c^c^c^i^i^i^d^i^d^i^d^i^d^i}
	dlarfg_ = ~f{i^i^d^d^i^d}
	dlarfp_ = ~f{i^i^d^d^i^d}
	dlarft_ = ~f{i^c^c^i^i^d^i^d^d^i}
	dlarfx_ = ~f{i^c^i^i^d^d^d^i^d}
	dlargv_ = ~f{i^i^d^i^d^i^d^i}
	dlarnv_ = ~f{i^i^i^i^d}
	dlarra_ = ~f{i^i^d^d^d^d^d^i^i^i}
	dlarrb_ = ~f{i^i^d^d^i^i^d^d^i^d^d^d^d^i^d^d^i^i}
	dlarrc_ = ~f{i^c^i^d^d^d^d^d^i^i^i^i}
	dlarrd_ = ~f{i^c^c^i^d^d^i^i^d^d^d^d^d^d^i^i^i^d^d^d^d^i^i^d^i^i}
	dlarre_ = ~f{i^c^i^d^d^i^i^d^d^d^d^d^d^i^i^i^d^d^d^i^i^d^d^d^i^i}
	dlarrf_ = ~f{i^i^d^d^d^i^i^d^d^d^d^d^d^d^d^d^d^d^i}
	dlarrj_ = ~f{i^i^d^d^i^i^d^i^d^d^d^i^d^d^i}
	dlarrk_ = ~f{i^i^i^d^d^d^d^d^d^d^d^i}
	dlarrr_ = ~f{i^i^d^d^i}
	dlarrv_ = ~f{i^i^d^d^d^d^d^i^i^i^i^d^d^d^d^d^d^i^i^d^d^i^i^d^i^i}
	dlarscl2_ = ~f{i^i^i^d^d^i}
	dlartg_ = ~f{i^d^d^d^d^d}
	dlartv_ = ~f{i^i^d^i^d^i^d^d^i}
	dlaruv_ = ~f{i^i^i^d}
	dlarz_ = ~f{i^c^i^i^i^d^i^d^d^i^d}
	dlarzb_ = ~f{i^c^c^c^c^i^i^i^i^d^i^d^i^d^i^d^i}
	dlarzt_ = ~f{i^c^c^i^i^d^i^d^d^i}
	dlas2_ = ~f{i^d^d^d^d^d}
	dlascl2_ = ~f{i^i^i^d^d^i}
	dlascl_ = ~f{i^c^i^i^d^d^i^i^d^i^i}
	dlasd0_ = ~f{i^i^i^d^d^d^i^d^i^i^i^d^i}
	dlasd1_ = ~f{i^i^i^i^d^d^d^d^i^d^i^i^i^d^i}
	dlasd2_ = ~f{i^i^i^i^i^d^d^d^d^d^i^d^i^d^d^i^d^i^i^i^i^i^i^i}
	dlasd3_ = ~f{i^i^i^i^i^d^d^i^d^d^i^d^i^d^i^d^i^i^i^d^i}
	dlasd4_ = ~f{i^i^i^d^d^d^d^d^d^i}
	dlasd5_ = ~f{i^i^d^d^d^d^d^d}
	dlasd6_ = ~f{i^i^i^i^i^d^d^d^d^d^i^i^i^i^i^d^i^d^d^d^d^i^d^d^d^i^i}
	dlasd7_ = ~f{i^i^i^i^i^i^d^d^d^d^d^d^d^d^d^d^i^i^i^i^i^i^i^d^i^d^d^i}
	dlasd8_ = ~f{i^i^i^d^d^d^d^d^d^i^d^d^i}
	dlasda_ = ~f{i^i^i^i^i^d^d^d^i^d^i^d^d^d^d^i^i^i^i^d^d^d^d^i^i}
	dlasdq_ = ~f{i^c^i^i^i^i^i^d^d^d^i^d^i^d^i^d^i}
	dlasdt_ = ~f{i^i^i^i^i^i^i^i}
	dlaset_ = ~f{i^c^i^i^d^d^d^i}
	dlasq1_ = ~f{i^i^d^d^d^i}
	dlasq2_ = ~f{i^i^d^i}
	dlasq3_ = ~f{i^i^i^d^i^d^d^d^d^i^i^i^i^i^d^d^d^d^d^d^d}
	dlasq4_ = ~f{i^i^i^d^i^i^d^d^d^d^d^d^d^i^d}
	dlasq5_ = ~f{i^i^i^d^i^d^d^d^d^d^d^d^i}
	dlasq6_ = ~f{i^i^i^d^i^d^d^d^d^d^d}
	dlasr_ = ~f{i^c^c^c^i^i^d^d^d^i}
	dlasrt_ = ~f{i^c^i^d^i}
	dlassq_ = ~f{i^i^d^i^d^d}
	dlasv2_ = ~f{i^d^d^d^d^d^d^d^d^d}
	dlaswp_ = ~f{i^i^d^i^i^i^i^i}
	dlasy2_ = ~f{i^i^i^i^i^i^d^i^d^i^d^i^d^d^i^d^i}
	dlasyf_ = ~f{i^c^i^i^i^d^i^i^d^i^i}
	dlat2s_ = ~f{i^c^i^d^i^f^i^i}
	dlatbs_ = ~f{i^c^c^c^c^i^i^d^i^d^d^d^i}
	dlatdf_ = ~f{i^i^i^d^i^d^d^d^i^i}
	dlatps_ = ~f{i^c^c^c^c^i^d^d^d^d^i}
	dlatrd_ = ~f{i^c^i^i^d^i^d^d^d^i}
	dlatrs_ = ~f{i^c^c^c^c^i^d^i^d^d^d^i}
	dlatrz_ = ~f{i^i^i^i^d^i^d^d}
	dlatzm_ = ~f{i^c^i^i^d^i^d^d^d^i^d}
	dlauu2_ = ~f{i^c^i^d^i^i}
	dlauum_ = ~f{i^c^i^d^i^i}
	dopgtr_ = ~f{i^c^i^d^d^d^i^d^i}
	dopmtr_ = ~f{i^c^c^c^i^i^d^d^d^i^d^i}
	dorg2l_ = ~f{i^i^i^i^d^i^d^d^i}
	dorg2r_ = ~f{i^i^i^i^d^i^d^d^i}
	dorgbr_ = ~f{i^c^i^i^i^d^i^d^d^i^i}
	dorghr_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgl2_ = ~f{i^i^i^i^d^i^d^d^i}
	dorglq_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgql_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgqr_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgr2_ = ~f{i^i^i^i^d^i^d^d^i}
	dorgrq_ = ~f{i^i^i^i^d^i^d^d^i^i}
	dorgtr_ = ~f{i^c^i^d^i^d^d^i^i}
	dorm2l_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dorm2r_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dormbr_ = ~f{i^c^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormhr_ = ~f{i^c^c^i^i^i^i^d^i^d^d^i^d^i^i}
	dorml2_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dormlq_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormql_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormqr_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormr2_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i}
	dormr3_ = ~f{i^c^c^i^i^i^i^d^i^d^d^i^d^i}
	dormrq_ = ~f{i^c^c^i^i^i^d^i^d^d^i^d^i^i}
	dormrz_ = ~f{i^c^c^i^i^i^i^d^i^d^d^i^d^i^i}
	dormtr_ = ~f{i^c^c^c^i^i^d^i^d^d^i^d^i^i}
	dpbcon_ = ~f{i^c^i^i^d^i^d^d^d^i^i}
	dpbequ_ = ~f{i^c^i^i^d^i^d^d^d^i}
	dpbrfs_ = ~f{i^c^i^i^i^d^i^d^i^d^i^d^i^d^d^d^i^i}
	dpbstf_ = ~f{i^c^i^i^d^i^i}
	dpbsv_ = ~f{i^c^i^i^i^d^i^d^i^i}
	dpbsvx_ = ~f{i^c^c^i^i^i^d^i^d^i^c^d^d^i^d^i^d^d^d^d^i^i}
	dpbtf2_ = ~f{i^c^i^i^d^i^i}
	dpbtrf_ = ~f{i^c^i^i^d^i^i}
	dpbtrs_ = ~f{i^c^i^i^i^d^i^d^i^i}
	dpftrf_ = ~f{i^c^c^i^d^i}
	dpftri_ = ~f{i^c^c^i^d^i}
	dpftrs_ = ~f{i^c^c^i^i^d^d^i^i}
	dpocon_ = ~f{i^c^i^d^i^d^d^d^i^i}
	dpoequ_ = ~f{i^i^d^i^d^d^d^i}
	dpoequb_ = ~f{i^i^d^i^d^d^d^i}
	dporfs_ = ~f{i^c^i^i^d^i^d^i^d^i^d^i^d^d^d^i^i}
	dposv_ = ~f{i^c^i^i^d^i^d^i^i}
	dposvx_ = ~f{i^c^c^i^i^d^i^d^i^c^d^d^i^d^i^d^d^d^d^i^i}
	dpotf2_ = ~f{i^c^i^d^i^i}
	dpotrf_ = ~f{i^c^i^d^i^i}
	dpotri_ = ~f{i^c^i^d^i^i}
	dpotrs_ = ~f{i^c^i^i^d^i^d^i^i}
	dppcon_ = ~f{i^c^i^d^d^d^d^i^i}
	dppequ_ = ~f{i^c^i^d^d^d^d^i}
	dpprfs_ = ~f{i^c^i^i^d^d^d^i^d^i^d^d^d^i^i}
	dppsv_ = ~f{i^c^i^i^d^d^i^i}
	dppsvx_ = ~f{i^c^c^i^i^d^d^c^d^d^i^d^i^d^d^d^d^i^i}
	dpptrf_ = ~f{i^c^i^d^i}
	dpptri_ = ~f{i^c^i^d^i}
	dpptrs_ = ~f{i^c^i^i^d^d^i^i}
	dpstf2_ = ~f{i^c^i^d^i^i^i^d^d^i}
	dpstrf_ = ~f{i^c^i^d^i^i^i^d^d^i}
	dptcon_ = ~f{i^i^d^d^d^d^d^i}
	dpteqr_ = ~f{i^c^i^d^d^d^i^d^i}
	dptrfs_ = ~f{i^i^i^d^d^d^d^d^i^d^i^d^d^d^i}
	dptsv_ = ~f{i^i^i^d^d^d^i^i}
	dptsvx_ = ~f{i^c^i^i^d^d^d^d^d^i^d^i^d^d^d^d^i}
	dpttrf_ = ~f{i^i^d^d^i}
	dpttrs_ = ~f{i^i^i^d^d^d^i^i}
	dptts2_ = ~f{i^i^i^d^d^d^i}
	drscl_ = ~f{i^i^d^d^i}
	dsbev_ = ~f{i^c^c^i^i^d^i^d^d^i^d^i}
	dsbevd_ = ~f{i^c^c^i^i^d^i^d^d^i^d^i^i^i^i}
	dsbevx_ = ~f{i^c^c^c^i^i^d^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsbgst_ = ~f{i^c^c^i^i^i^d^i^d^i^d^i^d^i}
	dsbgv_ = ~f{i^c^c^i^i^i^d^i^d^i^d^d^i^d^i}
	dsbgvd_ = ~f{i^c^c^i^i^i^d^i^d^i^d^d^i^d^i^i^i^i}
	dsbgvx_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsbtrd_ = ~f{i^c^c^i^i^d^i^d^d^d^i^d^i}
	dsfrk_ = ~f{i^c^c^c^i^i^d^d^i^d^d}
	dsgesv_ = ~f{i^i^i^d^i^i^d^i^d^i^d^f^i^i}
	dspcon_ = ~f{i^c^i^d^i^d^d^d^i^i}
	dspev_ = ~f{i^c^c^i^d^d^d^i^d^i}
	dspevd_ = ~f{i^c^c^i^d^d^d^i^d^i^i^i^i}
	dspevx_ = ~f{i^c^c^c^i^d^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dspgst_ = ~f{i^i^c^i^d^d^i}
	dspgv_ = ~f{i^i^c^c^i^d^d^d^d^i^d^i}
	dspgvd_ = ~f{i^i^c^c^i^d^d^d^d^i^d^i^i^i^i}
	dspgvx_ = ~f{i^i^c^c^c^i^d^d^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsposv_ = ~f{i^c^i^i^d^i^d^i^d^i^d^f^i^i}
	dsprfs_ = ~f{i^c^i^i^d^d^i^d^i^d^i^d^d^d^i^i}
	dspsv_ = ~f{i^c^i^i^d^i^d^i^i}
	dspsvx_ = ~f{i^c^c^i^i^d^d^i^d^i^d^i^d^d^d^d^i^i}
	dsptrd_ = ~f{i^c^i^d^d^d^d^i}
	dsptrf_ = ~f{i^c^i^d^i^i}
	dsptri_ = ~f{i^c^i^d^i^d^i}
	dsptrs_ = ~f{i^c^i^i^d^i^d^i^i}
	dstebz_ = ~f{i^c^c^i^d^d^i^i^d^d^d^i^i^d^i^i^d^i^i}
	dstedc_ = ~f{i^c^i^d^d^d^i^d^i^i^i^i}
	dstegr_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^d^i^i^d^i^i^i^i}
	dstein_ = ~f{i^i^d^d^i^d^i^i^d^i^d^i^i^i}
	dstemr_ = ~f{i^c^c^i^d^d^d^d^i^i^i^d^d^i^i^i^i^d^i^i^i^i}
	dsteqr_ = ~f{i^c^i^d^d^d^i^d^i}
	dsterf_ = ~f{i^i^d^d^i}
	dstev_ = ~f{i^c^i^d^d^d^i^d^i}
	dstevd_ = ~f{i^c^i^d^d^d^i^d^i^i^i^i}
	dstevr_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^d^i^i^d^i^i^i^i}
	dstevx_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^d^i^d^i^i^i}
	dsycon_ = ~f{i^c^i^d^i^i^d^d^d^i^i}
	dsyequb_ = ~f{i^c^i^d^i^d^d^d^d^i}
	dsyev_ = ~f{i^c^c^i^d^i^d^d^i^i}
	dsyevd_ = ~f{i^c^c^i^d^i^d^d^i^i^i^i}
	dsyevr_ = ~f{i^c^c^c^i^d^i^d^d^i^i^d^i^d^d^i^i^d^i^i^i^i}
	dsyevx_ = ~f{i^c^c^c^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i^i}
	dsygs2_ = ~f{i^i^c^i^d^i^d^i^i}
	dsygst_ = ~f{i^i^c^i^d^i^d^i^i}
	dsygv_ = ~f{i^i^c^c^i^d^i^d^i^d^d^i^i}
	dsygvd_ = ~f{i^i^c^c^i^d^i^d^i^d^d^i^i^i^i}
	dsygvx_ = ~f{i^i^c^c^c^i^d^i^d^i^d^d^i^i^d^i^d^d^i^d^i^i^i^i}
	dsyrfs_ = ~f{i^c^i^i^d^i^d^i^i^d^i^d^i^d^d^d^i^i}
	dsysv_ = ~f{i^c^i^i^d^i^i^d^i^d^i^i}
	dsysvx_ = ~f{i^c^c^i^i^d^i^d^i^i^d^i^d^i^d^d^d^d^i^i^i}
	dsytd2_ = ~f{i^c^i^d^i^d^d^d^i}
	dsytf2_ = ~f{i^c^i^d^i^i^i}
	dsytrd_ = ~f{i^c^i^d^i^d^d^d^d^i^i}
	dsytrf_ = ~f{i^c^i^d^i^i^d^i^i}
	dsytri_ = ~f{i^c^i^d^i^i^d^i}
	dsytrs_ = ~f{i^c^i^i^d^i^i^d^i^i}
	dtbcon_ = ~f{i^c^c^c^i^i^d^i^d^d^i^i}
	dtbrfs_ = ~f{i^c^c^c^i^i^i^d^i^d^i^d^i^d^d^d^i^i}
	dtbtrs_ = ~f{i^c^c^c^i^i^i^d^i^d^i^i}
	dtfsm_ = ~f{i^c^c^c^c^c^i^i^d^d^d^i}
	dtftri_ = ~f{i^c^c^c^i^d^i}
	dtfttp_ = ~f{i^c^c^i^d^d^i}
	dtfttr_ = ~f{i^c^c^i^d^d^i^i}
	dtgevc_ = ~f{i^c^c^i^i^d^i^d^i^d^i^d^i^i^i^d^i}
	dtgex2_ = ~f{i^i^i^i^d^i^d^i^d^i^d^i^i^i^i^d^i^i}
	dtgexc_ = ~f{i^i^i^i^d^i^d^i^d^i^d^i^i^i^d^i^i}
	dtgsen_ = ~f{i^i^i^i^i^i^d^i^d^i^d^d^d^d^i^d^i^i^d^d^d^d^i^i^i^i}
	dtgsja_ = ~f{i^c^c^c^i^i^i^i^i^d^i^d^i^d^d^d^d^d^i^d^i^d^i^d^i^i}
	dtgsna_ = ~f{i^c^c^i^i^d^i^d^i^d^i^d^i^d^d^i^i^d^i^i^i}
	dtgsy2_ = ~f{i^c^i^i^i^d^i^d^i^d^i^d^i^d^i^d^i^d^d^d^i^i^i}
	dtgsyl_ = ~f{i^c^i^i^i^d^i^d^i^d^i^d^i^d^i^d^i^d^d^d^i^i^i}
	dtpcon_ = ~f{i^c^c^c^i^d^d^d^i^i}
	dtprfs_ = ~f{i^c^c^c^i^i^d^d^i^d^i^d^d^d^i^i}
	dtptri_ = ~f{i^c^c^i^d^i}
	dtptrs_ = ~f{i^c^c^c^i^i^d^d^i^i}
	dtpttf_ = ~f{i^c^c^i^d^d^i}
	dtpttr_ = ~f{i^c^i^d^d^i^i}
	dtrcon_ = ~f{i^c^c^c^i^d^i^d^d^i^i}
	dtrevc_ = ~f{i^c^c^i^i^d^i^d^i^d^i^i^i^d^i}
	dtrexc_ = ~f{i^c^i^d^i^d^i^i^i^d^i}
	dtrrfs_ = ~f{i^c^c^c^i^i^d^i^d^i^d^i^d^d^d^i^i}
	dtrsen_ = ~f{i^c^c^i^i^d^i^d^i^d^d^i^d^d^d^i^i^i^i}
	dtrsna_ = ~f{i^c^c^i^i^d^i^d^i^d^i^d^d^i^i^d^i^i^i}
	dtrsyl_ = ~f{i^c^c^i^i^i^d^i^d^i^d^i^d^i}
	dtrti2_ = ~f{i^c^c^i^d^i^i}
	dtrtri_ = ~f{i^c^c^i^d^i^i}
	dtrtrs_ = ~f{i^c^c^c^i^i^d^i^d^i^i}
	dtrttf_ = ~f{i^c^c^i^d^i^d^i}
	dtrttp_ = ~f{i^c^i^d^i^d^i}
	dtzrqf_ = ~f{i^i^i^d^i^d^i}
	dtzrzf_ = ~f{i^i^i^d^i^d^d^i^i}
	dzsum1_ = ~f{d^i^v^i}
	icmax1_ = ~f{i^i^v^i}
	ieeeck_ = ~f{i^i^f^f}
	ilaclc_ = ~f{i^i^i^v^i}
	ilaclr_ = ~f{i^i^i^v^i}
	iladiag_ = ~f{i^c}
	iladlc_ = ~f{i^i^i^d^i}
	iladlr_ = ~f{i^i^i^d^i}
	ilaenv_ = ~f{i^i^c^c^i^i^i^i}
	ilaprec_ = ~f{i^c}
	ilaslc_ = ~f{i^i^i^f^i}
	ilaslr_ = ~f{i^i^i^f^i}
	ilatrans_ = ~f{i^c}
	ilauplo_ = ~f{i^c}
	ilaver_ = ~f{i^i^i^i}
	ilazlc_ = ~f{i^i^i^v^i}
	ilazlr_ = ~f{i^i^i^v^i}
	iparmq_ = ~f{i^i^c^c^i^i^i^i}
	izmax1_ = ~f{i^i^v^i}
	lsamen_ = ~f{i^i^c^c}
	sbdsdc_ = ~f{i^c^c^i^f^f^f^i^f^i^f^i^f^i^i}
	sbdsqr_ = ~f{i^c^i^i^i^i^f^f^f^i^f^i^f^i^f^i}
	scsum1_ = ~f{d^i^v^i}
	sdisna_ = ~f{i^c^i^i^f^f^i}
	sgbbrd_ = ~f{i^c^i^i^i^i^i^f^i^f^f^f^i^f^i^f^i^f^i}
	sgbcon_ = ~f{i^c^i^i^i^f^i^i^f^f^f^i^i}
	sgbequ_ = ~f{i^i^i^i^i^f^i^f^f^f^f^f^i}
	sgbequb_ = ~f{i^i^i^i^i^f^i^f^f^f^f^f^i}
	sgbrfs_ = ~f{i^c^i^i^i^i^f^i^f^i^i^f^i^f^i^f^f^f^i^i}
	sgbsv_ = ~f{i^i^i^i^i^f^i^i^f^i^i}
	sgbsvx_ = ~f{i^c^c^i^i^i^i^f^i^f^i^i^c^f^f^f^i^f^i^f^f^f^f^i^i}
	sgbtf2_ = ~f{i^i^i^i^i^f^i^i^i}
	sgbtrf_ = ~f{i^i^i^i^i^f^i^i^i}
	sgbtrs_ = ~f{i^c^i^i^i^i^f^i^i^f^i^i}
	sgebak_ = ~f{i^c^c^i^i^i^f^i^f^i^i}
	sgebal_ = ~f{i^c^i^f^i^i^i^f^i}
	sgebd2_ = ~f{i^i^i^f^i^f^f^f^f^f^i}
	sgebrd_ = ~f{i^i^i^f^i^f^f^f^f^f^i^i}
	sgecon_ = ~f{i^c^i^f^i^f^f^f^i^i}
	sgeequ_ = ~f{i^i^i^f^i^f^f^f^f^f^i}
	sgeequb_ = ~f{i^i^i^f^i^f^f^f^f^f^i}
	sgees_ = ~f{i^c^c^?^i^f^i^i^f^f^f^i^f^i^i^i}
	sgeesx_ = ~f{i^c^c^?^c^i^f^i^i^f^f^f^i^f^f^f^i^i^i^i^i}
	sgeev_ = ~f{i^c^c^i^f^i^f^f^f^i^f^i^f^i^i}
	sgeevx_ = ~f{i^c^c^c^c^i^f^i^f^f^f^i^f^i^i^i^f^f^f^f^f^i^i^i}
	sgegs_ = ~f{i^c^c^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	sgegv_ = ~f{i^c^c^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	sgehd2_ = ~f{i^i^i^i^f^i^f^f^i}
	sgehrd_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sgejsv_ = ~f{i^c^c^c^c^c^c^i^i^f^i^f^f^i^f^i^f^i^i^i}
	sgelq2_ = ~f{i^i^i^f^i^f^f^i}
	sgelqf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgels_ = ~f{i^c^i^i^i^f^i^f^i^f^i^i}
	sgelsd_ = ~f{i^i^i^i^f^i^f^i^f^f^i^f^i^i^i}
	sgelss_ = ~f{i^i^i^i^f^i^f^i^f^f^i^f^i^i}
	sgelsx_ = ~f{i^i^i^i^f^i^f^i^i^f^i^f^i}
	sgelsy_ = ~f{i^i^i^i^f^i^f^i^i^f^i^f^i^i}
	sgeql2_ = ~f{i^i^i^f^i^f^f^i}
	sgeqlf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgeqp3_ = ~f{i^i^i^f^i^i^f^f^i^i}
	sgeqpf_ = ~f{i^i^i^f^i^i^f^f^i}
	sgeqr2_ = ~f{i^i^i^f^i^f^f^i}
	sgeqrf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgerfs_ = ~f{i^c^i^i^f^i^f^i^i^f^i^f^i^f^f^f^i^i}
	sgerq2_ = ~f{i^i^i^f^i^f^f^i}
	sgerqf_ = ~f{i^i^i^f^i^f^f^i^i}
	sgesc2_ = ~f{i^i^f^i^f^i^i^f}
	sgesdd_ = ~f{i^c^i^i^f^i^f^f^i^f^i^f^i^i^i}
	sgesv_ = ~f{i^i^i^f^i^i^f^i^i}
	sgesvd_ = ~f{i^c^c^i^i^f^i^f^f^i^f^i^f^i^i}
	sgesvj_ = ~f{i^c^c^c^i^i^f^i^f^i^f^i^f^i^i}
	sgesvx_ = ~f{i^c^c^i^i^f^i^f^i^i^c^f^f^f^i^f^i^f^f^f^f^i^i}
	sgetc2_ = ~f{i^i^f^i^i^i^i}
	sgetf2_ = ~f{i^i^i^f^i^i^i}
	sgetrf_ = ~f{i^i^i^f^i^i^i}
	sgetri_ = ~f{i^i^f^i^i^f^i^i}
	sgetrs_ = ~f{i^c^i^i^f^i^i^f^i^i}
	sggbak_ = ~f{i^c^c^i^i^i^f^f^i^f^i^i}
	sggbal_ = ~f{i^c^i^f^i^f^i^i^i^f^f^f^i}
	sgges_ = ~f{i^c^c^c^?^i^f^i^f^i^i^f^f^f^f^i^f^i^f^i^i^i}
	sggesx_ = ~f{i^c^c^c^?^c^i^f^i^f^i^i^f^f^f^f^i^f^i^f^f^f^i^i^i^i^i}
	sggev_ = ~f{i^c^c^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	sggevx_ = ~f{i^c^c^c^c^i^f^i^f^i^f^f^f^f^i^f^i^i^i^f^f^f^f^f^f^f^i^i^i^i}
	sggglm_ = ~f{i^i^i^i^f^i^f^i^f^f^f^f^i^i}
	sgghrd_ = ~f{i^c^c^i^i^i^f^i^f^i^f^i^f^i^i}
	sgglse_ = ~f{i^i^i^i^f^i^f^i^f^f^f^f^i^i}
	sggqrf_ = ~f{i^i^i^i^f^i^f^f^i^f^f^i^i}
	sggrqf_ = ~f{i^i^i^i^f^i^f^f^i^f^f^i^i}
	sggsvd_ = ~f{i^c^c^c^i^i^i^i^i^f^i^f^i^f^f^f^i^f^i^f^i^f^i^i}
	sggsvp_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^f^i^i^f^i^f^i^f^i^i^f^f^i}
	sgsvj0_ = ~f{i^c^i^i^f^i^f^f^i^f^i^f^f^f^i^f^i^i}
	sgsvj1_ = ~f{i^c^i^i^i^f^i^f^f^i^f^i^f^f^f^i^f^i^i}
	sgtcon_ = ~f{i^c^i^f^f^f^f^i^f^f^f^i^i}
	sgtrfs_ = ~f{i^c^i^i^f^f^f^f^f^f^f^i^f^i^f^i^f^f^f^i^i}
	sgtsv_ = ~f{i^i^i^f^f^f^f^i^i}
	sgtsvx_ = ~f{i^c^c^i^i^f^f^f^f^f^f^f^i^f^i^f^i^f^f^f^f^i^i}
	sgttrf_ = ~f{i^i^f^f^f^f^i^i}
	sgttrs_ = ~f{i^c^i^i^f^f^f^f^i^f^i^i}
	sgtts2_ = ~f{i^i^i^i^f^f^f^f^i^f^i}
	shgeqz_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^f^f^f^i^f^i^f^i^i}
	shsein_ = ~f{i^c^c^c^i^i^f^i^f^f^f^i^f^i^i^i^f^i^i^i}
	shseqr_ = ~f{i^c^c^i^i^i^f^i^f^f^f^i^f^i^i}
	sisnan_ = ~f{i^f}
	slabad_ = ~f{i^f^f}
	slabrd_ = ~f{i^i^i^i^f^i^f^f^f^f^f^i^f^i}
	slacn2_ = ~f{i^i^f^f^i^f^i^i}
	slacon_ = ~f{i^i^f^f^i^f^i}
	slacpy_ = ~f{i^c^i^i^f^i^f^i}
	sladiv_ = ~f{i^f^f^f^f^f^f}
	slae2_ = ~f{i^f^f^f^f^f}
	slaebz_ = ~f{i^i^i^i^i^i^i^f^f^f^f^f^f^i^f^f^i^i^f^i^i}
	slaed0_ = ~f{i^i^i^i^f^f^f^i^f^i^f^i^i}
	slaed1_ = ~f{i^i^f^f^i^i^f^i^f^i^i}
	slaed2_ = ~f{i^i^i^i^f^f^i^i^f^f^f^f^f^i^i^i^i^i}
	slaed3_ = ~f{i^i^i^i^f^f^i^f^f^f^i^i^f^f^i}
	slaed4_ = ~f{i^i^i^f^f^f^f^f^i}
	slaed5_ = ~f{i^i^f^f^f^f^f}
	slaed6_ = ~f{i^i^i^f^f^f^f^f^i}
	slaed7_ = ~f{i^i^i^i^i^i^i^f^f^i^i^f^i^f^i^i^i^i^i^f^f^i^i}
	slaed8_ = ~f{i^i^i^i^i^f^f^i^i^f^i^f^f^f^i^f^i^i^i^f^i^i^i}
	slaed9_ = ~f{i^i^i^i^i^f^f^i^f^f^f^f^i^i}
	slaeda_ = ~f{i^i^i^i^i^i^i^i^i^f^f^i^f^f^i}
	slaein_ = ~f{i^i^i^i^f^i^f^f^f^f^f^i^f^f^f^f^i}
	slaev2_ = ~f{i^f^f^f^f^f^f^f}
	slaexc_ = ~f{i^i^i^f^i^f^i^i^i^i^f^i}
	slag2_ = ~f{i^f^i^f^i^f^f^f^f^f^f}
	slag2d_ = ~f{i^i^i^f^i^d^i^i}
	slags2_ = ~f{i^i^f^f^f^f^f^f^f^f^f^f^f^f}
	slagtf_ = ~f{i^i^f^f^f^f^f^f^i^i}
	slagtm_ = ~f{i^c^i^i^f^f^f^f^f^i^f^f^i}
	slagts_ = ~f{i^i^i^f^f^f^f^i^f^f^i}
	slagv2_ = ~f{i^f^i^f^i^f^f^f^f^f^f^f}
	slahqr_ = ~f{i^i^i^i^i^i^f^i^f^f^i^i^f^i^i}
	slahr2_ = ~f{i^i^i^i^f^i^f^f^i^f^i}
	slahrd_ = ~f{i^i^i^i^f^i^f^f^i^f^i}
	slaic1_ = ~f{i^i^i^f^f^f^f^f^f^f}
	slaisnan_ = ~f{i^f^f}
	slaln2_ = ~f{i^i^i^i^f^f^f^i^f^f^f^i^f^f^f^i^f^f^i}
	slals0_ = ~f{i^i^i^i^i^i^f^i^f^i^i^i^i^i^f^i^f^f^f^f^i^f^f^f^i}
	slalsa_ = ~f{i^i^i^i^i^f^i^f^i^f^i^f^i^f^f^f^f^i^i^i^i^f^f^f^f^i^i}
	slalsd_ = ~f{i^c^i^i^i^f^f^f^i^f^i^f^i^i}
	slamc1_ = ~f{i^i^i^i^i}
	slamc2_ = ~f{i^i^i^i^f^i^f^i^f}
	slamc3_ = ~f{d^f^f}
	slamc4_ = ~f{i^i^f^i}
	slamc5_ = ~f{i^i^i^i^i^i^f}
	slamch_ = ~f{d^c}
	slamrg_ = ~f{i^i^i^f^i^i^i}
	slaneg_ = ~f{i^i^f^f^f^f^i}
	slangb_ = ~f{d^c^i^i^i^f^i^f}
	slange_ = ~f{d^c^i^i^f^i^f}
	slangt_ = ~f{d^c^i^f^f^f}
	slanhs_ = ~f{d^c^i^f^i^f}
	slansb_ = ~f{d^c^c^i^i^f^i^f}
	slansf_ = ~f{d^c^c^c^i^f^f}
	slansp_ = ~f{d^c^c^i^f^f}
	slanst_ = ~f{d^c^i^f^f}
	slansy_ = ~f{d^c^c^i^f^i^f}
	slantb_ = ~f{d^c^c^c^i^i^f^i^f}
	slantp_ = ~f{d^c^c^c^i^f^f}
	slantr_ = ~f{d^c^c^c^i^i^f^i^f}
	slanv2_ = ~f{i^f^f^f^f^f^f^f^f^f^f}
	slapll_ = ~f{i^i^f^i^f^i^f}
	slapmt_ = ~f{i^i^i^i^f^i^i}
	slapy2_ = ~f{d^f^f}
	slapy3_ = ~f{d^f^f^f}
	slaqgb_ = ~f{i^i^i^i^i^f^i^f^f^f^f^f^c}
	slaqge_ = ~f{i^i^i^f^i^f^f^f^f^f^c}
	slaqp2_ = ~f{i^i^i^i^f^i^i^f^f^f^f}
	slaqps_ = ~f{i^i^i^i^i^i^f^i^i^f^f^f^f^f^i}
	slaqr0_ = ~f{i^i^i^i^i^i^f^i^f^f^i^i^f^i^f^i^i}
	slaqr1_ = ~f{i^i^f^i^f^f^f^f^f}
	slaqr2_ = ~f{i^i^i^i^i^i^i^f^i^i^i^f^i^i^i^f^f^f^i^i^f^i^i^f^i^f^i}
	slaqr3_ = ~f{i^i^i^i^i^i^i^f^i^i^i^f^i^i^i^f^f^f^i^i^f^i^i^f^i^f^i}
	slaqr4_ = ~f{i^i^i^i^i^i^f^i^f^f^i^i^f^i^f^i^i}
	slaqr5_ = ~f{i^i^i^i^i^i^i^i^f^f^f^i^i^i^f^i^f^i^f^i^i^f^i^i^f^i}
	slaqsb_ = ~f{i^c^i^i^f^i^f^f^f^c}
	slaqsp_ = ~f{i^c^i^f^f^f^f^c}
	slaqsy_ = ~f{i^c^i^f^i^f^f^f^c}
	slaqtr_ = ~f{i^i^i^i^f^i^f^f^f^f^f^i}
	slar1v_ = ~f{i^i^i^i^f^f^f^f^f^f^f^f^i^i^f^f^i^i^f^f^f^f}
	slar2v_ = ~f{i^i^f^f^f^i^f^f^i}
	slarf_ = ~f{i^c^i^i^f^i^f^f^i^f}
	slarfb_ = ~f{i^c^c^c^c^i^i^i^f^i^f^i^f^i^f^i}
	slarfg_ = ~f{i^i^f^f^i^f}
	slarfp_ = ~f{i^i^f^f^i^f}
	slarft_ = ~f{i^c^c^i^i^f^i^f^f^i}
	slarfx_ = ~f{i^c^i^i^f^f^f^i^f}
	slargv_ = ~f{i^i^f^i^f^i^f^i}
	slarnv_ = ~f{i^i^i^i^f}
	slarra_ = ~f{i^i^f^f^f^f^f^i^i^i}
	slarrb_ = ~f{i^i^f^f^i^i^f^f^i^f^f^f^f^i^f^f^i^i}
	slarrc_ = ~f{i^c^i^f^f^f^f^f^i^i^i^i}
	slarrd_ = ~f{i^c^c^i^f^f^i^i^f^f^f^f^f^f^i^i^i^f^f^f^f^i^i^f^i^i}
	slarre_ = ~f{i^c^i^f^f^i^i^f^f^f^f^f^f^i^i^i^f^f^f^i^i^f^f^f^i^i}
	slarrf_ = ~f{i^i^f^f^f^i^i^f^f^f^f^f^f^f^f^f^f^f^i}
	slarrj_ = ~f{i^i^f^f^i^i^f^i^f^f^f^i^f^f^i}
	slarrk_ = ~f{i^i^i^f^f^f^f^f^f^f^f^i}
	slarrr_ = ~f{i^i^f^f^i}
	slarrv_ = ~f{i^i^f^f^f^f^f^i^i^i^i^f^f^f^f^f^f^i^i^f^f^i^i^f^i^i}
	slarscl2_ = ~f{i^i^i^f^f^i}
	slartg_ = ~f{i^f^f^f^f^f}
	slartv_ = ~f{i^i^f^i^f^i^f^f^i}
	slaruv_ = ~f{i^i^i^f}
	slarz_ = ~f{i^c^i^i^i^f^i^f^f^i^f}
	slarzb_ = ~f{i^c^c^c^c^i^i^i^i^f^i^f^i^f^i^f^i}
	slarzt_ = ~f{i^c^c^i^i^f^i^f^f^i}
	slas2_ = ~f{i^f^f^f^f^f}
	slascl2_ = ~f{i^i^i^f^f^i}
	slascl_ = ~f{i^c^i^i^f^f^i^i^f^i^i}
	slasd0_ = ~f{i^i^i^f^f^f^i^f^i^i^i^f^i}
	slasd1_ = ~f{i^i^i^i^f^f^f^f^i^f^i^i^i^f^i}
	slasd2_ = ~f{i^i^i^i^i^f^f^f^f^f^i^f^i^f^f^i^f^i^i^i^i^i^i^i}
	slasd3_ = ~f{i^i^i^i^i^f^f^i^f^f^i^f^i^f^i^f^i^i^i^f^i}
	slasd4_ = ~f{i^i^i^f^f^f^f^f^f^i}
	slasd5_ = ~f{i^i^f^f^f^f^f^f}
	slasd6_ = ~f{i^i^i^i^i^f^f^f^f^f^i^i^i^i^i^f^i^f^f^f^f^i^f^f^f^i^i}
	slasd7_ = ~f{i^i^i^i^i^i^f^f^f^f^f^f^f^f^f^f^i^i^i^i^i^i^i^f^i^f^f^i}
	slasd8_ = ~f{i^i^i^f^f^f^f^f^f^i^f^f^i}
	slasda_ = ~f{i^i^i^i^i^f^f^f^i^f^i^f^f^f^f^i^i^i^i^f^f^f^f^i^i}
	slasdq_ = ~f{i^c^i^i^i^i^i^f^f^f^i^f^i^f^i^f^i}
	slasdt_ = ~f{i^i^i^i^i^i^i^i}
	slaset_ = ~f{i^c^i^i^f^f^f^i}
	slasq1_ = ~f{i^i^f^f^f^i}
	slasq2_ = ~f{i^i^f^i}
	slasq3_ = ~f{i^i^i^f^i^f^f^f^f^i^i^i^i^i^f^f^f^f^f^f^f}
	slasq4_ = ~f{i^i^i^f^i^i^f^f^f^f^f^f^f^i^f}
	slasq5_ = ~f{i^i^i^f^i^f^f^f^f^f^f^f^i}
	slasq6_ = ~f{i^i^i^f^i^f^f^f^f^f^f}
	slasr_ = ~f{i^c^c^c^i^i^f^f^f^i}
	slasrt_ = ~f{i^c^i^f^i}
	slassq_ = ~f{i^i^f^i^f^f}
	slasv2_ = ~f{i^f^f^f^f^f^f^f^f^f}
	slaswp_ = ~f{i^i^f^i^i^i^i^i}
	slasy2_ = ~f{i^i^i^i^i^i^f^i^f^i^f^i^f^f^i^f^i}
	slasyf_ = ~f{i^c^i^i^i^f^i^i^f^i^i}
	slatbs_ = ~f{i^c^c^c^c^i^i^f^i^f^f^f^i}
	slatdf_ = ~f{i^i^i^f^i^f^f^f^i^i}
	slatps_ = ~f{i^c^c^c^c^i^f^f^f^f^i}
	slatrd_ = ~f{i^c^i^i^f^i^f^f^f^i}
	slatrs_ = ~f{i^c^c^c^c^i^f^i^f^f^f^i}
	slatrz_ = ~f{i^i^i^i^f^i^f^f}
	slatzm_ = ~f{i^c^i^i^f^i^f^f^f^i^f}
	slauu2_ = ~f{i^c^i^f^i^i}
	slauum_ = ~f{i^c^i^f^i^i}
	smaxloc_ = ~f{i^f^i}
	sopgtr_ = ~f{i^c^i^f^f^f^i^f^i}
	sopmtr_ = ~f{i^c^c^c^i^i^f^f^f^i^f^i}
	sorg2l_ = ~f{i^i^i^i^f^i^f^f^i}
	sorg2r_ = ~f{i^i^i^i^f^i^f^f^i}
	sorgbr_ = ~f{i^c^i^i^i^f^i^f^f^i^i}
	sorghr_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgl2_ = ~f{i^i^i^i^f^i^f^f^i}
	sorglq_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgql_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgqr_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgr2_ = ~f{i^i^i^i^f^i^f^f^i}
	sorgrq_ = ~f{i^i^i^i^f^i^f^f^i^i}
	sorgtr_ = ~f{i^c^i^f^i^f^f^i^i}
	sorm2l_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sorm2r_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sormbr_ = ~f{i^c^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormhr_ = ~f{i^c^c^i^i^i^i^f^i^f^f^i^f^i^i}
	sorml2_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sormlq_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormql_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormqr_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormr2_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i}
	sormr3_ = ~f{i^c^c^i^i^i^i^f^i^f^f^i^f^i}
	sormrq_ = ~f{i^c^c^i^i^i^f^i^f^f^i^f^i^i}
	sormrz_ = ~f{i^c^c^i^i^i^i^f^i^f^f^i^f^i^i}
	sormtr_ = ~f{i^c^c^c^i^i^f^i^f^f^i^f^i^i}
	spbcon_ = ~f{i^c^i^i^f^i^f^f^f^i^i}
	spbequ_ = ~f{i^c^i^i^f^i^f^f^f^i}
	spbrfs_ = ~f{i^c^i^i^i^f^i^f^i^f^i^f^i^f^f^f^i^i}
	spbstf_ = ~f{i^c^i^i^f^i^i}
	spbsv_ = ~f{i^c^i^i^i^f^i^f^i^i}
	spbsvx_ = ~f{i^c^c^i^i^i^f^i^f^i^c^f^f^i^f^i^f^f^f^f^i^i}
	spbtf2_ = ~f{i^c^i^i^f^i^i}
	spbtrf_ = ~f{i^c^i^i^f^i^i}
	spbtrs_ = ~f{i^c^i^i^i^f^i^f^i^i}
	spftrf_ = ~f{i^c^c^i^f^i}
	spftri_ = ~f{i^c^c^i^f^i}
	spftrs_ = ~f{i^c^c^i^i^f^f^i^i}
	spocon_ = ~f{i^c^i^f^i^f^f^f^i^i}
	spoequ_ = ~f{i^i^f^i^f^f^f^i}
	spoequb_ = ~f{i^i^f^i^f^f^f^i}
	sporfs_ = ~f{i^c^i^i^f^i^f^i^f^i^f^i^f^f^f^i^i}
	sposv_ = ~f{i^c^i^i^f^i^f^i^i}
	sposvx_ = ~f{i^c^c^i^i^f^i^f^i^c^f^f^i^f^i^f^f^f^f^i^i}
	spotf2_ = ~f{i^c^i^f^i^i}
	spotrf_ = ~f{i^c^i^f^i^i}
	spotri_ = ~f{i^c^i^f^i^i}
	spotrs_ = ~f{i^c^i^i^f^i^f^i^i}
	sppcon_ = ~f{i^c^i^f^f^f^f^i^i}
	sppequ_ = ~f{i^c^i^f^f^f^f^i}
	spprfs_ = ~f{i^c^i^i^f^f^f^i^f^i^f^f^f^i^i}
	sppsv_ = ~f{i^c^i^i^f^f^i^i}
	sppsvx_ = ~f{i^c^c^i^i^f^f^c^f^f^i^f^i^f^f^f^f^i^i}
	spptrf_ = ~f{i^c^i^f^i}
	spptri_ = ~f{i^c^i^f^i}
	spptrs_ = ~f{i^c^i^i^f^f^i^i}
	spstf2_ = ~f{i^c^i^f^i^i^i^f^f^i}
	spstrf_ = ~f{i^c^i^f^i^i^i^f^f^i}
	sptcon_ = ~f{i^i^f^f^f^f^f^i}
	spteqr_ = ~f{i^c^i^f^f^f^i^f^i}
	sptrfs_ = ~f{i^i^i^f^f^f^f^f^i^f^i^f^f^f^i}
	sptsv_ = ~f{i^i^i^f^f^f^i^i}
	sptsvx_ = ~f{i^c^i^i^f^f^f^f^f^i^f^i^f^f^f^f^i}
	spttrf_ = ~f{i^i^f^f^i}
	spttrs_ = ~f{i^i^i^f^f^f^i^i}
	sptts2_ = ~f{i^i^i^f^f^f^i}
	srscl_ = ~f{i^i^f^f^i}
	ssbev_ = ~f{i^c^c^i^i^f^i^f^f^i^f^i}
	ssbevd_ = ~f{i^c^c^i^i^f^i^f^f^i^f^i^i^i^i}
	ssbevx_ = ~f{i^c^c^c^i^i^f^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssbgst_ = ~f{i^c^c^i^i^i^f^i^f^i^f^i^f^i}
	ssbgv_ = ~f{i^c^c^i^i^i^f^i^f^i^f^f^i^f^i}
	ssbgvd_ = ~f{i^c^c^i^i^i^f^i^f^i^f^f^i^f^i^i^i^i}
	ssbgvx_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssbtrd_ = ~f{i^c^c^i^i^f^i^f^f^f^i^f^i}
	ssfrk_ = ~f{i^c^c^c^i^i^f^f^i^f^f}
	sspcon_ = ~f{i^c^i^f^i^f^f^f^i^i}
	sspev_ = ~f{i^c^c^i^f^f^f^i^f^i}
	sspevd_ = ~f{i^c^c^i^f^f^f^i^f^i^i^i^i}
	sspevx_ = ~f{i^c^c^c^i^f^f^f^i^i^f^i^f^f^i^f^i^i^i}
	sspgst_ = ~f{i^i^c^i^f^f^i}
	sspgv_ = ~f{i^i^c^c^i^f^f^f^f^i^f^i}
	sspgvd_ = ~f{i^i^c^c^i^f^f^f^f^i^f^i^i^i^i}
	sspgvx_ = ~f{i^i^c^c^c^i^f^f^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssprfs_ = ~f{i^c^i^i^f^f^i^f^i^f^i^f^f^f^i^i}
	sspsv_ = ~f{i^c^i^i^f^i^f^i^i}
	sspsvx_ = ~f{i^c^c^i^i^f^f^i^f^i^f^i^f^f^f^f^i^i}
	ssptrd_ = ~f{i^c^i^f^f^f^f^i}
	ssptrf_ = ~f{i^c^i^f^i^i}
	ssptri_ = ~f{i^c^i^f^i^f^i}
	ssptrs_ = ~f{i^c^i^i^f^i^f^i^i}
	sstebz_ = ~f{i^c^c^i^f^f^i^i^f^f^f^i^i^f^i^i^f^i^i}
	sstedc_ = ~f{i^c^i^f^f^f^i^f^i^i^i^i}
	sstegr_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^f^i^i^f^i^i^i^i}
	sstein_ = ~f{i^i^f^f^i^f^i^i^f^i^f^i^i^i}
	sstemr_ = ~f{i^c^c^i^f^f^f^f^i^i^i^f^f^i^i^i^i^f^i^i^i^i}
	ssteqr_ = ~f{i^c^i^f^f^f^i^f^i}
	ssterf_ = ~f{i^i^f^f^i}
	sstev_ = ~f{i^c^i^f^f^f^i^f^i}
	sstevd_ = ~f{i^c^i^f^f^f^i^f^i^i^i^i}
	sstevr_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^f^i^i^f^i^i^i^i}
	sstevx_ = ~f{i^c^c^i^f^f^f^f^i^i^f^i^f^f^i^f^i^i^i}
	ssycon_ = ~f{i^c^i^f^i^i^f^f^f^i^i}
	ssyequb_ = ~f{i^c^i^f^i^f^f^f^f^i}
	ssyev_ = ~f{i^c^c^i^f^i^f^f^i^i}
	ssyevd_ = ~f{i^c^c^i^f^i^f^f^i^i^i^i}
	ssyevr_ = ~f{i^c^c^c^i^f^i^f^f^i^i^f^i^f^f^i^i^f^i^i^i^i}
	ssyevx_ = ~f{i^c^c^c^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i^i}
	ssygs2_ = ~f{i^i^c^i^f^i^f^i^i}
	ssygst_ = ~f{i^i^c^i^f^i^f^i^i}
	ssygv_ = ~f{i^i^c^c^i^f^i^f^i^f^f^i^i}
	ssygvd_ = ~f{i^i^c^c^i^f^i^f^i^f^f^i^i^i^i}
	ssygvx_ = ~f{i^i^c^c^c^i^f^i^f^i^f^f^i^i^f^i^f^f^i^f^i^i^i^i}
	ssyrfs_ = ~f{i^c^i^i^f^i^f^i^i^f^i^f^i^f^f^f^i^i}
	ssysv_ = ~f{i^c^i^i^f^i^i^f^i^f^i^i}
	ssysvx_ = ~f{i^c^c^i^i^f^i^f^i^i^f^i^f^i^f^f^f^f^i^i^i}
	ssytd2_ = ~f{i^c^i^f^i^f^f^f^i}
	ssytf2_ = ~f{i^c^i^f^i^i^i}
	ssytrd_ = ~f{i^c^i^f^i^f^f^f^f^i^i}
	ssytrf_ = ~f{i^c^i^f^i^i^f^i^i}
	ssytri_ = ~f{i^c^i^f^i^i^f^i}
	ssytrs_ = ~f{i^c^i^i^f^i^i^f^i^i}
	stbcon_ = ~f{i^c^c^c^i^i^f^i^f^f^i^i}
	stbrfs_ = ~f{i^c^c^c^i^i^i^f^i^f^i^f^i^f^f^f^i^i}
	stbtrs_ = ~f{i^c^c^c^i^i^i^f^i^f^i^i}
	stfsm_ = ~f{i^c^c^c^c^c^i^i^f^f^f^i}
	stftri_ = ~f{i^c^c^c^i^f^i}
	stfttp_ = ~f{i^c^c^i^f^f^i}
	stfttr_ = ~f{i^c^c^i^f^f^i^i}
	stgevc_ = ~f{i^c^c^i^i^f^i^f^i^f^i^f^i^i^i^f^i}
	stgex2_ = ~f{i^i^i^i^f^i^f^i^f^i^f^i^i^i^i^f^i^i}
	stgexc_ = ~f{i^i^i^i^f^i^f^i^f^i^f^i^i^i^f^i^i}
	stgsen_ = ~f{i^i^i^i^i^i^f^i^f^i^f^f^f^f^i^f^i^i^f^f^f^f^i^i^i^i}
	stgsja_ = ~f{i^c^c^c^i^i^i^i^i^f^i^f^i^f^f^f^f^f^i^f^i^f^i^f^i^i}
	stgsna_ = ~f{i^c^c^i^i^f^i^f^i^f^i^f^i^f^f^i^i^f^i^i^i}
	stgsy2_ = ~f{i^c^i^i^i^f^i^f^i^f^i^f^i^f^i^f^i^f^f^f^i^i^i}
	stgsyl_ = ~f{i^c^i^i^i^f^i^f^i^f^i^f^i^f^i^f^i^f^f^f^i^i^i}
	stpcon_ = ~f{i^c^c^c^i^f^f^f^i^i}
	stprfs_ = ~f{i^c^c^c^i^i^f^f^i^f^i^f^f^f^i^i}
	stptri_ = ~f{i^c^c^i^f^i}
	stptrs_ = ~f{i^c^c^c^i^i^f^f^i^i}
	stpttf_ = ~f{i^c^c^i^f^f^i}
	stpttr_ = ~f{i^c^i^f^f^i^i}
	strcon_ = ~f{i^c^c^c^i^f^i^f^f^i^i}
	strevc_ = ~f{i^c^c^i^i^f^i^f^i^f^i^i^i^f^i}
	strexc_ = ~f{i^c^i^f^i^f^i^i^i^f^i}
	strrfs_ = ~f{i^c^c^c^i^i^f^i^f^i^f^i^f^f^f^i^i}
	strsen_ = ~f{i^c^c^i^i^f^i^f^i^f^f^i^f^f^f^i^i^i^i}
	strsna_ = ~f{i^c^c^i^i^f^i^f^i^f^i^f^f^i^i^f^i^i^i}
	strsyl_ = ~f{i^c^c^i^i^i^f^i^f^i^f^i^f^i}
	strti2_ = ~f{i^c^c^i^f^i^i}
	strtri_ = ~f{i^c^c^i^f^i^i}
	strtrs_ = ~f{i^c^c^c^i^i^f^i^f^i^i}
	strttf_ = ~f{i^c^c^i^f^i^f^i}
	strttp_ = ~f{i^c^i^f^i^f^i}
	stzrqf_ = ~f{i^i^i^f^i^f^i}
	stzrzf_ = ~f{i^i^i^f^i^f^f^i^i}
	zbdsqr_ = ~f{i^c^i^i^i^i^d^d^v^i^v^i^v^i^d^i}
	zcgesv_ = ~f{i^i^i^v^i^i^v^i^v^i^v^v^d^i^i}
	zcposv_ = ~f{i^c^i^i^v^i^v^i^v^i^v^v^d^i^i}
	zdrscl_ = ~f{i^i^d^v^i}
	zgbbrd_ = ~f{i^c^i^i^i^i^i^v^i^d^d^v^i^v^i^v^i^v^d^i}
	zgbcon_ = ~f{i^c^i^i^i^v^i^i^d^d^v^d^i}
	zgbequ_ = ~f{i^i^i^i^i^v^i^d^d^d^d^d^i}
	zgbequb_ = ~f{i^i^i^i^i^v^i^d^d^d^d^d^i}
	zgbrfs_ = ~f{i^c^i^i^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zgbsv_ = ~f{i^i^i^i^i^v^i^i^v^i^i}
	zgbsvx_ = ~f{i^c^c^i^i^i^i^v^i^v^i^i^c^d^d^v^i^v^i^d^d^d^v^d^i}
	zgbtf2_ = ~f{i^i^i^i^i^v^i^i^i}
	zgbtrf_ = ~f{i^i^i^i^i^v^i^i^i}
	zgbtrs_ = ~f{i^c^i^i^i^i^v^i^i^v^i^i}
	zgebak_ = ~f{i^c^c^i^i^i^d^i^v^i^i}
	zgebal_ = ~f{i^c^i^v^i^i^i^d^i}
	zgebd2_ = ~f{i^i^i^v^i^d^d^v^v^v^i}
	zgebrd_ = ~f{i^i^i^v^i^d^d^v^v^v^i^i}
	zgecon_ = ~f{i^c^i^v^i^d^d^v^d^i}
	zgeequ_ = ~f{i^i^i^v^i^d^d^d^d^d^i}
	zgeequb_ = ~f{i^i^i^v^i^d^d^d^d^d^i}
	zgees_ = ~f{i^c^c^?^i^v^i^i^v^v^i^v^i^d^i^i}
	zgeesx_ = ~f{i^c^c^?^c^i^v^i^i^v^v^i^d^d^v^i^d^i^i}
	zgeev_ = ~f{i^c^c^i^v^i^v^v^i^v^i^v^i^d^i}
	zgeevx_ = ~f{i^c^c^c^c^i^v^i^v^v^i^v^i^i^i^d^d^d^d^v^i^d^i}
	zgegs_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zgegv_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zgehd2_ = ~f{i^i^i^i^v^i^v^v^i}
	zgehrd_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zgelq2_ = ~f{i^i^i^v^i^v^v^i}
	zgelqf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgels_ = ~f{i^c^i^i^i^v^i^v^i^v^i^i}
	zgelsd_ = ~f{i^i^i^i^v^i^v^i^d^d^i^v^i^d^i^i}
	zgelss_ = ~f{i^i^i^i^v^i^v^i^d^d^i^v^i^d^i}
	zgelsx_ = ~f{i^i^i^i^v^i^v^i^i^d^i^v^d^i}
	zgelsy_ = ~f{i^i^i^i^v^i^v^i^i^d^i^v^i^d^i}
	zgeql2_ = ~f{i^i^i^v^i^v^v^i}
	zgeqlf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgeqp3_ = ~f{i^i^i^v^i^i^v^v^i^d^i}
	zgeqpf_ = ~f{i^i^i^v^i^i^v^v^d^i}
	zgeqr2_ = ~f{i^i^i^v^i^v^v^i}
	zgeqrf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgerfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zgerq2_ = ~f{i^i^i^v^i^v^v^i}
	zgerqf_ = ~f{i^i^i^v^i^v^v^i^i}
	zgesc2_ = ~f{i^i^v^i^v^i^i^d}
	zgesdd_ = ~f{i^c^i^i^v^i^d^v^i^v^i^v^i^d^i^i}
	zgesv_ = ~f{i^i^i^v^i^i^v^i^i}
	zgesvd_ = ~f{i^c^c^i^i^v^i^d^v^i^v^i^v^i^d^i}
	zgesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^c^d^d^v^i^v^i^d^d^d^v^d^i}
	zgetc2_ = ~f{i^i^v^i^i^i^i}
	zgetf2_ = ~f{i^i^i^v^i^i^i}
	zgetrf_ = ~f{i^i^i^v^i^i^i}
	zgetri_ = ~f{i^i^v^i^i^v^i^i}
	zgetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	zggbak_ = ~f{i^c^c^i^i^i^d^d^i^v^i^i}
	zggbal_ = ~f{i^c^i^v^i^v^i^i^i^d^d^d^i}
	zgges_ = ~f{i^c^c^c^?^i^v^i^v^i^i^v^v^v^i^v^i^v^i^d^i^i}
	zggesx_ = ~f{i^c^c^c^?^c^i^v^i^v^i^i^v^v^v^i^v^i^d^d^v^i^d^i^i^i^i}
	zggev_ = ~f{i^c^c^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zggevx_ = ~f{i^c^c^c^c^i^v^i^v^i^v^v^v^i^v^i^i^i^d^d^d^d^d^d^v^i^d^i^i^i}
	zggglm_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	zgghrd_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^i^i}
	zgglse_ = ~f{i^i^i^i^v^i^v^i^v^v^v^v^i^i}
	zggqrf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	zggrqf_ = ~f{i^i^i^i^v^i^v^v^i^v^v^i^i}
	zggsvd_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^d^d^v^i^v^i^v^i^v^d^i^i}
	zggsvp_ = ~f{i^c^c^c^i^i^i^v^i^v^i^d^d^i^i^v^i^v^i^v^i^i^d^v^v^i}
	zgtcon_ = ~f{i^c^i^v^v^v^v^i^d^d^v^i}
	zgtrfs_ = ~f{i^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^d^d^v^d^i}
	zgtsv_ = ~f{i^i^i^v^v^v^v^i^i}
	zgtsvx_ = ~f{i^c^c^i^i^v^v^v^v^v^v^v^i^v^i^v^i^d^d^d^v^d^i}
	zgttrf_ = ~f{i^i^v^v^v^v^i^i}
	zgttrs_ = ~f{i^c^i^i^v^v^v^v^i^v^i^i}
	zgtts2_ = ~f{i^i^i^i^v^v^v^v^i^v^i}
	zhbev_ = ~f{i^c^c^i^i^v^i^d^v^i^v^d^i}
	zhbevd_ = ~f{i^c^c^i^i^v^i^d^v^i^v^i^d^i^i^i^i}
	zhbevx_ = ~f{i^c^c^c^i^i^v^i^v^i^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhbgst_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^v^d^i}
	zhbgv_ = ~f{i^c^c^i^i^i^v^i^v^i^d^v^i^v^d^i}
	zhbgvd_ = ~f{i^c^c^i^i^i^v^i^v^i^d^v^i^v^i^d^i^i^i^i}
	zhbgvx_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhbtrd_ = ~f{i^c^c^i^i^v^i^d^d^v^i^v^i}
	zhecon_ = ~f{i^c^i^v^i^i^d^d^v^i}
	zheequb_ = ~f{i^c^i^v^i^d^d^d^v^i}
	zheev_ = ~f{i^c^c^i^v^i^d^v^i^d^i}
	zheevd_ = ~f{i^c^c^i^v^i^d^v^i^d^i^i^i^i}
	zheevr_ = ~f{i^c^c^c^i^v^i^d^d^i^i^d^i^d^v^i^i^v^i^d^i^i^i^i}
	zheevx_ = ~f{i^c^c^c^i^v^i^d^d^i^i^d^i^d^v^i^v^i^d^i^i^i}
	zhegs2_ = ~f{i^i^c^i^v^i^v^i^i}
	zhegst_ = ~f{i^i^c^i^v^i^v^i^i}
	zhegv_ = ~f{i^i^c^c^i^v^i^v^i^d^v^i^d^i}
	zhegvd_ = ~f{i^i^c^c^i^v^i^v^i^d^v^i^d^i^i^i^i}
	zhegvx_ = ~f{i^i^c^c^c^i^v^i^v^i^d^d^i^i^d^i^d^v^i^v^i^d^i^i^i}
	zherfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zhesv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	zhesvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^d^d^d^v^i^d^i}
	zhetd2_ = ~f{i^c^i^v^i^d^d^v^i}
	zhetf2_ = ~f{i^c^i^v^i^i^i}
	zhetrd_ = ~f{i^c^i^v^i^d^d^v^v^i^i}
	zhetrf_ = ~f{i^c^i^v^i^i^v^i^i}
	zhetri_ = ~f{i^c^i^v^i^i^v^i}
	zhetrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	zhfrk_ = ~f{i^c^c^c^i^i^d^v^i^d^v}
	zhgeqz_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^v^v^i^v^i^v^i^d^i}
	zhpcon_ = ~f{i^c^i^v^i^d^d^v^i}
	zhpev_ = ~f{i^c^c^i^v^d^v^i^v^d^i}
	zhpevd_ = ~f{i^c^c^i^v^d^v^i^v^i^d^i^i^i^i}
	zhpevx_ = ~f{i^c^c^c^i^v^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhpgst_ = ~f{i^i^c^i^v^v^i}
	zhpgv_ = ~f{i^i^c^c^i^v^v^d^v^i^v^d^i}
	zhpgvd_ = ~f{i^i^c^c^i^v^v^d^v^i^v^i^d^i^i^i^i}
	zhpgvx_ = ~f{i^i^c^c^c^i^v^v^d^d^i^i^d^i^d^v^i^v^d^i^i^i}
	zhprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^d^d^v^d^i}
	zhpsv_ = ~f{i^c^i^i^v^i^v^i^i}
	zhpsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^d^d^d^v^d^i}
	zhptrd_ = ~f{i^c^i^v^d^d^v^i}
	zhptrf_ = ~f{i^c^i^v^i^i}
	zhptri_ = ~f{i^c^i^v^i^v^i}
	zhptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	zhsein_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i^i^v^d^i^i^i}
	zhseqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zlabrd_ = ~f{i^i^i^i^v^i^d^d^v^v^v^i^v^i}
	zlacgv_ = ~f{i^i^v^i}
	zlacn2_ = ~f{i^i^v^v^d^i^i}
	zlacon_ = ~f{i^i^v^v^d^i}
	zlacp2_ = ~f{i^c^i^i^d^i^v^i}
	zlacpy_ = ~f{i^c^i^i^v^i^v^i}
	zlacrm_ = ~f{i^i^i^v^i^d^i^v^i^d}
	zlacrt_ = ~f{i^i^v^i^v^i^v^v}
	zladiv_ = ~f{v^v^v^v}
	zlaed0_ = ~f{i^i^i^d^d^v^i^v^i^d^i^i}
	zlaed7_ = ~f{i^i^i^i^i^i^i^d^v^i^d^i^d^i^i^i^i^i^d^v^d^i^i}
	zlaed8_ = ~f{i^i^i^i^v^i^d^d^i^d^d^v^i^d^i^i^i^i^i^i^d^i}
	zlaein_ = ~f{i^i^i^i^v^i^v^v^v^i^d^d^d^i}
	zlaesy_ = ~f{i^v^v^v^v^v^v^v^v}
	zlaev2_ = ~f{i^v^v^v^d^d^d^v}
	zlag2c_ = ~f{i^i^i^v^i^v^i^i}
	zlags2_ = ~f{i^i^d^v^d^d^v^d^d^v^d^v^d^v}
	zlagtm_ = ~f{i^c^i^i^d^v^v^v^v^i^d^v^i}
	zlahef_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	zlahqr_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^i}
	zlahr2_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	zlahrd_ = ~f{i^i^i^i^v^i^v^v^i^v^i}
	zlaic1_ = ~f{i^i^i^v^d^v^v^d^v^v}
	zlals0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^i^i^i^d^i^d^d^d^d^i^d^d^d^i}
	zlalsa_ = ~f{i^i^i^i^i^v^i^v^i^d^i^d^i^d^d^d^d^i^i^i^i^d^d^d^d^i^i}
	zlalsd_ = ~f{i^c^i^i^i^d^d^v^i^d^i^v^d^i^i}
	zlangb_ = ~f{d^c^i^i^i^v^i^d}
	zlange_ = ~f{d^c^i^i^v^i^d}
	zlangt_ = ~f{d^c^i^v^v^v}
	zlanhb_ = ~f{d^c^c^i^i^v^i^d}
	zlanhe_ = ~f{d^c^c^i^v^i^d}
	zlanhf_ = ~f{d^c^c^c^i^v^d}
	zlanhp_ = ~f{d^c^c^i^v^d}
	zlanhs_ = ~f{d^c^i^v^i^d}
	zlanht_ = ~f{d^c^i^d^v}
	zlansb_ = ~f{d^c^c^i^i^v^i^d}
	zlansp_ = ~f{d^c^c^i^v^d}
	zlansy_ = ~f{d^c^c^i^v^i^d}
	zlantb_ = ~f{d^c^c^c^i^i^v^i^d}
	zlantp_ = ~f{d^c^c^c^i^v^d}
	zlantr_ = ~f{d^c^c^c^i^i^v^i^d}
	zlapll_ = ~f{i^i^v^i^v^i^d}
	zlapmt_ = ~f{i^i^i^i^v^i^i}
	zlaqgb_ = ~f{i^i^i^i^i^v^i^d^d^d^d^d^c}
	zlaqge_ = ~f{i^i^i^v^i^d^d^d^d^d^c}
	zlaqhb_ = ~f{i^c^i^i^v^i^d^d^d^c}
	zlaqhe_ = ~f{i^c^i^v^i^d^d^d^c}
	zlaqhp_ = ~f{i^c^i^v^d^d^d^c}
	zlaqp2_ = ~f{i^i^i^i^v^i^i^v^d^d^v}
	zlaqps_ = ~f{i^i^i^i^i^i^v^i^i^v^d^d^v^v^i}
	zlaqr0_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	zlaqr1_ = ~f{i^i^v^i^v^v^v}
	zlaqr2_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	zlaqr3_ = ~f{i^i^i^i^i^i^i^v^i^i^i^v^i^i^i^v^v^i^i^v^i^i^v^i^v^i}
	zlaqr4_ = ~f{i^i^i^i^i^i^v^i^v^i^i^v^i^v^i^i}
	zlaqr5_ = ~f{i^i^i^i^i^i^i^i^v^v^i^i^i^v^i^v^i^v^i^i^v^i^i^v^i}
	zlaqsb_ = ~f{i^c^i^i^v^i^d^d^d^c}
	zlaqsp_ = ~f{i^c^i^v^d^d^d^c}
	zlaqsy_ = ~f{i^c^i^v^i^d^d^d^c}
	zlar1v_ = ~f{i^i^i^i^d^d^d^d^d^d^d^v^i^i^d^d^i^i^d^d^d^d}
	zlar2v_ = ~f{i^i^v^v^v^i^d^v^i}
	zlarcm_ = ~f{i^i^i^d^i^v^i^v^i^d}
	zlarf_ = ~f{i^c^i^i^v^i^v^v^i^v}
	zlarfb_ = ~f{i^c^c^c^c^i^i^i^v^i^v^i^v^i^v^i}
	zlarfg_ = ~f{i^i^v^v^i^v}
	zlarfp_ = ~f{i^i^v^v^i^v}
	zlarft_ = ~f{i^c^c^i^i^v^i^v^v^i}
	zlarfx_ = ~f{i^c^i^i^v^v^v^i^v}
	zlargv_ = ~f{i^i^v^i^v^i^d^i}
	zlarnv_ = ~f{i^i^i^i^v}
	zlarrv_ = ~f{i^i^d^d^d^d^d^i^i^i^i^d^d^d^d^d^d^i^i^d^v^i^i^d^i^i}
	zlarscl2_ = ~f{i^i^i^d^v^i}
	zlartg_ = ~f{i^v^v^d^v^v}
	zlartv_ = ~f{i^i^v^i^v^i^d^v^i}
	zlarz_ = ~f{i^c^i^i^i^v^i^v^v^i^v}
	zlarzb_ = ~f{i^c^c^c^c^i^i^i^i^v^i^v^i^v^i^v^i}
	zlarzt_ = ~f{i^c^c^i^i^v^i^v^v^i}
	zlascl2_ = ~f{i^i^i^d^v^i}
	zlascl_ = ~f{i^c^i^i^d^d^i^i^v^i^i}
	zlaset_ = ~f{i^c^i^i^v^v^v^i}
	zlasr_ = ~f{i^c^c^c^i^i^d^d^v^i}
	zlassq_ = ~f{i^i^v^i^d^d}
	zlaswp_ = ~f{i^i^v^i^i^i^i^i}
	zlasyf_ = ~f{i^c^i^i^i^v^i^i^v^i^i}
	zlat2c_ = ~f{i^c^i^v^i^v^i^i}
	zlatbs_ = ~f{i^c^c^c^c^i^i^v^i^v^d^d^i}
	zlatdf_ = ~f{i^i^i^v^i^v^d^d^i^i}
	zlatps_ = ~f{i^c^c^c^c^i^v^v^d^d^i}
	zlatrd_ = ~f{i^c^i^i^v^i^d^v^v^i}
	zlatrs_ = ~f{i^c^c^c^c^i^v^i^v^d^d^i}
	zlatrz_ = ~f{i^i^i^i^v^i^v^v}
	zlatzm_ = ~f{i^c^i^i^v^i^v^v^v^i^v}
	zlauu2_ = ~f{i^c^i^v^i^i}
	zlauum_ = ~f{i^c^i^v^i^i}
	zpbcon_ = ~f{i^c^i^i^v^i^d^d^v^d^i}
	zpbequ_ = ~f{i^c^i^i^v^i^d^d^d^i}
	zpbrfs_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^d^d^v^d^i}
	zpbstf_ = ~f{i^c^i^i^v^i^i}
	zpbsv_ = ~f{i^c^i^i^i^v^i^v^i^i}
	zpbsvx_ = ~f{i^c^c^i^i^i^v^i^v^i^c^d^v^i^v^i^d^d^d^v^d^i}
	zpbtf2_ = ~f{i^c^i^i^v^i^i}
	zpbtrf_ = ~f{i^c^i^i^v^i^i}
	zpbtrs_ = ~f{i^c^i^i^i^v^i^v^i^i}
	zpftrf_ = ~f{i^c^c^i^v^i}
	zpftri_ = ~f{i^c^c^i^v^i}
	zpftrs_ = ~f{i^c^c^i^i^v^v^i^i}
	zpocon_ = ~f{i^c^i^v^i^d^d^v^d^i}
	zpoequ_ = ~f{i^i^v^i^d^d^d^i}
	zpoequb_ = ~f{i^i^v^i^d^d^d^i}
	zporfs_ = ~f{i^c^i^i^v^i^v^i^v^i^v^i^d^d^v^d^i}
	zposv_ = ~f{i^c^i^i^v^i^v^i^i}
	zposvx_ = ~f{i^c^c^i^i^v^i^v^i^c^d^v^i^v^i^d^d^d^v^d^i}
	zpotf2_ = ~f{i^c^i^v^i^i}
	zpotrf_ = ~f{i^c^i^v^i^i}
	zpotri_ = ~f{i^c^i^v^i^i}
	zpotrs_ = ~f{i^c^i^i^v^i^v^i^i}
	zppcon_ = ~f{i^c^i^v^d^d^v^d^i}
	zppequ_ = ~f{i^c^i^v^d^d^d^i}
	zpprfs_ = ~f{i^c^i^i^v^v^v^i^v^i^d^d^v^d^i}
	zppsv_ = ~f{i^c^i^i^v^v^i^i}
	zppsvx_ = ~f{i^c^c^i^i^v^v^c^d^v^i^v^i^d^d^d^v^d^i}
	zpptrf_ = ~f{i^c^i^v^i}
	zpptri_ = ~f{i^c^i^v^i}
	zpptrs_ = ~f{i^c^i^i^v^v^i^i}
	zpstf2_ = ~f{i^c^i^v^i^i^i^d^d^i}
	zpstrf_ = ~f{i^c^i^v^i^i^i^d^d^i}
	zptcon_ = ~f{i^i^d^v^d^d^d^i}
	zpteqr_ = ~f{i^c^i^d^d^v^i^d^i}
	zptrfs_ = ~f{i^c^i^i^d^v^d^v^v^i^v^i^d^d^v^d^i}
	zptsv_ = ~f{i^i^i^d^v^v^i^i}
	zptsvx_ = ~f{i^c^i^i^d^v^d^v^v^i^v^i^d^d^d^v^d^i}
	zpttrf_ = ~f{i^i^d^v^i}
	zpttrs_ = ~f{i^c^i^i^d^v^v^i^i}
	zptts2_ = ~f{i^i^i^i^d^v^v^i}
	zrot_ = ~f{i^i^v^i^v^i^d^v}
	zspcon_ = ~f{i^c^i^v^i^d^d^v^i}
	zspmv_ = ~f{i^c^i^v^v^v^i^v^v^i}
	zspr_ = ~f{i^c^i^v^v^i^v}
	zsprfs_ = ~f{i^c^i^i^v^v^i^v^i^v^i^d^d^v^d^i}
	zspsv_ = ~f{i^c^i^i^v^i^v^i^i}
	zspsvx_ = ~f{i^c^c^i^i^v^v^i^v^i^v^i^d^d^d^v^d^i}
	zsptrf_ = ~f{i^c^i^v^i^i}
	zsptri_ = ~f{i^c^i^v^i^v^i}
	zsptrs_ = ~f{i^c^i^i^v^i^v^i^i}
	zstedc_ = ~f{i^c^i^d^d^v^i^v^i^d^i^i^i^i}
	zstegr_ = ~f{i^c^c^i^d^d^d^d^i^i^d^i^d^v^i^i^d^i^i^i^i}
	zstein_ = ~f{i^i^d^d^i^d^i^i^v^i^d^i^i^i}
	zstemr_ = ~f{i^c^c^i^d^d^d^d^i^i^i^d^v^i^i^i^i^d^i^i^i^i}
	zsteqr_ = ~f{i^c^i^d^d^v^i^d^i}
	zsycon_ = ~f{i^c^i^v^i^i^d^d^v^i}
	zsyequb_ = ~f{i^c^i^v^i^d^d^d^v^i}
	zsymv_ = ~f{i^c^i^v^v^i^v^i^v^v^i}
	zsyr_ = ~f{i^c^i^v^v^i^v^i}
	zsyrfs_ = ~f{i^c^i^i^v^i^v^i^i^v^i^v^i^d^d^v^d^i}
	zsysv_ = ~f{i^c^i^i^v^i^i^v^i^v^i^i}
	zsysvx_ = ~f{i^c^c^i^i^v^i^v^i^i^v^i^v^i^d^d^d^v^i^d^i}
	zsytf2_ = ~f{i^c^i^v^i^i^i}
	zsytrf_ = ~f{i^c^i^v^i^i^v^i^i}
	zsytri_ = ~f{i^c^i^v^i^i^v^i}
	zsytrs_ = ~f{i^c^i^i^v^i^i^v^i^i}
	ztbcon_ = ~f{i^c^c^c^i^i^v^i^d^v^d^i}
	ztbrfs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^v^i^d^d^v^d^i}
	ztbtrs_ = ~f{i^c^c^c^i^i^i^v^i^v^i^i}
	ztfsm_ = ~f{i^c^c^c^c^c^i^i^v^v^v^i}
	ztftri_ = ~f{i^c^c^c^i^v^i}
	ztfttp_ = ~f{i^c^c^i^v^v^i}
	ztfttr_ = ~f{i^c^c^i^v^v^i^i}
	ztgevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^i^i^v^d^i}
	ztgex2_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i}
	ztgexc_ = ~f{i^i^i^i^v^i^v^i^v^i^v^i^i^i^i}
	ztgsen_ = ~f{i^i^i^i^i^i^v^i^v^i^v^v^v^i^v^i^i^d^d^d^v^i^i^i^i}
	ztgsja_ = ~f{i^c^c^c^i^i^i^i^i^v^i^v^i^d^d^d^d^v^i^v^i^v^i^v^i^i}
	ztgsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^v^i^d^d^i^i^v^i^i^i}
	ztgsy2_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^d^d^d^i}
	ztgsyl_ = ~f{i^c^i^i^i^v^i^v^i^v^i^v^i^v^i^v^i^d^d^v^i^i^i}
	ztpcon_ = ~f{i^c^c^c^i^v^d^v^d^i}
	ztprfs_ = ~f{i^c^c^c^i^i^v^v^i^v^i^d^d^v^d^i}
	ztptri_ = ~f{i^c^c^i^v^i}
	ztptrs_ = ~f{i^c^c^c^i^i^v^v^i^i}
	ztpttf_ = ~f{i^c^c^i^v^v^i}
	ztpttr_ = ~f{i^c^i^v^v^i^i}
	ztrcon_ = ~f{i^c^c^c^i^v^i^d^v^d^i}
	ztrevc_ = ~f{i^c^c^i^i^v^i^v^i^v^i^i^i^v^d^i}
	ztrexc_ = ~f{i^c^i^v^i^v^i^i^i^i}
	ztrrfs_ = ~f{i^c^c^c^i^i^v^i^v^i^v^i^d^d^v^d^i}
	ztrsen_ = ~f{i^c^c^i^i^v^i^v^i^v^i^d^d^v^i^i}
	ztrsna_ = ~f{i^c^c^i^i^v^i^v^i^v^i^d^d^i^i^v^i^d^i}
	ztrsyl_ = ~f{i^c^c^i^i^i^v^i^v^i^v^i^d^i}
	ztrti2_ = ~f{i^c^c^i^v^i^i}
	ztrtri_ = ~f{i^c^c^i^v^i^i}
	ztrtrs_ = ~f{i^c^c^c^i^i^v^i^v^i^i}
	ztrttf_ = ~f{i^c^c^i^v^i^v^i}
	ztrttp_ = ~f{i^c^i^v^i^v^i}
	ztzrqf_ = ~f{i^i^i^v^i^v^i}
	ztzrzf_ = ~f{i^i^i^v^i^v^v^i^i}
	zung2l_ = ~f{i^i^i^i^v^i^v^v^i}
	zung2r_ = ~f{i^i^i^i^v^i^v^v^i}
	zungbr_ = ~f{i^c^i^i^i^v^i^v^v^i^i}
	zunghr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungl2_ = ~f{i^i^i^i^v^i^v^v^i}
	zunglq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungql_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungqr_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungr2_ = ~f{i^i^i^i^v^i^v^v^i}
	zungrq_ = ~f{i^i^i^i^v^i^v^v^i^i}
	zungtr_ = ~f{i^c^i^v^i^v^v^i^i}
	zunm2l_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunm2r_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunmbr_ = ~f{i^c^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmhr_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	zunml2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunmlq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmql_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmqr_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmr2_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i}
	zunmr3_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i}
	zunmrq_ = ~f{i^c^c^i^i^i^v^i^v^v^i^v^i^i}
	zunmrz_ = ~f{i^c^c^i^i^i^i^v^i^v^v^i^v^i^i}
	zunmtr_ = ~f{i^c^c^c^i^i^v^i^v^v^i^v^i^i}
	zupgtr_ = ~f{i^c^i^v^v^v^i^v^i}
	zupmtr_ = ~f{i^c^c^c^i^i^v^v^v^i^v^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sandbox.h
	sandbox_free_error = ~f{v^c}
	sandbox_init = ~f{i^cQ^^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/checkint.h
	__checkint_int32_add = ~f{iqq^i}
	__checkint_int32_div_signed_signed = ~f{iii^i}
	__checkint_int32_div_signed_unsigned = ~f{iiI^i}
	__checkint_int32_div_unsigned_signed = ~f{iIi^i}
	__checkint_int32_div_unsigned_unsigned = ~f{iII^i}
	__checkint_int32_mul = ~f{iqq^i}
	__checkint_int32_sub = ~f{iqq^i}
	__checkint_int32_type_error = ~f{i^i}
	__checkint_int64_add_signed_signed = ~f{qqq^i}
	__checkint_int64_add_signed_unsigned = ~f{qqQ^i}
	__checkint_int64_add_unsigned_signed = ~f{qQq^i}
	__checkint_int64_add_unsigned_unsigned = ~f{qQQ^i}
	__checkint_int64_div_signed_signed = ~f{qqq^i}
	__checkint_int64_div_signed_unsigned = ~f{qqQ^i}
	__checkint_int64_div_unsigned_signed = ~f{qQq^i}
	__checkint_int64_div_unsigned_unsigned = ~f{qQQ^i}
	__checkint_int64_mul_signed_signed = ~f{qqq^i}
	__checkint_int64_mul_signed_unsigned = ~f{qqQ^i}
	__checkint_int64_mul_unsigned_signed = ~f{qQq^i}
	__checkint_int64_mul_unsigned_unsigned = ~f{qQQ^i}
	__checkint_int64_sub_signed_signed = ~f{qqq^i}
	__checkint_int64_sub_signed_unsigned = ~f{qqQ^i}
	__checkint_int64_sub_unsigned_signed = ~f{qQq^i}
	__checkint_int64_sub_unsigned_unsigned = ~f{qQQ^i}
	__checkint_int64_type_error = ~f{i^i}
	__checkint_is_mixed_sign32 = ~f{iii}
	__checkint_is_mixed_sign64 = ~f{iqq}
	__checkint_uint32_add = ~f{Iqq^i}
	__checkint_uint32_div_signed_signed = ~f{Iii^i}
	__checkint_uint32_div_signed_unsigned = ~f{IiI^i}
	__checkint_uint32_div_unsigned_signed = ~f{IIi^i}
	__checkint_uint32_div_unsigned_unsigned = ~f{III^i}
	__checkint_uint32_mul = ~f{Iqq^i}
	__checkint_uint32_sub = ~f{Iqq^i}
	__checkint_uint32_type_error = ~f{i^i}
	__checkint_uint64_add_signed_signed = ~f{Qqq^i}
	__checkint_uint64_add_signed_unsigned = ~f{QqQ^i}
	__checkint_uint64_add_unsigned_signed = ~f{QQq^i}
	__checkint_uint64_add_unsigned_unsigned = ~f{QQQ^i}
	__checkint_uint64_div_signed_signed = ~f{Qqq^i}
	__checkint_uint64_div_signed_unsigned = ~f{QqQ^i}
	__checkint_uint64_div_unsigned_signed = ~f{QQq^i}
	__checkint_uint64_div_unsigned_unsigned = ~f{QQQ^i}
	__checkint_uint64_mul_signed_signed = ~f{Qqq^i}
	__checkint_uint64_mul_signed_unsigned = ~f{QqQ^i}
	__checkint_uint64_mul_unsigned_signed = ~f{QQq^i}
	__checkint_uint64_mul_unsigned_unsigned = ~f{QQQ^i}
	__checkint_uint64_sub_signed_signed = ~f{Qqq^i}
	__checkint_uint64_sub_signed_unsigned = ~f{QqQ^i}
	__checkint_uint64_sub_unsigned_signed = ~f{QQq^i}
	__checkint_uint64_sub_unsigned_unsigned = ~f{QQQ^i}
	__checkint_uint64_type_error = ~f{i^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/svc_auth.h
	_authenticate = ~f{I^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/LinearAlgebra/vector.h
	la_vector_length = ~f{L@}
	la_vector_slice = ~f{@@llL}
	la_vector_to_double_buffer = ~f{l^dl@}
	la_vector_to_float_buffer = ~f{l^fl@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioToolbox.h
	CopyInstrumentInfoFromSoundBank = ~f{i^v^^v}
	CopyNameFromSoundBank = ~f{i^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTTypesetter.h
	CTTypesetterCreateLine = ~f{^v^v{=ll}}
	CTTypesetterCreateLineWithOffset = ~f{^v^v{=ll}d}
	CTTypesetterCreateWithAttributedString = ~f{^v^v}
	CTTypesetterCreateWithAttributedStringAndOptions = ~f{^v^v^v}
	CTTypesetterGetTypeID = ~f{L}
	CTTypesetterSuggestClusterBreak = ~f{l^vld}
	CTTypesetterSuggestClusterBreakWithOffset = ~f{l^vldd}
	CTTypesetterSuggestLineBreak = ~f{l^vld}
	CTTypesetterSuggestLineBreakWithOffset = ~f{l^vldd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/vImage_CVUtilities.h
	vImageBuffer_CopyToCVPixelBuffer = ~f{l^v^v^v^v^dI}
	vImageBuffer_InitForCopyFromCVPixelBuffer = ~f{l^v^v^vI}
	vImageBuffer_InitForCopyToCVPixelBuffer = ~f{l^v^v^vI}
	vImageBuffer_InitWithCVPixelBuffer = ~f{l^v^v^v^v^dI}
	vImageCVImageFormat_Copy = ~f{^v^v}
	vImageCVImageFormat_CopyChannelDescription = ~f{l^v^vI}
	vImageCVImageFormat_CopyConversionMatrix = ~f{l^v^vI}
	vImageCVImageFormat_Create = ~f{^vI^v^v^vi}
	vImageCVImageFormat_CreateWithCVPixelBuffer = ~f{^v^v}
	vImageCVImageFormat_GetAlphaHint = ~f{i^v}
	vImageCVImageFormat_GetChannelCount = ~f{I^v}
	vImageCVImageFormat_GetChannelDescription = ~f{^v^vI}
	vImageCVImageFormat_GetChannelNames = ~f{^I^v}
	vImageCVImageFormat_GetChromaSiting = ~f{^v^v}
	vImageCVImageFormat_GetColorSpace = ~f{^v^v}
	vImageCVImageFormat_GetConversionMatrix = ~f{^v^v^I}
	vImageCVImageFormat_GetFormatCode = ~f{I^v}
	vImageCVImageFormat_GetUserData = ~f{^v^v}
	vImageCVImageFormat_Release = ~f{v^v}
	vImageCVImageFormat_Retain = ~f{v^v}
	vImageCVImageFormat_SetAlphaHint = ~f{l^vi}
	vImageCVImageFormat_SetChromaSiting = ~f{l^v^v}
	vImageCVImageFormat_SetColorSpace = ~f{l^v^v}
	vImageCVImageFormat_SetUserData = ~f{l^v^v^~f{v^v^v}}
	vImageConverter_CreateForCGToCVImageFormat = ~f{^v^v^v^dI^l}
	vImageConverter_CreateForCVToCGImageFormat = ~f{^v^v^v^dI^l}
	vImageCreateMonochromeColorSpaceWithWhitePointAndTransferFunction = ~f{^v^v^viI^l}
	vImageCreateRGBColorSpaceWithPrimariesAndTransferFunction = ~f{^v^v^viI^l}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/objc/objc.h
	objc_retainedObject = ~f{@^v}
	objc_unretainedObject = ~f{@^v}
	objc_unretainedPointer = ~f{^v@}
	object_getClassName = ~f{^c@}
	object_getIndexedIvars = ~f{^v@}
	sel_getName = ~f{^c:}
	sel_getUid = ~f{:^c}
	sel_isMapped = ~f{B:}
	sel_registerName = ~f{:^c}
/usr/local/lib/clang/9.0.1/include/fma4intrin.h
	_mm256_macc_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_macc_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_maddsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_maddsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_msub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_msub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_msubadd_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_msubadd_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_nmacc_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_nmacc_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_nmsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_nmsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm_macc_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_macc_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_macc_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_macc_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_maddsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_maddsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_msub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_msub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_msub_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_msub_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_msubadd_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_msubadd_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_nmacc_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_nmacc_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_nmacc_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_nmacc_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_nmsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_nmsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_mm_nmsub_sd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_mm_nmsub_ss = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/VideoToolbox.framework/Headers/VTFrameSilo.h
	VTFrameSiloAddSampleBuffer = ~f{i^v^v}
	VTFrameSiloCallBlockForEachSampleBuffer = ~f{i^v{={=qiIq}{=qiIq}}%~f{i^v}}
	VTFrameSiloCallFunctionForEachSampleBuffer = ~f{i^v{={=qiIq}{=qiIq}}^v^~f{i^v^v}}
	VTFrameSiloCreate = ~f{i^v^v{={=qiIq}{=qiIq}}^v^^v}
	VTFrameSiloGetProgressOfCurrentPass = ~f{i^v^f}
	VTFrameSiloGetTypeID = ~f{L}
	VTFrameSiloSetTimeRangesForNextPass = ~f{i^vl^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIGuidedAccess.h
	UIGuidedAccessConfigureAccessibilityFeatures = ~f{vLB%~f{vB@}}
	UIGuidedAccessRestrictionStateForIdentifier = ~f{l@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlautomata.h
	xmlAutomataCompile = ~f{^v^v}
	xmlAutomataGetInitState = ~f{^v^v}
	xmlAutomataIsDeterminist = ~f{i^v}
	xmlAutomataNewAllTrans = ~f{^v^v^v^vi}
	xmlAutomataNewCountTrans = ~f{^v^v^v^v^Cii^v}
	xmlAutomataNewCountTrans2 = ~f{^v^v^v^v^C^Cii^v}
	xmlAutomataNewCountedTrans = ~f{^v^v^v^vi}
	xmlAutomataNewCounter = ~f{i^vii}
	xmlAutomataNewCounterTrans = ~f{^v^v^v^vi}
	xmlAutomataNewEpsilon = ~f{^v^v^v^v}
	xmlAutomataNewNegTrans = ~f{^v^v^v^v^C^C^v}
	xmlAutomataNewOnceTrans = ~f{^v^v^v^v^Cii^v}
	xmlAutomataNewOnceTrans2 = ~f{^v^v^v^v^C^Cii^v}
	xmlAutomataNewState = ~f{^v^v}
	xmlAutomataNewTransition = ~f{^v^v^v^v^C^v}
	xmlAutomataNewTransition2 = ~f{^v^v^v^v^C^C^v}
	xmlAutomataSetFinalState = ~f{i^v^v}
	xmlFreeAutomata = ~f{v^v}
	xmlNewAutomata = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/regex.h
	regcomp = ~f{i^v^ci}
	regerror = ~f{Li^v^cL}
	regexec = ~f{i^v^cL^vi}
	regfree = ~f{v^v}
	regncomp = ~f{i^v^cLi}
	regnexec = ~f{i^v^cLL^vi}
	regwcomp = ~f{i^v^ii}
	regwexec = ~f{i^v^iL^vi}
	regwncomp = ~f{i^v^iLi}
	regwnexec = ~f{i^v^iLL^vi}
/usr/local/lib/clang/9.0.1/include/cetintrin.h
	_clrssbsy = ~f{v^v}
	_get_ssp = ~f{Q}
	_inc_ssp = ~f{vI}
	_incsspd = ~f{vi}
	_incsspq = ~f{vQ}
	_rdsspd = ~f{II}
	_rdsspq = ~f{QQ}
	_rstorssp = ~f{v^v}
	_saveprevssp = ?
	_setssbsy = ?
	_wrssd = ~f{vI^v}
	_wrssq = ~f{vQ^v}
	_wrussd = ~f{vI^v}
	_wrussq = ~f{vQ^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MediaPlayer.framework/Headers/MPVolumeSettings.h
	MPVolumeSettingsAlertHide = ~f{v}
	MPVolumeSettingsAlertIsVisible = ~f{B}
	MPVolumeSettingsAlertShow = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVMetalTextureCache.h
	CVMetalTextureCacheCreate = ~f{i^v^v@^v^^v}
	CVMetalTextureCacheCreateTextureFromImage = ~f{i^v^v^v^vLLLL^^v}
	CVMetalTextureCacheFlush = ~f{v^vQ}
	CVMetalTextureCacheGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/semaphore.h
	semaphore_signal = ~f{iI}
	semaphore_signal_all = ~f{iI}
	semaphore_signal_thread = ~f{iII}
	semaphore_timedwait = ~f{iI{=Ii}}
	semaphore_timedwait_signal = ~f{iII{=Ii}}
	semaphore_wait = ~f{iI}
	semaphore_wait_signal = ~f{iII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GSS.framework/Headers/gssapi_apple.h
	GSSCreateCredentialFromUUID = ~f{^v^v}
	GSSCreateError = ~f{^v^vII}
	GSSCreateName = ~f{^v^v^v^^v}
	GSSCredentialCopyName = ~f{^v^v}
	GSSCredentialCopyUUID = ~f{^v^v}
	GSSCredentialGetLifetime = ~f{I^v}
	GSSNameCreateDisplayString = ~f{^v^v}
	gss_aapl_change_password = ~f{I^v^v^v^^v}
	gss_aapl_initial_cred = ~f{I^v^v^v^^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDictionary.h
	CGPDFDictionaryApplyBlock = ~f{v^v%~f{B^c^v^v}^v}
	CGPDFDictionaryApplyFunction = ~f{v^v^~f{v^c^v^v}^v}
	CGPDFDictionaryGetArray = ~f{B^v^c^^v}
	CGPDFDictionaryGetBoolean = ~f{B^v^c^C}
	CGPDFDictionaryGetCount = ~f{L^v}
	CGPDFDictionaryGetDictionary = ~f{B^v^c^^v}
	CGPDFDictionaryGetInteger = ~f{B^v^c^l}
	CGPDFDictionaryGetName = ~f{B^v^c^^c}
	CGPDFDictionaryGetNumber = ~f{B^v^c^d}
	CGPDFDictionaryGetObject = ~f{B^v^c^^v}
	CGPDFDictionaryGetStream = ~f{B^v^c^^v}
	CGPDFDictionaryGetString = ~f{B^v^c^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFDocument.h
	CGPDFDocumentAllowsCopying = ~f{B^v}
	CGPDFDocumentAllowsPrinting = ~f{B^v}
	CGPDFDocumentCreateWithProvider = ~f{^v^v}
	CGPDFDocumentCreateWithURL = ~f{^v^v}
	CGPDFDocumentGetAccessPermissions = ~f{I^v}
	CGPDFDocumentGetArtBox = ~f{{={=dd}{=dd}}^vi}
	CGPDFDocumentGetBleedBox = ~f{{={=dd}{=dd}}^vi}
	CGPDFDocumentGetCatalog = ~f{^v^v}
	CGPDFDocumentGetCropBox = ~f{{={=dd}{=dd}}^vi}
	CGPDFDocumentGetID = ~f{^v^v}
	CGPDFDocumentGetInfo = ~f{^v^v}
	CGPDFDocumentGetMediaBox = ~f{{={=dd}{=dd}}^vi}
	CGPDFDocumentGetNumberOfPages = ~f{L^v}
	CGPDFDocumentGetOutline = ~f{^v^v}
	CGPDFDocumentGetPage = ~f{^v^vL}
	CGPDFDocumentGetRotationAngle = ~f{i^vi}
	CGPDFDocumentGetTrimBox = ~f{{={=dd}{=dd}}^vi}
	CGPDFDocumentGetTypeID = ~f{L}
	CGPDFDocumentGetVersion = ~f{v^v^i^i}
	CGPDFDocumentIsEncrypted = ~f{B^v}
	CGPDFDocumentIsUnlocked = ~f{B^v}
	CGPDFDocumentRelease = ~f{v^v}
	CGPDFDocumentRetain = ~f{^v^v}
	CGPDFDocumentUnlockWithPassword = ~f{B^v^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread/stack_np.h
	pthread_stack_frame_decode_np = ~f{LL^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGGradient.h
	CGGradientCreateWithColorComponents = ~f{^v^v^d^dL}
	CGGradientCreateWithColors = ~f{^v^v^v^d}
	CGGradientGetTypeID = ~f{L}
	CGGradientRelease = ~f{v^v}
	CGGradientRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/CommonCrypto/CommonKeyDerivation.h
	CCCalibratePBKDF = ~f{IILLILI}
	CCKeyDerivationPBKDF = ~f{iI^cL^CLII^CL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vDSP.h
	vDSP_DCT_CreateSetup = ~f{^v^vLi}
	vDSP_DCT_Execute = ~f{v^v^f^f}
	vDSP_DFT_CreateSetup = ~f{^v^vL}
	vDSP_DFT_DestroySetup = ~f{v^v}
	vDSP_DFT_DestroySetupD = ~f{v^v}
	vDSP_DFT_Execute = ~f{v^v^f^f^f^f}
	vDSP_DFT_ExecuteD = ~f{v^v^d^d^d^d}
	vDSP_DFT_zop = ~f{v^v^f^fl^f^fli}
	vDSP_DFT_zop_CreateSetup = ~f{^v^vLi}
	vDSP_DFT_zop_CreateSetupD = ~f{^v^vLi}
	vDSP_DFT_zrop_CreateSetup = ~f{^v^vLi}
	vDSP_DFT_zrop_CreateSetupD = ~f{^v^vLi}
	vDSP_FFT16_copv = ~f{v^f^fi}
	vDSP_FFT16_zopv = ~f{v^f^f^f^fi}
	vDSP_FFT32_copv = ~f{v^f^fi}
	vDSP_FFT32_zopv = ~f{v^f^f^f^fi}
	vDSP_biquad = ~f{v^v^f^fl^flL}
	vDSP_biquadD = ~f{v^v^d^dl^dlL}
	vDSP_biquad_CreateSetup = ~f{^v^dL}
	vDSP_biquad_CreateSetupD = ~f{^v^dL}
	vDSP_biquad_DestroySetup = ~f{v^v}
	vDSP_biquad_DestroySetupD = ~f{v^v}
	vDSP_biquadm = ~f{v^v^^fl^^flL}
	vDSP_biquadmD = ~f{v^v^^dl^^dlL}
	vDSP_biquadm_CopyState = ~f{v^v^v}
	vDSP_biquadm_CopyStateD = ~f{v^v^v}
	vDSP_biquadm_CreateSetup = ~f{^v^dLL}
	vDSP_biquadm_CreateSetupD = ~f{^v^dLL}
	vDSP_biquadm_DestroySetup = ~f{v^v}
	vDSP_biquadm_DestroySetupD = ~f{v^v}
	vDSP_biquadm_ResetState = ~f{v^v}
	vDSP_biquadm_ResetStateD = ~f{v^v}
	vDSP_biquadm_SetActiveFilters = ~f{v^v^B}
	vDSP_biquadm_SetCoefficientsDouble = ~f{v^v^dLLLL}
	vDSP_biquadm_SetCoefficientsSingle = ~f{v^v^fLLLL}
	vDSP_biquadm_SetTargetsDouble = ~f{v^v^dffLLLL}
	vDSP_biquadm_SetTargetsSingle = ~f{v^v^fffLLLL}
	vDSP_blkman_window = ~f{v^fLi}
	vDSP_blkman_windowD = ~f{v^dLi}
	vDSP_conv = ~f{v^fl^fl^flLL}
	vDSP_convD = ~f{v^dl^dl^dlLL}
	vDSP_create_fftsetup = ~f{^vLi}
	vDSP_create_fftsetupD = ~f{^vLi}
	vDSP_ctoz = ~f{v^vl^vlL}
	vDSP_ctozD = ~f{v^vl^vlL}
	vDSP_deq22 = ~f{v^fl^f^flL}
	vDSP_deq22D = ~f{v^dl^d^dlL}
	vDSP_desamp = ~f{v^fl^f^fLL}
	vDSP_desampD = ~f{v^dl^d^dLL}
	vDSP_destroy_fftsetup = ~f{v^v}
	vDSP_destroy_fftsetupD = ~f{v^v}
	vDSP_distancesq = ~f{v^fl^fl^fL}
	vDSP_distancesqD = ~f{v^dl^dl^dL}
	vDSP_dotpr = ~f{v^fl^fl^fL}
	vDSP_dotpr2 = ~f{v^fl^fl^fl^f^fL}
	vDSP_dotpr2D = ~f{v^dl^dl^dl^d^dL}
	vDSP_dotpr2_s1_15 = ~f{v^sl^sl^sl^s^sL}
	vDSP_dotpr2_s8_24 = ~f{v^il^il^il^i^iL}
	vDSP_dotprD = ~f{v^dl^dl^dL}
	vDSP_dotpr_s1_15 = ~f{v^sl^sl^sL}
	vDSP_dotpr_s8_24 = ~f{v^il^il^iL}
	vDSP_f3x3 = ~f{v^fLL^f^f}
	vDSP_f3x3D = ~f{v^dLL^d^d}
	vDSP_f5x5 = ~f{v^fLL^f^f}
	vDSP_f5x5D = ~f{v^dLL^d^d}
	vDSP_fft2d_zip = ~f{v^v^vllLLi}
	vDSP_fft2d_zipD = ~f{v^v^vllLLi}
	vDSP_fft2d_zipt = ~f{v^v^vll^vLLi}
	vDSP_fft2d_ziptD = ~f{v^v^vll^vLLi}
	vDSP_fft2d_zop = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zopD = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zopt = ~f{v^v^vll^vll^vLLi}
	vDSP_fft2d_zoptD = ~f{v^v^vll^vll^vLLi}
	vDSP_fft2d_zrip = ~f{v^v^vllLLi}
	vDSP_fft2d_zripD = ~f{v^v^vllLLi}
	vDSP_fft2d_zript = ~f{v^v^vll^vLLi}
	vDSP_fft2d_zriptD = ~f{v^v^vll^vLLi}
	vDSP_fft2d_zrop = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zropD = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zropt = ~f{v^v^vll^vll^vLLi}
	vDSP_fft2d_zroptD = ~f{v^v^vll^vll^vLLi}
	vDSP_fft3_zop = ~f{v^v^vl^vlLi}
	vDSP_fft3_zopD = ~f{v^v^vl^vlLi}
	vDSP_fft5_zop = ~f{v^v^vl^vlLi}
	vDSP_fft5_zopD = ~f{v^v^vl^vlLi}
	vDSP_fft_zip = ~f{v^v^vlLi}
	vDSP_fft_zipD = ~f{v^v^vlLi}
	vDSP_fft_zipt = ~f{v^v^vl^vLi}
	vDSP_fft_ziptD = ~f{v^v^vl^vLi}
	vDSP_fft_zop = ~f{v^v^vl^vlLi}
	vDSP_fft_zopD = ~f{v^v^vl^vlLi}
	vDSP_fft_zopt = ~f{v^v^vl^vl^vLi}
	vDSP_fft_zoptD = ~f{v^v^vl^vl^vLi}
	vDSP_fft_zrip = ~f{v^v^vlLi}
	vDSP_fft_zripD = ~f{v^v^vlLi}
	vDSP_fft_zript = ~f{v^v^vl^vLi}
	vDSP_fft_zriptD = ~f{v^v^vl^vLi}
	vDSP_fft_zrop = ~f{v^v^vl^vlLi}
	vDSP_fft_zropD = ~f{v^v^vl^vlLi}
	vDSP_fft_zropt = ~f{v^v^vl^vl^vLi}
	vDSP_fft_zroptD = ~f{v^v^vl^vl^vLi}
	vDSP_fftm_zip = ~f{v^v^vllLLi}
	vDSP_fftm_zipD = ~f{v^v^vllLLi}
	vDSP_fftm_zipt = ~f{v^v^vll^vLLi}
	vDSP_fftm_ziptD = ~f{v^v^vll^vLLi}
	vDSP_fftm_zop = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zopD = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zopt = ~f{v^v^vll^vll^vLLi}
	vDSP_fftm_zoptD = ~f{v^v^vll^vll^vLLi}
	vDSP_fftm_zrip = ~f{v^v^vllLLi}
	vDSP_fftm_zripD = ~f{v^v^vllLLi}
	vDSP_fftm_zript = ~f{v^v^vll^vLLi}
	vDSP_fftm_zriptD = ~f{v^v^vll^vLLi}
	vDSP_fftm_zrop = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zropD = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zropt = ~f{v^v^vll^vll^vLLi}
	vDSP_fftm_zroptD = ~f{v^v^vll^vll^vLLi}
	vDSP_hamm_window = ~f{v^fLi}
	vDSP_hamm_windowD = ~f{v^dLi}
	vDSP_hann_window = ~f{v^fLi}
	vDSP_hann_windowD = ~f{v^dLi}
	vDSP_imgfir = ~f{v^fLL^f^fLL}
	vDSP_imgfirD = ~f{v^dLL^d^dLL}
	vDSP_maxmgv = ~f{v^fl^fL}
	vDSP_maxmgvD = ~f{v^dl^dL}
	vDSP_maxmgvi = ~f{v^fl^f^LL}
	vDSP_maxmgviD = ~f{v^dl^d^LL}
	vDSP_maxv = ~f{v^fl^fL}
	vDSP_maxvD = ~f{v^dl^dL}
	vDSP_maxvi = ~f{v^fl^f^LL}
	vDSP_maxviD = ~f{v^dl^d^LL}
	vDSP_meamgv = ~f{v^fl^fL}
	vDSP_meamgvD = ~f{v^dl^dL}
	vDSP_meanv = ~f{v^fl^fL}
	vDSP_meanvD = ~f{v^dl^dL}
	vDSP_measqv = ~f{v^fl^fL}
	vDSP_measqvD = ~f{v^dl^dL}
	vDSP_minmgv = ~f{v^fl^fL}
	vDSP_minmgvD = ~f{v^dl^dL}
	vDSP_minmgvi = ~f{v^fl^f^LL}
	vDSP_minmgviD = ~f{v^dl^d^LL}
	vDSP_minv = ~f{v^fl^fL}
	vDSP_minvD = ~f{v^dl^dL}
	vDSP_minvi = ~f{v^fl^f^LL}
	vDSP_minviD = ~f{v^dl^d^LL}
	vDSP_mmov = ~f{v^f^fLLLL}
	vDSP_mmovD = ~f{v^d^dLLLL}
	vDSP_mmul = ~f{v^fl^fl^flLLL}
	vDSP_mmulD = ~f{v^dl^dl^dlLLL}
	vDSP_mtrans = ~f{v^fl^flLL}
	vDSP_mtransD = ~f{v^dl^dlLL}
	vDSP_mvessq = ~f{v^fl^fL}
	vDSP_mvessqD = ~f{v^dl^dL}
	vDSP_normalize = ~f{v^fl^fl^f^fL}
	vDSP_normalizeD = ~f{v^dl^dl^d^dL}
	vDSP_nzcros = ~f{v^flL^L^LL}
	vDSP_nzcrosD = ~f{v^dlL^L^LL}
	vDSP_polar = ~f{v^fl^flL}
	vDSP_polarD = ~f{v^dl^dlL}
	vDSP_rect = ~f{v^fl^flL}
	vDSP_rectD = ~f{v^dl^dlL}
	vDSP_rmsqv = ~f{v^fl^fL}
	vDSP_rmsqvD = ~f{v^dl^dL}
	vDSP_svdiv = ~f{v^f^fl^flL}
	vDSP_svdivD = ~f{v^d^dl^dlL}
	vDSP_sve = ~f{v^fl^fL}
	vDSP_sveD = ~f{v^dl^dL}
	vDSP_sve_svesq = ~f{v^fl^f^fL}
	vDSP_sve_svesqD = ~f{v^dl^d^dL}
	vDSP_svemg = ~f{v^fl^fL}
	vDSP_svemgD = ~f{v^dl^dL}
	vDSP_svesq = ~f{v^fl^fL}
	vDSP_svesqD = ~f{v^dl^dL}
	vDSP_svs = ~f{v^fl^fL}
	vDSP_svsD = ~f{v^dl^dL}
	vDSP_vaam = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vaamD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vabs = ~f{v^fl^flL}
	vDSP_vabsD = ~f{v^dl^dlL}
	vDSP_vabsi = ~f{v^il^ilL}
	vDSP_vadd = ~f{v^fl^fl^flL}
	vDSP_vaddD = ~f{v^dl^dl^dlL}
	vDSP_vaddi = ~f{v^il^il^ilL}
	vDSP_vaddsub = ~f{v^fl^fl^fl^flL}
	vDSP_vaddsubD = ~f{v^dl^dl^dl^dlL}
	vDSP_vam = ~f{v^fl^fl^fl^flL}
	vDSP_vamD = ~f{v^dl^dl^dl^dlL}
	vDSP_vasbm = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vasbmD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vasm = ~f{v^fl^fl^f^flL}
	vDSP_vasmD = ~f{v^dl^dl^d^dlL}
	vDSP_vavlin = ~f{v^fl^f^flL}
	vDSP_vavlinD = ~f{v^dl^d^dlL}
	vDSP_vclip = ~f{v^fl^f^f^flL}
	vDSP_vclipD = ~f{v^dl^d^d^dlL}
	vDSP_vclipc = ~f{v^fl^f^f^flL^L^L}
	vDSP_vclipcD = ~f{v^dl^d^d^dlL^L^L}
	vDSP_vclr = ~f{v^flL}
	vDSP_vclrD = ~f{v^dlL}
	vDSP_vcmprs = ~f{v^fl^fl^flL}
	vDSP_vcmprsD = ~f{v^dl^dl^dlL}
	vDSP_vdbcon = ~f{v^fl^f^flLI}
	vDSP_vdbconD = ~f{v^dl^d^dlLI}
	vDSP_vdist = ~f{v^fl^fl^flL}
	vDSP_vdistD = ~f{v^dl^dl^dlL}
	vDSP_vdiv = ~f{v^fl^fl^flL}
	vDSP_vdivD = ~f{v^dl^dl^dlL}
	vDSP_vdivi = ~f{v^il^il^ilL}
	vDSP_vdpsp = ~f{v^dl^flL}
	vDSP_venvlp = ~f{v^fl^fl^fl^flL}
	vDSP_venvlpD = ~f{v^dl^dl^dl^dlL}
	vDSP_veqvi = ~f{v^il^il^ilL}
	vDSP_vfill = ~f{v^f^flL}
	vDSP_vfillD = ~f{v^d^dlL}
	vDSP_vfilli = ~f{v^i^ilL}
	vDSP_vfix16 = ~f{v^fl^slL}
	vDSP_vfix16D = ~f{v^dl^slL}
	vDSP_vfix32 = ~f{v^fl^ilL}
	vDSP_vfix32D = ~f{v^dl^ilL}
	vDSP_vfix8 = ~f{v^fl^clL}
	vDSP_vfix8D = ~f{v^dl^clL}
	vDSP_vfixr16 = ~f{v^fl^slL}
	vDSP_vfixr16D = ~f{v^dl^slL}
	vDSP_vfixr32 = ~f{v^fl^ilL}
	vDSP_vfixr32D = ~f{v^dl^ilL}
	vDSP_vfixr8 = ~f{v^fl^clL}
	vDSP_vfixr8D = ~f{v^dl^clL}
	vDSP_vfixru16 = ~f{v^fl^SlL}
	vDSP_vfixru16D = ~f{v^dl^SlL}
	vDSP_vfixru32 = ~f{v^fl^IlL}
	vDSP_vfixru32D = ~f{v^dl^IlL}
	vDSP_vfixru8 = ~f{v^fl^ClL}
	vDSP_vfixru8D = ~f{v^dl^ClL}
	vDSP_vfixu16 = ~f{v^fl^SlL}
	vDSP_vfixu16D = ~f{v^dl^SlL}
	vDSP_vfixu32 = ~f{v^fl^IlL}
	vDSP_vfixu32D = ~f{v^dl^IlL}
	vDSP_vfixu8 = ~f{v^fl^ClL}
	vDSP_vfixu8D = ~f{v^dl^ClL}
	vDSP_vflt16 = ~f{v^sl^flL}
	vDSP_vflt16D = ~f{v^sl^dlL}
	vDSP_vflt24 = ~f{v^vl^flL}
	vDSP_vflt32 = ~f{v^il^flL}
	vDSP_vflt32D = ~f{v^il^dlL}
	vDSP_vflt8 = ~f{v^cl^flL}
	vDSP_vflt8D = ~f{v^cl^dlL}
	vDSP_vfltsm24 = ~f{v^vl^f^flL}
	vDSP_vfltsmu24 = ~f{v^vl^f^flL}
	vDSP_vfltu16 = ~f{v^Sl^flL}
	vDSP_vfltu16D = ~f{v^Sl^dlL}
	vDSP_vfltu24 = ~f{v^vl^flL}
	vDSP_vfltu32 = ~f{v^Il^flL}
	vDSP_vfltu32D = ~f{v^Il^dlL}
	vDSP_vfltu8 = ~f{v^Cl^flL}
	vDSP_vfltu8D = ~f{v^Cl^dlL}
	vDSP_vfrac = ~f{v^fl^flL}
	vDSP_vfracD = ~f{v^dl^dlL}
	vDSP_vgathr = ~f{v^f^Ll^flL}
	vDSP_vgathrD = ~f{v^d^Ll^dlL}
	vDSP_vgathra = ~f{v^^fl^flL}
	vDSP_vgathraD = ~f{v^^dl^dlL}
	vDSP_vgen = ~f{v^f^f^flL}
	vDSP_vgenD = ~f{v^d^d^dlL}
	vDSP_vgenp = ~f{v^fl^fl^flLL}
	vDSP_vgenpD = ~f{v^dl^dl^dlLL}
	vDSP_viclip = ~f{v^fl^f^f^flL}
	vDSP_viclipD = ~f{v^dl^d^d^dlL}
	vDSP_vindex = ~f{v^f^fl^flL}
	vDSP_vindexD = ~f{v^d^dl^dlL}
	vDSP_vintb = ~f{v^fl^fl^f^flL}
	vDSP_vintbD = ~f{v^dl^dl^d^dlL}
	vDSP_vlim = ~f{v^fl^f^f^flL}
	vDSP_vlimD = ~f{v^dl^d^d^dlL}
	vDSP_vlint = ~f{v^f^fl^flLL}
	vDSP_vlintD = ~f{v^d^dl^dlLL}
	vDSP_vma = ~f{v^fl^fl^fl^flL}
	vDSP_vmaD = ~f{v^dl^dl^dl^dlL}
	vDSP_vmax = ~f{v^fl^fl^flL}
	vDSP_vmaxD = ~f{v^dl^dl^dlL}
	vDSP_vmaxmg = ~f{v^fl^fl^flL}
	vDSP_vmaxmgD = ~f{v^dl^dl^dlL}
	vDSP_vmin = ~f{v^fl^fl^flL}
	vDSP_vminD = ~f{v^dl^dl^dlL}
	vDSP_vminmg = ~f{v^fl^fl^flL}
	vDSP_vminmgD = ~f{v^dl^dl^dlL}
	vDSP_vmma = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vmmaD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vmmsb = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vmmsbD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vmsa = ~f{v^fl^fl^f^flL}
	vDSP_vmsaD = ~f{v^dl^dl^d^dlL}
	vDSP_vmsb = ~f{v^fl^fl^fl^flL}
	vDSP_vmsbD = ~f{v^dl^dl^dl^dlL}
	vDSP_vmul = ~f{v^fl^fl^flL}
	vDSP_vmulD = ~f{v^dl^dl^dlL}
	vDSP_vnabs = ~f{v^fl^flL}
	vDSP_vnabsD = ~f{v^dl^dlL}
	vDSP_vneg = ~f{v^fl^flL}
	vDSP_vnegD = ~f{v^dl^dlL}
	vDSP_vpoly = ~f{v^fl^fl^flLL}
	vDSP_vpolyD = ~f{v^dl^dl^dlLL}
	vDSP_vpythg = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vpythgD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vqint = ~f{v^f^fl^flLL}
	vDSP_vqintD = ~f{v^d^dl^dlLL}
	vDSP_vramp = ~f{v^f^f^flL}
	vDSP_vrampD = ~f{v^d^d^dlL}
	vDSP_vrampmul = ~f{v^fl^f^f^flL}
	vDSP_vrampmul2 = ~f{v^f^fl^f^f^f^flL}
	vDSP_vrampmul2D = ~f{v^d^dl^d^d^d^dlL}
	vDSP_vrampmul2_s1_15 = ~f{v^s^sl^s^s^s^slL}
	vDSP_vrampmul2_s8_24 = ~f{v^i^il^i^i^i^ilL}
	vDSP_vrampmulD = ~f{v^dl^d^d^dlL}
	vDSP_vrampmul_s1_15 = ~f{v^sl^s^s^slL}
	vDSP_vrampmul_s8_24 = ~f{v^il^i^i^ilL}
	vDSP_vrampmuladd = ~f{v^fl^f^f^flL}
	vDSP_vrampmuladd2 = ~f{v^f^fl^f^f^f^flL}
	vDSP_vrampmuladd2D = ~f{v^d^dl^d^d^d^dlL}
	vDSP_vrampmuladd2_s1_15 = ~f{v^s^sl^s^s^s^slL}
	vDSP_vrampmuladd2_s8_24 = ~f{v^i^il^i^i^i^ilL}
	vDSP_vrampmuladdD = ~f{v^dl^d^d^dlL}
	vDSP_vrampmuladd_s1_15 = ~f{v^sl^s^s^slL}
	vDSP_vrampmuladd_s8_24 = ~f{v^il^i^i^ilL}
	vDSP_vrsum = ~f{v^fl^f^flL}
	vDSP_vrsumD = ~f{v^dl^d^dlL}
	vDSP_vrvrs = ~f{v^flL}
	vDSP_vrvrsD = ~f{v^dlL}
	vDSP_vsadd = ~f{v^fl^f^flL}
	vDSP_vsaddD = ~f{v^dl^d^dlL}
	vDSP_vsaddi = ~f{v^il^i^ilL}
	vDSP_vsbm = ~f{v^fl^fl^fl^flL}
	vDSP_vsbmD = ~f{v^dl^dl^dl^dlL}
	vDSP_vsbsbm = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vsbsbmD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vsbsm = ~f{v^fl^fl^f^flL}
	vDSP_vsbsmD = ~f{v^dl^dl^d^dlL}
	vDSP_vsdiv = ~f{v^fl^f^flL}
	vDSP_vsdivD = ~f{v^dl^d^dlL}
	vDSP_vsdivi = ~f{v^il^i^ilL}
	vDSP_vsimps = ~f{v^fl^f^flL}
	vDSP_vsimpsD = ~f{v^dl^d^dlL}
	vDSP_vsma = ~f{v^fl^f^fl^flL}
	vDSP_vsmaD = ~f{v^dl^d^dl^dlL}
	vDSP_vsmfix24 = ~f{v^fl^f^vlL}
	vDSP_vsmfixu24 = ~f{v^fl^f^vlL}
	vDSP_vsmsa = ~f{v^fl^f^f^flL}
	vDSP_vsmsaD = ~f{v^dl^d^d^dlL}
	vDSP_vsmsb = ~f{v^fl^f^fl^flL}
	vDSP_vsmsbD = ~f{v^dl^d^dl^dlL}
	vDSP_vsmsma = ~f{v^fl^f^fl^f^flL}
	vDSP_vsmsmaD = ~f{v^dl^d^dl^d^dlL}
	vDSP_vsmul = ~f{v^fl^f^flL}
	vDSP_vsmulD = ~f{v^dl^d^dlL}
	vDSP_vsort = ~f{v^fLi}
	vDSP_vsortD = ~f{v^dLi}
	vDSP_vsorti = ~f{v^f^L^LLi}
	vDSP_vsortiD = ~f{v^d^L^LLi}
	vDSP_vspdp = ~f{v^fl^dlL}
	vDSP_vsq = ~f{v^fl^flL}
	vDSP_vsqD = ~f{v^dl^dlL}
	vDSP_vssq = ~f{v^fl^flL}
	vDSP_vssqD = ~f{v^dl^dlL}
	vDSP_vsub = ~f{v^fl^fl^flL}
	vDSP_vsubD = ~f{v^dl^dl^dlL}
	vDSP_vswap = ~f{v^fl^flL}
	vDSP_vswapD = ~f{v^dl^dlL}
	vDSP_vswmax = ~f{v^fl^flLL}
	vDSP_vswmaxD = ~f{v^dl^dlLL}
	vDSP_vswsum = ~f{v^fl^flLL}
	vDSP_vswsumD = ~f{v^dl^dlLL}
	vDSP_vtabi = ~f{v^fl^f^f^fL^flL}
	vDSP_vtabiD = ~f{v^dl^d^d^dL^dlL}
	vDSP_vthr = ~f{v^fl^f^flL}
	vDSP_vthrD = ~f{v^dl^d^dlL}
	vDSP_vthres = ~f{v^fl^f^flL}
	vDSP_vthresD = ~f{v^dl^d^dlL}
	vDSP_vthrsc = ~f{v^fl^f^f^flL}
	vDSP_vthrscD = ~f{v^dl^d^d^dlL}
	vDSP_vtmerg = ~f{v^fl^fl^flL}
	vDSP_vtmergD = ~f{v^dl^dl^dlL}
	vDSP_vtrapz = ~f{v^fl^f^flL}
	vDSP_vtrapzD = ~f{v^dl^d^dlL}
	vDSP_wiener = ~f{vL^f^f^f^fi^i}
	vDSP_wienerD = ~f{vL^d^d^d^di^i}
	vDSP_zaspec = ~f{v^v^fL}
	vDSP_zaspecD = ~f{v^v^dL}
	vDSP_zcoher = ~f{v^f^f^v^fL}
	vDSP_zcoherD = ~f{v^d^d^v^dL}
	vDSP_zconv = ~f{v^vl^vl^vlLL}
	vDSP_zconvD = ~f{v^vl^vl^vlLL}
	vDSP_zcspec = ~f{v^v^v^vL}
	vDSP_zcspecD = ~f{v^v^v^vL}
	vDSP_zdotpr = ~f{v^vl^vl^vL}
	vDSP_zdotprD = ~f{v^vl^vl^vL}
	vDSP_zidotpr = ~f{v^vl^vl^vL}
	vDSP_zidotprD = ~f{v^vl^vl^vL}
	vDSP_zmma = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmmaD = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmms = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmmsD = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmmul = ~f{v^vl^vl^vlLLL}
	vDSP_zmmulD = ~f{v^vl^vl^vlLLL}
	vDSP_zmsm = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmsmD = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zrdesamp = ~f{v^vl^f^vLL}
	vDSP_zrdesampD = ~f{v^vl^d^vLL}
	vDSP_zrdotpr = ~f{v^vl^fl^vL}
	vDSP_zrdotprD = ~f{v^vl^dl^vL}
	vDSP_zrvadd = ~f{v^vl^fl^vlL}
	vDSP_zrvaddD = ~f{v^vl^dl^vlL}
	vDSP_zrvdiv = ~f{v^vl^fl^vlL}
	vDSP_zrvdivD = ~f{v^vl^dl^vlL}
	vDSP_zrvmul = ~f{v^vl^fl^vlL}
	vDSP_zrvmulD = ~f{v^vl^dl^vlL}
	vDSP_zrvsub = ~f{v^vl^fl^vlL}
	vDSP_zrvsubD = ~f{v^vl^dl^vlL}
	vDSP_ztoc = ~f{v^vl^vlL}
	vDSP_ztocD = ~f{v^vl^vlL}
	vDSP_ztrans = ~f{v^f^v^vL}
	vDSP_ztransD = ~f{v^d^v^vL}
	vDSP_zvabs = ~f{v^vl^flL}
	vDSP_zvabsD = ~f{v^vl^dlL}
	vDSP_zvadd = ~f{v^vl^vl^vlL}
	vDSP_zvaddD = ~f{v^vl^vl^vlL}
	vDSP_zvcma = ~f{v^vl^vl^vl^vlL}
	vDSP_zvcmaD = ~f{v^vl^vl^vl^vlL}
	vDSP_zvcmul = ~f{v^vl^vl^vlL}
	vDSP_zvcmulD = ~f{v^vl^vl^vlL}
	vDSP_zvconj = ~f{v^vl^vlL}
	vDSP_zvconjD = ~f{v^vl^vlL}
	vDSP_zvdiv = ~f{v^vl^vl^vlL}
	vDSP_zvdivD = ~f{v^vl^vl^vlL}
	vDSP_zvfill = ~f{v^v^vlL}
	vDSP_zvfillD = ~f{v^v^vlL}
	vDSP_zvma = ~f{v^vl^vl^vl^vlL}
	vDSP_zvmaD = ~f{v^vl^vl^vl^vlL}
	vDSP_zvmags = ~f{v^vl^flL}
	vDSP_zvmagsD = ~f{v^vl^dlL}
	vDSP_zvmgsa = ~f{v^vl^fl^flL}
	vDSP_zvmgsaD = ~f{v^vl^dl^dlL}
	vDSP_zvmmaa = ~f{v^vl^vl^vl^vl^vl^vlL}
	vDSP_zvmmaaD = ~f{v^vl^vl^vl^vl^vl^vlL}
	vDSP_zvmov = ~f{v^vl^vlL}
	vDSP_zvmovD = ~f{v^vl^vlL}
	vDSP_zvmul = ~f{v^vl^vl^vlLi}
	vDSP_zvmulD = ~f{v^vl^vl^vlLi}
	vDSP_zvneg = ~f{v^vl^vlL}
	vDSP_zvnegD = ~f{v^vl^vlL}
	vDSP_zvphas = ~f{v^vl^flL}
	vDSP_zvphasD = ~f{v^vl^dlL}
	vDSP_zvsma = ~f{v^vl^v^vl^vlL}
	vDSP_zvsmaD = ~f{v^vl^v^vl^vlL}
	vDSP_zvsub = ~f{v^vl^vl^vlL}
	vDSP_zvsubD = ~f{v^vl^vl^vlL}
	vDSP_zvzsml = ~f{v^vl^v^vlL}
	vDSP_zvzsmlD = ~f{v^vl^v^vlL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCDynamicStore.h
	SCDynamicStoreAddTemporaryValue = ~f{C^v^v^v}
	SCDynamicStoreAddValue = ~f{C^v^v^v}
	SCDynamicStoreCopyKeyList = ~f{^v^v^v}
	SCDynamicStoreCopyMultiple = ~f{^v^v^v^v}
	SCDynamicStoreCopyNotifiedKeys = ~f{^v^v}
	SCDynamicStoreCopyValue = ~f{^v^v^v}
	SCDynamicStoreCreate = ~f{^v^v^v^~f{v^v^v^v}^v}
	SCDynamicStoreCreateRunLoopSource = ~f{^v^v^vl}
	SCDynamicStoreCreateWithOptions = ~f{^v^v^v^v^~f{v^v^v^v}^v}
	SCDynamicStoreGetTypeID = ~f{L}
	SCDynamicStoreNotifyValue = ~f{C^v^v}
	SCDynamicStoreRemoveValue = ~f{C^v^v}
	SCDynamicStoreSetDispatchQueue = ~f{C^v@}
	SCDynamicStoreSetMultiple = ~f{C^v^v^v^v}
	SCDynamicStoreSetNotificationKeys = ~f{C^v^v^v}
	SCDynamicStoreSetValue = ~f{C^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/listener.h
	nw_listener_cancel = ~f{v@}
	nw_listener_create = ~f{@@}
	nw_listener_create_with_connection = ~f{@@@}
	nw_listener_create_with_port = ~f{@^c@}
	nw_listener_get_new_connection_limit = ~f{I@}
	nw_listener_get_port = ~f{S@}
	nw_listener_set_advertise_descriptor = ~f{v@@}
	nw_listener_set_advertised_endpoint_changed_handler = ~f{v@%~f{v@B}}
	nw_listener_set_new_connection_handler = ~f{v@%~f{v@}}
	nw_listener_set_new_connection_limit = ~f{v@I}
	nw_listener_set_queue = ~f{v@@}
	nw_listener_set_state_changed_handler = ~f{v@%~f{vI@}}
	nw_listener_start = ~f{v@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/architecture/byte_order.h
	NXConvertHostDoubleToSwapped = ~f{Qd}
	NXConvertHostFloatToSwapped = ~f{Lf}
	NXConvertSwappedDoubleToHost = ~f{dQ}
	NXConvertSwappedFloatToHost = ~f{fL}
	NXHostByteOrder = ~f{I}
	NXSwapBigDoubleToHost = ~f{dQ}
	NXSwapBigFloatToHost = ~f{fL}
	NXSwapBigIntToHost = ~f{II}
	NXSwapBigLongLongToHost = ~f{QQ}
	NXSwapBigLongToHost = ~f{LL}
	NXSwapBigShortToHost = ~f{SS}
	NXSwapDouble = ~f{QQ}
	NXSwapFloat = ~f{LL}
	NXSwapHostDoubleToBig = ~f{Qd}
	NXSwapHostDoubleToLittle = ~f{Qd}
	NXSwapHostFloatToBig = ~f{Lf}
	NXSwapHostFloatToLittle = ~f{Lf}
	NXSwapHostIntToBig = ~f{II}
	NXSwapHostIntToLittle = ~f{II}
	NXSwapHostLongLongToBig = ~f{QQ}
	NXSwapHostLongLongToLittle = ~f{QQ}
	NXSwapHostLongToBig = ~f{LL}
	NXSwapHostLongToLittle = ~f{LL}
	NXSwapHostShortToBig = ~f{SS}
	NXSwapHostShortToLittle = ~f{SS}
	NXSwapInt = ~f{II}
	NXSwapLittleDoubleToHost = ~f{dQ}
	NXSwapLittleFloatToHost = ~f{fL}
	NXSwapLittleIntToHost = ~f{II}
	NXSwapLittleLongLongToHost = ~f{QQ}
	NXSwapLittleLongToHost = ~f{LL}
	NXSwapLittleShortToHost = ~f{SS}
	NXSwapLong = ~f{LL}
	NXSwapLongLong = ~f{QQ}
	NXSwapShort = ~f{SS}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTFontDescriptor.h
	CTFontDescriptorCopyAttribute = ~f{^v^v^v}
	CTFontDescriptorCopyAttributes = ~f{^v^v}
	CTFontDescriptorCopyLocalizedAttribute = ~f{^v^v^v^^v}
	CTFontDescriptorCreateCopyWithAttributes = ~f{^v^v^v}
	CTFontDescriptorCreateCopyWithFamily = ~f{^v^v^v}
	CTFontDescriptorCreateCopyWithFeature = ~f{^v^v^v^v}
	CTFontDescriptorCreateCopyWithSymbolicTraits = ~f{^v^vII}
	CTFontDescriptorCreateCopyWithVariation = ~f{^v^v^vd}
	CTFontDescriptorCreateMatchingFontDescriptor = ~f{^v^v^v}
	CTFontDescriptorCreateMatchingFontDescriptors = ~f{^v^v^v}
	CTFontDescriptorCreateWithAttributes = ~f{^v^v}
	CTFontDescriptorCreateWithNameAndSize = ~f{^v^vd}
	CTFontDescriptorGetTypeID = ~f{L}
	CTFontDescriptorMatchFontDescriptorsWithProgressHandler = ~f{B^v^v%~f{BI^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AUComponent.h
	AudioComponentGetIcon = ~f{@^vf}
	AudioComponentGetLastActiveTime = ~f{d^v}
	AudioOutputUnitGetHostIcon = ~f{@^vf}
	AudioOutputUnitPublish = ~f{i^v^vI^v}
	AudioUnitAddPropertyListener = ~f{i^vI^~f{v^v^vIII}^v}
	AudioUnitAddRenderNotify = ~f{i^v^~f{i^v^I^vII^v}^v}
	AudioUnitExtensionCopyComponentList = ~f{^v^v}
	AudioUnitExtensionSetComponentList = ~f{i^v^v}
	AudioUnitGetParameter = ~f{i^vIII^f}
	AudioUnitGetProperty = ~f{i^vIII^v^I}
	AudioUnitGetPropertyInfo = ~f{i^vIII^I^C}
	AudioUnitInitialize = ~f{i^v}
	AudioUnitProcess = ~f{i^v^I^vI^v}
	AudioUnitProcessMultiple = ~f{i^v^I^vII^^vI^^v}
	AudioUnitRemovePropertyListenerWithUserData = ~f{i^vI^~f{v^v^vIII}^v}
	AudioUnitRemoveRenderNotify = ~f{i^v^~f{i^v^I^vII^v}^v}
	AudioUnitRender = ~f{i^v^I^vII^v}
	AudioUnitReset = ~f{i^vII}
	AudioUnitScheduleParameters = ~f{i^v^vI}
	AudioUnitSetParameter = ~f{i^vIIIfI}
	AudioUnitSetProperty = ~f{i^vIII^vI}
	AudioUnitUninitialize = ~f{i^v}
/usr/local/lib/clang/9.0.1/include/bmiintrin.h
	__andn_u32 = ~f{III}
	__andn_u64 = ~f{QQQ}
	__bextr_u32 = ~f{III}
	__bextr_u64 = ~f{QQQ}
	__blsi_u32 = ~f{II}
	__blsi_u64 = ~f{QQ}
	__blsmsk_u32 = ~f{II}
	__blsmsk_u64 = ~f{QQ}
	__blsr_u32 = ~f{II}
	__blsr_u64 = ~f{QQ}
	__tzcnt_u16 = ~f{SS}
	__tzcnt_u32 = ~f{II}
	__tzcnt_u64 = ~f{QQ}
	_bextr_u32 = ~f{IIII}
	_bextr_u64 = ~f{QQII}
	_mm_tzcnt_32 = ~f{iI}
	_mm_tzcnt_64 = ~f{qQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/db.h
	dbopen = ~f{^v^ciiI^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTRun.h
	CTRunDraw = ~f{v^v^v{=ll}}
	CTRunGetAdvances = ~f{v^v{=ll}^v}
	CTRunGetAdvancesPtr = ~f{^v^v}
	CTRunGetAttributes = ~f{^v^v}
	CTRunGetBaseAdvancesAndOrigins = ~f{v^v{=ll}^v^v}
	CTRunGetGlyphCount = ~f{l^v}
	CTRunGetGlyphs = ~f{v^v{=ll}^S}
	CTRunGetGlyphsPtr = ~f{^S^v}
	CTRunGetImageBounds = ~f{{={=dd}{=dd}}^v^v{=ll}}
	CTRunGetPositions = ~f{v^v{=ll}^v}
	CTRunGetPositionsPtr = ~f{^v^v}
	CTRunGetStatus = ~f{I^v}
	CTRunGetStringIndices = ~f{v^v{=ll}^l}
	CTRunGetStringIndicesPtr = ~f{^l^v}
	CTRunGetStringRange = ~f{{=ll}^v}
	CTRunGetTextMatrix = ~f{{=dddddd}^v}
	CTRunGetTypeID = ~f{L}
	CTRunGetTypographicBounds = ~f{d^v{=ll}^d^d^d}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCalendar.h
	CFCalendarAddComponents = ~f{C^v^dL^c$}
	CFCalendarComposeAbsoluteTime = ~f{C^v^d^c$}
	CFCalendarCopyCurrent = ~f{^v}
	CFCalendarCopyLocale = ~f{^v^v}
	CFCalendarCopyTimeZone = ~f{^v^v}
	CFCalendarCreateWithIdentifier = ~f{^v^v^v}
	CFCalendarDecomposeAbsoluteTime = ~f{C^vd^c$}
	CFCalendarGetComponentDifference = ~f{C^vddL^c$}
	CFCalendarGetFirstWeekday = ~f{l^v}
	CFCalendarGetIdentifier = ~f{^v^v}
	CFCalendarGetMaximumRangeOfUnit = ~f{{=ll}^vL}
	CFCalendarGetMinimumDaysInFirstWeek = ~f{l^v}
	CFCalendarGetMinimumRangeOfUnit = ~f{{=ll}^vL}
	CFCalendarGetOrdinalityOfUnit = ~f{l^vLLd}
	CFCalendarGetRangeOfUnit = ~f{{=ll}^vLLd}
	CFCalendarGetTimeRangeOfUnit = ~f{C^vLd^d^d}
	CFCalendarGetTypeID = ~f{L}
	CFCalendarSetFirstWeekday = ~f{v^vl}
	CFCalendarSetLocale = ~f{v^v^v}
	CFCalendarSetMinimumDaysInFirstWeek = ~f{v^vl}
	CFCalendarSetTimeZone = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread/introspection.h
	pthread_introspection_hook_install = ~f{^~f{vI^v^vL}^~f{vI^v^vL}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach-o/arch.h
	NXCombineCpuSubtypes = ~f{iiii}
	NXFindBestFatArch = ~f{^vii^vI}
	NXFindBestFatArch_64 = ~f{^vii^vI}
	NXFreeArchInfo = ~f{v^v}
	NXGetAllArchInfos = ~f{^v}
	NXGetArchInfoFromCpuType = ~f{^vii}
	NXGetArchInfoFromName = ~f{^v^c}
	NXGetLocalArchInfo = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/ImageIO.framework/Headers/CGImageDestination.h
	CGImageDestinationAddAuxiliaryDataInfo = ~f{v^v^v^v}
	CGImageDestinationAddImage = ~f{v^v^v^v}
	CGImageDestinationAddImageAndMetadata = ~f{v^v^v^v^v}
	CGImageDestinationAddImageFromSource = ~f{v^v^vL^v}
	CGImageDestinationCopyImageSource = ~f{B^v^v^v^^v}
	CGImageDestinationCopyTypeIdentifiers = ~f{^v}
	CGImageDestinationCreateWithData = ~f{^v^v^vL^v}
	CGImageDestinationCreateWithDataConsumer = ~f{^v^v^vL^v}
	CGImageDestinationCreateWithURL = ~f{^v^v^vL^v}
	CGImageDestinationFinalize = ~f{B^v}
	CGImageDestinationGetTypeID = ~f{L}
	CGImageDestinationSetProperties = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/getopt.h
	getopt = ~f{ii^^c^c}
	getopt_long = ~f{ii^^c^c^v^i}
	getopt_long_only = ~f{ii^^c^c^v^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libgen.h
	basename = ~f{^c^c}
	basename_r = ~f{^c^c^c}
	dirname = ~f{^c^c}
	dirname_r = ~f{^c^c^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecKey.h
	SecKeyCopyAttributes = ~f{^v^v}
	SecKeyCopyExternalRepresentation = ~f{^v^v^^v}
	SecKeyCopyKeyExchangeResult = ~f{^v^v^v^v^v^^v}
	SecKeyCopyPublicKey = ~f{^v^v}
	SecKeyCreateDecryptedData = ~f{^v^v^v^v^^v}
	SecKeyCreateEncryptedData = ~f{^v^v^v^v^^v}
	SecKeyCreateRandomKey = ~f{^v^v^^v}
	SecKeyCreateSignature = ~f{^v^v^v^v^^v}
	SecKeyCreateWithData = ~f{^v^v^v^^v}
	SecKeyDecrypt = ~f{i^vI^CL^C^L}
	SecKeyEncrypt = ~f{i^vI^CL^C^L}
	SecKeyGeneratePair = ~f{i^v^^v^^v}
	SecKeyGetBlockSize = ~f{L^v}
	SecKeyGetTypeID = ~f{L}
	SecKeyIsAlgorithmSupported = ~f{C^vl^v}
	SecKeyRawSign = ~f{i^vI^CL^C^L}
	SecKeyRawVerify = ~f{i^vI^CL^CL}
	SecKeyVerifySignature = ~f{C^v^v^v^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPreferences.h
	CFPreferencesAddSuitePreferencesToApp = ~f{v^v^v}
	CFPreferencesAppSynchronize = ~f{C^v}
	CFPreferencesAppValueIsForced = ~f{C^v^v}
	CFPreferencesCopyAppValue = ~f{^v^v^v}
	CFPreferencesCopyApplicationList = ~f{^v^v^v}
	CFPreferencesCopyKeyList = ~f{^v^v^v^v}
	CFPreferencesCopyMultiple = ~f{^v^v^v^v^v}
	CFPreferencesCopyValue = ~f{^v^v^v^v^v}
	CFPreferencesGetAppBooleanValue = ~f{C^v^v^C}
	CFPreferencesGetAppIntegerValue = ~f{l^v^v^C}
	CFPreferencesRemoveSuitePreferencesFromApp = ~f{v^v^v}
	CFPreferencesSetAppValue = ~f{v^v^v^v}
	CFPreferencesSetMultiple = ~f{v^v^v^v^v^v}
	CFPreferencesSetValue = ~f{v^v^v^v^v^v}
	CFPreferencesSynchronize = ~f{C^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/ThreadLocalStorage.h
	_swift_stdlib_threadLocalStorageGet = ~f{^v}
/usr/local/lib/clang/9.0.1/include/pconfigintrin.h
	_pconfig_u32 = ~f{II^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/nameser.h
	res_9_ns_datetosecs = ~f{I^c^i}
	res_9_ns_find_tsig = ~f{^C^C^C}
	res_9_ns_format_ttl = ~f{iL^cL}
	res_9_ns_get16 = ~f{I^C}
	res_9_ns_get32 = ~f{L^C}
	res_9_ns_initparse = ~f{i^Ci^v}
	res_9_ns_makecanon = ~f{i^c^cL}
	res_9_ns_msg_getflag = ~f{i{=^C^CSSSSSS^C^C^C^CIi^C}i}
	res_9_ns_name_compress = ~f{i^c^CL^^C^^C}
	res_9_ns_name_ntol = ~f{i^C^CL}
	res_9_ns_name_ntop = ~f{i^C^cL}
	res_9_ns_name_pack = ~f{i^C^Ci^^C^^C}
	res_9_ns_name_pton = ~f{i^c^CL}
	res_9_ns_name_rollback = ~f{v^C^^C^^C}
	res_9_ns_name_skip = ~f{i^^C^C}
	res_9_ns_name_uncompress = ~f{i^C^C^C^cL}
	res_9_ns_name_unpack = ~f{i^C^C^C^CL}
	res_9_ns_parse_ttl = ~f{i^c^L}
	res_9_ns_parserr = ~f{i^vIi^v}
	res_9_ns_put16 = ~f{vI^C}
	res_9_ns_put32 = ~f{vL^C}
	res_9_ns_samedomain = ~f{i^c^c}
	res_9_ns_samename = ~f{i^c^c}
	res_9_ns_sign = ~f{i^C^iii^v^Ci^C^il}
	res_9_ns_sign2 = ~f{i^C^iii^v^Ci^C^il^^C^^C}
	res_9_ns_sign_tcp = ~f{i^C^iii^vi}
	res_9_ns_sign_tcp2 = ~f{i^C^iii^vi^^C^^C}
	res_9_ns_sign_tcp_init = ~f{i^v^Ci^v}
	res_9_ns_skiprr = ~f{i^C^CIi}
	res_9_ns_sprintrr = ~f{i^v^v^c^c^cL}
	res_9_ns_sprintrrf = ~f{i^CL^cIIL^CL^c^c^cL}
	res_9_ns_subdomain = ~f{i^c^c}
	res_9_ns_verify = ~f{i^C^i^v^Ci^C^i^li}
	res_9_ns_verify_tcp = ~f{i^C^i^vi}
	res_9_ns_verify_tcp_init = ~f{i^v^Ci^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenGLES.framework/Headers/ES2/glext.h
	glActiveShaderProgramEXT = ~f{vII}
	glBeginQueryEXT = ~f{vII}
	glBindProgramPipelineEXT = ~f{vI}
	glBindVertexArrayOES = ~f{vI}
	glClientWaitSyncAPPLE = ~f{I^vIQ}
	glCopyTextureLevelsAPPLE = ~f{vIIii}
	glCreateShaderProgramvEXT = ~f{IIi^^c}
	glDeleteProgramPipelinesEXT = ~f{vi^I}
	glDeleteQueriesEXT = ~f{vi^I}
	glDeleteSyncAPPLE = ~f{v^v}
	glDeleteVertexArraysOES = ~f{vi^I}
	glDiscardFramebufferEXT = ~f{vIi^I}
	glDrawArraysInstancedEXT = ~f{vIiii}
	glDrawElementsInstancedEXT = ~f{vIiI^vi}
	glEndQueryEXT = ~f{vI}
	glFenceSyncAPPLE = ~f{^vII}
	glFlushMappedBufferRangeEXT = ~f{vIll}
	glGenProgramPipelinesEXT = ~f{vi^I}
	glGenQueriesEXT = ~f{vi^I}
	glGenVertexArraysOES = ~f{vi^I}
	glGetBufferPointervOES = ~f{vII^^v}
	glGetInteger64vAPPLE = ~f{vI^q}
	glGetObjectLabelEXT = ~f{vIIi^i^c}
	glGetProgramPipelineInfoLogEXT = ~f{vIi^i^c}
	glGetProgramPipelineivEXT = ~f{vII^i}
	glGetQueryObjectuivEXT = ~f{vII^I}
	glGetQueryivEXT = ~f{vII^i}
	glGetSyncivAPPLE = ~f{v^vIi^i^i}
	glInsertEventMarkerEXT = ~f{vi^c}
	glIsProgramPipelineEXT = ~f{CI}
	glIsQueryEXT = ~f{CI}
	glIsSyncAPPLE = ~f{C^v}
	glIsVertexArrayOES = ~f{CI}
	glLabelObjectEXT = ~f{vIIi^c}
	glMapBufferOES = ~f{^vII}
	glMapBufferRangeEXT = ~f{^vIllI}
	glPopGroupMarkerEXT = ~f{v}
	glProgramParameteriEXT = ~f{vIIi}
	glProgramUniform1fEXT = ~f{vIif}
	glProgramUniform1fvEXT = ~f{vIii^f}
	glProgramUniform1iEXT = ~f{vIii}
	glProgramUniform1ivEXT = ~f{vIii^i}
	glProgramUniform2fEXT = ~f{vIiff}
	glProgramUniform2fvEXT = ~f{vIii^f}
	glProgramUniform2iEXT = ~f{vIiii}
	glProgramUniform2ivEXT = ~f{vIii^i}
	glProgramUniform3fEXT = ~f{vIifff}
	glProgramUniform3fvEXT = ~f{vIii^f}
	glProgramUniform3iEXT = ~f{vIiiii}
	glProgramUniform3ivEXT = ~f{vIii^i}
	glProgramUniform4fEXT = ~f{vIiffff}
	glProgramUniform4fvEXT = ~f{vIii^f}
	glProgramUniform4iEXT = ~f{vIiiiii}
	glProgramUniform4ivEXT = ~f{vIii^i}
	glProgramUniformMatrix2fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix3fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix4fvEXT = ~f{vIiiC^f}
	glPushGroupMarkerEXT = ~f{vi^c}
	glRenderbufferStorageMultisampleAPPLE = ~f{vIiIii}
	glResolveMultisampleFramebufferAPPLE = ~f{v}
	glTexStorage2DEXT = ~f{vIiIii}
	glUnmapBufferOES = ~f{CI}
	glUseProgramStagesEXT = ~f{vIII}
	glValidateProgramPipelineEXT = ~f{vI}
	glVertexAttribDivisorEXT = ~f{vII}
	glWaitSyncAPPLE = ~f{v^vIQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/nw_object.h
	nw_release = ~f{v^v}
	nw_retain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlregexp.h
	xmlExpCtxtNbCons = ~f{i^v}
	xmlExpCtxtNbNodes = ~f{i^v}
	xmlExpDump = ~f{v^v^v}
	xmlExpExpDerive = ~f{^v^v^v^v}
	xmlExpFree = ~f{v^v^v}
	xmlExpFreeCtxt = ~f{v^v}
	xmlExpGetLanguage = ~f{i^v^v^^Ci}
	xmlExpGetStart = ~f{i^v^v^^Ci}
	xmlExpIsNillable = ~f{i^v}
	xmlExpMaxToken = ~f{i^v}
	xmlExpNewAtom = ~f{^v^v^Ci}
	xmlExpNewCtxt = ~f{^vi^v}
	xmlExpNewOr = ~f{^v^v^v^v}
	xmlExpNewRange = ~f{^v^v^vii}
	xmlExpNewSeq = ~f{^v^v^v^v}
	xmlExpParse = ~f{^v^v^c}
	xmlExpRef = ~f{v^v}
	xmlExpStringDerive = ~f{^v^v^v^Ci}
	xmlExpSubsume = ~f{i^v^v^v}
	xmlRegExecErrInfo = ~f{i^v^^C^i^i^^C^i}
	xmlRegExecNextValues = ~f{i^v^i^i^^C^i}
	xmlRegExecPushString = ~f{i^v^C^v}
	xmlRegExecPushString2 = ~f{i^v^C^C^v}
	xmlRegFreeExecCtxt = ~f{v^v}
	xmlRegFreeRegexp = ~f{v^v}
	xmlRegNewExecCtxt = ~f{^v^v^~f{v^v^C^v^v}^v}
	xmlRegexpCompile = ~f{^v^C}
	xmlRegexpExec = ~f{i^v^C}
	xmlRegexpIsDeterminist = ~f{i^v}
	xmlRegexpPrint = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/trace.h
	_os_trace_verify_printf = ~f{v^c$}
	_os_trace_with_buffer = ~f{v^v^cC^vL%~f{v^v}}
	os_trace_debug_enabled = ~f{B}
	os_trace_info_enabled = ~f{B}
	os_trace_type_enabled = ~f{BC}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/parameters.h
	nw_parameters_clear_prohibited_interface_types = ~f{v@}
	nw_parameters_clear_prohibited_interfaces = ~f{v@}
	nw_parameters_copy = ~f{@@}
	nw_parameters_copy_default_protocol_stack = ~f{@@}
	nw_parameters_copy_local_endpoint = ~f{@@}
	nw_parameters_copy_required_interface = ~f{@@}
	nw_parameters_create = ~f{@}
	nw_parameters_create_custom_ip = ~f{@C%~f{v@}}
	nw_parameters_create_secure_tcp = ~f{@%~f{v@}%~f{v@}}
	nw_parameters_create_secure_udp = ~f{@%~f{v@}%~f{v@}}
	nw_parameters_get_expired_dns_behavior = ~f{I@}
	nw_parameters_get_fast_open_enabled = ~f{B@}
	nw_parameters_get_include_peer_to_peer = ~f{B@}
	nw_parameters_get_local_only = ~f{B@}
	nw_parameters_get_multipath_service = ~f{I@}
	nw_parameters_get_prefer_no_proxy = ~f{B@}
	nw_parameters_get_prohibit_constrained = ~f{B@}
	nw_parameters_get_prohibit_expensive = ~f{B@}
	nw_parameters_get_required_interface_type = ~f{I@}
	nw_parameters_get_reuse_local_address = ~f{B@}
	nw_parameters_get_service_class = ~f{I@}
	nw_parameters_iterate_prohibited_interface_types = ~f{v@%~f{BI}}
	nw_parameters_iterate_prohibited_interfaces = ~f{v@%~f{B@}}
	nw_parameters_prohibit_interface = ~f{v@@}
	nw_parameters_prohibit_interface_type = ~f{v@I}
	nw_parameters_require_interface = ~f{v@@}
	nw_parameters_set_expired_dns_behavior = ~f{v@I}
	nw_parameters_set_fast_open_enabled = ~f{v@B}
	nw_parameters_set_include_peer_to_peer = ~f{v@B}
	nw_parameters_set_local_endpoint = ~f{v@@}
	nw_parameters_set_local_only = ~f{v@B}
	nw_parameters_set_multipath_service = ~f{v@I}
	nw_parameters_set_prefer_no_proxy = ~f{v@B}
	nw_parameters_set_prohibit_constrained = ~f{v@B}
	nw_parameters_set_prohibit_expensive = ~f{v@B}
	nw_parameters_set_required_interface_type = ~f{v@I}
	nw_parameters_set_reuse_local_address = ~f{v@B}
	nw_parameters_set_service_class = ~f{v@I}
	nw_protocol_stack_clear_application_protocols = ~f{v@}
	nw_protocol_stack_copy_internet_protocol = ~f{@@}
	nw_protocol_stack_copy_transport_protocol = ~f{@@}
	nw_protocol_stack_iterate_application_protocols = ~f{v@%~f{v@}}
	nw_protocol_stack_prepend_application_protocol = ~f{v@@}
	nw_protocol_stack_set_transport_protocol = ~f{v@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/VideoToolbox.framework/Headers/VTCompressionSession.h
	VTCompressionSessionBeginPass = ~f{i^vI^I}
	VTCompressionSessionCompleteFrames = ~f{i^v{=qiIq}}
	VTCompressionSessionCreate = ~f{i^viiI^v^v^v^~f{v^v^viI^v}^v^^v}
	VTCompressionSessionEncodeFrame = ~f{i^v^v{=qiIq}{=qiIq}^v^v^I}
	VTCompressionSessionEncodeFrameWithOutputHandler = ~f{i^v^v{=qiIq}{=qiIq}^v^I%~f{viI^v}}
	VTCompressionSessionEndPass = ~f{i^v^C^I}
	VTCompressionSessionGetPixelBufferPool = ~f{^v^v}
	VTCompressionSessionGetTimeRangesForNextPass = ~f{i^v^l^^v}
	VTCompressionSessionGetTypeID = ~f{L}
	VTCompressionSessionInvalidate = ~f{v^v}
	VTCompressionSessionPrepareToEncodeFrames = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/CAShow.h
	CAShow = ~f{v^v}
	CAShowFile = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xpathInternals.h
	valuePop = ~f{^v^v}
	valuePush = ~f{i^v^v}
	xmlXPathAddValues = ~f{v^v}
	xmlXPathBooleanFunction = ~f{v^vi}
	xmlXPathCeilingFunction = ~f{v^vi}
	xmlXPathCompareValues = ~f{i^vii}
	xmlXPathConcatFunction = ~f{v^vi}
	xmlXPathContainsFunction = ~f{v^vi}
	xmlXPathCountFunction = ~f{v^vi}
	xmlXPathDebugDumpCompExpr = ~f{v^v^vi}
	xmlXPathDebugDumpObject = ~f{v^v^vi}
	xmlXPathDifference = ~f{^v^v^v}
	xmlXPathDistinct = ~f{^v^v}
	xmlXPathDistinctSorted = ~f{^v^v}
	xmlXPathDivValues = ~f{v^v}
	xmlXPathEqualValues = ~f{i^v}
	xmlXPathErr = ~f{v^vi}
	xmlXPathEvalExpr = ~f{v^v}
	xmlXPathEvaluatePredicateResult = ~f{i^v^v}
	xmlXPathFalseFunction = ~f{v^vi}
	xmlXPathFloorFunction = ~f{v^vi}
	xmlXPathFreeParserContext = ~f{v^v}
	xmlXPathFunctionLookup = ~f{^~f{v^vi}^v^C}
	xmlXPathFunctionLookupNS = ~f{^~f{v^vi}^v^C^C}
	xmlXPathHasSameNodes = ~f{i^v^v}
	xmlXPathIdFunction = ~f{v^vi}
	xmlXPathIntersection = ~f{^v^v^v}
	xmlXPathIsNodeType = ~f{i^C}
	xmlXPathLangFunction = ~f{v^vi}
	xmlXPathLastFunction = ~f{v^vi}
	xmlXPathLeading = ~f{^v^v^v}
	xmlXPathLeadingSorted = ~f{^v^v^v}
	xmlXPathLocalNameFunction = ~f{v^vi}
	xmlXPathModValues = ~f{v^v}
	xmlXPathMultValues = ~f{v^v}
	xmlXPathNamespaceURIFunction = ~f{v^vi}
	xmlXPathNewBoolean = ~f{^vi}
	xmlXPathNewCString = ~f{^v^c}
	xmlXPathNewFloat = ~f{^vd}
	xmlXPathNewNodeSet = ~f{^v^v}
	xmlXPathNewNodeSetList = ~f{^v^v}
	xmlXPathNewParserContext = ~f{^v^C^v}
	xmlXPathNewString = ~f{^v^C}
	xmlXPathNewValueTree = ~f{^v^v}
	xmlXPathNextAncestor = ~f{^v^v^v}
	xmlXPathNextAncestorOrSelf = ~f{^v^v^v}
	xmlXPathNextAttribute = ~f{^v^v^v}
	xmlXPathNextChild = ~f{^v^v^v}
	xmlXPathNextDescendant = ~f{^v^v^v}
	xmlXPathNextDescendantOrSelf = ~f{^v^v^v}
	xmlXPathNextFollowing = ~f{^v^v^v}
	xmlXPathNextFollowingSibling = ~f{^v^v^v}
	xmlXPathNextNamespace = ~f{^v^v^v}
	xmlXPathNextParent = ~f{^v^v^v}
	xmlXPathNextPreceding = ~f{^v^v^v}
	xmlXPathNextPrecedingSibling = ~f{^v^v^v}
	xmlXPathNextSelf = ~f{^v^v^v}
	xmlXPathNodeLeading = ~f{^v^v^v}
	xmlXPathNodeLeadingSorted = ~f{^v^v^v}
	xmlXPathNodeSetAdd = ~f{i^v^v}
	xmlXPathNodeSetAddNs = ~f{i^v^v^v}
	xmlXPathNodeSetAddUnique = ~f{i^v^v}
	xmlXPathNodeSetContains = ~f{i^v^v}
	xmlXPathNodeSetDel = ~f{v^v^v}
	xmlXPathNodeSetFreeNs = ~f{v^v}
	xmlXPathNodeSetMerge = ~f{^v^v^v}
	xmlXPathNodeSetRemove = ~f{v^vi}
	xmlXPathNodeSetSort = ~f{v^v}
	xmlXPathNodeTrailing = ~f{^v^v^v}
	xmlXPathNodeTrailingSorted = ~f{^v^v^v}
	xmlXPathNormalizeFunction = ~f{v^vi}
	xmlXPathNotEqualValues = ~f{i^v}
	xmlXPathNotFunction = ~f{v^vi}
	xmlXPathNsLookup = ~f{^C^v^C}
	xmlXPathNumberFunction = ~f{v^vi}
	xmlXPathParseNCName = ~f{^C^v}
	xmlXPathParseName = ~f{^C^v}
	xmlXPathPopBoolean = ~f{i^v}
	xmlXPathPopExternal = ~f{^v^v}
	xmlXPathPopNodeSet = ~f{^v^v}
	xmlXPathPopNumber = ~f{d^v}
	xmlXPathPopString = ~f{^C^v}
	xmlXPathPositionFunction = ~f{v^vi}
	xmlXPathRegisterAllFunctions = ~f{v^v}
	xmlXPathRegisterFunc = ~f{i^v^C^~f{v^vi}}
	xmlXPathRegisterFuncLookup = ~f{v^v^~f{^~f{v^vi}^v^C^C}^v}
	xmlXPathRegisterFuncNS = ~f{i^v^C^C^~f{v^vi}}
	xmlXPathRegisterNs = ~f{i^v^C^C}
	xmlXPathRegisterVariable = ~f{i^v^C^v}
	xmlXPathRegisterVariableLookup = ~f{v^v^~f{^v^v^C^C}^v}
	xmlXPathRegisterVariableNS = ~f{i^v^C^C^v}
	xmlXPathRegisteredFuncsCleanup = ~f{v^v}
	xmlXPathRegisteredNsCleanup = ~f{v^v}
	xmlXPathRegisteredVariablesCleanup = ~f{v^v}
	xmlXPathRoot = ~f{v^v}
	xmlXPathRoundFunction = ~f{v^vi}
	xmlXPathStartsWithFunction = ~f{v^vi}
	xmlXPathStringEvalNumber = ~f{d^C}
	xmlXPathStringFunction = ~f{v^vi}
	xmlXPathStringLengthFunction = ~f{v^vi}
	xmlXPathSubValues = ~f{v^v}
	xmlXPathSubstringAfterFunction = ~f{v^vi}
	xmlXPathSubstringBeforeFunction = ~f{v^vi}
	xmlXPathSubstringFunction = ~f{v^vi}
	xmlXPathSumFunction = ~f{v^vi}
	xmlXPathTrailing = ~f{^v^v^v}
	xmlXPathTrailingSorted = ~f{^v^v^v}
	xmlXPathTranslateFunction = ~f{v^vi}
	xmlXPathTrueFunction = ~f{v^vi}
	xmlXPathValueFlipSign = ~f{v^v}
	xmlXPathVariableLookup = ~f{^v^v^C}
	xmlXPathVariableLookupNS = ~f{^v^v^C^C}
	xmlXPathWrapCString = ~f{^v^c}
	xmlXPathWrapExternal = ~f{^v^v}
	xmlXPathWrapNodeSet = ~f{^v^v}
	xmlXPathWrapString = ~f{^v^C}
	xmlXPatherror = ~f{v^v^cii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/langinfo.h
	nl_langinfo = ~f{^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIDevice.h
	UIDeviceOrientationIsFlat = ~f{Bl}
	UIDeviceOrientationIsLandscape = ~f{Bl}
	UIDeviceOrientationIsPortrait = ~f{Bl}
	UIDeviceOrientationIsValidInterfaceOrientation = ~f{Bl}
	UI_USER_INTERFACE_IDIOM = ?
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Headers/MPSState.h
	MPSStateBatchIncrementReadCount = ~f{L@l}
	MPSStateBatchResourceSize = ~f{L@}
	MPSStateBatchSynchronize = ~f{v@@}
/usr/local/lib/clang/9.0.1/include/bmi2intrin.h
	_bzhi_u32 = ~f{III}
	_bzhi_u64 = ~f{QQQ}
	_mulx_u64 = ~f{QQQ^Q}
	_pdep_u32 = ~f{III}
	_pdep_u64 = ~f{QQQ}
	_pext_u32 = ~f{III}
	_pext_u64 = ~f{QQQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/matrix.h
	__rotate1 = ~f{~V{4d}~V{4d}}
	__rotate2 = ~f{~V{4d}~V{4d}}
	__rotate3 = ~f{~V{4d}~V{4d}}
	matrix_multiply = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	matrix_scale = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}d{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_add = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_almost_equal_elements = ~f{B{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}d}
	simd_almost_equal_elements_relative = ~f{B{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}d}
	simd_determinant = ~f{d{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_diagonal_matrix = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}~V{4d}}
	simd_equal = ~f{B{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_inverse = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_linear_combination = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}d{=~V{4d}~V{4d}~V{4d}~V{4d}}d{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_matrix = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}~V{4d}~V{4d}~V{4d}~V{4d}}
	simd_matrix3x3 = ~f{{=~V{3d}~V{3d}~V{3d}}{=~V{4d}}}
	simd_matrix4x4 = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}}}
	simd_matrix_from_rows = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}~V{4d}~V{4d}~V{4d}~V{4d}}
	simd_mul = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_sub = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_transpose = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenGLES.framework/Headers/ES3/gl.h
	glActiveTexture = ~f{vI}
	glAttachShader = ~f{vII}
	glBeginQuery = ~f{vII}
	glBeginTransformFeedback = ~f{vI}
	glBindAttribLocation = ~f{vII^c}
	glBindBuffer = ~f{vII}
	glBindBufferBase = ~f{vIII}
	glBindBufferRange = ~f{vIIIll}
	glBindFramebuffer = ~f{vII}
	glBindRenderbuffer = ~f{vII}
	glBindSampler = ~f{vII}
	glBindTexture = ~f{vII}
	glBindTransformFeedback = ~f{vII}
	glBindVertexArray = ~f{vI}
	glBlendColor = ~f{vffff}
	glBlendEquation = ~f{vI}
	glBlendEquationSeparate = ~f{vII}
	glBlendFunc = ~f{vII}
	glBlendFuncSeparate = ~f{vIIII}
	glBlitFramebuffer = ~f{viiiiiiiiII}
	glBufferData = ~f{vIl^vI}
	glBufferSubData = ~f{vIll^v}
	glCheckFramebufferStatus = ~f{II}
	glClear = ~f{vI}
	glClearBufferfi = ~f{vIifi}
	glClearBufferfv = ~f{vIi^f}
	glClearBufferiv = ~f{vIi^i}
	glClearBufferuiv = ~f{vIi^I}
	glClearColor = ~f{vffff}
	glClearDepthf = ~f{vf}
	glClearStencil = ~f{vi}
	glClientWaitSync = ~f{I^vIQ}
	glColorMask = ~f{vCCCC}
	glCompileShader = ~f{vI}
	glCompressedTexImage2D = ~f{vIiIiiii^v}
	glCompressedTexImage3D = ~f{vIiIiiiii^v}
	glCompressedTexSubImage2D = ~f{vIiiiiiIi^v}
	glCompressedTexSubImage3D = ~f{vIiiiiiiiIi^v}
	glCopyBufferSubData = ~f{vIIlll}
	glCopyTexImage2D = ~f{vIiIiiiii}
	glCopyTexSubImage2D = ~f{vIiiiiiii}
	glCopyTexSubImage3D = ~f{vIiiiiiiii}
	glCreateProgram = ~f{I}
	glCreateShader = ~f{II}
	glCullFace = ~f{vI}
	glDeleteBuffers = ~f{vi^I}
	glDeleteFramebuffers = ~f{vi^I}
	glDeleteProgram = ~f{vI}
	glDeleteQueries = ~f{vi^I}
	glDeleteRenderbuffers = ~f{vi^I}
	glDeleteSamplers = ~f{vi^I}
	glDeleteShader = ~f{vI}
	glDeleteSync = ~f{v^v}
	glDeleteTextures = ~f{vi^I}
	glDeleteTransformFeedbacks = ~f{vi^I}
	glDeleteVertexArrays = ~f{vi^I}
	glDepthFunc = ~f{vI}
	glDepthMask = ~f{vC}
	glDepthRangef = ~f{vff}
	glDetachShader = ~f{vII}
	glDisable = ~f{vI}
	glDisableVertexAttribArray = ~f{vI}
	glDrawArrays = ~f{vIii}
	glDrawArraysInstanced = ~f{vIiii}
	glDrawBuffers = ~f{vi^I}
	glDrawElements = ~f{vIiI^v}
	glDrawElementsInstanced = ~f{vIiI^vi}
	glDrawRangeElements = ~f{vIIIiI^v}
	glEnable = ~f{vI}
	glEnableVertexAttribArray = ~f{vI}
	glEndQuery = ~f{vI}
	glEndTransformFeedback = ~f{v}
	glFenceSync = ~f{^vII}
	glFinish = ~f{v}
	glFlush = ~f{v}
	glFlushMappedBufferRange = ~f{vIll}
	glFramebufferRenderbuffer = ~f{vIIII}
	glFramebufferTexture2D = ~f{vIIIIi}
	glFramebufferTextureLayer = ~f{vIIIii}
	glFrontFace = ~f{vI}
	glGenBuffers = ~f{vi^I}
	glGenFramebuffers = ~f{vi^I}
	glGenQueries = ~f{vi^I}
	glGenRenderbuffers = ~f{vi^I}
	glGenSamplers = ~f{vi^I}
	glGenTextures = ~f{vi^I}
	glGenTransformFeedbacks = ~f{vi^I}
	glGenVertexArrays = ~f{vi^I}
	glGenerateMipmap = ~f{vI}
	glGetActiveAttrib = ~f{vIIi^i^i^I^c}
	glGetActiveUniform = ~f{vIIi^i^i^I^c}
	glGetActiveUniformBlockName = ~f{vIIi^i^c}
	glGetActiveUniformBlockiv = ~f{vIII^i}
	glGetActiveUniformsiv = ~f{vIi^II^i}
	glGetAttachedShaders = ~f{vIi^i^I}
	glGetAttribLocation = ~f{iI^c}
	glGetBooleanv = ~f{vI^C}
	glGetBufferParameteri64v = ~f{vII^q}
	glGetBufferParameteriv = ~f{vII^i}
	glGetBufferPointerv = ~f{vII^^v}
	glGetError = ~f{I}
	glGetFloatv = ~f{vI^f}
	glGetFragDataLocation = ~f{iI^c}
	glGetFramebufferAttachmentParameteriv = ~f{vIII^i}
	glGetInteger64i_v = ~f{vII^q}
	glGetInteger64v = ~f{vI^q}
	glGetIntegeri_v = ~f{vII^i}
	glGetIntegerv = ~f{vI^i}
	glGetInternalformativ = ~f{vIIIi^i}
	glGetProgramBinary = ~f{vIi^i^I^v}
	glGetProgramInfoLog = ~f{vIi^i^c}
	glGetProgramiv = ~f{vII^i}
	glGetQueryObjectuiv = ~f{vII^I}
	glGetQueryiv = ~f{vII^i}
	glGetRenderbufferParameteriv = ~f{vII^i}
	glGetSamplerParameterfv = ~f{vII^f}
	glGetSamplerParameteriv = ~f{vII^i}
	glGetShaderInfoLog = ~f{vIi^i^c}
	glGetShaderPrecisionFormat = ~f{vII^i^i}
	glGetShaderSource = ~f{vIi^i^c}
	glGetShaderiv = ~f{vII^i}
	glGetString = ~f{^CI}
	glGetStringi = ~f{^CII}
	glGetSynciv = ~f{v^vIi^i^i}
	glGetTexParameterfv = ~f{vII^f}
	glGetTexParameteriv = ~f{vII^i}
	glGetTransformFeedbackVarying = ~f{vIIi^i^i^I^c}
	glGetUniformBlockIndex = ~f{II^c}
	glGetUniformIndices = ~f{vIi^^c^I}
	glGetUniformLocation = ~f{iI^c}
	glGetUniformfv = ~f{vIi^f}
	glGetUniformiv = ~f{vIi^i}
	glGetUniformuiv = ~f{vIi^I}
	glGetVertexAttribIiv = ~f{vII^i}
	glGetVertexAttribIuiv = ~f{vII^I}
	glGetVertexAttribPointerv = ~f{vII^^v}
	glGetVertexAttribfv = ~f{vII^f}
	glGetVertexAttribiv = ~f{vII^i}
	glHint = ~f{vII}
	glInvalidateFramebuffer = ~f{vIi^I}
	glInvalidateSubFramebuffer = ~f{vIi^Iiiii}
	glIsBuffer = ~f{CI}
	glIsEnabled = ~f{CI}
	glIsFramebuffer = ~f{CI}
	glIsProgram = ~f{CI}
	glIsQuery = ~f{CI}
	glIsRenderbuffer = ~f{CI}
	glIsSampler = ~f{CI}
	glIsShader = ~f{CI}
	glIsSync = ~f{C^v}
	glIsTexture = ~f{CI}
	glIsTransformFeedback = ~f{CI}
	glIsVertexArray = ~f{CI}
	glLineWidth = ~f{vf}
	glLinkProgram = ~f{vI}
	glMapBufferRange = ~f{^vIllI}
	glPauseTransformFeedback = ~f{v}
	glPixelStorei = ~f{vIi}
	glPolygonOffset = ~f{vff}
	glProgramBinary = ~f{vII^vi}
	glProgramParameteri = ~f{vIIi}
	glReadBuffer = ~f{vI}
	glReadPixels = ~f{viiiiII^v}
	glReleaseShaderCompiler = ~f{v}
	glRenderbufferStorage = ~f{vIIii}
	glRenderbufferStorageMultisample = ~f{vIiIii}
	glResumeTransformFeedback = ~f{v}
	glSampleCoverage = ~f{vfC}
	glSamplerParameterf = ~f{vIIf}
	glSamplerParameterfv = ~f{vII^f}
	glSamplerParameteri = ~f{vIIi}
	glSamplerParameteriv = ~f{vII^i}
	glScissor = ~f{viiii}
	glShaderBinary = ~f{vi^II^vi}
	glShaderSource = ~f{vIi^^c^i}
	glStencilFunc = ~f{vIiI}
	glStencilFuncSeparate = ~f{vIIiI}
	glStencilMask = ~f{vI}
	glStencilMaskSeparate = ~f{vII}
	glStencilOp = ~f{vIII}
	glStencilOpSeparate = ~f{vIIII}
	glTexImage2D = ~f{vIiiiiiII^v}
	glTexImage3D = ~f{vIiiiiiiII^v}
	glTexParameterf = ~f{vIIf}
	glTexParameterfv = ~f{vII^f}
	glTexParameteri = ~f{vIIi}
	glTexParameteriv = ~f{vII^i}
	glTexStorage2D = ~f{vIiIii}
	glTexStorage3D = ~f{vIiIiii}
	glTexSubImage2D = ~f{vIiiiiiII^v}
	glTexSubImage3D = ~f{vIiiiiiiiII^v}
	glTransformFeedbackVaryings = ~f{vIi^^cI}
	glUniform1f = ~f{vif}
	glUniform1fv = ~f{vii^f}
	glUniform1i = ~f{vii}
	glUniform1iv = ~f{vii^i}
	glUniform1ui = ~f{viI}
	glUniform1uiv = ~f{vii^I}
	glUniform2f = ~f{viff}
	glUniform2fv = ~f{vii^f}
	glUniform2i = ~f{viii}
	glUniform2iv = ~f{vii^i}
	glUniform2ui = ~f{viII}
	glUniform2uiv = ~f{vii^I}
	glUniform3f = ~f{vifff}
	glUniform3fv = ~f{vii^f}
	glUniform3i = ~f{viiii}
	glUniform3iv = ~f{vii^i}
	glUniform3ui = ~f{viIII}
	glUniform3uiv = ~f{vii^I}
	glUniform4f = ~f{viffff}
	glUniform4fv = ~f{vii^f}
	glUniform4i = ~f{viiiii}
	glUniform4iv = ~f{vii^i}
	glUniform4ui = ~f{viIIII}
	glUniform4uiv = ~f{vii^I}
	glUniformBlockBinding = ~f{vIII}
	glUniformMatrix2fv = ~f{viiC^f}
	glUniformMatrix2x3fv = ~f{viiC^f}
	glUniformMatrix2x4fv = ~f{viiC^f}
	glUniformMatrix3fv = ~f{viiC^f}
	glUniformMatrix3x2fv = ~f{viiC^f}
	glUniformMatrix3x4fv = ~f{viiC^f}
	glUniformMatrix4fv = ~f{viiC^f}
	glUniformMatrix4x2fv = ~f{viiC^f}
	glUniformMatrix4x3fv = ~f{viiC^f}
	glUnmapBuffer = ~f{CI}
	glUseProgram = ~f{vI}
	glValidateProgram = ~f{vI}
	glVertexAttrib1f = ~f{vIf}
	glVertexAttrib1fv = ~f{vI^f}
	glVertexAttrib2f = ~f{vIff}
	glVertexAttrib2fv = ~f{vI^f}
	glVertexAttrib3f = ~f{vIfff}
	glVertexAttrib3fv = ~f{vI^f}
	glVertexAttrib4f = ~f{vIffff}
	glVertexAttrib4fv = ~f{vI^f}
	glVertexAttribDivisor = ~f{vII}
	glVertexAttribI4i = ~f{vIiiii}
	glVertexAttribI4iv = ~f{vI^i}
	glVertexAttribI4ui = ~f{vIIIII}
	glVertexAttribI4uiv = ~f{vI^I}
	glVertexAttribIPointer = ~f{vIiIi^v}
	glVertexAttribPointer = ~f{vIiICi^v}
	glViewport = ~f{viiii}
	glWaitSync = ~f{v^vIQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/entities.h
	xmlAddDocEntity = ~f{^v^v^Ci^C^C^C}
	xmlAddDtdEntity = ~f{^v^v^Ci^C^C^C}
	xmlCleanupPredefinedEntities = ~f{v}
	xmlCopyEntitiesTable = ~f{^v^v}
	xmlCreateEntitiesTable = ~f{^v}
	xmlDumpEntitiesTable = ~f{v^v^v}
	xmlDumpEntityDecl = ~f{v^v^v}
	xmlEncodeEntities = ~f{^C^v^C}
	xmlEncodeEntitiesReentrant = ~f{^C^v^C}
	xmlEncodeSpecialChars = ~f{^C^v^C}
	xmlFreeEntitiesTable = ~f{v^v}
	xmlGetDocEntity = ~f{^v^v^C}
	xmlGetDtdEntity = ~f{^v^v^C}
	xmlGetParameterEntity = ~f{^v^v^C}
	xmlGetPredefinedEntity = ~f{^v^C}
	xmlInitializePredefinedEntities = ~f{v}
	xmlNewEntity = ~f{^v^v^Ci^C^C^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferPool.h
	CVPixelBufferPoolCreate = ~f{i^v^v^v^^v}
	CVPixelBufferPoolCreatePixelBuffer = ~f{i^v^v^^v}
	CVPixelBufferPoolCreatePixelBufferWithAuxAttributes = ~f{i^v^v^v^^v}
	CVPixelBufferPoolFlush = ~f{v^vQ}
	CVPixelBufferPoolGetAttributes = ~f{^v^v}
	CVPixelBufferPoolGetPixelBufferAttributes = ~f{^v^v}
	CVPixelBufferPoolGetTypeID = ~f{L}
	CVPixelBufferPoolRelease = ~f{v^v}
	CVPixelBufferPoolRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/putil.h
	u_UCharsToChars = ~f{v^S^ci}
	u_charsToUChars = ~f{v^c^Si}
	u_getDataDirectory = ~f{^c}
	u_getTimeZoneFilesDirectory = ~f{^c^i}
	u_setDataDirectory = ~f{v^c}
	u_setTimeZoneFilesDirectory = ~f{v^c^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMIDI.framework/Headers/MIDIServices.h
	MIDIClientCreate = ~f{i^v^~f{v^v^v}^v^I}
	MIDIClientCreateWithBlock = ~f{i^v^I%~f{v^v}}
	MIDIClientDispose = ~f{iI}
	MIDIDestinationCreate = ~f{iI^v^~f{v^v^v^v}^v^I}
	MIDIDestinationCreateWithBlock = ~f{iI^v^I%~f{v^v^v}}
	MIDIDeviceGetEntity = ~f{IIL}
	MIDIDeviceGetNumberOfEntities = ~f{LI}
	MIDIEndpointDispose = ~f{iI}
	MIDIEndpointGetEntity = ~f{iI^I}
	MIDIEntityGetDestination = ~f{IIL}
	MIDIEntityGetDevice = ~f{iI^I}
	MIDIEntityGetNumberOfDestinations = ~f{LI}
	MIDIEntityGetNumberOfSources = ~f{LI}
	MIDIEntityGetSource = ~f{IIL}
	MIDIFlushOutput = ~f{iI}
	MIDIGetDestination = ~f{IL}
	MIDIGetDevice = ~f{IL}
	MIDIGetExternalDevice = ~f{IL}
	MIDIGetNumberOfDestinations = ~f{L}
	MIDIGetNumberOfDevices = ~f{L}
	MIDIGetNumberOfExternalDevices = ~f{L}
	MIDIGetNumberOfSources = ~f{L}
	MIDIGetSource = ~f{IL}
	MIDIInputPortCreate = ~f{iI^v^~f{v^v^v^v}^v^I}
	MIDIInputPortCreateWithBlock = ~f{iI^v^I%~f{v^v^v}}
	MIDIObjectFindByUniqueID = ~f{ii^I^i}
	MIDIObjectGetDataProperty = ~f{iI^v^^v}
	MIDIObjectGetDictionaryProperty = ~f{iI^v^^v}
	MIDIObjectGetIntegerProperty = ~f{iI^v^i}
	MIDIObjectGetProperties = ~f{iI^^vC}
	MIDIObjectGetStringProperty = ~f{iI^v^^v}
	MIDIObjectRemoveProperty = ~f{iI^v}
	MIDIObjectSetDataProperty = ~f{iI^v^v}
	MIDIObjectSetDictionaryProperty = ~f{iI^v^v}
	MIDIObjectSetIntegerProperty = ~f{iI^vi}
	MIDIObjectSetStringProperty = ~f{iI^v^v}
	MIDIOutputPortCreate = ~f{iI^v^I}
	MIDIPacketListAdd = ~f{^v^vL^vQL^C}
	MIDIPacketListInit = ~f{^v^v}
	MIDIPacketNext = ~f{^v^v}
	MIDIPortConnectSource = ~f{iII^v}
	MIDIPortDisconnectSource = ~f{iII}
	MIDIPortDispose = ~f{iI}
	MIDIReceived = ~f{iI^v}
	MIDIRestart = ~f{i}
	MIDISend = ~f{iII^v}
	MIDISendSysex = ~f{i^v}
	MIDISourceCreate = ~f{iI^v^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/error.h
	nw_error_copy_cf_error = ~f{^v@}
	nw_error_get_error_code = ~f{i@}
	nw_error_get_error_domain = ~f{I@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/Sparse/Solve.h
	SparseCleanup = ~f{v{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
	SparseConjugateGradient = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}idd^~f{v^c}}}
	SparseConvertFromCoordinate = ~f{{={=ii^l^i{=BCIIB}C}^f}iilC{=BCIIB}^i^i^f^v^v}
	SparseConvertFromOpaque = ~f{{={=ii^l^i{=BCIIB}C}^f}^v}
	SparseCreatePreconditioner = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}i{={=ii^l^i{=BCIIB}C}^f}}
	SparseCreateSubfactor = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}}
	SparseFactor = ~f{{=iii{=BCIIB}CC^vLLLL}C{=ii^l^i{=BCIIB}C}{=IC^i^i^~f{^vL}^~f{v^v}^~f{v^c}}}
	SparseGMRES = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}Ciidd^~f{v^c}}}
	SparseGetStateSize_Double = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetStateSize_Float = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetTranspose = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseIterate = ~f{v{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}i^B^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}
	SparseLSMR = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}diiddddi^~f{v^c}}}
	SparseMultiply = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{=i^f}{=i^f}^v}
	SparseMultiplyAdd = ~f{vf{={=ii^l^i{=BCIIB}C}^f}{=i^f}{=i^f}}
	SparseRefactor = ~f{v{={=ii^l^i{=BCIIB}C}^f}^v{=IC^vdd}^v}
	SparseRetain = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseSolve = ~f{i{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}%~f{vBI{=i^f}{=i^f}}{=i^f}{=i^f}{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColorSpace.h
	CGColorSpaceCopyICCData = ~f{^v^v}
	CGColorSpaceCopyICCProfile = ~f{^v^v}
	CGColorSpaceCopyName = ~f{^v^v}
	CGColorSpaceCopyPropertyList = ~f{^v^v}
	CGColorSpaceCreateCalibratedGray = ~f{^v^d^dd}
	CGColorSpaceCreateCalibratedRGB = ~f{^v^d^d^d^d}
	CGColorSpaceCreateDeviceCMYK = ~f{^v}
	CGColorSpaceCreateDeviceGray = ~f{^v}
	CGColorSpaceCreateDeviceRGB = ~f{^v}
	CGColorSpaceCreateICCBased = ~f{^vL^d^v^v}
	CGColorSpaceCreateIndexed = ~f{^v^vL^C}
	CGColorSpaceCreateLab = ~f{^v^d^d^d}
	CGColorSpaceCreatePattern = ~f{^v^v}
	CGColorSpaceCreateWithICCData = ~f{^v^v}
	CGColorSpaceCreateWithICCProfile = ~f{^v^v}
	CGColorSpaceCreateWithName = ~f{^v^v}
	CGColorSpaceCreateWithPlatformColorSpace = ~f{^v^v}
	CGColorSpaceCreateWithPropertyList = ~f{^v^v}
	CGColorSpaceGetBaseColorSpace = ~f{^v^v}
	CGColorSpaceGetColorTable = ~f{v^v^C}
	CGColorSpaceGetColorTableCount = ~f{L^v}
	CGColorSpaceGetModel = ~f{i^v}
	CGColorSpaceGetName = ~f{^v^v}
	CGColorSpaceGetNumberOfComponents = ~f{L^v}
	CGColorSpaceGetTypeID = ~f{L}
	CGColorSpaceIsHDR = ~f{B^v}
	CGColorSpaceIsWideGamutRGB = ~f{B^v}
	CGColorSpaceRelease = ~f{v^v}
	CGColorSpaceRetain = ~f{^v^v}
	CGColorSpaceSupportsOutput = ~f{B^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFString.h
	CFShow = ~f{v^v}
	CFShowStr = ~f{v^v}
	CFStringAppend = ~f{v^v^v}
	CFStringAppendCString = ~f{v^v^cI}
	CFStringAppendCharacters = ~f{v^v^Sl}
	CFStringAppendFormat = ~f{v^v^v^v$}
	CFStringAppendFormatAndArguments = ~f{v^v^v^v^v}
	CFStringAppendPascalString = ~f{v^v^CI}
	CFStringCapitalize = ~f{v^v^v}
	CFStringCompare = ~f{l^v^vL}
	CFStringCompareWithOptions = ~f{l^v^v{=ll}L}
	CFStringCompareWithOptionsAndLocale = ~f{l^v^v{=ll}L^v}
	CFStringConvertEncodingToIANACharSetName = ~f{^vI}
	CFStringConvertEncodingToNSStringEncoding = ~f{LI}
	CFStringConvertEncodingToWindowsCodepage = ~f{II}
	CFStringConvertIANACharSetNameToEncoding = ~f{I^v}
	CFStringConvertNSStringEncodingToEncoding = ~f{IL}
	CFStringConvertWindowsCodepageToEncoding = ~f{II}
	CFStringCreateArrayBySeparatingStrings = ~f{^v^v^v^v}
	CFStringCreateArrayWithFindResults = ~f{^v^v^v^v{=ll}L}
	CFStringCreateByCombiningStrings = ~f{^v^v^v^v}
	CFStringCreateCopy = ~f{^v^v^v}
	CFStringCreateExternalRepresentation = ~f{^v^v^vIC}
	CFStringCreateFromExternalRepresentation = ~f{^v^v^vI}
	CFStringCreateMutable = ~f{^v^vl}
	CFStringCreateMutableCopy = ~f{^v^vl^v}
	CFStringCreateMutableWithExternalCharactersNoCopy = ~f{^v^v^Sll^v}
	CFStringCreateWithBytes = ~f{^v^v^ClIC}
	CFStringCreateWithBytesNoCopy = ~f{^v^v^ClIC^v}
	CFStringCreateWithCString = ~f{^v^v^cI}
	CFStringCreateWithCStringNoCopy = ~f{^v^v^cI^v}
	CFStringCreateWithCharacters = ~f{^v^v^Sl}
	CFStringCreateWithCharactersNoCopy = ~f{^v^v^Sl^v}
	CFStringCreateWithFileSystemRepresentation = ~f{^v^v^c}
	CFStringCreateWithFormat = ~f{^v^v^v^v$}
	CFStringCreateWithFormatAndArguments = ~f{^v^v^v^v^v}
	CFStringCreateWithPascalString = ~f{^v^v^CI}
	CFStringCreateWithPascalStringNoCopy = ~f{^v^v^CI^v}
	CFStringCreateWithSubstring = ~f{^v^v^v{=ll}}
	CFStringDelete = ~f{v^v{=ll}}
	CFStringFind = ~f{{=ll}^v^vL}
	CFStringFindAndReplace = ~f{l^v^v^v{=ll}L}
	CFStringFindCharacterFromSet = ~f{C^v^v{=ll}L^v}
	CFStringFindWithOptions = ~f{C^v^v{=ll}L^v}
	CFStringFindWithOptionsAndLocale = ~f{C^v^v{=ll}L^v^v}
	CFStringFold = ~f{v^vL^v}
	CFStringGetBytes = ~f{l^v{=ll}ICC^Cl^l}
	CFStringGetCString = ~f{C^v^clI}
	CFStringGetCStringPtr = ~f{^c^vI}
	CFStringGetCharacterAtIndex = ~f{S^vl}
	CFStringGetCharacterFromInlineBuffer = ~f{S^vl}
	CFStringGetCharacters = ~f{v^v{=ll}^S}
	CFStringGetCharactersPtr = ~f{^S^v}
	CFStringGetDoubleValue = ~f{d^v}
	CFStringGetFastestEncoding = ~f{I^v}
	CFStringGetFileSystemRepresentation = ~f{C^v^cl}
	CFStringGetHyphenationLocationBeforeIndex = ~f{l^vl{=ll}L^v^I}
	CFStringGetIntValue = ~f{i^v}
	CFStringGetLength = ~f{l^v}
	CFStringGetLineBounds = ~f{v^v{=ll}^l^l^l}
	CFStringGetListOfAvailableEncodings = ~f{^I}
	CFStringGetLongCharacterForSurrogatePair = ~f{ISS}
	CFStringGetMaximumSizeForEncoding = ~f{llI}
	CFStringGetMaximumSizeOfFileSystemRepresentation = ~f{l^v}
	CFStringGetMostCompatibleMacStringEncoding = ~f{II}
	CFStringGetNameOfEncoding = ~f{^vI}
	CFStringGetParagraphBounds = ~f{v^v{=ll}^l^l^l}
	CFStringGetPascalString = ~f{C^v^ClI}
	CFStringGetPascalStringPtr = ~f{^C^vI}
	CFStringGetRangeOfComposedCharactersAtIndex = ~f{{=ll}^vl}
	CFStringGetSmallestEncoding = ~f{I^v}
	CFStringGetSurrogatePairForLongCharacter = ~f{CI^S}
	CFStringGetSystemEncoding = ~f{I}
	CFStringGetTypeID = ~f{L}
	CFStringHasPrefix = ~f{C^v^v}
	CFStringHasSuffix = ~f{C^v^v}
	CFStringInitInlineBuffer = ~f{v^v^v{=ll}}
	CFStringInsert = ~f{v^vl^v}
	CFStringIsEncodingAvailable = ~f{CI}
	CFStringIsHyphenationAvailableForLocale = ~f{C^v}
	CFStringIsSurrogateHighCharacter = ~f{CS}
	CFStringIsSurrogateLowCharacter = ~f{CS}
	CFStringLowercase = ~f{v^v^v}
	CFStringNormalize = ~f{v^vl}
	CFStringPad = ~f{v^v^vll}
	CFStringReplace = ~f{v^v{=ll}^v}
	CFStringReplaceAll = ~f{v^v^v}
	CFStringSetExternalCharactersNoCopy = ~f{v^v^Sll}
	CFStringTransform = ~f{C^v^v^vC}
	CFStringTrim = ~f{v^v^v}
	CFStringTrimWhitespace = ~f{v^v}
	CFStringUppercase = ~f{v^v^v}
	__CFStringMakeConstantString = ~f{^v^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/execinfo.h
	backtrace = ~f{i^^vi}
	backtrace_from_fp = ~f{i^v^^vi}
	backtrace_image_offsets = ~f{v^^v^vi}
	backtrace_symbols = ~f{^^c^^vi}
	backtrace_symbols_fd = ~f{v^^vii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/iAd.framework/Headers/ADBannerView.h
	ADClampedBannerSize = ~f{{=dd}{=dd}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Conversion.h
	vImageBufferFill_ARGB16S = ~f{l^v^sI}
	vImageBufferFill_ARGB16U = ~f{l^v^SI}
	vImageBufferFill_ARGB8888 = ~f{l^v^CI}
	vImageBufferFill_ARGBFFFF = ~f{l^v^fI}
	vImageBufferFill_CbCr16U = ~f{l^v^SI}
	vImageBufferFill_CbCr8 = ~f{l^v^CI}
	vImageByteSwap_Planar16U = ~f{l^v^vI}
	vImageClip_PlanarF = ~f{l^v^vffI}
	vImageConvert_12UTo16U = ~f{l^v^vI}
	vImageConvert_16Fto16Q12 = ~f{l^v^vI}
	vImageConvert_16Fto16U = ~f{l^v^vI}
	vImageConvert_16Q12to16F = ~f{l^v^vI}
	vImageConvert_16Q12to16U = ~f{l^v^vI}
	vImageConvert_16Q12to8 = ~f{l^v^vI}
	vImageConvert_16Q12toF = ~f{l^v^vI}
	vImageConvert_16SToF = ~f{l^v^vffI}
	vImageConvert_16UTo12U = ~f{l^v^vI}
	vImageConvert_16UToF = ~f{l^v^vffI}
	vImageConvert_16UToPlanar8 = ~f{l^v^vI}
	vImageConvert_16Uto16F = ~f{l^v^vI}
	vImageConvert_16Uto16Q12 = ~f{l^v^vI}
	vImageConvert_420Yp8_Cb8_Cr8ToARGB8888 = ~f{l^v^v^v^v^v^CCI}
	vImageConvert_420Yp8_CbCr8ToARGB8888 = ~f{l^v^v^v^v^CCI}
	vImageConvert_422CbYpCrYp16ToARGB16U = ~f{l^v^v^v^CSI}
	vImageConvert_422CbYpCrYp16ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_422CbYpCrYp8ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_422CbYpCrYp8_AA8ToARGB8888 = ~f{l^v^v^v^v^CI}
	vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB16Q12 = ~f{l^v^v^v^CsI}
	vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_422YpCbYpCr8ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_444AYpCbCr16ToARGB16U = ~f{l^v^v^v^CI}
	vImageConvert_444AYpCbCr16ToARGB8888 = ~f{l^v^v^v^CI}
	vImageConvert_444AYpCbCr8ToARGB8888 = ~f{l^v^v^v^CI}
	vImageConvert_444CbYpCrA8ToARGB8888 = ~f{l^v^v^v^CI}
	vImageConvert_444CrYpCb10ToARGB16Q12 = ~f{l^v^v^v^CsI}
	vImageConvert_444CrYpCb10ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_444CrYpCb8ToARGB8888 = ~f{l^v^v^v^CCI}
	vImageConvert_8to16Q12 = ~f{l^v^vI}
	vImageConvert_ARGB1555toARGB8888 = ~f{l^v^vI}
	vImageConvert_ARGB1555toPlanar8 = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB1555toRGB565 = ~f{l^v^vI}
	vImageConvert_ARGB16Q12To422CrYpCbYpCbYpCbYpCrYpCrYp10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16Q12To444CrYpCb10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16Q12ToARGB2101010 = ~f{l^v^viiii^CI}
	vImageConvert_ARGB16Q12ToRGBA1010102 = ~f{l^v^viiii^CI}
	vImageConvert_ARGB16Q12ToXRGB2101010 = ~f{l^v^viiii^CI}
	vImageConvert_ARGB16UTo422CbYpCrYp16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16UTo444AYpCbCr16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB16UToARGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB16UToARGB8888 = ~f{l^v^v^CC^CI}
	vImageConvert_ARGB16UToRGBA1010102 = ~f{l^v^vii^CI}
	vImageConvert_ARGB16UToXRGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB16UtoARGB8888_dithered = ~f{l^v^vi^CI}
	vImageConvert_ARGB16UtoPlanar16U = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB16UtoRGB16U = ~f{l^v^vI}
	vImageConvert_ARGB2101010ToARGB16F = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGB16Q12 = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGB16U = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGB8888 = ~f{l^v^vii^CI}
	vImageConvert_ARGB2101010ToARGBFFFF = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888To420Yp8_Cb8_Cr8 = ~f{l^v^v^v^v^v^CI}
	vImageConvert_ARGB8888To420Yp8_CbCr8 = ~f{l^v^v^v^v^CI}
	vImageConvert_ARGB8888To422CbYpCrYp16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To422CbYpCrYp8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To422CbYpCrYp8_AA8 = ~f{l^v^v^v^v^CI}
	vImageConvert_ARGB8888To422CrYpCbYpCbYpCbYpCrYpCrYp10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To422YpCbYpCr8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444AYpCbCr16 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444AYpCbCr8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444CbYpCrA8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444CrYpCb10 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888To444CrYpCb8 = ~f{l^v^v^v^CI}
	vImageConvert_ARGB8888ToARGB16U = ~f{l^v^v^CC^SI}
	vImageConvert_ARGB8888ToARGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888ToRGB16U = ~f{l^v^v^CC^SI}
	vImageConvert_ARGB8888ToRGBA1010102 = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888ToXRGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGB8888toARGB1555 = ~f{l^v^vI}
	vImageConvert_ARGB8888toARGB1555_dithered = ~f{l^v^v^viI}
	vImageConvert_ARGB8888toPlanar16Q12 = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB8888toPlanar8 = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGB8888toPlanarF = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_ARGB8888toRGB565 = ~f{l^v^vI}
	vImageConvert_ARGB8888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_ARGB8888toRGB888 = ~f{l^v^vI}
	vImageConvert_ARGBFFFFToARGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGBFFFFToXRGB2101010 = ~f{l^v^vii^CI}
	vImageConvert_ARGBFFFFtoARGB8888_dithered = ~f{l^v^v^f^fi^CI}
	vImageConvert_ARGBFFFFtoPlanar8 = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_ARGBFFFFtoPlanarF = ~f{l^v^v^v^v^vI}
	vImageConvert_ARGBFFFFtoRGBFFF = ~f{l^v^vI}
	vImageConvert_ARGBToYpCbCr_GenerateConversion = ~f{l^v^v^vIII}
	vImageConvert_BGRA16UtoRGB16U = ~f{l^v^vI}
	vImageConvert_BGRA8888toRGB565 = ~f{l^v^vI}
	vImageConvert_BGRA8888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_BGRA8888toRGB888 = ~f{l^v^vI}
	vImageConvert_BGRAFFFFtoRGBFFF = ~f{l^v^vI}
	vImageConvert_BGRX8888ToPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_BGRXFFFFToPlanarF = ~f{l^v^v^v^vI}
	vImageConvert_ChunkyToPlanar8 = ~f{l^^v^^vILLLLI}
	vImageConvert_ChunkyToPlanarF = ~f{l^^v^^vILLLLI}
	vImageConvert_FTo16S = ~f{l^v^vffI}
	vImageConvert_FTo16U = ~f{l^v^vffI}
	vImageConvert_Fto16Q12 = ~f{l^v^vI}
	vImageConvert_Indexed1toPlanar8 = ~f{l^v^v^CI}
	vImageConvert_Indexed2toPlanar8 = ~f{l^v^v^CI}
	vImageConvert_Indexed4toPlanar8 = ~f{l^v^v^CI}
	vImageConvert_Planar16FtoPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar16FtoPlanarF = ~f{l^v^vI}
	vImageConvert_Planar16Q12toARGB16F = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar16Q12toARGB8888 = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar16Q12toRGB16F = ~f{l^v^v^v^vI}
	vImageConvert_Planar16Q12toRGB888 = ~f{l^v^v^v^vI}
	vImageConvert_Planar16UtoARGB16U = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar16UtoPlanar8_dithered = ~f{l^v^viI}
	vImageConvert_Planar16UtoRGB16U = ~f{l^v^v^v^vI}
	vImageConvert_Planar1toPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar2toPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar4toPlanar8 = ~f{l^v^vI}
	vImageConvert_Planar8To16U = ~f{l^v^vI}
	vImageConvert_Planar8ToARGBFFFF = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_Planar8ToBGRX8888 = ~f{l^v^v^vC^vI}
	vImageConvert_Planar8ToBGRXFFFF = ~f{l^v^v^vf^v^f^fI}
	vImageConvert_Planar8ToXRGB8888 = ~f{lC^v^v^v^vI}
	vImageConvert_Planar8ToXRGBFFFF = ~f{lf^v^v^v^v^f^fI}
	vImageConvert_Planar8toARGB1555 = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar8toARGB8888 = ~f{l^v^v^v^v^vI}
	vImageConvert_Planar8toIndexed1 = ~f{l^v^v^v^CiI}
	vImageConvert_Planar8toIndexed2 = ~f{l^v^v^v^CiI}
	vImageConvert_Planar8toIndexed4 = ~f{l^v^v^v^CiI}
	vImageConvert_Planar8toPlanar1 = ~f{l^v^v^viI}
	vImageConvert_Planar8toPlanar16F = ~f{l^v^vI}
	vImageConvert_Planar8toPlanar2 = ~f{l^v^v^viI}
	vImageConvert_Planar8toPlanar4 = ~f{l^v^v^viI}
	vImageConvert_Planar8toPlanarF = ~f{l^v^vffI}
	vImageConvert_Planar8toRGB565 = ~f{l^v^v^v^vI}
	vImageConvert_Planar8toRGB888 = ~f{l^v^v^v^vI}
	vImageConvert_PlanarFToARGB8888 = ~f{l^v^v^v^v^v^f^fI}
	vImageConvert_PlanarFToBGRX8888 = ~f{l^v^v^vC^v^f^fI}
	vImageConvert_PlanarFToBGRXFFFF = ~f{l^v^v^vf^vI}
	vImageConvert_PlanarFToXRGB8888 = ~f{lC^v^v^v^v^f^fI}
	vImageConvert_PlanarFToXRGBFFFF = ~f{lf^v^v^v^vI}
	vImageConvert_PlanarFtoARGBFFFF = ~f{l^v^v^v^v^vI}
	vImageConvert_PlanarFtoPlanar16F = ~f{l^v^vI}
	vImageConvert_PlanarFtoPlanar8 = ~f{l^v^vffI}
	vImageConvert_PlanarFtoPlanar8_dithered = ~f{l^v^vffiI}
	vImageConvert_PlanarFtoRGBFFF = ~f{l^v^v^v^vI}
	vImageConvert_PlanarToChunky8 = ~f{l^^v^^vILLLLI}
	vImageConvert_PlanarToChunkyF = ~f{l^^v^^vILLLLI}
	vImageConvert_RGB16UToARGB8888 = ~f{l^v^v^CC^CI}
	vImageConvert_RGB16UtoARGB16U = ~f{l^v^vS^vBI}
	vImageConvert_RGB16UtoBGRA16U = ~f{l^v^vS^vBI}
	vImageConvert_RGB16UtoPlanar16U = ~f{l^v^v^v^vI}
	vImageConvert_RGB16UtoRGB888_dithered = ~f{l^v^viI}
	vImageConvert_RGB16UtoRGBA16U = ~f{l^v^vS^vBI}
	vImageConvert_RGB565toARGB1555 = ~f{l^v^viI}
	vImageConvert_RGB565toARGB8888 = ~f{lC^v^vI}
	vImageConvert_RGB565toBGRA8888 = ~f{lC^v^vI}
	vImageConvert_RGB565toPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_RGB565toRGB888 = ~f{l^v^vI}
	vImageConvert_RGB565toRGBA5551 = ~f{l^v^viI}
	vImageConvert_RGB565toRGBA8888 = ~f{lC^v^vI}
	vImageConvert_RGB888toARGB8888 = ~f{l^v^vC^vBI}
	vImageConvert_RGB888toBGRA8888 = ~f{l^v^vC^vBI}
	vImageConvert_RGB888toPlanar16Q12 = ~f{l^v^v^v^vI}
	vImageConvert_RGB888toPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_RGB888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_RGB888toRGBA8888 = ~f{l^v^vC^vBI}
	vImageConvert_RGBA1010102ToARGB16Q12 = ~f{l^v^vii^CI}
	vImageConvert_RGBA1010102ToARGB16U = ~f{l^v^vii^CI}
	vImageConvert_RGBA1010102ToARGB8888 = ~f{l^v^vii^CI}
	vImageConvert_RGBA16UtoRGB16U = ~f{l^v^vI}
	vImageConvert_RGBA5551toRGB565 = ~f{l^v^vI}
	vImageConvert_RGBA5551toRGBA8888 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGB565 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGB565_dithered = ~f{l^v^v^viI}
	vImageConvert_RGBA8888toRGB888 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGBA5551 = ~f{l^v^vI}
	vImageConvert_RGBA8888toRGBA5551_dithered = ~f{l^v^v^viI}
	vImageConvert_RGBAFFFFtoRGBFFF = ~f{l^v^vI}
	vImageConvert_RGBFFFtoARGBFFFF = ~f{l^v^vf^vBI}
	vImageConvert_RGBFFFtoBGRAFFFF = ~f{l^v^vf^vBI}
	vImageConvert_RGBFFFtoPlanarF = ~f{l^v^v^v^vI}
	vImageConvert_RGBFFFtoRGB888_dithered = ~f{l^v^v^f^fiI}
	vImageConvert_RGBFFFtoRGBAFFFF = ~f{l^v^vf^vBI}
	vImageConvert_XRGB2101010ToARGB16F = ~f{l^vf^vii^CI}
	vImageConvert_XRGB2101010ToARGB16Q12 = ~f{l^vs^vii^CI}
	vImageConvert_XRGB2101010ToARGB16U = ~f{l^vS^vii^CI}
	vImageConvert_XRGB2101010ToARGB8888 = ~f{l^vC^vii^CI}
	vImageConvert_XRGB2101010ToARGBFFFF = ~f{l^vf^vii^CI}
	vImageConvert_XRGB8888ToPlanar8 = ~f{l^v^v^v^vI}
	vImageConvert_XRGBFFFFToPlanarF = ~f{l^v^v^v^vI}
	vImageConvert_YpCbCrToARGB_GenerateConversion = ~f{l^v^v^vIII}
	vImageCopyBuffer = ~f{l^v^vLI}
	vImageExtractChannel_ARGB16U = ~f{l^v^vlI}
	vImageExtractChannel_ARGB8888 = ~f{l^v^vlI}
	vImageExtractChannel_ARGBFFFF = ~f{l^v^vlI}
	vImageFlatten_ARGB16Q12 = ~f{l^v^v^sBI}
	vImageFlatten_ARGB16U = ~f{l^v^v^SBI}
	vImageFlatten_ARGB8888 = ~f{l^v^v^CBI}
	vImageFlatten_ARGB8888ToRGB888 = ~f{l^v^v^CBI}
	vImageFlatten_ARGBFFFF = ~f{l^v^v^fBI}
	vImageFlatten_ARGBFFFFToRGBFFF = ~f{l^v^v^fBI}
	vImageFlatten_BGRA8888ToRGB888 = ~f{l^v^v^CBI}
	vImageFlatten_BGRAFFFFToRGBFFF = ~f{l^v^v^fBI}
	vImageFlatten_RGBA16Q12 = ~f{l^v^v^sBI}
	vImageFlatten_RGBA16U = ~f{l^v^v^SBI}
	vImageFlatten_RGBA8888 = ~f{l^v^v^CBI}
	vImageFlatten_RGBA8888ToRGB888 = ~f{l^v^v^CBI}
	vImageFlatten_RGBAFFFF = ~f{l^v^v^fBI}
	vImageFlatten_RGBAFFFFToRGBFFF = ~f{l^v^v^fBI}
	vImageOverwriteChannelsWithPixel_ARGB16U = ~f{l^S^v^vCI}
	vImageOverwriteChannelsWithPixel_ARGB8888 = ~f{l^C^v^vCI}
	vImageOverwriteChannelsWithPixel_ARGBFFFF = ~f{l^f^v^vCI}
	vImageOverwriteChannelsWithScalar_ARGB8888 = ~f{lC^v^vCI}
	vImageOverwriteChannelsWithScalar_ARGBFFFF = ~f{lf^v^vCI}
	vImageOverwriteChannelsWithScalar_Planar16S = ~f{ls^vI}
	vImageOverwriteChannelsWithScalar_Planar16U = ~f{lS^vI}
	vImageOverwriteChannelsWithScalar_Planar8 = ~f{lC^vI}
	vImageOverwriteChannelsWithScalar_PlanarF = ~f{lf^vI}
	vImageOverwriteChannels_ARGB8888 = ~f{l^v^v^vCI}
	vImageOverwriteChannels_ARGBFFFF = ~f{l^v^v^vCI}
	vImagePermuteChannelsWithMaskedInsert_ARGB16U = ~f{l^v^v^CC^SI}
	vImagePermuteChannelsWithMaskedInsert_ARGB8888 = ~f{l^v^v^CC^CI}
	vImagePermuteChannelsWithMaskedInsert_ARGBFFFF = ~f{l^v^v^CC^fI}
	vImagePermuteChannels_ARGB16U = ~f{l^v^v^CI}
	vImagePermuteChannels_ARGB8888 = ~f{l^v^v^CI}
	vImagePermuteChannels_ARGBFFFF = ~f{l^v^v^CI}
	vImagePermuteChannels_RGB888 = ~f{l^v^v^CI}
	vImageSelectChannels_ARGB8888 = ~f{l^v^v^vCI}
	vImageSelectChannels_ARGBFFFF = ~f{l^v^v^vCI}
	vImageTableLookUp_ARGB8888 = ~f{l^v^v^C^C^C^CI}
	vImageTableLookUp_Planar8 = ~f{l^v^v^CI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/clonefile.h
	clonefile = ~f{i^c^cI}
	clonefileat = ~f{ii^ci^cI}
	fclonefileat = ~f{iii^cI}
/usr/local/lib/clang/9.0.1/include/vaesintrin.h
	_mm256_aesdec_epi128 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_aesdeclast_epi128 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_aesenc_epi128 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_aesenclast_epi128 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm512_aesdec_epi128 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_aesdeclast_epi128 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_aesenc_epi128 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_aesenclast_epi128 = ~f{~V{8q}~V{8q}~V{8q}}
/usr/local/lib/clang/9.0.1/include/avxintrin.h
	_mm256_add_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_add_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_addsub_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_addsub_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_and_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_and_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_andnot_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_andnot_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_blendv_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}}
	_mm256_blendv_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}}
	_mm256_broadcast_pd = ~f{~V{4d}^~V{2d}}
	_mm256_broadcast_ps = ~f{~V{8f}^~V{4f}}
	_mm256_broadcast_sd = ~f{~V{4d}^d}
	_mm256_broadcast_ss = ~f{~V{8f}^f}
	_mm256_castpd128_pd256 = ~f{~V{4d}~V{2d}}
	_mm256_castpd256_pd128 = ~f{~V{2d}~V{4d}}
	_mm256_castpd_ps = ~f{~V{8f}~V{4d}}
	_mm256_castpd_si256 = ~f{~V{4q}~V{4d}}
	_mm256_castps128_ps256 = ~f{~V{8f}~V{4f}}
	_mm256_castps256_ps128 = ~f{~V{4f}~V{8f}}
	_mm256_castps_pd = ~f{~V{4d}~V{8f}}
	_mm256_castps_si256 = ~f{~V{4q}~V{8f}}
	_mm256_castsi128_si256 = ~f{~V{4q}~V{2q}}
	_mm256_castsi256_pd = ~f{~V{4d}~V{4q}}
	_mm256_castsi256_ps = ~f{~V{8f}~V{4q}}
	_mm256_castsi256_si128 = ~f{~V{2q}~V{4q}}
	_mm256_cvtepi32_pd = ~f{~V{4d}~V{2q}}
	_mm256_cvtepi32_ps = ~f{~V{8f}~V{4q}}
	_mm256_cvtpd_epi32 = ~f{~V{2q}~V{4d}}
	_mm256_cvtpd_ps = ~f{~V{4f}~V{4d}}
	_mm256_cvtps_epi32 = ~f{~V{4q}~V{8f}}
	_mm256_cvtps_pd = ~f{~V{4d}~V{4f}}
	_mm256_cvtsd_f64 = ~f{d~V{4d}}
	_mm256_cvtsi256_si32 = ~f{i~V{4q}}
	_mm256_cvtss_f32 = ~f{f~V{8f}}
	_mm256_cvttpd_epi32 = ~f{~V{2q}~V{4d}}
	_mm256_cvttps_epi32 = ~f{~V{4q}~V{8f}}
	_mm256_div_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_div_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_hadd_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_hadd_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_hsub_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_hsub_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_lddqu_si256 = ~f{~V{4q}^~V{4q}}
	_mm256_load_pd = ~f{~V{4d}^d}
	_mm256_load_ps = ~f{~V{8f}^f}
	_mm256_load_si256 = ~f{~V{4q}^~V{4q}}
	_mm256_loadu2_m128 = ~f{~V{8f}^f^f}
	_mm256_loadu2_m128d = ~f{~V{4d}^d^d}
	_mm256_loadu2_m128i = ~f{~V{4q}^~V{2q}^~V{2q}}
	_mm256_loadu_pd = ~f{~V{4d}^d}
	_mm256_loadu_ps = ~f{~V{8f}^f}
	_mm256_loadu_si256 = ~f{~V{4q}^~V{4q}}
	_mm256_maskload_pd = ~f{~V{4d}^d~V{4q}}
	_mm256_maskload_ps = ~f{~V{8f}^f~V{4q}}
	_mm256_maskstore_pd = ~f{v^d~V{4q}~V{4d}}
	_mm256_maskstore_ps = ~f{v^f~V{4q}~V{8f}}
	_mm256_max_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_max_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_min_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_min_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_movedup_pd = ~f{~V{4d}~V{4d}}
	_mm256_movehdup_ps = ~f{~V{8f}~V{8f}}
	_mm256_moveldup_ps = ~f{~V{8f}~V{8f}}
	_mm256_movemask_pd = ~f{i~V{4d}}
	_mm256_movemask_ps = ~f{i~V{8f}}
	_mm256_mul_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_mul_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_or_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_or_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_permutevar_pd = ~f{~V{4d}~V{4d}~V{4q}}
	_mm256_permutevar_ps = ~f{~V{8f}~V{8f}~V{4q}}
	_mm256_rcp_ps = ~f{~V{8f}~V{8f}}
	_mm256_rsqrt_ps = ~f{~V{8f}~V{8f}}
	_mm256_set1_epi16 = ~f{~V{4q}s}
	_mm256_set1_epi32 = ~f{~V{4q}i}
	_mm256_set1_epi64x = ~f{~V{4q}q}
	_mm256_set1_epi8 = ~f{~V{4q}c}
	_mm256_set1_pd = ~f{~V{4d}d}
	_mm256_set1_ps = ~f{~V{8f}f}
	_mm256_set_epi16 = ~f{~V{4q}ssssssssssssssss}
	_mm256_set_epi32 = ~f{~V{4q}iiiiiiii}
	_mm256_set_epi64x = ~f{~V{4q}qqqq}
	_mm256_set_epi8 = ~f{~V{4q}cccccccccccccccccccccccccccccccc}
	_mm256_set_m128 = ~f{~V{8f}~V{4f}~V{4f}}
	_mm256_set_m128d = ~f{~V{4d}~V{2d}~V{2d}}
	_mm256_set_m128i = ~f{~V{4q}~V{2q}~V{2q}}
	_mm256_set_pd = ~f{~V{4d}dddd}
	_mm256_set_ps = ~f{~V{8f}ffffffff}
	_mm256_setr_epi16 = ~f{~V{4q}ssssssssssssssss}
	_mm256_setr_epi32 = ~f{~V{4q}iiiiiiii}
	_mm256_setr_epi64x = ~f{~V{4q}qqqq}
	_mm256_setr_epi8 = ~f{~V{4q}cccccccccccccccccccccccccccccccc}
	_mm256_setr_m128 = ~f{~V{8f}~V{4f}~V{4f}}
	_mm256_setr_m128d = ~f{~V{4d}~V{2d}~V{2d}}
	_mm256_setr_m128i = ~f{~V{4q}~V{2q}~V{2q}}
	_mm256_setr_pd = ~f{~V{4d}dddd}
	_mm256_setr_ps = ~f{~V{8f}ffffffff}
	_mm256_setzero_pd = ~f{~V{4d}}
	_mm256_setzero_ps = ~f{~V{8f}}
	_mm256_setzero_si256 = ~f{~V{4q}}
	_mm256_sqrt_pd = ~f{~V{4d}~V{4d}}
	_mm256_sqrt_ps = ~f{~V{8f}~V{8f}}
	_mm256_store_pd = ~f{v^d~V{4d}}
	_mm256_store_ps = ~f{v^f~V{8f}}
	_mm256_store_si256 = ~f{v^~V{4q}~V{4q}}
	_mm256_storeu2_m128 = ~f{v^f^f~V{8f}}
	_mm256_storeu2_m128d = ~f{v^d^d~V{4d}}
	_mm256_storeu2_m128i = ~f{v^~V{2q}^~V{2q}~V{4q}}
	_mm256_storeu_pd = ~f{v^d~V{4d}}
	_mm256_storeu_ps = ~f{v^f~V{8f}}
	_mm256_storeu_si256 = ~f{v^~V{4q}~V{4q}}
	_mm256_stream_pd = ~f{v^d~V{4d}}
	_mm256_stream_ps = ~f{v^f~V{8f}}
	_mm256_stream_si256 = ~f{v^~V{4q}~V{4q}}
	_mm256_sub_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_sub_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_testc_pd = ~f{i~V{4d}~V{4d}}
	_mm256_testc_ps = ~f{i~V{8f}~V{8f}}
	_mm256_testc_si256 = ~f{i~V{4q}~V{4q}}
	_mm256_testnzc_pd = ~f{i~V{4d}~V{4d}}
	_mm256_testnzc_ps = ~f{i~V{8f}~V{8f}}
	_mm256_testnzc_si256 = ~f{i~V{4q}~V{4q}}
	_mm256_testz_pd = ~f{i~V{4d}~V{4d}}
	_mm256_testz_ps = ~f{i~V{8f}~V{8f}}
	_mm256_testz_si256 = ~f{i~V{4q}~V{4q}}
	_mm256_undefined_pd = ~f{~V{4d}}
	_mm256_undefined_ps = ~f{~V{8f}}
	_mm256_undefined_si256 = ~f{~V{4q}}
	_mm256_unpackhi_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_unpackhi_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_unpacklo_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_unpacklo_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_xor_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_xor_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_zeroall = ~f{v}
	_mm256_zeroupper = ~f{v}
	_mm256_zextpd128_pd256 = ~f{~V{4d}~V{2d}}
	_mm256_zextps128_ps256 = ~f{~V{8f}~V{4f}}
	_mm256_zextsi128_si256 = ~f{~V{4q}~V{2q}}
	_mm_broadcast_ss = ~f{~V{4f}^f}
	_mm_maskload_pd = ~f{~V{2d}^d~V{2q}}
	_mm_maskload_ps = ~f{~V{4f}^f~V{2q}}
	_mm_maskstore_pd = ~f{v^d~V{2q}~V{2d}}
	_mm_maskstore_ps = ~f{v^f~V{2q}~V{4f}}
	_mm_permutevar_pd = ~f{~V{2d}~V{2d}~V{2q}}
	_mm_permutevar_ps = ~f{~V{4f}~V{4f}~V{2q}}
	_mm_testc_pd = ~f{i~V{2d}~V{2d}}
	_mm_testc_ps = ~f{i~V{4f}~V{4f}}
	_mm_testnzc_pd = ~f{i~V{2d}~V{2d}}
	_mm_testnzc_ps = ~f{i~V{4f}~V{4f}}
	_mm_testz_pd = ~f{i~V{2d}~V{2d}}
	_mm_testz_ps = ~f{i~V{4f}~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libkern/i386/OSByteOrder.h
	OSReadSwapInt16 = ~f{S^vL}
	OSReadSwapInt32 = ~f{I^vL}
	OSReadSwapInt64 = ~f{Q^vL}
	OSWriteSwapInt16 = ~f{v^vLS}
	OSWriteSwapInt32 = ~f{v^vLI}
	OSWriteSwapInt64 = ~f{v^vLQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/overflow.h
	__os_warn_unused = ~f{BB}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/RuntimeStubs.h
	_swift_stdlib_getUnsafeArgvArgc = ~f{^^c^i}
	_swift_stdlib_overrideUnsafeArgvArgc = ~f{v^^ci}
	swift_stdlib_readLine_stdin = ~f{l^^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Block.h
	_Block_copy = ~f{^v^v}
	_Block_object_assign = ~f{v^v^vi}
	_Block_object_dispose = ~f{v^vi}
	_Block_release = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/geometry.h
	simd_cross = ~f{~V{3d}~V{3d}~V{3d}}
	simd_distance = ~f{d~V{8d}~V{8d}}
	simd_distance_squared = ~f{d~V{8d}~V{8d}}
	simd_dot = ~f{d~V{8d}~V{8d}}
	simd_fast_distance = ~f{d~V{8d}~V{8d}}
	simd_fast_length = ~f{d~V{8d}}
	simd_fast_normalize = ~f{~V{8d}~V{8d}}
	simd_fast_project = ~f{~V{8d}~V{8d}~V{8d}}
	simd_incircle = ~f{d~V{2d}~V{2d}~V{2d}~V{2d}}
	simd_insphere = ~f{d~V{3d}~V{3d}~V{3d}~V{3d}~V{3d}}
	simd_length = ~f{d~V{8d}}
	simd_length_squared = ~f{d~V{8d}}
	simd_norm_inf = ~f{d~V{8d}}
	simd_norm_one = ~f{d~V{8d}}
	simd_normalize = ~f{~V{8d}~V{8d}}
	simd_orient = ~f{d~V{3d}~V{3d}~V{3d}~V{3d}}
	simd_precise_distance = ~f{d~V{8d}~V{8d}}
	simd_precise_length = ~f{d~V{8d}}
	simd_precise_normalize = ~f{~V{8d}~V{8d}}
	simd_precise_project = ~f{~V{8d}~V{8d}~V{8d}}
	simd_project = ~f{~V{8d}~V{8d}~V{8d}}
	simd_reflect = ~f{~V{4d}~V{4d}~V{4d}}
	simd_refract = ~f{~V{4d}~V{4d}~V{4d}d}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenAL.framework/Headers/alc.h
	alcCaptureCloseDevice = ~f{c^v}
	alcCaptureOpenDevice = ~f{^v^cIii}
	alcCaptureSamples = ~f{v^v^vi}
	alcCaptureStart = ~f{v^v}
	alcCaptureStop = ~f{v^v}
	alcCloseDevice = ~f{c^v}
	alcCreateContext = ~f{^v^v^i}
	alcDestroyContext = ~f{v^v}
	alcGetContextsDevice = ~f{^v^v}
	alcGetCurrentContext = ~f{^v}
	alcGetEnumValue = ~f{i^v^c}
	alcGetError = ~f{i^v}
	alcGetIntegerv = ~f{v^vii^i}
	alcGetProcAddress = ~f{^v^v^c}
	alcGetString = ~f{^c^vi}
	alcIsExtensionPresent = ~f{c^v^c}
	alcMakeContextCurrent = ~f{c^v}
	alcOpenDevice = ~f{^v^c}
	alcProcessContext = ~f{v^v}
	alcSuspendContext = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cache.h
	cache_create = ~f{i^c^v^^v}
	cache_destroy = ~f{i^v}
	cache_get_and_retain = ~f{i^v^v^^v}
	cache_release_value = ~f{i^v^v}
	cache_remove = ~f{i^v^v}
	cache_remove_all = ~f{i^v}
	cache_set_and_retain = ~f{i^v^v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/err.h
	err = ~f{vi^c$}
	err_set_exit = ~f{v^~f{vi}}
	err_set_exit_b = ~f{v%~f{vi}}
	err_set_file = ~f{v^v}
	errc = ~f{vii^c$}
	errx = ~f{vi^c$}
	verr = ~f{vi^c^v}
	verrc = ~f{vii^c^v}
	verrx = ~f{vi^c^v}
	vwarn = ~f{v^c^v}
	vwarnc = ~f{vi^c^v}
	vwarnx = ~f{v^c^v}
	warn = ~f{v^c$}
	warnc = ~f{vi^c$}
	warnx = ~f{v^c$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecProtocolTypes.h
	sec_certificate_copy_ref = ~f{^v@}
	sec_certificate_create = ~f{@^v}
	sec_identity_access_certificates = ~f{B@%~f{v@}}
	sec_identity_copy_certificates_ref = ~f{^v@}
	sec_identity_copy_ref = ~f{^v@}
	sec_identity_create = ~f{@^v}
	sec_identity_create_with_certificates = ~f{@^v^v}
	sec_trust_copy_ref = ~f{^v@}
	sec_trust_create = ~f{@^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSIndexPathShims.h
	_NSIndexPathCreateFromIndexes = ~f{@LL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSCharacterSetShims.h
	_NSURLComponentsGetURLFragmentAllowedCharacterSet = ~f{@}
	_NSURLComponentsGetURLHostAllowedCharacterSet = ~f{@}
	_NSURLComponentsGetURLPasswordAllowedCharacterSet = ~f{@}
	_NSURLComponentsGetURLPathAllowedCharacterSet = ~f{@}
	_NSURLComponentsGetURLQueryAllowedCharacterSet = ~f{@}
	_NSURLComponentsGetURLUserAllowedCharacterSet = ~f{@}
/usr/local/lib/clang/9.0.1/include/avx512vlbitalgintrin.h
	_mm256_bitshuffle_epi64_mask = ~f{I~V{4q}~V{4q}}
	_mm256_mask_bitshuffle_epi64_mask = ~f{II~V{4q}~V{4q}}
	_mm256_mask_popcnt_epi16 = ~f{~V{4q}~V{4q}S~V{4q}}
	_mm256_mask_popcnt_epi8 = ~f{~V{4q}~V{4q}I~V{4q}}
	_mm256_maskz_popcnt_epi16 = ~f{~V{4q}S~V{4q}}
	_mm256_maskz_popcnt_epi8 = ~f{~V{4q}I~V{4q}}
	_mm256_popcnt_epi16 = ~f{~V{4q}~V{4q}}
	_mm256_popcnt_epi8 = ~f{~V{4q}~V{4q}}
	_mm_bitshuffle_epi64_mask = ~f{S~V{2q}~V{2q}}
	_mm_mask_bitshuffle_epi64_mask = ~f{SS~V{2q}~V{2q}}
	_mm_mask_popcnt_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_popcnt_epi8 = ~f{~V{2q}~V{2q}S~V{2q}}
	_mm_maskz_popcnt_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_popcnt_epi8 = ~f{~V{2q}S~V{2q}}
	_mm_popcnt_epi16 = ~f{~V{2q}~V{2q}}
	_mm_popcnt_epi8 = ~f{~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/snapshot.h
	fs_snapshot_create = ~f{ii^cI}
	fs_snapshot_delete = ~f{ii^cI}
	fs_snapshot_list = ~f{ii^v^vLI}
	fs_snapshot_mount = ~f{ii^c^cI}
	fs_snapshot_rename = ~f{ii^c^cI}
	fs_snapshot_revert = ~f{ii^cI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_wchar.h
	btowc_l = ~f{ii^v}
	fgetwc_l = ~f{i^v^v}
	fgetwln_l = ~f{^i^v^L^v}
	fgetws_l = ~f{^i^ii^v^v}
	fputwc_l = ~f{ii^v^v}
	fputws_l = ~f{i^i^v^v}
	fwprintf_l = ~f{i^v^v^i$}
	fwscanf_l = ~f{i^v^v^i$}
	getwc_l = ~f{i^v^v}
	getwchar_l = ~f{i^v}
	mbrlen_l = ~f{L^cL^v^v}
	mbrtowc_l = ~f{L^i^cL^v^v}
	mbsinit_l = ~f{i^v^v}
	mbsnrtowcs_l = ~f{L^i^^cLL^v^v}
	mbsrtowcs_l = ~f{L^i^^cL^v^v}
	putwc_l = ~f{ii^v^v}
	putwchar_l = ~f{ii^v}
	swprintf_l = ~f{i^iL^v^i$}
	swscanf_l = ~f{i^i^v^i$}
	ungetwc_l = ~f{ii^v^v}
	vfwprintf_l = ~f{i^v^v^i^v}
	vfwscanf_l = ~f{i^v^v^i^v}
	vswprintf_l = ~f{i^iL^v^i^v}
	vswscanf_l = ~f{i^i^v^i^v}
	vwprintf_l = ~f{i^v^i^v}
	vwscanf_l = ~f{i^v^i^v}
	wcrtomb_l = ~f{L^ci^v^v}
	wcscasecmp_l = ~f{i^i^i^v}
	wcscoll_l = ~f{i^i^i^v}
	wcsftime_l = ~f{L^iL^i^v^v}
	wcsncasecmp_l = ~f{i^i^iL^v}
	wcsnrtombs_l = ~f{L^c^^iLL^v^v}
	wcsrtombs_l = ~f{L^c^^iL^v^v}
	wcstod_l = ~f{d^i^^i^v}
	wcstof_l = ~f{f^i^^i^v}
	wcstol_l = ~f{l^i^^ii^v}
	wcstold_l = ~f{D^i^^i^v}
	wcstoll_l = ~f{q^i^^ii^v}
	wcstoul_l = ~f{L^i^^ii^v}
	wcstoull_l = ~f{Q^i^^ii^v}
	wcswidth_l = ~f{i^iL^v}
	wcsxfrm_l = ~f{L^i^iL^v}
	wctob_l = ~f{ii^v}
	wcwidth_l = ~f{ii^v}
	wprintf_l = ~f{i^v^i$}
	wscanf_l = ~f{i^v^i$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GameController.framework/Headers/GCGamepadSnapshot.h
	GCGamepadSnapShotDataV100FromNSData = ~f{B^v@}
	NSDataFromGCGamepadSnapShotDataV100 = ~f{@^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCNetwork.h
	SCNetworkCheckReachabilityByAddress = ~f{C^vI^I}
	SCNetworkCheckReachabilityByName = ~f{C^c^I}
	SCNetworkInterfaceRefreshConfiguration = ~f{C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/fstab.h
	endfsent = ~f{v}
	getfsent = ~f{^v}
	getfsfile = ~f{^v^c}
	getfsspec = ~f{^v^c}
	setfsent = ~f{i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/vImage_Utilities.h
	vImageBuffer_GetSize = ~f{{=dd}^v}
	vImageBuffer_Init = ~f{l^vLLII}
	vImageBuffer_InitWithCGImage = ~f{l^v^v^d^vI}
	vImageCGImageFormat_GetComponentCount = ~f{I^v}
	vImageCGImageFormat_IsEqual = ~f{C^v^v}
	vImageConvert_AnyToAny = ~f{l^v^v^v^vI}
	vImageConverter_CreateWithCGImageFormat = ~f{^v^v^v^dI^l}
	vImageConverter_CreateWithColorSyncCodeFragment = ~f{^v^v^v^v^dI^l}
	vImageConverter_GetDestinationBufferOrder = ~f{^I^v}
	vImageConverter_GetNumberOfDestinationBuffers = ~f{L^v}
	vImageConverter_GetNumberOfSourceBuffers = ~f{L^v}
	vImageConverter_GetSourceBufferOrder = ~f{^I^v}
	vImageConverter_MustOperateOutOfPlace = ~f{l^v^v^vI}
	vImageConverter_Release = ~f{v^v}
	vImageConverter_Retain = ~f{v^v}
	vImageCreateCGImageFromBuffer = ~f{^v^v^v^~f{v^v^v}^vI^l}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dns.h
	dns_free = ~f{v^v}
	dns_open = ~f{^v^c}
	dns_query = ~f{i^v^cII^cI^v^I}
	dns_search = ~f{i^v^cII^cI^v^I}
	dns_search_list_count = ~f{I^v}
	dns_search_list_domain = ~f{^c^vI}
	dns_set_debug = ~f{v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/time.h
	asctime = ~f{^c^v}
	asctime_r = ~f{^c^v^c}
	clock = ~f{L}
	clock_getres = ~f{iI^v}
	clock_gettime = ~f{iI^v}
	clock_gettime_nsec_np = ~f{QI}
	clock_settime = ~f{iI^v}
	ctime = ~f{^c^l}
	ctime_r = ~f{^c^l^c}
	difftime = ~f{dll}
	getdate = ~f{^v^c}
	gmtime = ~f{^v^l}
	gmtime_r = ~f{^v^l^v}
	localtime = ~f{^v^l}
	localtime_r = ~f{^v^l^v}
	mktime = ~f{l^v}
	nanosleep = ~f{i^v^v}
	posix2time = ~f{ll}
	strftime = ~f{L^cL^c^v}
	strptime = ~f{^c^c^c^v}
	time = ~f{l^l}
	time2posix = ~f{ll}
	timegm = ~f{l^v}
	timelocal = ~f{l^v}
	timespec_get = ~f{i^vi}
	tzset = ~f{v}
	tzsetwall = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBufferIOSurface.h
	CVPixelBufferCreateWithIOSurface = ~f{i^v^v^v^^v}
	CVPixelBufferGetIOSurface = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SystemConfiguration.h
	SCCopyLastError = ~f{^v}
	SCError = ~f{i}
	SCErrorString = ~f{^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFString.h
	CGPDFStringCopyDate = ~f{^v^v}
	CGPDFStringCopyTextString = ~f{^v^v}
	CGPDFStringGetBytePtr = ~f{^C^v}
	CGPDFStringGetLength = ~f{L^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/interface.h
	nw_interface_get_index = ~f{I@}
	nw_interface_get_name = ~f{^c@}
	nw_interface_get_type = ~f{I@}
/usr/local/lib/clang/9.0.1/include/avx512vlbf16intrin.h
	_mm256_cvtne2ps_pbh = ~f{~V{16s}~V{8f}~V{8f}}
	_mm256_cvtneps_pbh = ~f{~V{8s}~V{8f}}
	_mm256_cvtpbh_ps = ~f{~V{8f}~V{8s}}
	_mm256_dpbf16_ps = ~f{~V{8f}~V{8f}~V{16s}~V{16s}}
	_mm256_mask_cvtne2ps_pbh = ~f{~V{16s}~V{16s}S~V{8f}~V{8f}}
	_mm256_mask_cvtneps_pbh = ~f{~V{8s}~V{8s}C~V{8f}}
	_mm256_mask_cvtpbh_ps = ~f{~V{8f}~V{8f}C~V{8s}}
	_mm256_mask_dpbf16_ps = ~f{~V{8f}~V{8f}C~V{16s}~V{16s}}
	_mm256_maskz_cvtne2ps_pbh = ~f{~V{16s}S~V{8f}~V{8f}}
	_mm256_maskz_cvtneps_pbh = ~f{~V{8s}C~V{8f}}
	_mm256_maskz_cvtpbh_ps = ~f{~V{8f}C~V{8s}}
	_mm256_maskz_dpbf16_ps = ~f{~V{8f}C~V{8f}~V{16s}~V{16s}}
	_mm_cvtne2ps_pbh = ~f{~V{8s}~V{4f}~V{4f}}
	_mm_cvtneps_pbh = ~f{~V{8s}~V{4f}}
	_mm_cvtness_sbh = ~f{Sf}
	_mm_dpbf16_ps = ~f{~V{4f}~V{4f}~V{8s}~V{8s}}
	_mm_mask_cvtne2ps_pbh = ~f{~V{8s}~V{8s}C~V{4f}~V{4f}}
	_mm_mask_cvtneps_pbh = ~f{~V{8s}~V{8s}C~V{4f}}
	_mm_mask_dpbf16_ps = ~f{~V{4f}~V{4f}C~V{8s}~V{8s}}
	_mm_maskz_cvtne2ps_pbh = ~f{~V{8s}C~V{4f}~V{4f}}
	_mm_maskz_cvtneps_pbh = ~f{~V{8s}C~V{4f}}
	_mm_maskz_dpbf16_ps = ~f{~V{4f}C~V{4f}~V{8s}~V{8s}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/CommonCrypto/CommonHMAC.h
	CCHmac = ~f{vI^vL^vL^v}
	CCHmacFinal = ~f{v^v^v}
	CCHmacInit = ~f{v^vI^vL}
	CCHmacUpdate = ~f{v^v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/lctx.h
	getlcid = ~f{ii}
	setlcid = ~f{iii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCPreferencesSetSpecific.h
	SCPreferencesSetComputerName = ~f{C^v^vI}
	SCPreferencesSetLocalHostName = ~f{C^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStream.h
	CFReadStreamClose = ~f{v^v}
	CFReadStreamCopyDispatchQueue = ~f{@^v}
	CFReadStreamCopyError = ~f{^v^v}
	CFReadStreamCopyProperty = ~f{^v^v^v}
	CFReadStreamCreateWithBytesNoCopy = ~f{^v^v^Cl^v}
	CFReadStreamCreateWithFile = ~f{^v^v^v}
	CFReadStreamGetBuffer = ~f{^C^vl^l}
	CFReadStreamGetError = ~f{{=li}^v}
	CFReadStreamGetStatus = ~f{l^v}
	CFReadStreamGetTypeID = ~f{L}
	CFReadStreamHasBytesAvailable = ~f{C^v}
	CFReadStreamOpen = ~f{C^v}
	CFReadStreamRead = ~f{l^v^Cl}
	CFReadStreamScheduleWithRunLoop = ~f{v^v^v^v}
	CFReadStreamSetClient = ~f{C^vL^~f{v^vL^v}^v}
	CFReadStreamSetDispatchQueue = ~f{v^v@}
	CFReadStreamSetProperty = ~f{C^v^v^v}
	CFReadStreamUnscheduleFromRunLoop = ~f{v^v^v^v}
	CFStreamCreateBoundPair = ~f{v^v^^v^^vl}
	CFStreamCreatePairWithPeerSocketSignature = ~f{v^v^v^^v^^v}
	CFStreamCreatePairWithSocket = ~f{v^vi^^v^^v}
	CFStreamCreatePairWithSocketToHost = ~f{v^v^vI^^v^^v}
	CFWriteStreamCanAcceptBytes = ~f{C^v}
	CFWriteStreamClose = ~f{v^v}
	CFWriteStreamCopyDispatchQueue = ~f{@^v}
	CFWriteStreamCopyError = ~f{^v^v}
	CFWriteStreamCopyProperty = ~f{^v^v^v}
	CFWriteStreamCreateWithAllocatedBuffers = ~f{^v^v^v}
	CFWriteStreamCreateWithBuffer = ~f{^v^v^Cl}
	CFWriteStreamCreateWithFile = ~f{^v^v^v}
	CFWriteStreamGetError = ~f{{=li}^v}
	CFWriteStreamGetStatus = ~f{l^v}
	CFWriteStreamGetTypeID = ~f{L}
	CFWriteStreamOpen = ~f{C^v}
	CFWriteStreamScheduleWithRunLoop = ~f{v^v^v^v}
	CFWriteStreamSetClient = ~f{C^vL^~f{v^vL^v}^v}
	CFWriteStreamSetDispatchQueue = ~f{v^v@}
	CFWriteStreamSetProperty = ~f{C^v^v^v}
	CFWriteStreamUnscheduleFromRunLoop = ~f{v^v^v^v}
	CFWriteStreamWrite = ~f{l^v^Cl}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/vm_map.h
	mach_make_memory_entry = ~f{iI^LLi^II}
	mach_make_memory_entry_64 = ~f{iI^QQi^II}
	mach_vm_region_info = ~f{iIL^v^^v^I}
	mach_vm_region_info_64 = ~f{iIL^v^^v^I}
	mig_strncpy_zerofill = ~f{i^c^ci}
	task_wire = ~f{iII}
	vm_allocate = ~f{iI^LLi}
	vm_behavior_set = ~f{iILLi}
	vm_copy = ~f{iILLL}
	vm_deallocate = ~f{iILL}
	vm_inherit = ~f{iILLI}
	vm_machine_attribute = ~f{iILLI^i}
	vm_map = ~f{iI^LLLiILIiiI}
	vm_map_64 = ~f{iI^LLLiIQIiiI}
	vm_map_exec_lockdown = ~f{iI}
	vm_map_page_query = ~f{iIL^i^i}
	vm_mapped_pages_info = ~f{iI^^L^I}
	vm_msync = ~f{iILLI}
	vm_protect = ~f{iILLIi}
	vm_purgable_control = ~f{iILi^i}
	vm_read = ~f{iILL^L^I}
	vm_read_list = ~f{iI^vI}
	vm_read_overwrite = ~f{iILLL^L}
	vm_region = ~f{iI^L^Li^i^I^I}
	vm_region_64 = ~f{iI^L^Li^i^I^I}
	vm_region_recurse = ~f{iI^L^L^I^i^I}
	vm_region_recurse_64 = ~f{iI^L^L^I^i^I}
	vm_remap = ~f{iI^LLLiILI^i^iI}
	vm_write = ~f{iILLI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecItem.h
	SecItemAdd = ~f{i^v^^v}
	SecItemCopyMatching = ~f{i^v^^v}
	SecItemDelete = ~f{i^v}
	SecItemUpdate = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/catalog.h
	xmlACatalogAdd = ~f{i^v^C^C^C}
	xmlACatalogDump = ~f{v^v^v}
	xmlACatalogRemove = ~f{i^v^C}
	xmlACatalogResolve = ~f{^C^v^C^C}
	xmlACatalogResolvePublic = ~f{^C^v^C}
	xmlACatalogResolveSystem = ~f{^C^v^C}
	xmlACatalogResolveURI = ~f{^C^v^C}
	xmlCatalogAdd = ~f{i^C^C^C}
	xmlCatalogAddLocal = ~f{^v^v^C}
	xmlCatalogCleanup = ~f{v}
	xmlCatalogConvert = ~f{i}
	xmlCatalogDump = ~f{v^v}
	xmlCatalogFreeLocal = ~f{v^v}
	xmlCatalogGetDefaults = ~f{I}
	xmlCatalogGetPublic = ~f{^C^C}
	xmlCatalogGetSystem = ~f{^C^C}
	xmlCatalogIsEmpty = ~f{i^v}
	xmlCatalogLocalResolve = ~f{^C^v^C^C}
	xmlCatalogLocalResolveURI = ~f{^C^v^C}
	xmlCatalogRemove = ~f{i^C}
	xmlCatalogResolve = ~f{^C^C^C}
	xmlCatalogResolvePublic = ~f{^C^C}
	xmlCatalogResolveSystem = ~f{^C^C}
	xmlCatalogResolveURI = ~f{^C^C}
	xmlCatalogSetDebug = ~f{ii}
	xmlCatalogSetDefaultPrefer = ~f{II}
	xmlCatalogSetDefaults = ~f{vI}
	xmlConvertSGMLCatalog = ~f{i^v}
	xmlFreeCatalog = ~f{v^v}
	xmlInitializeCatalog = ~f{v}
	xmlLoadACatalog = ~f{^v^c}
	xmlLoadCatalog = ~f{i^c}
	xmlLoadCatalogs = ~f{v^c}
	xmlLoadSGMLSuperCatalog = ~f{^v^c}
	xmlNewCatalog = ~f{^vi}
	xmlParseCatalogFile = ~f{^v^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSException.h
	NSGetUncaughtExceptionHandler = ~f{^~f{v@}}
	NSSetUncaughtExceptionHandler = ~f{v^~f{v@}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/fenv.h
	feclearexcept = ~f{ii}
	fegetenv = ~f{i^v}
	fegetexceptflag = ~f{i^Si}
	fegetround = ~f{i}
	feholdexcept = ~f{i^v}
	feraiseexcept = ~f{ii}
	fesetenv = ~f{i^v}
	fesetexceptflag = ~f{i^Si}
	fesetround = ~f{ii}
	fetestexcept = ~f{ii}
	feupdateenv = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/resource.h
	getiopolicy_np = ~f{iii}
	getpriority = ~f{iiI}
	getrlimit = ~f{ii^v}
	getrusage = ~f{ii^v}
	setiopolicy_np = ~f{iiii}
	setpriority = ~f{iiIi}
	setrlimit = ~f{ii^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecSharedCredential.h
	SecAddSharedWebCredential = ~f{v^v^v^v%~f{v^v}}
	SecCreateSharedWebCredentialPassword = ~f{^v}
	SecRequestSharedWebCredential = ~f{v^v^v%~f{v^v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/Quadrature/Integration.h
	quadrature_integrate = ~f{d^vdd^v^i^dL^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/LinearAlgebra/vector.h
	la_vector_length = ~f{L@}
	la_vector_slice = ~f{@@llL}
	la_vector_to_double_buffer = ~f{l^dl@}
	la_vector_to_float_buffer = ~f{l^fl@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFArray.h
	CGPDFArrayApplyBlock = ~f{v^v%~f{BL^v^v}^v}
	CGPDFArrayGetArray = ~f{B^vL^^v}
	CGPDFArrayGetBoolean = ~f{B^vL^C}
	CGPDFArrayGetCount = ~f{L^v}
	CGPDFArrayGetDictionary = ~f{B^vL^^v}
	CGPDFArrayGetInteger = ~f{B^vL^l}
	CGPDFArrayGetName = ~f{B^vL^^c}
	CGPDFArrayGetNull = ~f{B^vL}
	CGPDFArrayGetNumber = ~f{B^vL^d}
	CGPDFArrayGetObject = ~f{B^vL^^v}
	CGPDFArrayGetStream = ~f{B^vL^^v}
	CGPDFArrayGetString = ~f{B^vL^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/setjmp.h
	_longjmp = ~f{v^ii}
	_setjmp = ~f{i^i}
	longjmp = ~f{v^ii}
	longjmperror = ~f{v}
	setjmp = ~f{i^i}
	siglongjmp = ~f{v^ii}
	sigsetjmp = ~f{i^ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vBigNum.h
	vA1024Shift = ~f{v^vI^v}
	vA256Shift = ~f{v^vI^v}
	vA512Shift = ~f{v^vI^v}
	vL1024Rotate = ~f{v^vI^v}
	vL256Rotate = ~f{v^vI^v}
	vL512Rotate = ~f{v^vI^v}
	vLL1024Shift = ~f{v^vI^v}
	vLL256Shift = ~f{v^vI^v}
	vLL512Shift = ~f{v^vI^v}
	vLR1024Shift = ~f{v^vI^v}
	vLR256Shift = ~f{v^vI^v}
	vLR512Shift = ~f{v^vI^v}
	vR1024Rotate = ~f{v^vI^v}
	vR256Rotate = ~f{v^vI^v}
	vR512Rotate = ~f{v^vI^v}
	vS1024Add = ~f{v^v^v^v}
	vS1024AddS = ~f{v^v^v^v}
	vS1024Divide = ~f{v^v^v^v^v}
	vS1024HalfMultiply = ~f{v^v^v^v}
	vS1024Mod = ~f{v^v^v^v}
	vS1024Neg = ~f{v^v^v}
	vS1024Sub = ~f{v^v^v^v}
	vS1024SubS = ~f{v^v^v^v}
	vS128FullMultiply = ~f{v^v^v^v}
	vS256Add = ~f{v^v^v^v}
	vS256AddS = ~f{v^v^v^v}
	vS256Divide = ~f{v^v^v^v^v}
	vS256FullMultiply = ~f{v^v^v^v}
	vS256HalfMultiply = ~f{v^v^v^v}
	vS256Mod = ~f{v^v^v^v}
	vS256Neg = ~f{v^v^v}
	vS256Sub = ~f{v^v^v^v}
	vS256SubS = ~f{v^v^v^v}
	vS512Add = ~f{v^v^v^v}
	vS512AddS = ~f{v^v^v^v}
	vS512Divide = ~f{v^v^v^v^v}
	vS512FullMultiply = ~f{v^v^v^v}
	vS512HalfMultiply = ~f{v^v^v^v}
	vS512Mod = ~f{v^v^v^v}
	vS512Neg = ~f{v^v^v}
	vS512Sub = ~f{v^v^v^v}
	vS512SubS = ~f{v^v^v^v}
	vU1024Add = ~f{v^v^v^v}
	vU1024AddS = ~f{v^v^v^v}
	vU1024Divide = ~f{v^v^v^v^v}
	vU1024HalfMultiply = ~f{v^v^v^v}
	vU1024Mod = ~f{v^v^v^v}
	vU1024Neg = ~f{v^v^v}
	vU1024Sub = ~f{v^v^v^v}
	vU1024SubS = ~f{v^v^v^v}
	vU128FullMultiply = ~f{v^v^v^v}
	vU256Add = ~f{v^v^v^v}
	vU256AddS = ~f{v^v^v^v}
	vU256Divide = ~f{v^v^v^v^v}
	vU256FullMultiply = ~f{v^v^v^v}
	vU256HalfMultiply = ~f{v^v^v^v}
	vU256Mod = ~f{v^v^v^v}
	vU256Neg = ~f{v^v^v}
	vU256Sub = ~f{v^v^v^v}
	vU256SubS = ~f{v^v^v^v}
	vU512Add = ~f{v^v^v^v}
	vU512AddS = ~f{v^v^v^v}
	vU512Divide = ~f{v^v^v^v^v}
	vU512FullMultiply = ~f{v^v^v^v}
	vU512HalfMultiply = ~f{v^v^v^v}
	vU512Mod = ~f{v^v^v^v}
	vU512Neg = ~f{v^v^v}
	vU512Sub = ~f{v^v^v^v}
	vU512SubS = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlmodule.h
	xmlModuleClose = ~f{i^v}
	xmlModuleFree = ~f{i^v}
	xmlModuleOpen = ~f{^v^ci}
	xmlModuleSymbol = ~f{i^v^c^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/proc.h
	os_proc_available_memory = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUtilities.h
	CFCopyHomeDirectoryURL = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/cblas.h
	SetBLASParamErrorProc = ~f{v^~f{v^c^c^i^i}}
	appleblas_dgeadd = ~f{vIIIiid^did^di^di}
	appleblas_sgeadd = ~f{vIIIiif^fif^fi^fi}
	catlas_caxpby = ~f{vi^v^vi^v^vi}
	catlas_cset = ~f{vi^v^vi}
	catlas_daxpby = ~f{vid^did^di}
	catlas_dset = ~f{vid^di}
	catlas_saxpby = ~f{vif^fif^fi}
	catlas_sset = ~f{vif^fi}
	catlas_zaxpby = ~f{vi^v^vi^v^vi}
	catlas_zset = ~f{vi^v^vi}
	cblas_caxpy = ~f{vi^v^vi^vi}
	cblas_ccopy = ~f{vi^vi^vi}
	cblas_cdotc_sub = ~f{vi^vi^vi^v}
	cblas_cdotu_sub = ~f{vi^vi^vi^v}
	cblas_cgbmv = ~f{vIIiiii^v^vi^vi^v^vi}
	cblas_cgemm = ~f{vIIIiii^v^vi^vi^v^vi}
	cblas_cgemv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_cgerc = ~f{vIii^v^vi^vi^vi}
	cblas_cgeru = ~f{vIii^v^vi^vi^vi}
	cblas_chbmv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_chemm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_chemv = ~f{vIIi^v^vi^vi^v^vi}
	cblas_cher = ~f{vIIif^vi^vi}
	cblas_cher2 = ~f{vIIi^v^vi^vi^vi}
	cblas_cher2k = ~f{vIIIii^v^vi^vif^vi}
	cblas_cherk = ~f{vIIIiif^vif^vi}
	cblas_chpmv = ~f{vIIi^v^v^vi^v^vi}
	cblas_chpr = ~f{vIIif^vi^v}
	cblas_chpr2 = ~f{vIIi^v^vi^vi^v}
	cblas_crotg = ~f{v^v^v^v^v}
	cblas_cscal = ~f{vi^v^vi}
	cblas_csrot = ~f{vi^vi^viff}
	cblas_csscal = ~f{vif^vi}
	cblas_cswap = ~f{vi^vi^vi}
	cblas_csymm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_csyr2k = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_csyrk = ~f{vIIIii^v^vi^v^vi}
	cblas_ctbmv = ~f{vIIIIii^vi^vi}
	cblas_ctbsv = ~f{vIIIIii^vi^vi}
	cblas_ctpmv = ~f{vIIIIi^v^vi}
	cblas_ctpsv = ~f{vIIIIi^v^vi}
	cblas_ctrmm = ~f{vIIIIIii^v^vi^vi}
	cblas_ctrmv = ~f{vIIIIi^vi^vi}
	cblas_ctrsm = ~f{vIIIIIii^v^vi^vi}
	cblas_ctrsv = ~f{vIIIIi^vi^vi}
	cblas_dasum = ~f{di^di}
	cblas_daxpy = ~f{vid^di^di}
	cblas_dcopy = ~f{vi^di^di}
	cblas_ddot = ~f{di^di^di}
	cblas_dgbmv = ~f{vIIiiiid^di^did^di}
	cblas_dgemm = ~f{vIIIiiid^di^did^di}
	cblas_dgemv = ~f{vIIiid^di^did^di}
	cblas_dger = ~f{vIiid^di^di^di}
	cblas_dnrm2 = ~f{di^di}
	cblas_drot = ~f{vi^di^didd}
	cblas_drotg = ~f{v^d^d^d^d}
	cblas_drotm = ~f{vi^di^di^d}
	cblas_drotmg = ~f{v^d^d^dd^d}
	cblas_dsbmv = ~f{vIIiid^di^did^di}
	cblas_dscal = ~f{vid^di}
	cblas_dsdot = ~f{di^fi^fi}
	cblas_dspmv = ~f{vIIid^d^did^di}
	cblas_dspr = ~f{vIIid^di^d}
	cblas_dspr2 = ~f{vIIid^di^di^d}
	cblas_dswap = ~f{vi^di^di}
	cblas_dsymm = ~f{vIIIiid^di^did^di}
	cblas_dsymv = ~f{vIIid^di^did^di}
	cblas_dsyr = ~f{vIIid^di^di}
	cblas_dsyr2 = ~f{vIIid^di^di^di}
	cblas_dsyr2k = ~f{vIIIiid^di^did^di}
	cblas_dsyrk = ~f{vIIIiid^did^di}
	cblas_dtbmv = ~f{vIIIIii^di^di}
	cblas_dtbsv = ~f{vIIIIii^di^di}
	cblas_dtpmv = ~f{vIIIIi^d^di}
	cblas_dtpsv = ~f{vIIIIi^d^di}
	cblas_dtrmm = ~f{vIIIIIiid^di^di}
	cblas_dtrmv = ~f{vIIIIi^di^di}
	cblas_dtrsm = ~f{vIIIIIiid^di^di}
	cblas_dtrsv = ~f{vIIIIi^di^di}
	cblas_dzasum = ~f{di^vi}
	cblas_dznrm2 = ~f{di^vi}
	cblas_errprn = ~f{iii^c$}
	cblas_icamax = ~f{ii^vi}
	cblas_idamax = ~f{ii^di}
	cblas_isamax = ~f{ii^fi}
	cblas_izamax = ~f{ii^vi}
	cblas_sasum = ~f{fi^fi}
	cblas_saxpy = ~f{vif^fi^fi}
	cblas_scasum = ~f{fi^vi}
	cblas_scnrm2 = ~f{fi^vi}
	cblas_scopy = ~f{vi^fi^fi}
	cblas_sdot = ~f{fi^fi^fi}
	cblas_sdsdot = ~f{fif^fi^fi}
	cblas_sgbmv = ~f{vIIiiiif^fi^fif^fi}
	cblas_sgemm = ~f{vIIIiiif^fi^fif^fi}
	cblas_sgemv = ~f{vIIiif^fi^fif^fi}
	cblas_sger = ~f{vIiif^fi^fi^fi}
	cblas_snrm2 = ~f{fi^fi}
	cblas_srot = ~f{vi^fi^fiff}
	cblas_srotg = ~f{v^f^f^f^f}
	cblas_srotm = ~f{vi^fi^fi^f}
	cblas_srotmg = ~f{v^f^f^ff^f}
	cblas_ssbmv = ~f{vIIiif^fi^fif^fi}
	cblas_sscal = ~f{vif^fi}
	cblas_sspmv = ~f{vIIif^f^fif^fi}
	cblas_sspr = ~f{vIIif^fi^f}
	cblas_sspr2 = ~f{vIIif^fi^fi^f}
	cblas_sswap = ~f{vi^fi^fi}
	cblas_ssymm = ~f{vIIIiif^fi^fif^fi}
	cblas_ssymv = ~f{vIIif^fi^fif^fi}
	cblas_ssyr = ~f{vIIif^fi^fi}
	cblas_ssyr2 = ~f{vIIif^fi^fi^fi}
	cblas_ssyr2k = ~f{vIIIiif^fi^fif^fi}
	cblas_ssyrk = ~f{vIIIiif^fif^fi}
	cblas_stbmv = ~f{vIIIIii^fi^fi}
	cblas_stbsv = ~f{vIIIIii^fi^fi}
	cblas_stpmv = ~f{vIIIIi^f^fi}
	cblas_stpsv = ~f{vIIIIi^f^fi}
	cblas_strmm = ~f{vIIIIIiif^fi^fi}
	cblas_strmv = ~f{vIIIIi^fi^fi}
	cblas_strsm = ~f{vIIIIIiif^fi^fi}
	cblas_strsv = ~f{vIIIIi^fi^fi}
	cblas_xerbla = ~f{vi^c^c$}
	cblas_zaxpy = ~f{vi^v^vi^vi}
	cblas_zcopy = ~f{vi^vi^vi}
	cblas_zdotc_sub = ~f{vi^vi^vi^v}
	cblas_zdotu_sub = ~f{vi^vi^vi^v}
	cblas_zdrot = ~f{vi^vi^vidd}
	cblas_zdscal = ~f{vid^vi}
	cblas_zgbmv = ~f{vIIiiii^v^vi^vi^v^vi}
	cblas_zgemm = ~f{vIIIiii^v^vi^vi^v^vi}
	cblas_zgemv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_zgerc = ~f{vIii^v^vi^vi^vi}
	cblas_zgeru = ~f{vIii^v^vi^vi^vi}
	cblas_zhbmv = ~f{vIIii^v^vi^vi^v^vi}
	cblas_zhemm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_zhemv = ~f{vIIi^v^vi^vi^v^vi}
	cblas_zher = ~f{vIIid^vi^vi}
	cblas_zher2 = ~f{vIIi^v^vi^vi^vi}
	cblas_zher2k = ~f{vIIIii^v^vi^vid^vi}
	cblas_zherk = ~f{vIIIiid^vid^vi}
	cblas_zhpmv = ~f{vIIi^v^v^vi^v^vi}
	cblas_zhpr = ~f{vIIid^vi^v}
	cblas_zhpr2 = ~f{vIIi^v^vi^vi^v}
	cblas_zrotg = ~f{v^v^v^v^v}
	cblas_zscal = ~f{vi^v^vi}
	cblas_zswap = ~f{vi^vi^vi}
	cblas_zsymm = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_zsyr2k = ~f{vIIIii^v^vi^vi^v^vi}
	cblas_zsyrk = ~f{vIIIii^v^vi^v^vi}
	cblas_ztbmv = ~f{vIIIIii^vi^vi}
	cblas_ztbsv = ~f{vIIIIii^vi^vi}
	cblas_ztpmv = ~f{vIIIIi^v^vi}
	cblas_ztpsv = ~f{vIIIIi^v^vi}
	cblas_ztrmm = ~f{vIIIIIii^v^vi^vi}
	cblas_ztrmv = ~f{vIIIIi^vi^vi}
	cblas_ztrsm = ~f{vIIIIIii^v^vi^vi}
	cblas_ztrsv = ~f{vIIIIi^vi^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMSync.h
	CMClockConvertHostTimeToSystemUnits = ~f{Q{=qiIq}}
	CMClockGetAnchorTime = ~f{i^v^v^v}
	CMClockGetHostTimeClock = ~f{^v}
	CMClockGetTime = ~f{{=qiIq}^v}
	CMClockGetTypeID = ~f{L}
	CMClockInvalidate = ~f{v^v}
	CMClockMakeHostTimeFromSystemUnits = ~f{{=qiIq}Q}
	CMClockMightDrift = ~f{C^v^v}
	CMSyncConvertTime = ~f{{=qiIq}{=qiIq}^v^v}
	CMSyncGetRelativeRate = ~f{d^v^v}
	CMSyncGetRelativeRateAndAnchorTime = ~f{i^v^v^d^v^v}
	CMSyncGetTime = ~f{{=qiIq}^v}
	CMSyncMightDrift = ~f{C^v^v}
	CMTimebaseAddTimer = ~f{i^v^v^v}
	CMTimebaseAddTimerDispatchSource = ~f{i^v@}
	CMTimebaseCopyMaster = ~f{^v^v}
	CMTimebaseCopyMasterClock = ~f{^v^v}
	CMTimebaseCopyMasterTimebase = ~f{^v^v}
	CMTimebaseCopyUltimateMasterClock = ~f{^v^v}
	CMTimebaseCreateWithMasterClock = ~f{i^v^v^^v}
	CMTimebaseCreateWithMasterTimebase = ~f{i^v^v^^v}
	CMTimebaseGetEffectiveRate = ~f{d^v}
	CMTimebaseGetMaster = ~f{^v^v}
	CMTimebaseGetMasterClock = ~f{^v^v}
	CMTimebaseGetMasterTimebase = ~f{^v^v}
	CMTimebaseGetRate = ~f{d^v}
	CMTimebaseGetTime = ~f{{=qiIq}^v}
	CMTimebaseGetTimeAndRate = ~f{i^v^v^d}
	CMTimebaseGetTimeWithTimeScale = ~f{{=qiIq}^viI}
	CMTimebaseGetTypeID = ~f{L}
	CMTimebaseGetUltimateMasterClock = ~f{^v^v}
	CMTimebaseNotificationBarrier = ~f{i^v}
	CMTimebaseRemoveTimer = ~f{i^v^v}
	CMTimebaseRemoveTimerDispatchSource = ~f{i^v@}
	CMTimebaseSetAnchorTime = ~f{i^v{=qiIq}{=qiIq}}
	CMTimebaseSetMasterClock = ~f{i^v^v}
	CMTimebaseSetMasterTimebase = ~f{i^v^v}
	CMTimebaseSetRate = ~f{i^vd}
	CMTimebaseSetRateAndAnchorTime = ~f{i^vd{=qiIq}{=qiIq}}
	CMTimebaseSetTime = ~f{i^v{=qiIq}}
	CMTimebaseSetTimerDispatchSourceNextFireTime = ~f{i^v@{=qiIq}I}
	CMTimebaseSetTimerDispatchSourceToFireImmediately = ~f{i^v@}
	CMTimebaseSetTimerNextFireTime = ~f{i^v^v{=qiIq}I}
	CMTimebaseSetTimerToFireImmediately = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/objc/objc-exception.h
	objc_addExceptionHandler = ~f{L^~f{v@^v}^v}
	objc_begin_catch = ~f{@^v}
	objc_end_catch = ~f{v}
	objc_exception_rethrow = ~f{v}
	objc_exception_throw = ~f{v@}
	objc_removeExceptionHandler = ~f{vL}
	objc_setExceptionMatcher = ~f{^~f{i@@}^~f{i@@}}
	objc_setExceptionPreprocessor = ~f{^~f{@@}^~f{@@}}
	objc_setUncaughtExceptionHandler = ~f{^~f{v@}^~f{v@}}
	objc_terminate = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlwriter.h
	xmlFreeTextWriter = ~f{v^v}
	xmlNewTextWriter = ~f{^v^v}
	xmlNewTextWriterDoc = ~f{^v^^vi}
	xmlNewTextWriterFilename = ~f{^v^ci}
	xmlNewTextWriterMemory = ~f{^v^vi}
	xmlNewTextWriterPushParser = ~f{^v^vi}
	xmlNewTextWriterTree = ~f{^v^v^vi}
	xmlTextWriterEndAttribute = ~f{i^v}
	xmlTextWriterEndCDATA = ~f{i^v}
	xmlTextWriterEndComment = ~f{i^v}
	xmlTextWriterEndDTD = ~f{i^v}
	xmlTextWriterEndDTDAttlist = ~f{i^v}
	xmlTextWriterEndDTDElement = ~f{i^v}
	xmlTextWriterEndDTDEntity = ~f{i^v}
	xmlTextWriterEndDocument = ~f{i^v}
	xmlTextWriterEndElement = ~f{i^v}
	xmlTextWriterEndPI = ~f{i^v}
	xmlTextWriterFlush = ~f{i^v}
	xmlTextWriterFullEndElement = ~f{i^v}
	xmlTextWriterSetIndent = ~f{i^vi}
	xmlTextWriterSetIndentString = ~f{i^v^C}
	xmlTextWriterSetQuoteChar = ~f{i^vC}
	xmlTextWriterStartAttribute = ~f{i^v^C}
	xmlTextWriterStartAttributeNS = ~f{i^v^C^C^C}
	xmlTextWriterStartCDATA = ~f{i^v}
	xmlTextWriterStartComment = ~f{i^v}
	xmlTextWriterStartDTD = ~f{i^v^C^C^C}
	xmlTextWriterStartDTDAttlist = ~f{i^v^C}
	xmlTextWriterStartDTDElement = ~f{i^v^C}
	xmlTextWriterStartDTDEntity = ~f{i^vi^C}
	xmlTextWriterStartDocument = ~f{i^v^c^c^c}
	xmlTextWriterStartElement = ~f{i^v^C}
	xmlTextWriterStartElementNS = ~f{i^v^C^C^C}
	xmlTextWriterStartPI = ~f{i^v^C}
	xmlTextWriterWriteAttribute = ~f{i^v^C^C}
	xmlTextWriterWriteAttributeNS = ~f{i^v^C^C^C^C}
	xmlTextWriterWriteBase64 = ~f{i^v^cii}
	xmlTextWriterWriteBinHex = ~f{i^v^cii}
	xmlTextWriterWriteCDATA = ~f{i^v^C}
	xmlTextWriterWriteComment = ~f{i^v^C}
	xmlTextWriterWriteDTD = ~f{i^v^C^C^C^C}
	xmlTextWriterWriteDTDAttlist = ~f{i^v^C^C}
	xmlTextWriterWriteDTDElement = ~f{i^v^C^C}
	xmlTextWriterWriteDTDEntity = ~f{i^vi^C^C^C^C^C}
	xmlTextWriterWriteDTDExternalEntity = ~f{i^vi^C^C^C^C}
	xmlTextWriterWriteDTDExternalEntityContents = ~f{i^v^C^C^C}
	xmlTextWriterWriteDTDInternalEntity = ~f{i^vi^C^C}
	xmlTextWriterWriteDTDNotation = ~f{i^v^C^C^C}
	xmlTextWriterWriteElement = ~f{i^v^C^C}
	xmlTextWriterWriteElementNS = ~f{i^v^C^C^C^C}
	xmlTextWriterWriteFormatAttribute = ~f{i^v^C^c$}
	xmlTextWriterWriteFormatAttributeNS = ~f{i^v^C^C^C^c$}
	xmlTextWriterWriteFormatCDATA = ~f{i^v^c$}
	xmlTextWriterWriteFormatComment = ~f{i^v^c$}
	xmlTextWriterWriteFormatDTD = ~f{i^v^C^C^C^c$}
	xmlTextWriterWriteFormatDTDAttlist = ~f{i^v^C^c$}
	xmlTextWriterWriteFormatDTDElement = ~f{i^v^C^c$}
	xmlTextWriterWriteFormatDTDInternalEntity = ~f{i^vi^C^c$}
	xmlTextWriterWriteFormatElement = ~f{i^v^C^c$}
	xmlTextWriterWriteFormatElementNS = ~f{i^v^C^C^C^c$}
	xmlTextWriterWriteFormatPI = ~f{i^v^C^c$}
	xmlTextWriterWriteFormatRaw = ~f{i^v^c$}
	xmlTextWriterWriteFormatString = ~f{i^v^c$}
	xmlTextWriterWritePI = ~f{i^v^C^C}
	xmlTextWriterWriteRaw = ~f{i^v^C}
	xmlTextWriterWriteRawLen = ~f{i^v^Ci}
	xmlTextWriterWriteString = ~f{i^v^C}
	xmlTextWriterWriteVFormatAttribute = ~f{i^v^C^c^v}
	xmlTextWriterWriteVFormatAttributeNS = ~f{i^v^C^C^C^c^v}
	xmlTextWriterWriteVFormatCDATA = ~f{i^v^c^v}
	xmlTextWriterWriteVFormatComment = ~f{i^v^c^v}
	xmlTextWriterWriteVFormatDTD = ~f{i^v^C^C^C^c^v}
	xmlTextWriterWriteVFormatDTDAttlist = ~f{i^v^C^c^v}
	xmlTextWriterWriteVFormatDTDElement = ~f{i^v^C^c^v}
	xmlTextWriterWriteVFormatDTDInternalEntity = ~f{i^vi^C^c^v}
	xmlTextWriterWriteVFormatElement = ~f{i^v^C^c^v}
	xmlTextWriterWriteVFormatElementNS = ~f{i^v^C^C^C^c^v}
	xmlTextWriterWriteVFormatPI = ~f{i^v^C^c^v}
	xmlTextWriterWriteVFormatRaw = ~f{i^v^c^v}
	xmlTextWriterWriteVFormatString = ~f{i^v^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/clock_priv.h
	clock_set_attributes = ~f{iIi^iI}
	clock_set_time = ~f{iI{=Ii}}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/ulimit.h
	ulimit = ~f{li$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/event.h
	kevent = ~f{ii^vi^vi^v}
	kevent64 = ~f{ii^vi^viI^v}
	kqueue = ~f{i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mig_errors.h
	__NDR_convert__mig_reply_error_t = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AddressBookUI.framework/Headers/ABAddressFormatting.h
	ABCreateStringWithAddressDictionary = ~f{@@B}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/stdio.h
	__sputc = ~f{ii^v}
	__srget = ~f{i^v}
	__svfscanf = ~f{i^v^c^v}
	__swbuf = ~f{ii^v}
	asprintf = ~f{i^^c^c$}
	clearerr = ~f{v^v}
	ctermid_r = ~f{^c^c}
	dprintf = ~f{ii^c$}
	fclose = ~f{i^v}
	fdopen = ~f{^vi^c}
	feof = ~f{i^v}
	ferror = ~f{i^v}
	fflush = ~f{i^v}
	fgetc = ~f{i^v}
	fgetln = ~f{^c^v^L}
	fgetpos = ~f{i^v^q}
	fgets = ~f{^c^ci^v}
	fileno = ~f{i^v}
	flockfile = ~f{v^v}
	fmemopen = ~f{^v^vL^c}
	fmtcheck = ~f{^c^c^c}
	fopen = ~f{^v^c^c}
	fprintf = ~f{i^v^c$}
	fpurge = ~f{i^v}
	fputc = ~f{ii^v}
	fputs = ~f{i^c^v}
	fread = ~f{L^vLL^v}
	freopen = ~f{^v^c^c^v}
	fscanf = ~f{i^v^c$}
	fseek = ~f{i^vli}
	fseeko = ~f{i^vqi}
	fsetpos = ~f{i^v^q}
	ftell = ~f{l^v}
	ftello = ~f{q^v}
	ftrylockfile = ~f{i^v}
	funlockfile = ~f{v^v}
	funopen = ~f{^v^v^~f{i^v^ci}^~f{i^v^ci}^~f{q^vqi}^~f{i^v}}
	fwrite = ~f{L^vLL^v}
	getc = ~f{i^v}
	getc_unlocked = ~f{i^v}
	getchar = ~f{i}
	getchar_unlocked = ~f{i}
	getdelim = ~f{l^^c^Li^v}
	getline = ~f{l^^c^L^v}
	gets = ~f{^c^c}
	getw = ~f{i^v}
	open_memstream = ~f{^v^^c^L}
	pclose = ~f{i^v}
	perror = ~f{v^c}
	popen = ~f{^v^c^c}
	printf = ~f{i^c$}
	putc = ~f{ii^v}
	putc_unlocked = ~f{ii^v}
	putchar = ~f{ii}
	putchar_unlocked = ~f{ii}
	puts = ~f{i^c}
	putw = ~f{ii^v}
	remove = ~f{i^c}
	rename = ~f{i^c^c}
	rewind = ~f{v^v}
	scanf = ~f{i^c$}
	setbuf = ~f{v^v^c}
	setbuffer = ~f{v^v^ci}
	setlinebuf = ~f{i^v}
	setvbuf = ~f{i^v^ciL}
	snprintf = ~f{i^cL^c$}
	sprintf = ~f{i^c^c$}
	sscanf = ~f{i^c^c$}
	tempnam = ~f{^c^c^c}
	tmpfile = ~f{^v}
	tmpnam = ~f{^c^c}
	ungetc = ~f{ii^v}
	vasprintf = ~f{i^^c^c^v}
	vdprintf = ~f{ii^c^v}
	vfprintf = ~f{i^v^c^v}
	vfscanf = ~f{i^v^c^v}
	vprintf = ~f{i^c^v}
	vscanf = ~f{i^c^v}
	vsnprintf = ~f{i^cL^c^v}
	vsprintf = ~f{i^c^c^v}
	vsscanf = ~f{i^c^c^v}
	zopen = ~f{^v^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SceneKit.framework/Headers/SceneKitTypes.h
	SCNMatrix4EqualToMatrix4 = ~f{B{=ffffffffffffffff}{=ffffffffffffffff}}
	SCNMatrix4FromGLKMatrix4 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}}
	SCNMatrix4FromMat4 = ~f{{=ffffffffffffffff}{=~V{4f}~V{4f}~V{4f}~V{4f}}}
	SCNMatrix4Invert = ~f{{=ffffffffffffffff}{=ffffffffffffffff}}
	SCNMatrix4IsIdentity = ~f{B{=ffffffffffffffff}}
	SCNMatrix4MakeRotation = ~f{{=ffffffffffffffff}ffff}
	SCNMatrix4MakeScale = ~f{{=ffffffffffffffff}fff}
	SCNMatrix4MakeTranslation = ~f{{=ffffffffffffffff}fff}
	SCNMatrix4Mult = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=ffffffffffffffff}}
	SCNMatrix4Rotate = ~f{{=ffffffffffffffff}{=ffffffffffffffff}ffff}
	SCNMatrix4Scale = ~f{{=ffffffffffffffff}{=ffffffffffffffff}fff}
	SCNMatrix4ToGLKMatrix4 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}}
	SCNMatrix4ToMat4 = ~f{{=~V{4f}~V{4f}~V{4f}~V{4f}}{=ffffffffffffffff}}
	SCNMatrix4Translate = ~f{{=ffffffffffffffff}{=ffffffffffffffff}fff}
	SCNVector3EqualToVector3 = ~f{B{=fff}{=fff}}
	SCNVector3FromFloat3 = ~f{{=fff}~V{3f}}
	SCNVector3FromGLKVector3 = ~f{{=fff}{=fff}}
	SCNVector3Make = ~f{{=fff}fff}
	SCNVector3ToFloat3 = ~f{~V{3f}{=fff}}
	SCNVector3ToGLKVector3 = ~f{{=fff}{=fff}}
	SCNVector4EqualToVector4 = ~f{B{=ffff}{=ffff}}
	SCNVector4FromFloat4 = ~f{{=ffff}~V{4f}}
	SCNVector4FromGLKVector4 = ~f{{=ffff}{=ffff}}
	SCNVector4Make = ~f{{=ffff}ffff}
	SCNVector4ToFloat4 = ~f{~V{4f}{=ffff}}
	SCNVector4ToGLKVector4 = ~f{{=ffff}{=ffff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/sem.h
	semctl = ~f{iiii$}
	semget = ~f{iiii}
	semop = ~f{ii^vL}
	semsys = ~f{ii$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/JavaScriptCore.framework/Headers/JSObjectRef.h
	JSClassCreate = ~f{^v^v}
	JSClassRelease = ~f{v^v}
	JSClassRetain = ~f{^v^v}
	JSObjectCallAsConstructor = ~f{^v^v^vL^^v^^v}
	JSObjectCallAsFunction = ~f{^v^v^v^vL^^v^^v}
	JSObjectCopyPropertyNames = ~f{^v^v^v}
	JSObjectDeleteProperty = ~f{B^v^v^v^^v}
	JSObjectDeletePropertyForKey = ~f{B^v^v^v^^v}
	JSObjectGetPrivate = ~f{^v^v}
	JSObjectGetProperty = ~f{^v^v^v^v^^v}
	JSObjectGetPropertyAtIndex = ~f{^v^v^vI^^v}
	JSObjectGetPropertyForKey = ~f{^v^v^v^v^^v}
	JSObjectGetPrototype = ~f{^v^v^v}
	JSObjectHasProperty = ~f{B^v^v^v}
	JSObjectHasPropertyForKey = ~f{B^v^v^v^^v}
	JSObjectIsConstructor = ~f{B^v^v}
	JSObjectIsFunction = ~f{B^v^v}
	JSObjectMake = ~f{^v^v^v^v}
	JSObjectMakeArray = ~f{^v^vL^^v^^v}
	JSObjectMakeConstructor = ~f{^v^v^v^~f{^v^v^vL^^v^^v}}
	JSObjectMakeDate = ~f{^v^vL^^v^^v}
	JSObjectMakeDeferredPromise = ~f{^v^v^^v^^v^^v}
	JSObjectMakeError = ~f{^v^vL^^v^^v}
	JSObjectMakeFunction = ~f{^v^v^vI^^v^v^vi^^v}
	JSObjectMakeFunctionWithCallback = ~f{^v^v^v^~f{^v^v^v^vL^^v^^v}}
	JSObjectMakeRegExp = ~f{^v^vL^^v^^v}
	JSObjectSetPrivate = ~f{B^v^v}
	JSObjectSetProperty = ~f{v^v^v^v^vI^^v}
	JSObjectSetPropertyAtIndex = ~f{v^v^vI^v^^v}
	JSObjectSetPropertyForKey = ~f{v^v^v^v^vI^^v}
	JSObjectSetPrototype = ~f{v^v^v^v}
	JSPropertyNameAccumulatorAddName = ~f{v^v^v}
	JSPropertyNameArrayGetCount = ~f{L^v}
	JSPropertyNameArrayGetNameAtIndex = ~f{^v^vL}
	JSPropertyNameArrayRelease = ~f{v^v}
	JSPropertyNameArrayRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread/pthread.h
	pthread_atfork = ~f{i^~f{v}^~f{v}^~f{v}}
	pthread_attr_destroy = ~f{i^v}
	pthread_attr_getdetachstate = ~f{i^v^i}
	pthread_attr_getguardsize = ~f{i^v^L}
	pthread_attr_getinheritsched = ~f{i^v^i}
	pthread_attr_getschedparam = ~f{i^v^v}
	pthread_attr_getschedpolicy = ~f{i^v^i}
	pthread_attr_getscope = ~f{i^v^i}
	pthread_attr_getstack = ~f{i^v^^v^L}
	pthread_attr_getstackaddr = ~f{i^v^^v}
	pthread_attr_getstacksize = ~f{i^v^L}
	pthread_attr_init = ~f{i^v}
	pthread_attr_setdetachstate = ~f{i^vi}
	pthread_attr_setguardsize = ~f{i^vL}
	pthread_attr_setinheritsched = ~f{i^vi}
	pthread_attr_setschedparam = ~f{i^v^v}
	pthread_attr_setschedpolicy = ~f{i^vi}
	pthread_attr_setscope = ~f{i^vi}
	pthread_attr_setstack = ~f{i^v^vL}
	pthread_attr_setstackaddr = ~f{i^v^v}
	pthread_attr_setstacksize = ~f{i^vL}
	pthread_cancel = ~f{i^v}
	pthread_cond_broadcast = ~f{i^v}
	pthread_cond_destroy = ~f{i^v}
	pthread_cond_init = ~f{i^v^v}
	pthread_cond_signal = ~f{i^v}
	pthread_cond_signal_thread_np = ~f{i^v^v}
	pthread_cond_timedwait = ~f{i^v^v^v}
	pthread_cond_timedwait_relative_np = ~f{i^v^v^v}
	pthread_cond_wait = ~f{i^v^v}
	pthread_condattr_destroy = ~f{i^v}
	pthread_condattr_getpshared = ~f{i^v^i}
	pthread_condattr_init = ~f{i^v}
	pthread_condattr_setpshared = ~f{i^vi}
	pthread_create = ~f{i^^v^v^~f{^v^v}^v}
	pthread_create_suspended_np = ~f{i^^v^v^~f{^v^v}^v}
	pthread_detach = ~f{i^v}
	pthread_equal = ~f{i^v^v}
	pthread_exit = ~f{v^v}
	pthread_from_mach_thread_np = ~f{^vI}
	pthread_get_stackaddr_np = ~f{^v^v}
	pthread_get_stacksize_np = ~f{L^v}
	pthread_getconcurrency = ~f{i}
	pthread_getname_np = ~f{i^v^cL}
	pthread_getschedparam = ~f{i^v^i^v}
	pthread_getspecific = ~f{^vL}
	pthread_is_threaded_np = ~f{i}
	pthread_join = ~f{i^v^^v}
	pthread_key_create = ~f{i^L^~f{v^v}}
	pthread_key_delete = ~f{iL}
	pthread_kill = ~f{i^vi}
	pthread_mach_thread_np = ~f{I^v}
	pthread_main_np = ~f{i}
	pthread_mutex_destroy = ~f{i^v}
	pthread_mutex_getprioceiling = ~f{i^v^i}
	pthread_mutex_init = ~f{i^v^v}
	pthread_mutex_lock = ~f{i^v}
	pthread_mutex_setprioceiling = ~f{i^vi^i}
	pthread_mutex_trylock = ~f{i^v}
	pthread_mutex_unlock = ~f{i^v}
	pthread_mutexattr_destroy = ~f{i^v}
	pthread_mutexattr_getpolicy_np = ~f{i^v^i}
	pthread_mutexattr_getprioceiling = ~f{i^v^i}
	pthread_mutexattr_getprotocol = ~f{i^v^i}
	pthread_mutexattr_getpshared = ~f{i^v^i}
	pthread_mutexattr_gettype = ~f{i^v^i}
	pthread_mutexattr_init = ~f{i^v}
	pthread_mutexattr_setpolicy_np = ~f{i^vi}
	pthread_mutexattr_setprioceiling = ~f{i^vi}
	pthread_mutexattr_setprotocol = ~f{i^vi}
	pthread_mutexattr_setpshared = ~f{i^vi}
	pthread_mutexattr_settype = ~f{i^vi}
	pthread_once = ~f{i^v^~f{v}}
	pthread_rwlock_destroy = ~f{i^v}
	pthread_rwlock_init = ~f{i^v^v}
	pthread_rwlock_rdlock = ~f{i^v}
	pthread_rwlock_tryrdlock = ~f{i^v}
	pthread_rwlock_trywrlock = ~f{i^v}
	pthread_rwlock_unlock = ~f{i^v}
	pthread_rwlock_wrlock = ~f{i^v}
	pthread_rwlockattr_destroy = ~f{i^v}
	pthread_rwlockattr_getpshared = ~f{i^v^i}
	pthread_rwlockattr_init = ~f{i^v}
	pthread_rwlockattr_setpshared = ~f{i^vi}
	pthread_self = ~f{^v}
	pthread_setcancelstate = ~f{ii^i}
	pthread_setcanceltype = ~f{ii^i}
	pthread_setconcurrency = ~f{ii}
	pthread_setname_np = ~f{i^c}
	pthread_setschedparam = ~f{i^vi^v}
	pthread_setspecific = ~f{iL^v}
	pthread_sigmask = ~f{ii^I^I}
	pthread_testcancel = ~f{v}
	pthread_threadid_np = ~f{i^v^Q}
	pthread_yield_np = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework/Headers/AVAudioTypes.h
	AVAudioMake3DAngularOrientation = ~f{{=fff}fff}
	AVAudioMake3DPoint = ~f{{=fff}fff}
	AVAudioMake3DVector = ~f{{=fff}fff}
	AVAudioMake3DVectorOrientation = ~f{{={=fff}{=fff}}{=fff}{=fff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/__wctype.h
	iswalnum_l = ~f{ii^v}
	iswalpha_l = ~f{ii^v}
	iswcntrl_l = ~f{ii^v}
	iswctype_l = ~f{iiI^v}
	iswdigit_l = ~f{ii^v}
	iswgraph_l = ~f{ii^v}
	iswlower_l = ~f{ii^v}
	iswprint_l = ~f{ii^v}
	iswpunct_l = ~f{ii^v}
	iswspace_l = ~f{ii^v}
	iswupper_l = ~f{ii^v}
	iswxdigit_l = ~f{ii^v}
	towlower_l = ~f{ii^v}
	towupper_l = ~f{ii^v}
	wctype_l = ~f{I^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/advertise_descriptor.h
	nw_advertise_descriptor_copy_txt_record_object = ~f{@@}
	nw_advertise_descriptor_create_bonjour_service = ~f{@^c^c^c}
	nw_advertise_descriptor_get_no_auto_rename = ~f{B@}
	nw_advertise_descriptor_set_no_auto_rename = ~f{v@B}
	nw_advertise_descriptor_set_txt_record = ~f{v@^vL}
	nw_advertise_descriptor_set_txt_record_object = ~f{v@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKModel.h
	GLKVertexAttributeParametersFromModelIO = ~f{{=IiC}L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/AppleTextureEncoder.h
	at_block_format_to_MTLPixelFormat = ~f{IL}
	at_encoder_compress_texels = ~f{f@^v^vfQ}
	at_encoder_create = ~f{@LILI^f}
	at_encoder_decompress_texels = ~f{l@^v^vQ}
	at_encoder_get_block_address = ~f{^v@{=III}{=III}^v}
	at_encoder_get_block_alpha = ~f{I@}
	at_encoder_get_block_counts = ~f{{=III}@{=III}}
	at_encoder_get_block_dimensions = ~f{{=III}@}
	at_encoder_get_block_format = ~f{L@}
	at_encoder_get_block_size = ~f{L@}
	at_encoder_get_texel_alpha = ~f{I@}
	at_encoder_get_texel_format = ~f{L@}
	at_encoder_get_version = ~f{I}
	at_encoder_is_compression_monolithic = ~f{B@Q}
	at_encoder_is_decompression_monolithic = ~f{B@Q}
	at_texel_format_to_MTLPixelFormat = ~f{IL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/VideoToolbox.framework/Headers/VTVideoEncoderList.h
	VTCopySupportedPropertyDictionaryForEncoder = ~f{iiiI^v^^v^^v}
	VTCopyVideoEncoderList = ~f{i^v^^v}
/usr/local/lib/clang/9.0.1/include/tmmintrin.h
	_mm_abs_epi16 = ~f{~V{2q}~V{2q}}
	_mm_abs_epi32 = ~f{~V{2q}~V{2q}}
	_mm_abs_epi8 = ~f{~V{2q}~V{2q}}
	_mm_abs_pi16 = ~f{~V{1q}~V{1q}}
	_mm_abs_pi32 = ~f{~V{1q}~V{1q}}
	_mm_abs_pi8 = ~f{~V{1q}~V{1q}}
	_mm_hadd_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_hadd_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_hadd_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_hadd_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_hadds_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_hadds_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_hsub_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_hsub_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_hsub_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_hsub_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_hsubs_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_hsubs_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_maddubs_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_maddubs_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_mulhrs_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_mulhrs_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_shuffle_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_shuffle_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sign_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sign_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sign_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sign_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sign_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sign_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/workloop.h
	dispatch_workloop_create = ~f{@^c}
	dispatch_workloop_create_inactive = ~f{@^c}
	dispatch_workloop_set_autorelease_frequency = ~f{v@L}
/usr/local/lib/clang/9.0.1/include/avx512vnniintrin.h
	_mm512_dpbusd_epi32 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_dpbusds_epi32 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_dpwssd_epi32 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_dpwssds_epi32 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_mask_dpbusd_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_dpbusds_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_dpwssd_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_dpwssds_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_dpbusd_epi32 = ~f{~V{8q}S~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_dpbusds_epi32 = ~f{~V{8q}S~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_dpwssd_epi32 = ~f{~V{8q}S~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_dpwssds_epi32 = ~f{~V{8q}S~V{8q}~V{8q}~V{8q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioUnitProperties.h
	GetAudioUnitParameterDisplayType = ~f{II}
	SetAudioUnitParameterDisplayType = ~f{III}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/VideoToolbox.framework/Headers/VTDecompressionSession.h
	VTDecompressionSessionCanAcceptFormatDescription = ~f{C^v^v}
	VTDecompressionSessionCopyBlackPixelBuffer = ~f{i^v^^v}
	VTDecompressionSessionCreate = ~f{i^v^v^v^v^v^^v}
	VTDecompressionSessionDecodeFrame = ~f{i^v^vI^v^I}
	VTDecompressionSessionDecodeFrameWithOutputHandler = ~f{i^v^vI^I%~f{viI^v{=qiIq}{=qiIq}}}
	VTDecompressionSessionFinishDelayedFrames = ~f{i^v}
	VTDecompressionSessionGetTypeID = ~f{L}
	VTDecompressionSessionInvalidate = ~f{v^v}
	VTDecompressionSessionWaitForAsynchronousFrames = ~f{i^v}
	VTIsHardwareDecodeSupported = ~f{CI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MediaAccessibility.framework/Headers/MAAudibleMedia.h
	MAAudibleMediaCopyPreferredCharacteristics = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenGLES.framework/Headers/ES1/gl.h
	glActiveTexture = ~f{vI}
	glAlphaFunc = ~f{vIf}
	glAlphaFuncx = ~f{vIi}
	glBindBuffer = ~f{vII}
	glBindTexture = ~f{vII}
	glBlendFunc = ~f{vII}
	glBufferData = ~f{vIl^vI}
	glBufferSubData = ~f{vIll^v}
	glClear = ~f{vI}
	glClearColor = ~f{vffff}
	glClearColorx = ~f{viiii}
	glClearDepthf = ~f{vf}
	glClearDepthx = ~f{vi}
	glClearStencil = ~f{vi}
	glClientActiveTexture = ~f{vI}
	glClipPlanef = ~f{vI^f}
	glClipPlanex = ~f{vI^i}
	glColor4f = ~f{vffff}
	glColor4ub = ~f{vCCCC}
	glColor4x = ~f{viiii}
	glColorMask = ~f{vCCCC}
	glColorPointer = ~f{viIi^v}
	glCompressedTexImage2D = ~f{vIiIiiii^v}
	glCompressedTexSubImage2D = ~f{vIiiiiiIi^v}
	glCopyTexImage2D = ~f{vIiIiiiii}
	glCopyTexSubImage2D = ~f{vIiiiiiii}
	glCullFace = ~f{vI}
	glCurrentPaletteMatrixOES = ~f{vI}
	glDeleteBuffers = ~f{vi^I}
	glDeleteTextures = ~f{vi^I}
	glDepthFunc = ~f{vI}
	glDepthMask = ~f{vC}
	glDepthRangef = ~f{vff}
	glDepthRangex = ~f{vii}
	glDisable = ~f{vI}
	glDisableClientState = ~f{vI}
	glDrawArrays = ~f{vIii}
	glDrawElements = ~f{vIiI^v}
	glDrawTexfOES = ~f{vfffff}
	glDrawTexfvOES = ~f{v^f}
	glDrawTexiOES = ~f{viiiii}
	glDrawTexivOES = ~f{v^i}
	glDrawTexsOES = ~f{vsssss}
	glDrawTexsvOES = ~f{v^s}
	glDrawTexxOES = ~f{viiiii}
	glDrawTexxvOES = ~f{v^i}
	glEnable = ~f{vI}
	glEnableClientState = ~f{vI}
	glFinish = ~f{v}
	glFlush = ~f{v}
	glFogf = ~f{vIf}
	glFogfv = ~f{vI^f}
	glFogx = ~f{vIi}
	glFogxv = ~f{vI^i}
	glFrontFace = ~f{vI}
	glFrustumf = ~f{vffffff}
	glFrustumx = ~f{viiiiii}
	glGenBuffers = ~f{vi^I}
	glGenTextures = ~f{vi^I}
	glGetBooleanv = ~f{vI^C}
	glGetBufferParameteriv = ~f{vII^i}
	glGetClipPlanef = ~f{vI^f}
	glGetClipPlanex = ~f{vI^i}
	glGetError = ~f{I}
	glGetFixedv = ~f{vI^i}
	glGetFloatv = ~f{vI^f}
	glGetIntegerv = ~f{vI^i}
	glGetLightfv = ~f{vII^f}
	glGetLightxv = ~f{vII^i}
	glGetMaterialfv = ~f{vII^f}
	glGetMaterialxv = ~f{vII^i}
	glGetPointerv = ~f{vI^^v}
	glGetString = ~f{^CI}
	glGetTexEnvfv = ~f{vII^f}
	glGetTexEnviv = ~f{vII^i}
	glGetTexEnvxv = ~f{vII^i}
	glGetTexParameterfv = ~f{vII^f}
	glGetTexParameteriv = ~f{vII^i}
	glGetTexParameterxv = ~f{vII^i}
	glHint = ~f{vII}
	glIsBuffer = ~f{CI}
	glIsEnabled = ~f{CI}
	glIsTexture = ~f{CI}
	glLightModelf = ~f{vIf}
	glLightModelfv = ~f{vI^f}
	glLightModelx = ~f{vIi}
	glLightModelxv = ~f{vI^i}
	glLightf = ~f{vIIf}
	glLightfv = ~f{vII^f}
	glLightx = ~f{vIIi}
	glLightxv = ~f{vII^i}
	glLineWidth = ~f{vf}
	glLineWidthx = ~f{vi}
	glLoadIdentity = ~f{v}
	glLoadMatrixf = ~f{v^f}
	glLoadMatrixx = ~f{v^i}
	glLoadPaletteFromModelViewMatrixOES = ~f{v}
	glLogicOp = ~f{vI}
	glMaterialf = ~f{vIIf}
	glMaterialfv = ~f{vII^f}
	glMaterialx = ~f{vIIi}
	glMaterialxv = ~f{vII^i}
	glMatrixIndexPointerOES = ~f{viIi^v}
	glMatrixMode = ~f{vI}
	glMultMatrixf = ~f{v^f}
	glMultMatrixx = ~f{v^i}
	glMultiTexCoord4f = ~f{vIffff}
	glMultiTexCoord4x = ~f{vIiiii}
	glNormal3f = ~f{vfff}
	glNormal3x = ~f{viii}
	glNormalPointer = ~f{vIi^v}
	glOrthof = ~f{vffffff}
	glOrthox = ~f{viiiiii}
	glPixelStorei = ~f{vIi}
	glPointParameterf = ~f{vIf}
	glPointParameterfv = ~f{vI^f}
	glPointParameterx = ~f{vIi}
	glPointParameterxv = ~f{vI^i}
	glPointSize = ~f{vf}
	glPointSizePointerOES = ~f{vIi^v}
	glPointSizex = ~f{vi}
	glPolygonOffset = ~f{vff}
	glPolygonOffsetx = ~f{vii}
	glPopMatrix = ~f{v}
	glPushMatrix = ~f{v}
	glReadPixels = ~f{viiiiII^v}
	glRotatef = ~f{vffff}
	glRotatex = ~f{viiii}
	glSampleCoverage = ~f{vfC}
	glSampleCoveragex = ~f{viC}
	glScalef = ~f{vfff}
	glScalex = ~f{viii}
	glScissor = ~f{viiii}
	glShadeModel = ~f{vI}
	glStencilFunc = ~f{vIiI}
	glStencilMask = ~f{vI}
	glStencilOp = ~f{vIII}
	glTexCoordPointer = ~f{viIi^v}
	glTexEnvf = ~f{vIIf}
	glTexEnvfv = ~f{vII^f}
	glTexEnvi = ~f{vIIi}
	glTexEnviv = ~f{vII^i}
	glTexEnvx = ~f{vIIi}
	glTexEnvxv = ~f{vII^i}
	glTexImage2D = ~f{vIiiiiiII^v}
	glTexParameterf = ~f{vIIf}
	glTexParameterfv = ~f{vII^f}
	glTexParameteri = ~f{vIIi}
	glTexParameteriv = ~f{vII^i}
	glTexParameterx = ~f{vIIi}
	glTexParameterxv = ~f{vII^i}
	glTexSubImage2D = ~f{vIiiiiiII^v}
	glTranslatef = ~f{vfff}
	glTranslatex = ~f{viii}
	glVertexPointer = ~f{viIi^v}
	glViewport = ~f{viiii}
	glWeightPointerOES = ~f{viIi^v}
/usr/local/lib/clang/9.0.1/include/gfniintrin.h
	_mm256_gf2p8mul_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_mask_gf2p8mul_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_gf2p8mul_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm512_gf2p8mul_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mask_gf2p8mul_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_gf2p8mul_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm_gf2p8mul_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_mask_gf2p8mul_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_gf2p8mul_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/LinearAlgebra/object.h
	la_add_attributes = ~f{v@L}
	la_release = ~f{v@}
	la_remove_attributes = ~f{v@L}
	la_retain = ~f{@@}
	la_status = ~f{l@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/JavaScriptCore.framework/Headers/JSStringRefCF.h
	JSStringCopyCFString = ~f{^v^v^v}
	JSStringCreateWithCFString = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/netinet/in.h
	bindresvport = ~f{ii^v}
	bindresvport_sa = ~f{ii^v}
	getipv4sourcefilter = ~f{ii{=I}{=I}^I^I^v}
	getsourcefilter = ~f{iiI^vI^I^I^v}
	setipv4sourcefilter = ~f{ii{=I}{=I}II^v}
	setsourcefilter = ~f{iiI^vIII^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTGlyphInfo.h
	CTGlyphInfoCreateWithCharacterIdentifier = ~f{^vSS^v}
	CTGlyphInfoCreateWithGlyph = ~f{^vS^v^v}
	CTGlyphInfoCreateWithGlyphName = ~f{^v^v^v^v}
	CTGlyphInfoGetCharacterCollection = ~f{S^v}
	CTGlyphInfoGetCharacterIdentifier = ~f{S^v}
	CTGlyphInfoGetGlyph = ~f{S^v}
	CTGlyphInfoGetGlyphName = ~f{^v^v}
	CTGlyphInfoGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/Sparse/SolveImplementationTyped.h
	SparseCleanup = ~f{v{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
	SparseConvertFromCoordinate = ~f{{={=ii^l^i{=BCIIB}C}^f}iilC{=BCIIB}^i^i^f^v^v}
	SparseConvertFromOpaque = ~f{{={=ii^l^i{=BCIIB}C}^f}^v}
	SparseCreatePreconditioner = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}i{={=ii^l^i{=BCIIB}C}^f}}
	SparseCreateSubfactor = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}}
	SparseFactor = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}{=iii{=BCIIB}CC^vLLLL}{={=ii^l^i{=BCIIB}C}^f}{=IC^vdd}^v^v}
	SparseGetStateSize_Double = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetStateSize_Float = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetTranspose = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseIterate = ~f{v{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}i^B^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}
	SparseMultiply = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{=i^f}{=i^f}^v}
	SparseMultiplyAdd = ~f{vf{={=ii^l^i{=BCIIB}C}^f}{=i^f}{=i^f}}
	SparseRefactor = ~f{v{={=ii^l^i{=BCIIB}C}^f}^v{=IC^vdd}^v}
	SparseRetain = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseSolve = ~f{i{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}%~f{vBI{=i^f}{=i^f}}{=i^f}{=i^f}{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
	_DenseMatrixFromVector_Double = ~f{{=iii{=BCIIB}^d}{=i^d}}
	_DenseMatrixFromVector_Float = ~f{{=iii{=BCIIB}^f}{=i^f}}
	_SparseCGIterate_Double = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}
	_SparseCGIterate_Float = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}
	_SparseCGSolve_Double = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}^v}
	_SparseCGSolve_Float = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}^v}
	_SparseConvertFromCoordinate_Double = ~f{{={=ii^l^i{=BCIIB}C}^d}iilC{=BCIIB}^i^i^d^c^i}
	_SparseConvertFromCoordinate_Float = ~f{{={=ii^l^i{=BCIIB}C}^f}iilC{=BCIIB}^i^i^f^c^i}
	_SparseConvertFromOpaque_Double = ~f{{={=ii^l^i{=BCIIB}C}^d}^v}
	_SparseConvertFromOpaque_Float = ~f{{={=ii^l^i{=BCIIB}C}^f}^v}
	_SparseCreatePreconditioner_Double = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}i^v}
	_SparseCreatePreconditioner_Float = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}i^v}
	_SparseDestroyOpaqueNumeric_Double = ~f{v^v}
	_SparseDestroyOpaqueNumeric_Float = ~f{v^v}
	_SparseFactorQR_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFactorQR_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFactorSymmetric_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFactorSymmetric_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFailedFactor_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}i}
	_SparseFailedFactor_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}i}
	_SparseGMRESIterate_Double = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}
	_SparseGMRESIterate_Float = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}
	_SparseGMRESSolve_Double = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}^v}
	_SparseGMRESSolve_Float = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}^v}
	_SparseGetIterativeStateSize_Double = ~f{L^vBiii}
	_SparseGetIterativeStateSize_Float = ~f{L^vBiii}
	_SparseGetOptionsFromNumericFactor_Double = ~f{{=IC^vdd}^v}
	_SparseGetOptionsFromNumericFactor_Float = ~f{{=IC^vdd}^v}
	_SparseGetWorkspaceRequired_Double = ~f{vC{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^L^L}
	_SparseGetWorkspaceRequired_Float = ~f{vC{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^L^L}
	_SparseInvalidSubfactor_Double = ?
	_SparseInvalidSubfactor_Float = ?
	_SparseLSMRIterate_Double = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}
	_SparseLSMRIterate_Float = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}
	_SparseLSMRSolve_Double = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}^v}
	_SparseLSMRSolve_Float = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}^v}
	_SparseMultiplySubfactor_Double = ~f{v^v^v^v^c}
	_SparseMultiplySubfactor_Float = ~f{v^v^v^v^c}
	_SparseNumericFactorQR_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseNumericFactorQR_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseNumericFactorSymmetric_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseNumericFactorSymmetric_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseRefactorQR_Double = ~f{v^v^v^v^v}
	_SparseRefactorQR_Float = ~f{v^v^v^v^v}
	_SparseRefactorSymmetric_Double = ~f{v^v^v^v^v}
	_SparseRefactorSymmetric_Float = ~f{v^v^v^v^v}
	_SparseReleaseOpaquePreconditioner_Double = ~f{v^v}
	_SparseReleaseOpaquePreconditioner_Float = ~f{v^v}
	_SparseRetainNumeric_Double = ~f{v^v}
	_SparseRetainNumeric_Float = ~f{v^v}
	_SparseSolveOpaque_Double = ~f{v^v^v^v^v}
	_SparseSolveOpaque_Float = ~f{v^v^v^v^v}
	_SparseSolveSubfactor_Double = ~f{v^v^v^v^c}
	_SparseSolveSubfactor_Float = ~f{v^v^v^v^c}
	_SparseSpMV_Double = ~f{vd{={=ii^l^i{=BCIIB}C}^d}{=iii{=BCIIB}^d}B{=iii{=BCIIB}^d}}
	_SparseSpMV_Float = ~f{vf{={=ii^l^i{=BCIIB}C}^f}{=iii{=BCIIB}^f}B{=iii{=BCIIB}^f}}
	_SparseSubFactorGetDimn_Double = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}^i^i}
	_SparseSubFactorGetDimn_Float = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}^i^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecProtocolObject.h
	sec_release = ~f{v^v}
	sec_retain = ~f{^v^v}
/usr/local/lib/clang/9.0.1/include/clzerointrin.h
	_mm_clzero = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTFontManager.h
	CTFontManagerCompareFontFamilyNames = ~f{l^v^v^v}
	CTFontManagerCopyAvailableFontFamilyNames = ~f{^v}
	CTFontManagerCopyAvailableFontURLs = ~f{^v}
	CTFontManagerCopyAvailablePostScriptNames = ~f{^v}
	CTFontManagerCopyRegisteredFontDescriptors = ~f{^vIB}
	CTFontManagerCreateFontDescriptorFromData = ~f{^v^v}
	CTFontManagerCreateFontDescriptorsFromData = ~f{^v^v}
	CTFontManagerCreateFontDescriptorsFromURL = ~f{^v^v}
	CTFontManagerCreateFontRequestRunLoopSource = ~f{^vl%~f{^v^vi}}
	CTFontManagerEnableFontDescriptors = ~f{v^vB}
	CTFontManagerGetAutoActivationSetting = ~f{I^v}
	CTFontManagerGetScopeForURL = ~f{I^v}
	CTFontManagerIsSupportedFont = ~f{B^v}
	CTFontManagerRegisterFontDescriptors = ~f{v^vIB%~f{B^vB}}
	CTFontManagerRegisterFontURLs = ~f{v^vIB%~f{B^vB}}
	CTFontManagerRegisterFontsForURL = ~f{B^vI^^v}
	CTFontManagerRegisterFontsForURLs = ~f{B^vI^^v}
	CTFontManagerRegisterFontsWithAssetNames = ~f{v^v^vIB%~f{B^vB}}
	CTFontManagerRegisterGraphicsFont = ~f{B^v^^v}
	CTFontManagerRequestFonts = ~f{v^v%~f{v^v}}
	CTFontManagerSetAutoActivationSetting = ~f{v^vI}
	CTFontManagerUnregisterFontDescriptors = ~f{v^vI%~f{B^vB}}
	CTFontManagerUnregisterFontURLs = ~f{v^vI%~f{B^vB}}
	CTFontManagerUnregisterFontsForURL = ~f{B^vI^^v}
	CTFontManagerUnregisterFontsForURLs = ~f{B^vI^^v}
	CTFontManagerUnregisterGraphicsFont = ~f{B^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vectorOps.h
	vIsamax = ~f{ii^~V{4f}}
	vIsamin = ~f{ii^~V{4f}}
	vIsmax = ~f{ii^~V{4f}}
	vIsmin = ~f{ii^~V{4f}}
	vSasum = ~f{fi^~V{4f}}
	vSaxpy = ~f{vif^~V{4f}^~V{4f}}
	vScopy = ~f{vi^~V{4f}^~V{4f}}
	vSdot = ~f{fi^~V{4f}^~V{4f}}
	vSgeadd = ~f{vii^~V{4f}c^~V{4f}c^~V{4f}}
	vSgemm = ~f{viii^~V{4f}c^~V{4f}c^~V{4f}ff^~V{4f}}
	vSgemtx = ~f{viif^~V{4f}^~V{4f}^~V{4f}}
	vSgemul = ~f{viii^~V{4f}c^~V{4f}c^~V{4f}}
	vSgemv = ~f{vciif^~V{4f}^~V{4f}f^~V{4f}}
	vSgemx = ~f{viif^~V{4f}^~V{4f}^~V{4f}}
	vSgesub = ~f{vii^~V{4f}c^~V{4f}c^~V{4f}}
	vSgetmi = ~f{vi^~V{4f}}
	vSgetmo = ~f{vii^~V{4f}^~V{4f}}
	vSgevv = ~f{vii^~V{4f}^~V{4f}^~V{4f}}
	vSnaxpy = ~f{vii^~V{4f}^~V{4f}^~V{4f}}
	vSndot = ~f{vii^fi^~V{4f}^~V{4f}}
	vSnorm2 = ~f{fi^~V{4f}}
	vSnrm2 = ~f{fi^~V{4f}}
	vSrot = ~f{vi^~V{4f}^~V{4f}ff}
	vSscal = ~f{vif^~V{4f}}
	vSsum = ~f{fi^~V{4f}}
	vSswap = ~f{vi^~V{4f}^~V{4f}}
	vSyax = ~f{vif^~V{4f}^~V{4f}}
	vSzaxpy = ~f{vif^~V{4f}^~V{4f}^~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/pattern.h
	xmlFreePattern = ~f{v^v}
	xmlFreePatternList = ~f{v^v}
	xmlFreeStreamCtxt = ~f{v^v}
	xmlPatternFromRoot = ~f{i^v}
	xmlPatternGetStreamCtxt = ~f{^v^v}
	xmlPatternMatch = ~f{i^v^v}
	xmlPatternMaxDepth = ~f{i^v}
	xmlPatternMinDepth = ~f{i^v}
	xmlPatternStreamable = ~f{i^v}
	xmlPatterncompile = ~f{^v^C^vi^^C}
	xmlStreamPop = ~f{i^v}
	xmlStreamPush = ~f{i^v^C^C}
	xmlStreamPushAttr = ~f{i^v^C^C}
	xmlStreamPushNode = ~f{i^v^C^Ci}
	xmlStreamWantsAnyNode = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Transform.h
	vImageCreateGammaFunction = ~f{^vfiI}
	vImageDestroyGammaFunction = ~f{v^v}
	vImageGamma_Planar8toPlanarF = ~f{l^v^v^vI}
	vImageGamma_PlanarF = ~f{l^v^v^vI}
	vImageGamma_PlanarFtoPlanar8 = ~f{l^v^v^vI}
	vImageInterpolatedLookupTable_PlanarF = ~f{l^v^v^fLffI}
	vImageLookupTable_8to64U = ~f{l^v^v^QI}
	vImageLookupTable_Planar16 = ~f{l^v^v^SI}
	vImageLookupTable_Planar8toPlanar128 = ~f{l^v^v^^fI}
	vImageLookupTable_Planar8toPlanar16 = ~f{l^v^v^SI}
	vImageLookupTable_Planar8toPlanar24 = ~f{l^v^v^II}
	vImageLookupTable_Planar8toPlanar48 = ~f{l^v^v^QI}
	vImageLookupTable_Planar8toPlanar96 = ~f{l^v^v^^fI}
	vImageLookupTable_Planar8toPlanarF = ~f{l^v^v^fI}
	vImageLookupTable_PlanarFtoPlanar8 = ~f{l^v^v^CI}
	vImageMatrixMultiply_ARGB8888 = ~f{l^v^v^si^s^iI}
	vImageMatrixMultiply_ARGB8888ToPlanar8 = ~f{l^v^v^si^siI}
	vImageMatrixMultiply_ARGBFFFF = ~f{l^v^v^f^f^fI}
	vImageMatrixMultiply_ARGBFFFFToPlanarF = ~f{l^v^v^f^ffI}
	vImageMatrixMultiply_Planar16S = ~f{l^^v^^vII^si^s^iI}
	vImageMatrixMultiply_Planar8 = ~f{l^^v^^vII^si^s^iI}
	vImageMatrixMultiply_PlanarF = ~f{l^^v^^vII^f^f^fI}
	vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12 = ~f{l^v^v^v^vII}
	vImageMultiDimensionalInterpolatedLookupTable_PlanarF = ~f{l^v^v^v^vII}
	vImageMultidimensionalTable_Create = ~f{^v^SII^CII^l}
	vImageMultidimensionalTable_Release = ~f{l^v}
	vImageMultidimensionalTable_Retain = ~f{l^v}
	vImagePiecewiseGamma_Planar16Q12 = ~f{l^v^v^ff^fsI}
	vImagePiecewiseGamma_Planar16Q12toPlanar8 = ~f{l^v^v^ff^fsI}
	vImagePiecewiseGamma_Planar8 = ~f{l^v^v^ff^fCI}
	vImagePiecewiseGamma_Planar8toPlanar16Q12 = ~f{l^v^v^ff^fCI}
	vImagePiecewiseGamma_Planar8toPlanarF = ~f{l^v^v^ff^fCI}
	vImagePiecewiseGamma_PlanarF = ~f{l^v^v^ff^ffI}
	vImagePiecewiseGamma_PlanarFtoPlanar8 = ~f{l^v^v^ff^ffI}
	vImagePiecewisePolynomial_Planar8toPlanarF = ~f{l^v^v^^f^fIII}
	vImagePiecewisePolynomial_PlanarF = ~f{l^v^v^^f^fIII}
	vImagePiecewisePolynomial_PlanarFtoPlanar8 = ~f{l^v^v^^f^fIII}
	vImagePiecewiseRational_PlanarF = ~f{l^v^v^^f^^f^fIIII}
	vImageSymmetricPiecewiseGamma_Planar16Q12 = ~f{l^v^v^ff^fsI}
	vImageSymmetricPiecewiseGamma_PlanarF = ~f{l^v^v^ff^ffI}
	vImageSymmetricPiecewisePolynomial_PlanarF = ~f{l^v^v^^f^fIII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/nl_types.h
	catclose = ~f{i^v}
	catgets = ~f{^c^vii^c}
	catopen = ~f{^v^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/times.h
	times = ~f{L^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFStringTokenizer.h
	CFStringTokenizerAdvanceToNextToken = ~f{L^v}
	CFStringTokenizerCopyBestStringLanguage = ~f{^v^v{=ll}}
	CFStringTokenizerCopyCurrentTokenAttribute = ~f{^v^vL}
	CFStringTokenizerCreate = ~f{^v^v^v{=ll}L^v}
	CFStringTokenizerGetCurrentSubTokens = ~f{l^v^vl^v}
	CFStringTokenizerGetCurrentTokenRange = ~f{{=ll}^v}
	CFStringTokenizerGetTypeID = ~f{L}
	CFStringTokenizerGoToTokenAtIndex = ~f{L^vl}
	CFStringTokenizerSetString = ~f{v^v^v{=ll}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach_traps.h
	_kernelrpc_mach_port_allocate_trap = ~f{iII^I}
	_kernelrpc_mach_port_construct_trap = ~f{iI^vQ^I}
	_kernelrpc_mach_port_deallocate_trap = ~f{iII}
	_kernelrpc_mach_port_destroy_trap = ~f{iII}
	_kernelrpc_mach_port_destruct_trap = ~f{iIIiQ}
	_kernelrpc_mach_port_extract_member_trap = ~f{iIII}
	_kernelrpc_mach_port_get_attributes_trap = ~f{iIIi^i^I}
	_kernelrpc_mach_port_guard_trap = ~f{iIIQI}
	_kernelrpc_mach_port_insert_member_trap = ~f{iIII}
	_kernelrpc_mach_port_insert_right_trap = ~f{iIIII}
	_kernelrpc_mach_port_mod_refs_trap = ~f{iIIIi}
	_kernelrpc_mach_port_move_member_trap = ~f{iIII}
	_kernelrpc_mach_port_request_notification_trap = ~f{iIIiIII^I}
	_kernelrpc_mach_port_type_trap = ~f{iII^I}
	_kernelrpc_mach_port_unguard_trap = ~f{iIIQ}
	_kernelrpc_mach_vm_allocate_trap = ~f{iI^QQi}
	_kernelrpc_mach_vm_deallocate_trap = ~f{iIQQ}
	_kernelrpc_mach_vm_map_trap = ~f{iI^QQQii}
	_kernelrpc_mach_vm_protect_trap = ~f{iIQQIi}
	_kernelrpc_mach_vm_purgable_control_trap = ~f{iIQi^i}
	clock_sleep_trap = ~f{iIiii^v}
	debug_control_port_for_pid = ~f{iIi^I}
	host_create_mach_voucher_trap = ~f{iI^Ci^I}
	mach_generate_activity_id = ~f{iIi^Q}
	mach_voucher_extract_attr_recipe_trap = ~f{iII^C^I}
	macx_backing_store_recovery = ~f{ii}
	macx_backing_store_suspend = ~f{iI}
	macx_swapoff = ~f{iQi}
	macx_swapon = ~f{iQiii}
	macx_triggers = ~f{iiiiI}
	pid_for_task = ~f{iI^i}
	swtch = ~f{I}
	swtch_pri = ~f{Ii}
	task_for_pid = ~f{iIi^I}
	task_name_for_pid = ~f{iIi^I}
	task_self_trap = ~f{I}
	thread_switch = ~f{iIiI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecProtocolMetadata.h
	sec_protocol_metadata_access_distinguished_names = ~f{B@%~f{v@}}
	sec_protocol_metadata_access_ocsp_response = ~f{B@%~f{v@}}
	sec_protocol_metadata_access_peer_certificate_chain = ~f{B@%~f{v@}}
	sec_protocol_metadata_access_pre_shared_keys = ~f{B@%~f{v@@}}
	sec_protocol_metadata_access_supported_signature_algorithms = ~f{B@%~f{vS}}
	sec_protocol_metadata_challenge_parameters_are_equal = ~f{B@@}
	sec_protocol_metadata_copy_peer_public_key = ~f{@@}
	sec_protocol_metadata_create_secret = ~f{@@L^cL}
	sec_protocol_metadata_create_secret_with_context = ~f{@@L^cL^CL}
	sec_protocol_metadata_get_early_data_accepted = ~f{B@}
	sec_protocol_metadata_get_negotiated_ciphersuite = ~f{S@}
	sec_protocol_metadata_get_negotiated_protocol = ~f{^c@}
	sec_protocol_metadata_get_negotiated_protocol_version = ~f{i@}
	sec_protocol_metadata_get_negotiated_tls_ciphersuite = ~f{S@}
	sec_protocol_metadata_get_negotiated_tls_protocol_version = ~f{S@}
	sec_protocol_metadata_get_server_name = ~f{^c@}
	sec_protocol_metadata_peers_are_equal = ~f{B@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIAccessibilityZoom.h
	UIAccessibilityRegisterGestureConflictWithZoom = ~f{v}
	UIAccessibilityZoomFocusChanged = ~f{vl{={=dd}{=dd}}@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/Quadrature/Integration.h
	quadrature_integrate = ~f{d^vdd^v^i^dL^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/termios.h
	cfgetispeed = ~f{L^v}
	cfgetospeed = ~f{L^v}
	cfmakeraw = ~f{v^v}
	cfsetispeed = ~f{i^vL}
	cfsetospeed = ~f{i^vL}
	cfsetspeed = ~f{i^vL}
	tcdrain = ~f{ii}
	tcflow = ~f{iii}
	tcflush = ~f{iii}
	tcgetattr = ~f{ii^v}
	tcsendbreak = ~f{iii}
	tcsetattr = ~f{iii^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/source.h
	dispatch_source_cancel = ~f{v@}
	dispatch_source_create = ~f{@^vLL@}
	dispatch_source_get_data = ~f{L@}
	dispatch_source_get_handle = ~f{L@}
	dispatch_source_get_mask = ~f{L@}
	dispatch_source_merge_data = ~f{v@L}
	dispatch_source_set_cancel_handler = ~f{v@%~f{v}}
	dispatch_source_set_cancel_handler_f = ~f{v@^~f{v^v}}
	dispatch_source_set_event_handler = ~f{v@%~f{v}}
	dispatch_source_set_event_handler_f = ~f{v@^~f{v^v}}
	dispatch_source_set_registration_handler = ~f{v@%~f{v}}
	dispatch_source_set_registration_handler_f = ~f{v@^~f{v^v}}
	dispatch_source_set_timer = ~f{v@QQQ}
	dispatch_source_testcancel = ~f{l@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/Sparse/Solve.h
	SparseCleanup = ~f{v{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
	SparseConjugateGradient = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}idd^~f{v^c}}}
	SparseConvertFromCoordinate = ~f{{={=ii^l^i{=BCIIB}C}^f}iilC{=BCIIB}^i^i^f^v^v}
	SparseConvertFromOpaque = ~f{{={=ii^l^i{=BCIIB}C}^f}^v}
	SparseCreatePreconditioner = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}i{={=ii^l^i{=BCIIB}C}^f}}
	SparseCreateSubfactor = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}}
	SparseFactor = ~f{{=iii{=BCIIB}CC^vLLLL}C{=ii^l^i{=BCIIB}C}{=IC^i^i^~f{^vL}^~f{v^v}^~f{v^c}}}
	SparseGMRES = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}Ciidd^~f{v^c}}}
	SparseGetStateSize_Double = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetStateSize_Float = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetTranspose = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseIterate = ~f{v{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}i^B^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}
	SparseLSMR = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}diiddddi^~f{v^c}}}
	SparseMultiply = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{=i^f}{=i^f}^v}
	SparseMultiplyAdd = ~f{vf{={=ii^l^i{=BCIIB}C}^f}{=i^f}{=i^f}}
	SparseRefactor = ~f{v{={=ii^l^i{=BCIIB}C}^f}^v{=IC^vdd}^v}
	SparseRetain = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseSolve = ~f{i{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}%~f{vBI{=i^f}{=i^f}}{=i^f}{=i^f}{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSObject.h
	CFBridgingRelease = ~f{@^v}
	CFBridgingRetain = ~f{^v@}
	NSAllocateObject = ~f{@@L^v}
	NSCopyObject = ~f{@@L^v}
	NSDeallocateObject = ~f{v@}
	NSDecrementExtraRefCountWasZero = ~f{B@}
	NSExtraRefCount = ~f{L@}
	NSIncrementExtraRefCount = ~f{v@}
	NSShouldRetainWithZone = ~f{B@^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/DHCPClientPreferences.h
	DHCPClientPreferencesCopyApplicationOptions = ~f{^C^v^l}
	DHCPClientPreferencesSetApplicationOptions = ~f{C^v^Cl}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/OSOverlayShims.h
	_swift_os_log = ~f{v^v^v@C^c^v}
	_swift_os_log_default = ~f{@}
	_swift_os_log_disabled = ~f{@}
	_swift_os_log_dynamic_stack_tracing = ~f{^C}
	_swift_os_log_dynamic_tracing = ~f{^C}
	_swift_os_log_return_address = ~f{^v}
	_swift_os_signpost = ~f{v^v^v@C^cQ}
	_swift_os_signpost_id_exclusive = ~f{Q}
	_swift_os_signpost_id_invalid = ~f{Q}
	_swift_os_signpost_id_null = ~f{Q}
	_swift_os_signpost_points_of_interest = ~f{^C}
	_swift_os_signpost_with_format = ~f{v^v^v@C^cQ^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/io.h
	dispatch_io_barrier = ~f{v@%~f{v}}
	dispatch_io_close = ~f{v@L}
	dispatch_io_create = ~f{@Li@%~f{vi}}
	dispatch_io_create_with_io = ~f{@L@@%~f{vi}}
	dispatch_io_create_with_path = ~f{@L^ciS@%~f{vi}}
	dispatch_io_get_descriptor = ~f{i@}
	dispatch_io_read = ~f{v@qL@%~f{vB@i}}
	dispatch_io_set_high_water = ~f{v@L}
	dispatch_io_set_interval = ~f{v@QL}
	dispatch_io_set_low_water = ~f{v@L}
	dispatch_io_write = ~f{v@q@@%~f{vB@i}}
	dispatch_read = ~f{viL@%~f{v@i}}
	dispatch_write = ~f{vi@@%~f{v@i}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xlink.h
	xlinkGetDefaultDetect = ~f{^~f{v^v^v}}
	xlinkGetDefaultHandler = ~f{^v}
	xlinkIsLink = ~f{I^v^v}
	xlinkSetDefaultDetect = ~f{v^~f{v^v^v}}
	xlinkSetDefaultHandler = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xpath.h
	xmlXPathCastBooleanToNumber = ~f{di}
	xmlXPathCastBooleanToString = ~f{^Ci}
	xmlXPathCastNodeSetToBoolean = ~f{i^v}
	xmlXPathCastNodeSetToNumber = ~f{d^v}
	xmlXPathCastNodeSetToString = ~f{^C^v}
	xmlXPathCastNodeToNumber = ~f{d^v}
	xmlXPathCastNodeToString = ~f{^C^v}
	xmlXPathCastNumberToBoolean = ~f{id}
	xmlXPathCastNumberToString = ~f{^Cd}
	xmlXPathCastStringToBoolean = ~f{i^C}
	xmlXPathCastStringToNumber = ~f{d^C}
	xmlXPathCastToBoolean = ~f{i^v}
	xmlXPathCastToNumber = ~f{d^v}
	xmlXPathCastToString = ~f{^C^v}
	xmlXPathCmpNodes = ~f{i^v^v}
	xmlXPathCompile = ~f{^v^C}
	xmlXPathCompiledEval = ~f{^v^v^v}
	xmlXPathCompiledEvalToBoolean = ~f{i^v^v}
	xmlXPathContextSetCache = ~f{i^viii}
	xmlXPathConvertBoolean = ~f{^v^v}
	xmlXPathConvertNumber = ~f{^v^v}
	xmlXPathConvertString = ~f{^v^v}
	xmlXPathCtxtCompile = ~f{^v^v^C}
	xmlXPathEval = ~f{^v^C^v}
	xmlXPathEvalExpression = ~f{^v^C^v}
	xmlXPathEvalPredicate = ~f{i^v^v}
	xmlXPathFreeCompExpr = ~f{v^v}
	xmlXPathFreeContext = ~f{v^v}
	xmlXPathFreeNodeSet = ~f{v^v}
	xmlXPathFreeNodeSetList = ~f{v^v}
	xmlXPathFreeObject = ~f{v^v}
	xmlXPathInit = ~f{v}
	xmlXPathIsInf = ~f{id}
	xmlXPathIsNaN = ~f{id}
	xmlXPathNewContext = ~f{^v^v}
	xmlXPathNodeEval = ~f{^v^v^C^v}
	xmlXPathNodeSetCreate = ~f{^v^v}
	xmlXPathObjectCopy = ~f{^v^v}
	xmlXPathOrderDocElems = ~f{l^v}
	xmlXPathSetContextNode = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/stdlib.h
	_Exit = ~f{vi}
	a64l = ~f{l^c}
	abort = ~f{v}
	abs = ~f{ii}
	arc4random = ~f{I}
	arc4random_addrandom = ~f{v^Ci}
	arc4random_buf = ~f{v^vL}
	arc4random_stir = ~f{v}
	arc4random_uniform = ~f{II}
	atexit = ~f{i^~f{v}}
	atexit_b = ~f{i%~f{v}}
	atof = ~f{d^c}
	atoi = ~f{i^c}
	atol = ~f{l^c}
	atoll = ~f{q^c}
	bsearch = ~f{^v^v^vLL^~f{i^v^v}}
	bsearch_b = ~f{^v^v^vLL%~f{i^v^v}}
	cgetcap = ~f{^c^c^ci}
	cgetclose = ~f{i}
	cgetent = ~f{i^^c^^c^c}
	cgetfirst = ~f{i^^c^^c}
	cgetmatch = ~f{i^c^c}
	cgetnext = ~f{i^^c^^c}
	cgetnum = ~f{i^c^c^l}
	cgetset = ~f{i^c}
	cgetstr = ~f{i^c^c^^c}
	cgetustr = ~f{i^c^c^^c}
	daemon = ~f{iii}
	devname = ~f{^ciS}
	devname_r = ~f{^ciS^ci}
	div = ~f{{=ii}ii}
	drand48 = ~f{d}
	ecvt = ~f{^cdi^i^i}
	erand48 = ~f{d^S}
	exit = ~f{vi}
	fcvt = ~f{^cdi^i^i}
	gcvt = ~f{^cdi^c}
	getbsize = ~f{^c^i^l}
	getenv = ~f{^c^c}
	getloadavg = ~f{i^di}
	getprogname = ~f{^c}
	getsubopt = ~f{i^^c^^c^^c}
	grantpt = ~f{ii}
	heapsort = ~f{i^vLL^~f{i^v^v}}
	heapsort_b = ~f{i^vLL%~f{i^v^v}}
	initstate = ~f{^cI^cL}
	jrand48 = ~f{l^S}
	l64a = ~f{^cl}
	labs = ~f{ll}
	lcong48 = ~f{v^S}
	ldiv = ~f{{=ll}ll}
	llabs = ~f{qq}
	lldiv = ~f{{=qq}qq}
	lrand48 = ~f{l}
	mblen = ~f{i^cL}
	mbstowcs = ~f{L^i^cL}
	mbtowc = ~f{i^i^cL}
	mergesort = ~f{i^vLL^~f{i^v^v}}
	mergesort_b = ~f{i^vLL%~f{i^v^v}}
	mkstemp = ~f{i^c}
	mktemp = ~f{^c^c}
	mrand48 = ~f{l}
	nrand48 = ~f{l^S}
	posix_openpt = ~f{ii}
	psort = ~f{v^vLL^~f{i^v^v}}
	psort_b = ~f{v^vLL%~f{i^v^v}}
	psort_r = ~f{v^vLL^v^~f{i^v^v^v}}
	ptsname = ~f{^ci}
	ptsname_r = ~f{ii^cL}
	putenv = ~f{i^c}
	qsort = ~f{v^vLL^~f{i^v^v}}
	qsort_b = ~f{v^vLL%~f{i^v^v}}
	qsort_r = ~f{v^vLL^v^~f{i^v^v^v}}
	radixsort = ~f{i^^Ci^CI}
	rand = ~f{i}
	rand_r = ~f{i^I}
	random = ~f{l}
	reallocf = ~f{^v^vL}
	realpath = ~f{^c^c^c}
	rpmatch = ~f{i^c}
	seed48 = ~f{^S^S}
	setenv = ~f{i^c^ci}
	setkey = ~f{v^c}
	setprogname = ~f{v^c}
	setstate = ~f{^c^c}
	sradixsort = ~f{i^^Ci^CI}
	srand = ~f{vI}
	srand48 = ~f{vl}
	sranddev = ~f{v}
	srandom = ~f{vI}
	srandomdev = ~f{v}
	strtod = ~f{d^c^^c}
	strtof = ~f{f^c^^c}
	strtol = ~f{l^c^^ci}
	strtold = ~f{D^c^^c}
	strtoll = ~f{q^c^^ci}
	strtoq = ~f{q^c^^ci}
	strtoul = ~f{L^c^^ci}
	strtoull = ~f{Q^c^^ci}
	strtouq = ~f{Q^c^^ci}
	system = ~f{i^c}
	unlockpt = ~f{ii}
	unsetenv = ~f{i^c}
	wcstombs = ~f{L^c^iL}
	wctomb = ~f{i^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/net/if_dl.h
	link_addr = ~f{v^c^v}
	link_ntoa = ~f{^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTRunDelegate.h
	CTRunDelegateCreate = ~f{^v^v^v}
	CTRunDelegateGetRefCon = ~f{^v^v}
	CTRunDelegateGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Headers/MPSKernelTypes.h
	MPSFindIntegerDivisionParams = ~f{{=SSSS}S}
	MPSGetCustomKernelBatchedDestinationIndex = ~f{L{=LLL}}
	MPSGetCustomKernelBatchedSourceIndex = ~f{L{=LLL}L}
	MPSGetCustomKernelBroadcastSourceIndex = ~f{L{=LLL}L}
	MPSGetCustomKernelMaxBatchSize = ~f{L{=LLL}}
	MPSGetImageType = ~f{I@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/conversion.h
	simd_char = ~f{~V{8c}~V{8d}}
	simd_char_sat = ~f{~V{8c}~V{8L}}
	simd_double = ~f{~V{8d}~V{8d}}
	simd_float = ~f{~V{8f}~V{8d}}
	simd_int = ~f{~V{8i}~V{8d}}
	simd_int_sat = ~f{~V{8i}~V{8L}}
	simd_long = ~f{~V{8l}~V{8d}}
	simd_long_sat = ~f{~V{8l}~V{8L}}
	simd_short = ~f{~V{8s}~V{8d}}
	simd_short_sat = ~f{~V{8s}~V{8L}}
	simd_uchar = ~f{~V{8C}~V{8d}}
	simd_uchar_sat = ~f{~V{8C}~V{8L}}
	simd_uint = ~f{~V{8I}~V{8d}}
	simd_uint_sat = ~f{~V{8I}~V{8L}}
	simd_ulong = ~f{~V{8L}~V{8d}}
	simd_ulong_sat = ~f{~V{8L}~V{8L}}
	simd_ushort = ~f{~V{8S}~V{8d}}
	simd_ushort_sat = ~f{~V{8S}~V{8L}}
	vector16 = ~f{~V{16f}~V{8f}~V{8f}}
	vector2 = ~f{~V{2d}dd}
	vector3 = ~f{~V{3d}~V{2d}d}
	vector32 = ~f{~V{32S}~V{16S}~V{16S}}
	vector4 = ~f{~V{4d}~V{3d}d}
	vector8 = ~f{~V{8d}~V{4d}~V{4d}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unwind.h
	_Unwind_Backtrace = ~f{I^~f{I^v^v}^v}
	_Unwind_DeleteException = ~f{v^v}
	_Unwind_FindEnclosingFunction = ~f{^v^v}
	_Unwind_Find_FDE = ~f{^v^v^v}
	_Unwind_ForcedUnwind = ~f{I^v^~f{IiIQ^v^v^v}^v}
	_Unwind_GetCFA = ~f{L^v}
	_Unwind_GetDataRelBase = ~f{L^v}
	_Unwind_GetGR = ~f{L^vi}
	_Unwind_GetIP = ~f{L^v}
	_Unwind_GetIPInfo = ~f{L^v^i}
	_Unwind_GetLanguageSpecificData = ~f{L^v}
	_Unwind_GetRegionStart = ~f{L^v}
	_Unwind_GetTextRelBase = ~f{L^v}
	_Unwind_RaiseException = ~f{I^v}
	_Unwind_Resume = ~f{v^v}
	_Unwind_Resume_or_Rethrow = ~f{I^v}
	_Unwind_SetGR = ~f{v^viL}
	_Unwind_SetIP = ~f{v^vL}
	__deregister_frame = ~f{v^v}
	__deregister_frame_info = ~f{^v^v}
	__deregister_frame_info_bases = ~f{^v^v}
	__register_frame = ~f{v^v}
	__register_frame_info = ~f{v^v^v}
	__register_frame_info_bases = ~f{v^v^v^v^v}
	__register_frame_info_table = ~f{v^v^v}
	__register_frame_info_table_bases = ~f{v^v^v^v^v}
	__register_frame_table = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIGeometry.h
	CGAffineTransformFromString = ~f{{=dddddd}@}
	CGPointFromString = ~f{{=dd}@}
	CGRectFromString = ~f{{={=dd}{=dd}}@}
	CGSizeFromString = ~f{{=dd}@}
	CGVectorFromString = ~f{{=dd}@}
	NSDirectionalEdgeInsetsEqualToDirectionalEdgeInsets = ~f{B{=dddd}{=dddd}}
	NSDirectionalEdgeInsetsFromString = ~f{{=dddd}@}
	NSDirectionalEdgeInsetsMake = ~f{{=dddd}dddd}
	NSStringFromCGAffineTransform = ~f{@{=dddddd}}
	NSStringFromCGPoint = ~f{@{=dd}}
	NSStringFromCGRect = ~f{@{={=dd}{=dd}}}
	NSStringFromCGSize = ~f{@{=dd}}
	NSStringFromCGVector = ~f{@{=dd}}
	NSStringFromDirectionalEdgeInsets = ~f{@{=dddd}}
	NSStringFromUIEdgeInsets = ~f{@{=dddd}}
	NSStringFromUIOffset = ~f{@{=dd}}
	UIEdgeInsetsEqualToEdgeInsets = ~f{B{=dddd}{=dddd}}
	UIEdgeInsetsFromString = ~f{{=dddd}@}
	UIEdgeInsetsInsetRect = ~f{{={=dd}{=dd}}{={=dd}{=dd}}{=dddd}}
	UIEdgeInsetsMake = ~f{{=dddd}dddd}
	UIOffsetEqualToOffset = ~f{B{=dd}{=dd}}
	UIOffsetFromString = ~f{{=dd}@}
	UIOffsetMake = ~f{{=dd}dd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSDecimal.h
	NSDecimalAdd = ~f{L^v^v^vL}
	NSDecimalCompact = ~f{v^v}
	NSDecimalCompare = ~f{l^v^v}
	NSDecimalCopy = ~f{v^v^v}
	NSDecimalDivide = ~f{L^v^v^vL}
	NSDecimalIsNotANumber = ~f{B^v}
	NSDecimalMultiply = ~f{L^v^v^vL}
	NSDecimalMultiplyByPowerOf10 = ~f{L^v^vsL}
	NSDecimalNormalize = ~f{L^v^vL}
	NSDecimalPower = ~f{L^v^vLL}
	NSDecimalRound = ~f{v^v^vlL}
	NSDecimalString = ~f{@^v@}
	NSDecimalSubtract = ~f{L^v^v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenGLES.framework/Headers/ES2/gl.h
	glActiveTexture = ~f{vI}
	glAttachShader = ~f{vII}
	glBindAttribLocation = ~f{vII^c}
	glBindBuffer = ~f{vII}
	glBindFramebuffer = ~f{vII}
	glBindRenderbuffer = ~f{vII}
	glBindTexture = ~f{vII}
	glBlendColor = ~f{vffff}
	glBlendEquation = ~f{vI}
	glBlendEquationSeparate = ~f{vII}
	glBlendFunc = ~f{vII}
	glBlendFuncSeparate = ~f{vIIII}
	glBufferData = ~f{vIl^vI}
	glBufferSubData = ~f{vIll^v}
	glCheckFramebufferStatus = ~f{II}
	glClear = ~f{vI}
	glClearColor = ~f{vffff}
	glClearDepthf = ~f{vf}
	glClearStencil = ~f{vi}
	glColorMask = ~f{vCCCC}
	glCompileShader = ~f{vI}
	glCompressedTexImage2D = ~f{vIiIiiii^v}
	glCompressedTexSubImage2D = ~f{vIiiiiiIi^v}
	glCopyTexImage2D = ~f{vIiIiiiii}
	glCopyTexSubImage2D = ~f{vIiiiiiii}
	glCreateProgram = ~f{I}
	glCreateShader = ~f{II}
	glCullFace = ~f{vI}
	glDeleteBuffers = ~f{vi^I}
	glDeleteFramebuffers = ~f{vi^I}
	glDeleteProgram = ~f{vI}
	glDeleteRenderbuffers = ~f{vi^I}
	glDeleteShader = ~f{vI}
	glDeleteTextures = ~f{vi^I}
	glDepthFunc = ~f{vI}
	glDepthMask = ~f{vC}
	glDepthRangef = ~f{vff}
	glDetachShader = ~f{vII}
	glDisable = ~f{vI}
	glDisableVertexAttribArray = ~f{vI}
	glDrawArrays = ~f{vIii}
	glDrawElements = ~f{vIiI^v}
	glEnable = ~f{vI}
	glEnableVertexAttribArray = ~f{vI}
	glFinish = ~f{v}
	glFlush = ~f{v}
	glFramebufferRenderbuffer = ~f{vIIII}
	glFramebufferTexture2D = ~f{vIIIIi}
	glFrontFace = ~f{vI}
	glGenBuffers = ~f{vi^I}
	glGenFramebuffers = ~f{vi^I}
	glGenRenderbuffers = ~f{vi^I}
	glGenTextures = ~f{vi^I}
	glGenerateMipmap = ~f{vI}
	glGetActiveAttrib = ~f{vIIi^i^i^I^c}
	glGetActiveUniform = ~f{vIIi^i^i^I^c}
	glGetAttachedShaders = ~f{vIi^i^I}
	glGetAttribLocation = ~f{iI^c}
	glGetBooleanv = ~f{vI^C}
	glGetBufferParameteriv = ~f{vII^i}
	glGetError = ~f{I}
	glGetFloatv = ~f{vI^f}
	glGetFramebufferAttachmentParameteriv = ~f{vIII^i}
	glGetIntegerv = ~f{vI^i}
	glGetProgramInfoLog = ~f{vIi^i^c}
	glGetProgramiv = ~f{vII^i}
	glGetRenderbufferParameteriv = ~f{vII^i}
	glGetShaderInfoLog = ~f{vIi^i^c}
	glGetShaderPrecisionFormat = ~f{vII^i^i}
	glGetShaderSource = ~f{vIi^i^c}
	glGetShaderiv = ~f{vII^i}
	glGetString = ~f{^CI}
	glGetTexParameterfv = ~f{vII^f}
	glGetTexParameteriv = ~f{vII^i}
	glGetUniformLocation = ~f{iI^c}
	glGetUniformfv = ~f{vIi^f}
	glGetUniformiv = ~f{vIi^i}
	glGetVertexAttribPointerv = ~f{vII^^v}
	glGetVertexAttribfv = ~f{vII^f}
	glGetVertexAttribiv = ~f{vII^i}
	glHint = ~f{vII}
	glIsBuffer = ~f{CI}
	glIsEnabled = ~f{CI}
	glIsFramebuffer = ~f{CI}
	glIsProgram = ~f{CI}
	glIsRenderbuffer = ~f{CI}
	glIsShader = ~f{CI}
	glIsTexture = ~f{CI}
	glLineWidth = ~f{vf}
	glLinkProgram = ~f{vI}
	glPixelStorei = ~f{vIi}
	glPolygonOffset = ~f{vff}
	glReadPixels = ~f{viiiiII^v}
	glReleaseShaderCompiler = ~f{v}
	glRenderbufferStorage = ~f{vIIii}
	glSampleCoverage = ~f{vfC}
	glScissor = ~f{viiii}
	glShaderBinary = ~f{vi^II^vi}
	glShaderSource = ~f{vIi^^c^i}
	glStencilFunc = ~f{vIiI}
	glStencilFuncSeparate = ~f{vIIiI}
	glStencilMask = ~f{vI}
	glStencilMaskSeparate = ~f{vII}
	glStencilOp = ~f{vIII}
	glStencilOpSeparate = ~f{vIIII}
	glTexImage2D = ~f{vIiiiiiII^v}
	glTexParameterf = ~f{vIIf}
	glTexParameterfv = ~f{vII^f}
	glTexParameteri = ~f{vIIi}
	glTexParameteriv = ~f{vII^i}
	glTexSubImage2D = ~f{vIiiiiiII^v}
	glUniform1f = ~f{vif}
	glUniform1fv = ~f{vii^f}
	glUniform1i = ~f{vii}
	glUniform1iv = ~f{vii^i}
	glUniform2f = ~f{viff}
	glUniform2fv = ~f{vii^f}
	glUniform2i = ~f{viii}
	glUniform2iv = ~f{vii^i}
	glUniform3f = ~f{vifff}
	glUniform3fv = ~f{vii^f}
	glUniform3i = ~f{viiii}
	glUniform3iv = ~f{vii^i}
	glUniform4f = ~f{viffff}
	glUniform4fv = ~f{vii^f}
	glUniform4i = ~f{viiiii}
	glUniform4iv = ~f{vii^i}
	glUniformMatrix2fv = ~f{viiC^f}
	glUniformMatrix3fv = ~f{viiC^f}
	glUniformMatrix4fv = ~f{viiC^f}
	glUseProgram = ~f{vI}
	glValidateProgram = ~f{vI}
	glVertexAttrib1f = ~f{vIf}
	glVertexAttrib1fv = ~f{vI^f}
	glVertexAttrib2f = ~f{vIff}
	glVertexAttrib2fv = ~f{vI^f}
	glVertexAttrib3f = ~f{vIfff}
	glVertexAttrib3fv = ~f{vI^f}
	glVertexAttrib4f = ~f{vIffff}
	glVertexAttrib4fv = ~f{vI^f}
	glVertexAttribPointer = ~f{vIiICi^v}
	glViewport = ~f{viiii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CATransform3D.h
	CATransform3DConcat = ~f{{=dddddddddddddddd}{=dddddddddddddddd}{=dddddddddddddddd}}
	CATransform3DEqualToTransform = ~f{B{=dddddddddddddddd}{=dddddddddddddddd}}
	CATransform3DGetAffineTransform = ~f{{=dddddd}{=dddddddddddddddd}}
	CATransform3DInvert = ~f{{=dddddddddddddddd}{=dddddddddddddddd}}
	CATransform3DIsAffine = ~f{B{=dddddddddddddddd}}
	CATransform3DIsIdentity = ~f{B{=dddddddddddddddd}}
	CATransform3DMakeAffineTransform = ~f{{=dddddddddddddddd}{=dddddd}}
	CATransform3DMakeRotation = ~f{{=dddddddddddddddd}dddd}
	CATransform3DMakeScale = ~f{{=dddddddddddddddd}ddd}
	CATransform3DMakeTranslation = ~f{{=dddddddddddddddd}ddd}
	CATransform3DRotate = ~f{{=dddddddddddddddd}{=dddddddddddddddd}dddd}
	CATransform3DScale = ~f{{=dddddddddddddddd}{=dddddddddddddddd}ddd}
	CATransform3DTranslate = ~f{{=dddddddddddddddd}{=dddddddddddddddd}ddd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSDataShims.h
	__NSDataWriteToURL = ~f{B@@L^@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/clock.h
	clock_alarm = ~f{iIi{=Ii}I}
	clock_get_attributes = ~f{iIi^i^I}
	clock_get_time = ~f{iI^v}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFMachPort.h
	CFMachPortCreate = ~f{^v^v^~f{v^v^vl^v}^v^C}
	CFMachPortCreateRunLoopSource = ~f{^v^v^vl}
	CFMachPortCreateWithPort = ~f{^v^vI^~f{v^v^vl^v}^v^C}
	CFMachPortGetContext = ~f{v^v^v}
	CFMachPortGetInvalidationCallBack = ~f{^~f{v^v^v}^v}
	CFMachPortGetPort = ~f{I^v}
	CFMachPortGetTypeID = ~f{L}
	CFMachPortInvalidate = ~f{v^v}
	CFMachPortIsValid = ~f{C^v}
	CFMachPortSetInvalidationCallBack = ~f{v^v^~f{v^v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/mman.h
	madvise = ~f{i^vLi}
	mincore = ~f{i^vL^c}
	minherit = ~f{i^vLi}
	mlock = ~f{i^vL}
	mlockall = ~f{ii}
	mmap = ~f{^v^vLiiiq}
	mprotect = ~f{i^vLi}
	msync = ~f{i^vLi}
	munlock = ~f{i^vL}
	munlockall = ~f{i}
	munmap = ~f{i^vL}
	posix_madvise = ~f{i^vLi}
	shm_open = ~f{i^ci$}
	shm_unlink = ~f{i^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenGLES.framework/Headers/EAGL.h
	EAGLGetVersion = ~f{v^I^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/group.h
	dispatch_group_async = ~f{v@@%~f{v}}
	dispatch_group_async_f = ~f{v@@^v^~f{v^v}}
	dispatch_group_create = ~f{@}
	dispatch_group_enter = ~f{v@}
	dispatch_group_leave = ~f{v@}
	dispatch_group_notify = ~f{v@@%~f{v}}
	dispatch_group_notify_f = ~f{v@@^v^~f{v^v}}
	dispatch_group_wait = ~f{l@Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/LinearAlgebra/splat.h
	la_matrix_from_splat = ~f{@@LL}
	la_splat_from_double = ~f{@dL}
	la_splat_from_float = ~f{@fL}
	la_splat_from_matrix_element = ~f{@@ll}
	la_splat_from_vector_element = ~f{@@l}
	la_vector_from_splat = ~f{@@L}
/usr/local/lib/clang/9.0.1/include/mmintrin.h
	_mm_add_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_add_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_add_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_adds_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_adds_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_adds_pu16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_adds_pu8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_and_si64 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_andnot_si64 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cmpeq_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cmpeq_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cmpeq_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cmpgt_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cmpgt_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cmpgt_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cvtm64_si64 = ~f{q~V{1q}}
	_mm_cvtsi32_si64 = ~f{~V{1q}i}
	_mm_cvtsi64_m64 = ~f{~V{1q}q}
	_mm_cvtsi64_si32 = ~f{i~V{1q}}
	_mm_empty = ~f{v}
	_mm_madd_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_mulhi_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_mullo_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_or_si64 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_packs_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_packs_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_packs_pu16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_set1_pi16 = ~f{~V{1q}s}
	_mm_set1_pi32 = ~f{~V{1q}i}
	_mm_set1_pi8 = ~f{~V{1q}c}
	_mm_set_pi16 = ~f{~V{1q}ssss}
	_mm_set_pi32 = ~f{~V{1q}ii}
	_mm_set_pi8 = ~f{~V{1q}cccccccc}
	_mm_setr_pi16 = ~f{~V{1q}ssss}
	_mm_setr_pi32 = ~f{~V{1q}ii}
	_mm_setr_pi8 = ~f{~V{1q}cccccccc}
	_mm_setzero_si64 = ~f{~V{1q}}
	_mm_sll_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sll_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sll_si64 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_slli_pi16 = ~f{~V{1q}~V{1q}i}
	_mm_slli_pi32 = ~f{~V{1q}~V{1q}i}
	_mm_slli_si64 = ~f{~V{1q}~V{1q}i}
	_mm_sra_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sra_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_srai_pi16 = ~f{~V{1q}~V{1q}i}
	_mm_srai_pi32 = ~f{~V{1q}~V{1q}i}
	_mm_srl_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_srl_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_srl_si64 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_srli_pi16 = ~f{~V{1q}~V{1q}i}
	_mm_srli_pi32 = ~f{~V{1q}~V{1q}i}
	_mm_srli_si64 = ~f{~V{1q}~V{1q}i}
	_mm_sub_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sub_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_sub_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_subs_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_subs_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_subs_pu16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_subs_pu8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_unpackhi_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_unpackhi_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_unpackhi_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_unpacklo_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_unpacklo_pi32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_unpacklo_pi8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_xor_si64 = ~f{~V{1q}~V{1q}~V{1q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/framer_options.h
	nw_framer_async = ~f{v@%~f{v}}
	nw_framer_copy_local_endpoint = ~f{@@}
	nw_framer_copy_parameters = ~f{@@}
	nw_framer_copy_remote_endpoint = ~f{@@}
	nw_framer_create_definition = ~f{@^cI%~f{I@}}
	nw_framer_create_options = ~f{@@}
	nw_framer_deliver_input = ~f{v@^CL@B}
	nw_framer_deliver_input_no_copy = ~f{B@L@B}
	nw_framer_mark_failed_with_error = ~f{v@i}
	nw_framer_mark_ready = ~f{v@}
	nw_framer_message_access_value = ~f{B@^c%~f{B^v}}
	nw_framer_message_copy_object_value = ~f{@@^c}
	nw_framer_message_create = ~f{@@}
	nw_framer_message_set_object_value = ~f{v@^c@}
	nw_framer_message_set_value = ~f{v@^c^v%~f{v^v}}
	nw_framer_parse_input = ~f{B@LL^C%~f{L^CLB}}
	nw_framer_parse_output = ~f{B@LL^C%~f{L^CLB}}
	nw_framer_pass_through_input = ~f{v@}
	nw_framer_pass_through_output = ~f{v@}
	nw_framer_prepend_application_protocol = ~f{B@@}
	nw_framer_protocol_create_message = ~f{@@}
	nw_framer_schedule_wakeup = ~f{v@Q}
	nw_framer_set_cleanup_handler = ~f{v@%~f{v@}}
	nw_framer_set_input_handler = ~f{v@%~f{L@}}
	nw_framer_set_output_handler = ~f{v@%~f{v@@LB}}
	nw_framer_set_stop_handler = ~f{v@%~f{B@}}
	nw_framer_set_wakeup_handler = ~f{v@%~f{v@}}
	nw_framer_write_output = ~f{v@^CL}
	nw_framer_write_output_data = ~f{v@@}
	nw_framer_write_output_no_copy = ~f{B@L}
	nw_protocol_metadata_is_framer_message = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlsave.h
	xmlSaveClose = ~f{i^v}
	xmlSaveDoc = ~f{l^v^v}
	xmlSaveFlush = ~f{i^v}
	xmlSaveSetAttrEscape = ~f{i^v^~f{i^C^i^C^i}}
	xmlSaveSetEscape = ~f{i^v^~f{i^C^i^C^i}}
	xmlSaveToBuffer = ~f{^v^v^ci}
	xmlSaveToFd = ~f{^vi^ci}
	xmlSaveToFilename = ~f{^v^c^ci}
	xmlSaveToIO = ~f{^v^~f{i^v^ci}^~f{i^v}^v^ci}
	xmlSaveTree = ~f{l^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/util.h
	forkpty = ~f{i^i^c^v^v}
	fparseln = ~f{^c^v^L^L^ci}
	login_tty = ~f{ii}
	logwtmp = ~f{v^c^c^c}
	opendev = ~f{i^cii^^c}
	openpty = ~f{i^i^i^c^v^v}
	pidlock = ~f{i^ci^i^c}
	ttyaction = ~f{i^c^c^c}
	ttylock = ~f{i^ci^i}
	ttymsg = ~f{^c^vi^ci}
	ttyunlock = ~f{i^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/_types/_fd_def.h
	__darwin_fd_isset = ~f{ii^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSocket.h
	CFSocketConnectToAddress = ~f{l^v^vd}
	CFSocketCopyAddress = ~f{^v^v}
	CFSocketCopyPeerAddress = ~f{^v^v}
	CFSocketCopyRegisteredSocketSignature = ~f{l^vd^v^v^^v}
	CFSocketCopyRegisteredValue = ~f{l^vd^v^^v^^v}
	CFSocketCreate = ~f{^v^viiiL^~f{v^vL^v^v^v}^v}
	CFSocketCreateConnectedToSocketSignature = ~f{^v^v^vL^~f{v^vL^v^v^v}^vd}
	CFSocketCreateRunLoopSource = ~f{^v^v^vl}
	CFSocketCreateWithNative = ~f{^v^viL^~f{v^vL^v^v^v}^v}
	CFSocketCreateWithSocketSignature = ~f{^v^v^vL^~f{v^vL^v^v^v}^v}
	CFSocketDisableCallBacks = ~f{v^vL}
	CFSocketEnableCallBacks = ~f{v^vL}
	CFSocketGetContext = ~f{v^v^v}
	CFSocketGetDefaultNameRegistryPortNumber = ~f{S}
	CFSocketGetNative = ~f{i^v}
	CFSocketGetSocketFlags = ~f{L^v}
	CFSocketGetTypeID = ~f{L}
	CFSocketInvalidate = ~f{v^v}
	CFSocketIsValid = ~f{C^v}
	CFSocketRegisterSocketSignature = ~f{l^vd^v^v}
	CFSocketRegisterValue = ~f{l^vd^v^v}
	CFSocketSendData = ~f{l^v^v^vd}
	CFSocketSetAddress = ~f{l^v^v}
	CFSocketSetDefaultNameRegistryPortNumber = ~f{vS}
	CFSocketSetSocketFlags = ~f{v^vL}
	CFSocketUnregister = ~f{l^vd^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach_error.h
	mach_error = ~f{v^ci}
	mach_error_string = ~f{^ci}
	mach_error_type = ~f{^ci}
/usr/local/lib/clang/9.0.1/include/avx512vbmi2intrin.h
	_mm512_mask_compress_epi16 = ~f{~V{8q}~V{8q}I~V{8q}}
	_mm512_mask_compress_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}}
	_mm512_mask_compressstoreu_epi16 = ~f{v^vI~V{8q}}
	_mm512_mask_compressstoreu_epi8 = ~f{v^vQ~V{8q}}
	_mm512_mask_expand_epi16 = ~f{~V{8q}~V{8q}I~V{8q}}
	_mm512_mask_expand_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}}
	_mm512_mask_expandloadu_epi16 = ~f{~V{8q}~V{8q}I^v}
	_mm512_mask_expandloadu_epi8 = ~f{~V{8q}~V{8q}Q^v}
	_mm512_mask_shldv_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_shldv_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_shldv_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_shrdv_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_shrdv_epi32 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_shrdv_epi64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_compress_epi16 = ~f{~V{8q}I~V{8q}}
	_mm512_maskz_compress_epi8 = ~f{~V{8q}Q~V{8q}}
	_mm512_maskz_expand_epi16 = ~f{~V{8q}I~V{8q}}
	_mm512_maskz_expand_epi8 = ~f{~V{8q}Q~V{8q}}
	_mm512_maskz_expandloadu_epi16 = ~f{~V{8q}I^v}
	_mm512_maskz_expandloadu_epi8 = ~f{~V{8q}Q^v}
	_mm512_maskz_shldv_epi16 = ~f{~V{8q}I~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_shldv_epi32 = ~f{~V{8q}S~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_shldv_epi64 = ~f{~V{8q}C~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_shrdv_epi16 = ~f{~V{8q}I~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_shrdv_epi32 = ~f{~V{8q}S~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_shrdv_epi64 = ~f{~V{8q}C~V{8q}~V{8q}~V{8q}}
	_mm512_shldv_epi16 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_shldv_epi32 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_shldv_epi64 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_shrdv_epi16 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_shrdv_epi32 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_shrdv_epi64 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/netinet6/ipsec.h
	ipsec_dump_policy = ~f{^c^c^c}
	ipsec_get_policylen = ~f{i^c}
	ipsec_set_policy = ~f{^c^ci}
	ipsec_strerror = ~f{^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/fcntl.h
	creat = ~f{i^cS}
	fcntl = ~f{iii$}
	filesec_dup = ~f{^v^v}
	filesec_free = ~f{v^v}
	filesec_get_property = ~f{i^vI^v}
	filesec_init = ~f{^v}
	filesec_query_property = ~f{i^vI^i}
	filesec_set_property = ~f{i^vI^v}
	filesec_unset_property = ~f{i^vI}
	flock = ~f{iii}
	open = ~f{i^ci$}
	open_dprotected_np = ~f{i^ciii$}
	openat = ~f{ii^ci$}
	openx_np = ~f{i^ci^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/FoundationOverlayShims.h
	_resizeConditionalAllocationBuffer = ~f{B^vL}
	_withStackOrHeapBuffer = ~f{BL%~f{v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/syslog.h
	closelog = ~f{v}
	openlog = ~f{v^cii}
	setlogmask = ~f{ii}
	syslog = ~f{vi^c$}
	vsyslog = ~f{vi^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioServices.h
	AudioServicesAddSystemSoundCompletion = ~f{iI^v^v^~f{vI^v}^v}
	AudioServicesCreateSystemSoundID = ~f{i^v^I}
	AudioServicesDisposeSystemSoundID = ~f{iI}
	AudioServicesGetProperty = ~f{iII^v^I^v}
	AudioServicesGetPropertyInfo = ~f{iII^v^I^C}
	AudioServicesPlayAlertSound = ~f{vI}
	AudioServicesPlayAlertSoundWithCompletion = ~f{vI%~f{v}}
	AudioServicesPlaySystemSound = ~f{vI}
	AudioServicesPlaySystemSoundWithCompletion = ~f{vI%~f{v}}
	AudioServicesRemoveSystemSoundCompletion = ~f{vI}
	AudioServicesSetProperty = ~f{iII^vI^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/uiter.h
	uiter_current32 = ~f{i^v}
	uiter_getState = ~f{I^v}
	uiter_next32 = ~f{i^v}
	uiter_previous32 = ~f{i^v}
	uiter_setState = ~f{v^vI^i}
	uiter_setString = ~f{v^v^Si}
	uiter_setUTF16BE = ~f{v^v^ci}
	uiter_setUTF8 = ~f{v^v^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Headers/MPSImage.h
	MPSImageBatchIncrementReadCount = ~f{L@l}
	MPSImageBatchIterate = ~f{l@%~f{l@L}}
	MPSImageBatchResourceSize = ~f{L@}
	MPSImageBatchSynchronize = ~f{v@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/Sparse/SolveImplementationTyped.h
	SparseCleanup = ~f{v{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
	SparseConvertFromCoordinate = ~f{{={=ii^l^i{=BCIIB}C}^f}iilC{=BCIIB}^i^i^f^v^v}
	SparseConvertFromOpaque = ~f{{={=ii^l^i{=BCIIB}C}^f}^v}
	SparseCreatePreconditioner = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}i{={=ii^l^i{=BCIIB}C}^f}}
	SparseCreateSubfactor = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}}
	SparseFactor = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}{=iii{=BCIIB}CC^vLLLL}{={=ii^l^i{=BCIIB}C}^f}{=IC^vdd}^v^v}
	SparseGetStateSize_Double = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetStateSize_Float = ~f{L{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}Biii}
	SparseGetTranspose = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseIterate = ~f{v{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}i^B^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}
	SparseMultiply = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{=i^f}{=i^f}^v}
	SparseMultiplyAdd = ~f{vf{={=ii^l^i{=BCIIB}C}^f}{=i^f}{=i^f}}
	SparseRefactor = ~f{v{={=ii^l^i{=BCIIB}C}^f}^v{=IC^vdd}^v}
	SparseRetain = ~f{{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}}
	SparseSolve = ~f{i{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}%~f{vBI{=i^f}{=i^f}}{=i^f}{=i^f}{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}}
	_DenseMatrixFromVector_Double = ~f{{=iii{=BCIIB}^d}{=i^d}}
	_DenseMatrixFromVector_Float = ~f{{=iii{=BCIIB}^f}{=i^f}}
	_SparseCGIterate_Double = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}
	_SparseCGIterate_Float = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}
	_SparseCGSolve_Double = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}^v}
	_SparseCGSolve_Float = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}^v}
	_SparseConvertFromCoordinate_Double = ~f{{={=ii^l^i{=BCIIB}C}^d}iilC{=BCIIB}^i^i^d^c^i}
	_SparseConvertFromCoordinate_Float = ~f{{={=ii^l^i{=BCIIB}C}^f}iilC{=BCIIB}^i^i^f^c^i}
	_SparseConvertFromOpaque_Double = ~f{{={=ii^l^i{=BCIIB}C}^d}^v}
	_SparseConvertFromOpaque_Float = ~f{{={=ii^l^i{=BCIIB}C}^f}^v}
	_SparseCreatePreconditioner_Double = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}i^v}
	_SparseCreatePreconditioner_Float = ~f{{=i^v^~f{v^vI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}i^v}
	_SparseDestroyOpaqueNumeric_Double = ~f{v^v}
	_SparseDestroyOpaqueNumeric_Float = ~f{v^v}
	_SparseFactorQR_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFactorQR_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFactorSymmetric_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFactorSymmetric_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}C^v^v^v}
	_SparseFailedFactor_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}i}
	_SparseFailedFactor_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}i}
	_SparseGMRESIterate_Double = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}
	_SparseGMRESIterate_Float = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}
	_SparseGMRESSolve_Double = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}^v}
	_SparseGMRESSolve_Float = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}^v}
	_SparseGetIterativeStateSize_Double = ~f{L^vBiii}
	_SparseGetIterativeStateSize_Float = ~f{L^vBiii}
	_SparseGetOptionsFromNumericFactor_Double = ~f{{=IC^vdd}^v}
	_SparseGetOptionsFromNumericFactor_Float = ~f{{=IC^vdd}^v}
	_SparseGetWorkspaceRequired_Double = ~f{vC{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^L^L}
	_SparseGetWorkspaceRequired_Float = ~f{vC{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^L^L}
	_SparseInvalidSubfactor_Double = ?
	_SparseInvalidSubfactor_Float = ?
	_SparseLSMRIterate_Double = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}}
	_SparseLSMRIterate_Float = ~f{v^vi^c^B^v^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}}
	_SparseLSMRSolve_Double = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^d}{=iii{=BCIIB}^d}}^v}
	_SparseLSMRSolve_Float = ~f{i^v^v^v%~f{vBI{=iii{=BCIIB}^f}{=iii{=BCIIB}^f}}^v}
	_SparseMultiplySubfactor_Double = ~f{v^v^v^v^c}
	_SparseMultiplySubfactor_Float = ~f{v^v^v^v^c}
	_SparseNumericFactorQR_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseNumericFactorQR_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseNumericFactorSymmetric_Double = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseNumericFactorSymmetric_Float = ~f{{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}^v^v^v^v^v}
	_SparseRefactorQR_Double = ~f{v^v^v^v^v}
	_SparseRefactorQR_Float = ~f{v^v^v^v^v}
	_SparseRefactorSymmetric_Double = ~f{v^v^v^v^v}
	_SparseRefactorSymmetric_Float = ~f{v^v^v^v^v}
	_SparseReleaseOpaquePreconditioner_Double = ~f{v^v}
	_SparseReleaseOpaquePreconditioner_Float = ~f{v^v}
	_SparseRetainNumeric_Double = ~f{v^v}
	_SparseRetainNumeric_Float = ~f{v^v}
	_SparseSolveOpaque_Double = ~f{v^v^v^v^v}
	_SparseSolveOpaque_Float = ~f{v^v^v^v^v}
	_SparseSolveSubfactor_Double = ~f{v^v^v^v^c}
	_SparseSolveSubfactor_Float = ~f{v^v^v^v^c}
	_SparseSpMV_Double = ~f{vd{={=ii^l^i{=BCIIB}C}^d}{=iii{=BCIIB}^d}B{=iii{=BCIIB}^d}}
	_SparseSpMV_Float = ~f{vf{={=ii^l^i{=BCIIB}C}^f}{=iii{=BCIIB}^f}B{=iii{=BCIIB}^f}}
	_SparseSubFactorGetDimn_Double = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}^i^i}
	_SparseSubFactorGetDimn_Float = ~f{v{={=BCIIB}C{=i{=BCIIB}{=iii{=BCIIB}CC^vLLLL}B^vLL}LL}^i^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlerror.h
	initGenericErrorDefaultFunc = ~f{v^^~f{v^v^c$}}
	xmlCopyError = ~f{i^v^v}
	xmlCtxtGetLastError = ~f{^v^v}
	xmlCtxtResetLastError = ~f{v^v}
	xmlGetLastError = ~f{^v}
	xmlParserError = ~f{v^v^c$}
	xmlParserPrintFileContext = ~f{v^v}
	xmlParserPrintFileInfo = ~f{v^v}
	xmlParserValidityError = ~f{v^v^c$}
	xmlParserValidityWarning = ~f{v^v^c$}
	xmlParserWarning = ~f{v^v^c$}
	xmlResetError = ~f{v^v}
	xmlResetLastError = ~f{v}
	xmlSetGenericErrorFunc = ~f{v^v^~f{v^v^c$}}
	xmlSetStructuredErrorFunc = ~f{v^v^~f{v^v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/workloop.h
	dispatch_workloop_create = ~f{@^c}
	dispatch_workloop_create_inactive = ~f{@^c}
	dispatch_workloop_set_autorelease_frequency = ~f{v@L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/membership.h
	mbr_check_membership = ~f{i^C^C^i}
	mbr_check_service_membership = ~f{i^C^c^i}
	mbr_gid_to_uuid = ~f{iI^C}
	mbr_identifier_to_uuid = ~f{ii^vL^C}
	mbr_sid_to_string = ~f{i^v^c}
	mbr_sid_to_uuid = ~f{i^v^C}
	mbr_string_to_sid = ~f{i^c^v}
	mbr_uid_to_uuid = ~f{iI^C}
	mbr_uuid_to_id = ~f{i^C^I^i}
	mbr_uuid_to_sid = ~f{i^C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVUtilities.h
	AVMakeRectWithAspectRatioInsideRect = ~f{{={=dd}{=dd}}{=dd}{={=dd}{=dd}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xpointer.h
	xmlXPtrBuildNodeList = ~f{^v^v}
	xmlXPtrEval = ~f{^v^C^v}
	xmlXPtrEvalRangePredicate = ~f{v^v}
	xmlXPtrFreeLocationSet = ~f{v^v}
	xmlXPtrLocationSetAdd = ~f{v^v^v}
	xmlXPtrLocationSetCreate = ~f{^v^v}
	xmlXPtrLocationSetDel = ~f{v^v^v}
	xmlXPtrLocationSetMerge = ~f{^v^v^v}
	xmlXPtrLocationSetRemove = ~f{v^vi}
	xmlXPtrNewCollapsedRange = ~f{^v^v}
	xmlXPtrNewContext = ~f{^v^v^v^v}
	xmlXPtrNewLocationSetNodeSet = ~f{^v^v}
	xmlXPtrNewLocationSetNodes = ~f{^v^v^v}
	xmlXPtrNewRange = ~f{^v^vi^vi}
	xmlXPtrNewRangeNodeObject = ~f{^v^v^v}
	xmlXPtrNewRangeNodePoint = ~f{^v^v^v}
	xmlXPtrNewRangeNodes = ~f{^v^v^v}
	xmlXPtrNewRangePointNode = ~f{^v^v^v}
	xmlXPtrNewRangePoints = ~f{^v^v^v}
	xmlXPtrRangeToFunction = ~f{v^vi}
	xmlXPtrWrapLocationSet = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/EventKitUI.framework/Headers/EventKitUIBundle.h
	EventKitUIBundle = ~f{@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/QuartzCore.framework/Headers/CABase.h
	CACurrentMediaTime = ~f{d}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/CoreMediaOverlayShims.h
	CMBlockBufferRetain = ~f{^v^v}
	CMBufferQueueRetain = ~f{^v^v}
	CMClockRetain = ~f{^v^v}
	CMFormatDescriptionRetain = ~f{^v^v}
	CMSampleBufferRetain = ~f{^v^v}
	CMSimpleQueueRetain = ~f{^v^v}
	CMTimebaseRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSKeyedArchiverShims.h
	__NSKeyedUnarchiverSecureUnarchiveObjectOfClass = ~f{@@@^@}
	__NSKeyedUnarchiverSecureUnarchiveObjectOfClasses = ~f{@@@^@}
	__NSKeyedUnarchiverUnarchiveObject = ~f{@@@^@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/arpa/inet.h
	addr2ascii = ~f{^ci^vi^c}
	ascii2addr = ~f{ii^c^v}
	inet_addr = ~f{I^c}
	inet_aton = ~f{i^c^v}
	inet_lnaof = ~f{I{=I}}
	inet_makeaddr = ~f{{=I}II}
	inet_net_ntop = ~f{^ci^vi^cL}
	inet_net_pton = ~f{ii^c^vL}
	inet_neta = ~f{^cI^cL}
	inet_netof = ~f{I{=I}}
	inet_network = ~f{I^c}
	inet_nsap_addr = ~f{I^c^Ci}
	inet_nsap_ntoa = ~f{^ci^C^c}
	inet_ntoa = ~f{^c{=I}}
	inet_ntop = ~f{^ci^v^cI}
	inet_pton = ~f{ii^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/copyfile.h
	copyfile = ~f{i^c^c^vI}
	copyfile_state_alloc = ~f{^v}
	copyfile_state_free = ~f{i^v}
	copyfile_state_get = ~f{i^vI^v}
	copyfile_state_set = ~f{i^vI^v}
	fcopyfile = ~f{iii^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/object.h
	_dispatch_object_validate = ~f{v@}
	dispatch_activate = ~f{v@}
	dispatch_cancel = ~f{v^v}
	dispatch_debug = ~f{v@^c$}
	dispatch_debugv = ~f{v@^c^v}
	dispatch_get_context = ~f{^v@}
	dispatch_notify = ~f{v^v@%~f{v}}
	dispatch_release = ~f{v@}
	dispatch_resume = ~f{v@}
	dispatch_retain = ~f{v@}
	dispatch_set_context = ~f{v@^v}
	dispatch_set_finalizer_f = ~f{v@^~f{v^v}}
	dispatch_set_qos_class_floor = ~f{v@Ii}
	dispatch_suspend = ~f{v@}
	dispatch_testcancel = ~f{l^v}
	dispatch_wait = ~f{l^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSHashTable.h
	NSAllHashTableObjects = ~f{@@}
	NSCompareHashTables = ~f{B@@}
	NSCopyHashTableWithZone = ~f{@@^v}
	NSCountHashTable = ~f{L@}
	NSCreateHashTable = ~f{@{=^~f{L@^v}^~f{B@^v^v}^~f{v@^v}^~f{v@^v}^~f{@@^v}}L}
	NSCreateHashTableWithZone = ~f{@{=^~f{L@^v}^~f{B@^v^v}^~f{v@^v}^~f{v@^v}^~f{@@^v}}L^v}
	NSEndHashTableEnumeration = ~f{v^v}
	NSEnumerateHashTable = ~f{{=LL^v}@}
	NSFreeHashTable = ~f{v@}
	NSHashGet = ~f{^v@^v}
	NSHashInsert = ~f{v@^v}
	NSHashInsertIfAbsent = ~f{^v@^v}
	NSHashInsertKnownAbsent = ~f{v@^v}
	NSHashRemove = ~f{v@^v}
	NSNextHashEnumeratorItem = ~f{^v^v}
	NSResetHashTable = ~f{v@}
	NSStringFromHashTable = ~f{@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTFrame.h
	CTFrameDraw = ~f{v^v^v}
	CTFrameGetFrameAttributes = ~f{^v^v}
	CTFrameGetLineOrigins = ~f{v^v{=ll}^v}
	CTFrameGetLines = ~f{^v^v}
	CTFrameGetPath = ~f{^v^v}
	CTFrameGetStringRange = ~f{{=ll}^v}
	CTFrameGetTypeID = ~f{L}
	CTFrameGetVisibleStringRange = ~f{{=ll}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/objc/runtime.h
	_objc_flush_caches = ~f{v@}
	_objc_realizeClassFromSwift = ~f{@@^v}
	_objc_resolve_categories_for_class = ~f{v@}
	class_addIvar = ~f{B@^cLC^c}
	class_addMethod = ~f{B@:^~f{v}^c}
	class_addMethods = ~f{v@^v}
	class_addProperty = ~f{B@^c^vI}
	class_addProtocol = ~f{B@@}
	class_conformsToProtocol = ~f{B@@}
	class_copyIvarList = ~f{^^v@^I}
	class_copyMethodList = ~f{^^v@^I}
	class_copyPropertyList = ~f{^^v@^I}
	class_copyProtocolList = ~f{^@@^I}
	class_createInstance = ~f{@@L}
	class_createInstanceFromZone = ~f{@@L^v}
	class_getClassMethod = ~f{^v@:}
	class_getClassVariable = ~f{^v@^c}
	class_getImageName = ~f{^c@}
	class_getInstanceMethod = ~f{^v@:}
	class_getInstanceSize = ~f{L@}
	class_getInstanceVariable = ~f{^v@^c}
	class_getIvarLayout = ~f{^C@}
	class_getMethodImplementation = ~f{^~f{v}@:}
	class_getMethodImplementation_stret = ~f{^~f{v}@:}
	class_getName = ~f{^c@}
	class_getProperty = ~f{^v@^c}
	class_getSuperclass = ~f{@@}
	class_getVersion = ~f{i@}
	class_getWeakIvarLayout = ~f{^C@}
	class_isMetaClass = ~f{B@}
	class_lookupMethod = ~f{^~f{v}@:}
	class_nextMethodList = ~f{^v@^^v}
	class_poseAs = ~f{@@@}
	class_removeMethods = ~f{v@^v}
	class_replaceMethod = ~f{^~f{v}@:^~f{v}^c}
	class_replaceProperty = ~f{v@^c^vI}
	class_respondsToMethod = ~f{B@:}
	class_respondsToSelector = ~f{B@:}
	class_setIvarLayout = ~f{v@^C}
	class_setSuperclass = ~f{@@@}
	class_setVersion = ~f{v@i}
	class_setWeakIvarLayout = ~f{v@^C}
	imp_getBlock = ~f{@^~f{v}}
	imp_implementationWithBlock = ~f{^~f{v}@}
	imp_removeBlock = ~f{B^~f{v}}
	ivar_getName = ~f{^c^v}
	ivar_getOffset = ~f{l^v}
	ivar_getTypeEncoding = ~f{^c^v}
	method_copyArgumentType = ~f{^c^vI}
	method_copyReturnType = ~f{^c^v}
	method_exchangeImplementations = ~f{v^v^v}
	method_getArgumentInfo = ~f{I^vi^^c^i}
	method_getArgumentType = ~f{v^vI^cL}
	method_getDescription = ~f{^v^v}
	method_getImplementation = ~f{^~f{v}^v}
	method_getName = ~f{:^v}
	method_getNumberOfArguments = ~f{I^v}
	method_getReturnType = ~f{v^v^cL}
	method_getSizeOfArguments = ~f{I^v}
	method_getTypeEncoding = ~f{^c^v}
	method_setImplementation = ~f{^~f{v}^v^~f{v}}
	objc_addClass = ~f{v@}
	objc_addLoadImageFunc = ~f{v^~f{v^v}}
	objc_allocateClassPair = ~f{@@^cL}
	objc_allocateProtocol = ~f{@^c}
	objc_constructInstance = ~f{@@^v}
	objc_copyClassList = ~f{^@^I}
	objc_copyClassNamesForImage = ~f{^^c^c^I}
	objc_copyImageNames = ~f{^^c^I}
	objc_copyProtocolList = ~f{^@^I}
	objc_destructInstance = ~f{^v@}
	objc_disposeClassPair = ~f{v@}
	objc_duplicateClass = ~f{@@^cL}
	objc_enumerationMutation = ~f{v@}
	objc_getAssociatedObject = ~f{@@^v}
	objc_getClass = ~f{@^c}
	objc_getClassList = ~f{i^@i}
	objc_getClasses = ~f{^v}
	objc_getFutureClass = ~f{@^c}
	objc_getMetaClass = ~f{@^c}
	objc_getOrigClass = ~f{@^c}
	objc_getProtocol = ~f{@^c}
	objc_getRequiredClass = ~f{@^c}
	objc_loadWeak = ~f{@^@}
	objc_lookUpClass = ~f{@^c}
	objc_registerClassPair = ~f{v@}
	objc_registerProtocol = ~f{v@}
	objc_removeAssociatedObjects = ~f{v@}
	objc_setAssociatedObject = ~f{v@^v@L}
	objc_setClassHandler = ~f{v^~f{i^c}}
	objc_setEnumerationMutationHandler = ~f{v^~f{v@}}
	objc_setForwardHandler = ~f{v^v^v}
	objc_setHook_getClass = ~f{v^~f{B^c^@}^^~f{B^c^@}}
	objc_setHook_getImageName = ~f{v^~f{B@^^c}^^~f{B@^^c}}
	objc_setHook_setAssociatedObject = ~f{v^~f{v@^v@L}^^~f{v@^v@L}}
	objc_setMultithreaded = ~f{vB}
	objc_storeWeak = ~f{@^@@}
	object_copy = ~f{@@L}
	object_copyFromZone = ~f{@@L^v}
	object_dispose = ~f{@@}
	object_getClass = ~f{@@}
	object_getInstanceVariable = ~f{^v@^c^^v}
	object_getIvar = ~f{@@^v}
	object_isClass = ~f{B@}
	object_realloc = ~f{@@L}
	object_reallocFromZone = ~f{@@L^v}
	object_setClass = ~f{@@@}
	object_setInstanceVariable = ~f{^v@^c^v}
	object_setInstanceVariableWithStrongDefault = ~f{^v@^c^v}
	object_setIvar = ~f{v@^v@}
	object_setIvarWithStrongDefault = ~f{v@^v@}
	property_copyAttributeList = ~f{^v^v^I}
	property_copyAttributeValue = ~f{^c^v^c}
	property_getAttributes = ~f{^c^v}
	property_getName = ~f{^c^v}
	protocol_addMethodDescription = ~f{v@:^cBB}
	protocol_addProperty = ~f{v@^c^vIBB}
	protocol_addProtocol = ~f{v@@}
	protocol_conformsToProtocol = ~f{B@@}
	protocol_copyMethodDescriptionList = ~f{^v@BB^I}
	protocol_copyPropertyList = ~f{^^v@^I}
	protocol_copyPropertyList2 = ~f{^^v@^IBB}
	protocol_copyProtocolList = ~f{^@@^I}
	protocol_getMethodDescription = ~f{{=:^c}@:BB}
	protocol_getName = ~f{^c@}
	protocol_getProperty = ~f{^v@^cBB}
	protocol_isEqual = ~f{B@@}
	sel_getName = ~f{^c:}
	sel_isEqual = ~f{B::}
	sel_registerName = ~f{:^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vForce.h
	vvacos = ~f{v^d^d^i}
	vvacosf = ~f{v^f^f^i}
	vvacosh = ~f{v^d^d^i}
	vvacoshf = ~f{v^f^f^i}
	vvasin = ~f{v^d^d^i}
	vvasinf = ~f{v^f^f^i}
	vvasinh = ~f{v^d^d^i}
	vvasinhf = ~f{v^f^f^i}
	vvatan = ~f{v^d^d^i}
	vvatan2 = ~f{v^d^d^d^i}
	vvatan2f = ~f{v^f^f^f^i}
	vvatanf = ~f{v^f^f^i}
	vvatanh = ~f{v^d^d^i}
	vvatanhf = ~f{v^f^f^i}
	vvcbrt = ~f{v^d^d^i}
	vvcbrtf = ~f{v^f^f^i}
	vvceil = ~f{v^d^d^i}
	vvceilf = ~f{v^f^f^i}
	vvcopysign = ~f{v^d^d^d^i}
	vvcopysignf = ~f{v^f^f^f^i}
	vvcos = ~f{v^d^d^i}
	vvcosf = ~f{v^f^f^i}
	vvcosh = ~f{v^d^d^i}
	vvcoshf = ~f{v^f^f^i}
	vvcosisin = ~f{v^{=dd}^d^i}
	vvcosisinf = ~f{v^{=ff}^f^i}
	vvcospi = ~f{v^d^d^i}
	vvcospif = ~f{v^f^f^i}
	vvdiv = ~f{v^d^d^d^i}
	vvdivf = ~f{v^f^f^f^i}
	vvexp = ~f{v^d^d^i}
	vvexp2 = ~f{v^d^d^i}
	vvexp2f = ~f{v^f^f^i}
	vvexpf = ~f{v^f^f^i}
	vvexpm1 = ~f{v^d^d^i}
	vvexpm1f = ~f{v^f^f^i}
	vvfabs = ~f{v^d^d^i}
	vvfabsf = ~f{v^f^f^i}
	vvfloor = ~f{v^d^d^i}
	vvfloorf = ~f{v^f^f^i}
	vvfmod = ~f{v^d^d^d^i}
	vvfmodf = ~f{v^f^f^f^i}
	vvint = ~f{v^d^d^i}
	vvintf = ~f{v^f^f^i}
	vvlog = ~f{v^d^d^i}
	vvlog10 = ~f{v^d^d^i}
	vvlog10f = ~f{v^f^f^i}
	vvlog1p = ~f{v^d^d^i}
	vvlog1pf = ~f{v^f^f^i}
	vvlog2 = ~f{v^d^d^i}
	vvlog2f = ~f{v^f^f^i}
	vvlogb = ~f{v^d^d^i}
	vvlogbf = ~f{v^f^f^i}
	vvlogf = ~f{v^f^f^i}
	vvnextafter = ~f{v^d^d^d^i}
	vvnextafterf = ~f{v^f^f^f^i}
	vvnint = ~f{v^d^d^i}
	vvnintf = ~f{v^f^f^i}
	vvpow = ~f{v^d^d^d^i}
	vvpowf = ~f{v^f^f^f^i}
	vvpows = ~f{v^d^d^d^i}
	vvpowsf = ~f{v^f^f^f^i}
	vvrec = ~f{v^d^d^i}
	vvrecf = ~f{v^f^f^i}
	vvremainder = ~f{v^d^d^d^i}
	vvremainderf = ~f{v^f^f^f^i}
	vvrsqrt = ~f{v^d^d^i}
	vvrsqrtf = ~f{v^f^f^i}
	vvsin = ~f{v^d^d^i}
	vvsincos = ~f{v^d^d^d^i}
	vvsincosf = ~f{v^f^f^f^i}
	vvsinf = ~f{v^f^f^i}
	vvsinh = ~f{v^d^d^i}
	vvsinhf = ~f{v^f^f^i}
	vvsinpi = ~f{v^d^d^i}
	vvsinpif = ~f{v^f^f^i}
	vvsqrt = ~f{v^d^d^i}
	vvsqrtf = ~f{v^f^f^i}
	vvtan = ~f{v^d^d^i}
	vvtanf = ~f{v^f^f^i}
	vvtanh = ~f{v^d^d^i}
	vvtanhf = ~f{v^f^f^i}
	vvtanpi = ~f{v^d^d^i}
	vvtanpif = ~f{v^f^f^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFRunLoop.h
	CFRunLoopAddCommonMode = ~f{v^v^v}
	CFRunLoopAddObserver = ~f{v^v^v^v}
	CFRunLoopAddSource = ~f{v^v^v^v}
	CFRunLoopAddTimer = ~f{v^v^v^v}
	CFRunLoopContainsObserver = ~f{C^v^v^v}
	CFRunLoopContainsSource = ~f{C^v^v^v}
	CFRunLoopContainsTimer = ~f{C^v^v^v}
	CFRunLoopCopyAllModes = ~f{^v^v}
	CFRunLoopCopyCurrentMode = ~f{^v^v}
	CFRunLoopGetCurrent = ~f{^v}
	CFRunLoopGetMain = ~f{^v}
	CFRunLoopGetNextTimerFireDate = ~f{d^v^v}
	CFRunLoopGetTypeID = ~f{L}
	CFRunLoopIsWaiting = ~f{C^v}
	CFRunLoopObserverCreate = ~f{^v^vLCl^~f{v^vL^v}^v}
	CFRunLoopObserverCreateWithHandler = ~f{^v^vLCl%~f{v^vL}}
	CFRunLoopObserverDoesRepeat = ~f{C^v}
	CFRunLoopObserverGetActivities = ~f{L^v}
	CFRunLoopObserverGetContext = ~f{v^v^v}
	CFRunLoopObserverGetOrder = ~f{l^v}
	CFRunLoopObserverGetTypeID = ~f{L}
	CFRunLoopObserverInvalidate = ~f{v^v}
	CFRunLoopObserverIsValid = ~f{C^v}
	CFRunLoopPerformBlock = ~f{v^v^v%~f{v}}
	CFRunLoopRemoveObserver = ~f{v^v^v^v}
	CFRunLoopRemoveSource = ~f{v^v^v^v}
	CFRunLoopRemoveTimer = ~f{v^v^v^v}
	CFRunLoopRun = ~f{v}
	CFRunLoopRunInMode = ~f{i^vdC}
	CFRunLoopSourceCreate = ~f{^v^vl^v}
	CFRunLoopSourceGetContext = ~f{v^v^v}
	CFRunLoopSourceGetOrder = ~f{l^v}
	CFRunLoopSourceGetTypeID = ~f{L}
	CFRunLoopSourceInvalidate = ~f{v^v}
	CFRunLoopSourceIsValid = ~f{C^v}
	CFRunLoopSourceSignal = ~f{v^v}
	CFRunLoopStop = ~f{v^v}
	CFRunLoopTimerCreate = ~f{^v^vddLl^~f{v^v^v}^v}
	CFRunLoopTimerCreateWithHandler = ~f{^v^vddLl%~f{v^v}}
	CFRunLoopTimerDoesRepeat = ~f{C^v}
	CFRunLoopTimerGetContext = ~f{v^v^v}
	CFRunLoopTimerGetInterval = ~f{d^v}
	CFRunLoopTimerGetNextFireDate = ~f{d^v}
	CFRunLoopTimerGetOrder = ~f{l^v}
	CFRunLoopTimerGetTolerance = ~f{d^v}
	CFRunLoopTimerGetTypeID = ~f{L}
	CFRunLoopTimerInvalidate = ~f{v^v}
	CFRunLoopTimerIsValid = ~f{C^v}
	CFRunLoopTimerSetNextFireDate = ~f{v^vd}
	CFRunLoopTimerSetTolerance = ~f{v^vd}
	CFRunLoopWakeUp = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFByteOrder.h
	CFByteOrderGetCurrent = ~f{l}
	CFConvertDoubleHostToSwapped = ~f{{=Q}d}
	CFConvertDoubleSwappedToHost = ~f{d{=Q}}
	CFConvertFloat32HostToSwapped = ~f{{=I}f}
	CFConvertFloat32SwappedToHost = ~f{f{=I}}
	CFConvertFloat64HostToSwapped = ~f{{=Q}d}
	CFConvertFloat64SwappedToHost = ~f{d{=Q}}
	CFConvertFloatHostToSwapped = ~f{{=I}f}
	CFConvertFloatSwappedToHost = ~f{f{=I}}
	CFSwapInt16 = ~f{SS}
	CFSwapInt16BigToHost = ~f{SS}
	CFSwapInt16HostToBig = ~f{SS}
	CFSwapInt16HostToLittle = ~f{SS}
	CFSwapInt16LittleToHost = ~f{SS}
	CFSwapInt32 = ~f{II}
	CFSwapInt32BigToHost = ~f{II}
	CFSwapInt32HostToBig = ~f{II}
	CFSwapInt32HostToLittle = ~f{II}
	CFSwapInt32LittleToHost = ~f{II}
	CFSwapInt64 = ~f{QQ}
	CFSwapInt64BigToHost = ~f{QQ}
	CFSwapInt64HostToBig = ~f{QQ}
	CFSwapInt64HostToLittle = ~f{QQ}
	CFSwapInt64LittleToHost = ~f{QQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dirent.h
	__opendir2 = ~f{^v^ci}
	alphasort = ~f{i^^v^^v}
	closedir = ~f{i^v}
	dirfd = ~f{i^v}
	fdopendir = ~f{^vi}
	getdirentries = ~f{ii^ci^l}
	opendir = ~f{^v^c}
	readdir = ~f{^v^v}
	readdir_r = ~f{i^v^v^^v}
	rewinddir = ~f{v^v}
	scandir = ~f{i^c^^^v^~f{i^v}^~f{i^^v^^v}}
	scandir_b = ~f{i^c^^^v%~f{i^v}%~f{i^^v^^v}}
	seekdir = ~f{v^vl}
	telldir = ~f{l^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSPathUtilities.h
	NSFullUserName = ~f{@}
	NSHomeDirectory = ~f{@}
	NSHomeDirectoryForUser = ~f{@@}
	NSOpenStepRootDirectory = ~f{@}
	NSSearchPathForDirectoriesInDomains = ~f{@LLB}
	NSTemporaryDirectory = ~f{@}
	NSUserName = ~f{@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/xdr.h
	xdr_array = ~f{i^v^^c^III^~f{i^v^vI}}
	xdr_bool = ~f{i^v^i}
	xdr_bytes = ~f{i^v^^c^II}
	xdr_char = ~f{i^v^c}
	xdr_double = ~f{i^v^d}
	xdr_enum = ~f{i^v^i}
	xdr_float = ~f{i^v^f}
	xdr_free = ~f{v^~f{i^v^vI}^v}
	xdr_getint32 = ~f{i^v^i}
	xdr_hyper = ~f{i^v^q}
	xdr_int = ~f{i^v^i}
	xdr_int16_t = ~f{i^v^s}
	xdr_int32_t = ~f{i^v^i}
	xdr_int64_t = ~f{i^v^q}
	xdr_long = ~f{i^v^i}
	xdr_longlong_t = ~f{i^v^q}
	xdr_netobj = ~f{i^v^v}
	xdr_opaque = ~f{i^v^cI}
	xdr_pointer = ~f{i^v^^cI^~f{i^v^vI}}
	xdr_putint32 = ~f{i^v^i}
	xdr_quadruple = ~f{i^v^D}
	xdr_reference = ~f{i^v^^cI^~f{i^v^vI}}
	xdr_short = ~f{i^v^s}
	xdr_string = ~f{i^v^^cI}
	xdr_u_char = ~f{i^v^C}
	xdr_u_hyper = ~f{i^v^Q}
	xdr_u_int = ~f{i^v^I}
	xdr_u_int16_t = ~f{i^v^S}
	xdr_u_int32_t = ~f{i^v^I}
	xdr_u_int64_t = ~f{i^v^Q}
	xdr_u_long = ~f{i^v^I}
	xdr_u_longlong_t = ~f{i^v^Q}
	xdr_u_short = ~f{i^v^S}
	xdr_union = ~f{i^v^i^c^v^~f{i^v^vI}}
	xdr_vector = ~f{i^v^cII^~f{i^v^vI}}
	xdr_void = ~f{i}
	xdr_wrapstring = ~f{i^v^^c}
	xdrmem_create = ~f{v^v^cII}
	xdrrec_create = ~f{v^vII^v^~f{i^v^vi}^~f{i^v^vi}}
	xdrrec_endofrecord = ~f{i^vi}
	xdrrec_eof = ~f{i^v}
	xdrrec_readbytes = ~f{I^v^cI}
	xdrrec_skiprecord = ~f{i^v}
/usr/local/lib/clang/9.0.1/include/mwaitxintrin.h
	_mm_monitorx = ~f{v^vII}
	_mm_mwaitx = ~f{vIII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sqlite3.h
	sqlite3_aggregate_context = ~f{^v^vi}
	sqlite3_aggregate_count = ~f{i^v}
	sqlite3_auto_extension = ~f{i^~f{v}}
	sqlite3_backup_finish = ~f{i^v}
	sqlite3_backup_init = ~f{^v^v^c^v^c}
	sqlite3_backup_pagecount = ~f{i^v}
	sqlite3_backup_remaining = ~f{i^v}
	sqlite3_backup_step = ~f{i^vi}
	sqlite3_bind_blob = ~f{i^vi^vi^~f{v^v}}
	sqlite3_bind_blob64 = ~f{i^vi^vQ^~f{v^v}}
	sqlite3_bind_double = ~f{i^vid}
	sqlite3_bind_int = ~f{i^vii}
	sqlite3_bind_int64 = ~f{i^viq}
	sqlite3_bind_null = ~f{i^vi}
	sqlite3_bind_parameter_count = ~f{i^v}
	sqlite3_bind_parameter_index = ~f{i^v^c}
	sqlite3_bind_parameter_name = ~f{^c^vi}
	sqlite3_bind_pointer = ~f{i^vi^v^c^~f{v^v}}
	sqlite3_bind_text = ~f{i^vi^ci^~f{v^v}}
	sqlite3_bind_text16 = ~f{i^vi^vi^~f{v^v}}
	sqlite3_bind_text64 = ~f{i^vi^cQ^~f{v^v}C}
	sqlite3_bind_value = ~f{i^vi^v}
	sqlite3_bind_zeroblob = ~f{i^vii}
	sqlite3_bind_zeroblob64 = ~f{i^viQ}
	sqlite3_blob_bytes = ~f{i^v}
	sqlite3_blob_close = ~f{i^v}
	sqlite3_blob_open = ~f{i^v^c^c^cqi^^v}
	sqlite3_blob_read = ~f{i^v^vii}
	sqlite3_blob_reopen = ~f{i^vq}
	sqlite3_blob_write = ~f{i^v^vii}
	sqlite3_busy_handler = ~f{i^v^~f{i^vi}^v}
	sqlite3_busy_timeout = ~f{i^vi}
	sqlite3_cancel_auto_extension = ~f{i^~f{v}}
	sqlite3_changes = ~f{i^v}
	sqlite3_clear_bindings = ~f{i^v}
	sqlite3_close = ~f{i^v}
	sqlite3_close_v2 = ~f{i^v}
	sqlite3_collation_needed = ~f{i^v^v^~f{v^v^vi^c}}
	sqlite3_collation_needed16 = ~f{i^v^v^~f{v^v^vi^v}}
	sqlite3_column_blob = ~f{^v^vi}
	sqlite3_column_bytes = ~f{i^vi}
	sqlite3_column_bytes16 = ~f{i^vi}
	sqlite3_column_count = ~f{i^v}
	sqlite3_column_database_name = ~f{^c^vi}
	sqlite3_column_database_name16 = ~f{^v^vi}
	sqlite3_column_decltype = ~f{^c^vi}
	sqlite3_column_decltype16 = ~f{^v^vi}
	sqlite3_column_double = ~f{d^vi}
	sqlite3_column_int = ~f{i^vi}
	sqlite3_column_int64 = ~f{q^vi}
	sqlite3_column_name = ~f{^c^vi}
	sqlite3_column_name16 = ~f{^v^vi}
	sqlite3_column_origin_name = ~f{^c^vi}
	sqlite3_column_origin_name16 = ~f{^v^vi}
	sqlite3_column_table_name = ~f{^c^vi}
	sqlite3_column_table_name16 = ~f{^v^vi}
	sqlite3_column_text = ~f{^C^vi}
	sqlite3_column_text16 = ~f{^v^vi}
	sqlite3_column_type = ~f{i^vi}
	sqlite3_column_value = ~f{^v^vi}
	sqlite3_commit_hook = ~f{^v^v^~f{i^v}^v}
	sqlite3_compileoption_get = ~f{^ci}
	sqlite3_compileoption_used = ~f{i^c}
	sqlite3_complete = ~f{i^c}
	sqlite3_complete16 = ~f{i^v}
	sqlite3_config = ~f{ii$}
	sqlite3_context_db_handle = ~f{^v^v}
	sqlite3_create_collation = ~f{i^v^ci^v^~f{i^vi^vi^v}}
	sqlite3_create_collation16 = ~f{i^v^vi^v^~f{i^vi^vi^v}}
	sqlite3_create_collation_v2 = ~f{i^v^ci^v^~f{i^vi^vi^v}^~f{v^v}}
	sqlite3_create_function = ~f{i^v^cii^v^~f{v^vi^^v}^~f{v^vi^^v}^~f{v^v}}
	sqlite3_create_function16 = ~f{i^v^vii^v^~f{v^vi^^v}^~f{v^vi^^v}^~f{v^v}}
	sqlite3_create_function_v2 = ~f{i^v^cii^v^~f{v^vi^^v}^~f{v^vi^^v}^~f{v^v}^~f{v^v}}
	sqlite3_create_module = ~f{i^v^c^v^v}
	sqlite3_create_module_v2 = ~f{i^v^c^v^v^~f{v^v}}
	sqlite3_create_window_function = ~f{i^v^cii^v^~f{v^vi^^v}^~f{v^v}^~f{v^v}^~f{v^vi^^v}^~f{v^v}}
	sqlite3_data_count = ~f{i^v}
	sqlite3_db_cacheflush = ~f{i^v}
	sqlite3_db_config = ~f{i^vi$}
	sqlite3_db_filename = ~f{^c^v^c}
	sqlite3_db_handle = ~f{^v^v}
	sqlite3_db_mutex = ~f{^v^v}
	sqlite3_db_readonly = ~f{i^v^c}
	sqlite3_db_release_memory = ~f{i^v}
	sqlite3_db_status = ~f{i^vi^i^ii}
	sqlite3_declare_vtab = ~f{i^v^c}
	sqlite3_deserialize = ~f{i^v^c^CqqI}
	sqlite3_enable_shared_cache = ~f{ii}
	sqlite3_errcode = ~f{i^v}
	sqlite3_errmsg = ~f{^c^v}
	sqlite3_errmsg16 = ~f{^v^v}
	sqlite3_errstr = ~f{^ci}
	sqlite3_exec = ~f{i^v^c^~f{i^vi^^c^^c}^v^^c}
	sqlite3_expanded_sql = ~f{^c^v}
	sqlite3_expired = ~f{i^v}
	sqlite3_extended_errcode = ~f{i^v}
	sqlite3_extended_result_codes = ~f{i^vi}
	sqlite3_file_control = ~f{i^v^ci^v}
	sqlite3_finalize = ~f{i^v}
	sqlite3_free = ~f{v^v}
	sqlite3_free_table = ~f{v^^c}
	sqlite3_get_autocommit = ~f{i^v}
	sqlite3_get_auxdata = ~f{^v^vi}
	sqlite3_get_table = ~f{i^v^c^^^c^i^i^^c}
	sqlite3_global_recover = ~f{i}
	sqlite3_initialize = ~f{i}
	sqlite3_interrupt = ~f{v^v}
	sqlite3_keyword_check = ~f{i^ci}
	sqlite3_keyword_count = ~f{i}
	sqlite3_keyword_name = ~f{ii^^c^i}
	sqlite3_last_insert_rowid = ~f{q^v}
	sqlite3_libversion = ~f{^c}
	sqlite3_libversion_number = ~f{i}
	sqlite3_limit = ~f{i^vii}
	sqlite3_log = ~f{vi^c$}
	sqlite3_malloc = ~f{^vi}
	sqlite3_malloc64 = ~f{^vQ}
	sqlite3_memory_alarm = ~f{i^~f{v^vqi}^vq}
	sqlite3_memory_highwater = ~f{qi}
	sqlite3_memory_used = ~f{q}
	sqlite3_mprintf = ~f{^c^c$}
	sqlite3_msize = ~f{Q^v}
	sqlite3_mutex_alloc = ~f{^vi}
	sqlite3_mutex_enter = ~f{v^v}
	sqlite3_mutex_free = ~f{v^v}
	sqlite3_mutex_leave = ~f{v^v}
	sqlite3_mutex_try = ~f{i^v}
	sqlite3_next_stmt = ~f{^v^v^v}
	sqlite3_open = ~f{i^c^^v}
	sqlite3_open16 = ~f{i^v^^v}
	sqlite3_open_v2 = ~f{i^c^^vi^c}
	sqlite3_os_end = ~f{i}
	sqlite3_os_init = ~f{i}
	sqlite3_overload_function = ~f{i^v^ci}
	sqlite3_prepare = ~f{i^v^ci^^v^^c}
	sqlite3_prepare16 = ~f{i^v^vi^^v^^v}
	sqlite3_prepare16_v2 = ~f{i^v^vi^^v^^v}
	sqlite3_prepare16_v3 = ~f{i^v^viI^^v^^v}
	sqlite3_prepare_v2 = ~f{i^v^ci^^v^^c}
	sqlite3_prepare_v3 = ~f{i^v^ciI^^v^^c}
	sqlite3_profile = ~f{^v^v^~f{v^v^cQ}^v}
	sqlite3_progress_handler = ~f{v^vi^~f{i^v}^v}
	sqlite3_randomness = ~f{vi^v}
	sqlite3_realloc = ~f{^v^vi}
	sqlite3_realloc64 = ~f{^v^vQ}
	sqlite3_release_memory = ~f{ii}
	sqlite3_reset = ~f{i^v}
	sqlite3_reset_auto_extension = ~f{v}
	sqlite3_result_blob = ~f{v^v^vi^~f{v^v}}
	sqlite3_result_blob64 = ~f{v^v^vQ^~f{v^v}}
	sqlite3_result_double = ~f{v^vd}
	sqlite3_result_error = ~f{v^v^ci}
	sqlite3_result_error16 = ~f{v^v^vi}
	sqlite3_result_error_code = ~f{v^vi}
	sqlite3_result_error_nomem = ~f{v^v}
	sqlite3_result_error_toobig = ~f{v^v}
	sqlite3_result_int = ~f{v^vi}
	sqlite3_result_int64 = ~f{v^vq}
	sqlite3_result_null = ~f{v^v}
	sqlite3_result_pointer = ~f{v^v^v^c^~f{v^v}}
	sqlite3_result_subtype = ~f{v^vI}
	sqlite3_result_text = ~f{v^v^ci^~f{v^v}}
	sqlite3_result_text16 = ~f{v^v^vi^~f{v^v}}
	sqlite3_result_text16be = ~f{v^v^vi^~f{v^v}}
	sqlite3_result_text16le = ~f{v^v^vi^~f{v^v}}
	sqlite3_result_text64 = ~f{v^v^cQ^~f{v^v}C}
	sqlite3_result_value = ~f{v^v^v}
	sqlite3_result_zeroblob = ~f{v^vi}
	sqlite3_result_zeroblob64 = ~f{i^vQ}
	sqlite3_rollback_hook = ~f{^v^v^~f{v^v}^v}
	sqlite3_rtree_geometry_callback = ~f{i^v^c^~f{i^vi^d^i}^v}
	sqlite3_rtree_query_callback = ~f{i^v^c^~f{i^v}^v^~f{v^v}}
	sqlite3_serialize = ~f{^C^v^c^qI}
	sqlite3_set_authorizer = ~f{i^v^~f{i^vi^c^c^c^c}^v}
	sqlite3_set_auxdata = ~f{v^vi^v^~f{v^v}}
	sqlite3_set_last_insert_rowid = ~f{v^vq}
	sqlite3_shutdown = ~f{i}
	sqlite3_sleep = ~f{ii}
	sqlite3_snprintf = ~f{^ci^c^c$}
	sqlite3_soft_heap_limit = ~f{vi}
	sqlite3_soft_heap_limit64 = ~f{qq}
	sqlite3_sourceid = ~f{^c}
	sqlite3_sql = ~f{^c^v}
	sqlite3_status = ~f{ii^i^ii}
	sqlite3_status64 = ~f{ii^q^qi}
	sqlite3_step = ~f{i^v}
	sqlite3_stmt_busy = ~f{i^v}
	sqlite3_stmt_isexplain = ~f{i^v}
	sqlite3_stmt_readonly = ~f{i^v}
	sqlite3_stmt_status = ~f{i^vii}
	sqlite3_str_append = ~f{v^v^ci}
	sqlite3_str_appendall = ~f{v^v^c}
	sqlite3_str_appendchar = ~f{v^vic}
	sqlite3_str_appendf = ~f{v^v^c$}
	sqlite3_str_errcode = ~f{i^v}
	sqlite3_str_finish = ~f{^c^v}
	sqlite3_str_length = ~f{i^v}
	sqlite3_str_new = ~f{^v^v}
	sqlite3_str_reset = ~f{v^v}
	sqlite3_str_value = ~f{^c^v}
	sqlite3_str_vappendf = ~f{v^v^c^v}
	sqlite3_strglob = ~f{i^c^c}
	sqlite3_stricmp = ~f{i^c^c}
	sqlite3_strlike = ~f{i^c^cI}
	sqlite3_strnicmp = ~f{i^c^ci}
	sqlite3_system_errno = ~f{i^v}
	sqlite3_table_column_metadata = ~f{i^v^c^c^c^^c^^c^i^i^i}
	sqlite3_test_control = ~f{ii$}
	sqlite3_thread_cleanup = ~f{v}
	sqlite3_threadsafe = ~f{i}
	sqlite3_total_changes = ~f{i^v}
	sqlite3_trace = ~f{^v^v^~f{v^v^c}^v}
	sqlite3_trace_v2 = ~f{i^vI^~f{iI^v^v^v}^v}
	sqlite3_transfer_bindings = ~f{i^v^v}
	sqlite3_update_hook = ~f{^v^v^~f{v^vi^c^cq}^v}
	sqlite3_uri_boolean = ~f{i^c^ci}
	sqlite3_uri_int64 = ~f{q^c^cq}
	sqlite3_uri_parameter = ~f{^c^c^c}
	sqlite3_user_data = ~f{^v^v}
	sqlite3_value_blob = ~f{^v^v}
	sqlite3_value_bytes = ~f{i^v}
	sqlite3_value_bytes16 = ~f{i^v}
	sqlite3_value_double = ~f{d^v}
	sqlite3_value_dup = ~f{^v^v}
	sqlite3_value_free = ~f{v^v}
	sqlite3_value_frombind = ~f{i^v}
	sqlite3_value_int = ~f{i^v}
	sqlite3_value_int64 = ~f{q^v}
	sqlite3_value_nochange = ~f{i^v}
	sqlite3_value_numeric_type = ~f{i^v}
	sqlite3_value_pointer = ~f{^v^v^c}
	sqlite3_value_subtype = ~f{I^v}
	sqlite3_value_text = ~f{^C^v}
	sqlite3_value_text16 = ~f{^v^v}
	sqlite3_value_text16be = ~f{^v^v}
	sqlite3_value_text16le = ~f{^v^v}
	sqlite3_value_type = ~f{i^v}
	sqlite3_vfs_find = ~f{^v^c}
	sqlite3_vfs_register = ~f{i^vi}
	sqlite3_vfs_unregister = ~f{i^v}
	sqlite3_vmprintf = ~f{^c^c^v}
	sqlite3_vsnprintf = ~f{^ci^c^c^v}
	sqlite3_vtab_config = ~f{i^vi$}
	sqlite3_vtab_nochange = ~f{i^v}
	sqlite3_vtab_on_conflict = ~f{i^v}
	sqlite3_wal_autocheckpoint = ~f{i^vi}
	sqlite3_wal_checkpoint = ~f{i^v^c}
	sqlite3_wal_checkpoint_v2 = ~f{i^v^ci^i^i}
	sqlite3_wal_hook = ~f{^v^v^~f{i^v^v^ci}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVMetalTexture.h
	CVMetalTextureGetCleanTexCoords = ~f{v^v^f^f^f^f}
	CVMetalTextureGetTexture = ~f{@^v}
	CVMetalTextureGetTypeID = ~f{L}
	CVMetalTextureIsFlipped = ~f{C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AddressBook.framework/Headers/ABPerson.h
	ABAddressBookCopyArrayOfAllPeople = ~f{^v^v}
	ABAddressBookCopyArrayOfAllPeopleInSource = ~f{^v^v^v}
	ABAddressBookCopyArrayOfAllPeopleInSourceWithSortOrdering = ~f{^v^v^vI}
	ABAddressBookCopyPeopleWithName = ~f{^v^v^v}
	ABAddressBookGetPersonCount = ~f{l^v}
	ABAddressBookGetPersonWithRecordID = ~f{^v^vi}
	ABPersonComparePeopleByName = ~f{l^v^vI}
	ABPersonCopyArrayOfAllLinkedPeople = ~f{^v^v}
	ABPersonCopyCompositeNameDelimiterForRecord = ~f{^v^v}
	ABPersonCopyImageData = ~f{^v^v}
	ABPersonCopyImageDataWithFormat = ~f{^v^vI}
	ABPersonCopyLocalizedPropertyName = ~f{^vi}
	ABPersonCopySource = ~f{^v^v}
	ABPersonCreate = ~f{^v}
	ABPersonCreateInSource = ~f{^v^v}
	ABPersonCreatePeopleInSourceWithVCardRepresentation = ~f{^v^v^v}
	ABPersonCreateVCardRepresentationWithPeople = ~f{^v^v}
	ABPersonGetCompositeNameFormat = ~f{I}
	ABPersonGetCompositeNameFormatForRecord = ~f{I^v}
	ABPersonGetSortOrdering = ~f{I}
	ABPersonGetTypeOfProperty = ~f{Ii}
	ABPersonHasImageData = ~f{B^v}
	ABPersonRemoveImageData = ~f{B^v^^v}
	ABPersonSetImageData = ~f{B^v^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/port_obj.h
	port_obj_init = ~f{vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFError.h
	CFErrorCopyDescription = ~f{^v^v}
	CFErrorCopyFailureReason = ~f{^v^v}
	CFErrorCopyRecoverySuggestion = ~f{^v^v}
	CFErrorCopyUserInfo = ~f{^v^v}
	CFErrorCreate = ~f{^v^v^vl^v}
	CFErrorCreateWithUserInfoKeysAndValues = ~f{^v^v^vl^^v^^vl}
	CFErrorGetCode = ~f{l^v}
	CFErrorGetDomain = ~f{^v^v}
	CFErrorGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vBasicOps.h
	vA128Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vA64Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vA64Shift2 = ~f{~V{4I}~V{4I}~V{16C}}
	vL128Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vL64Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vL64Rotate2 = ~f{~V{4I}~V{4I}~V{16C}}
	vLL128Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLL64Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLL64Shift2 = ~f{~V{4I}~V{4I}~V{16C}}
	vLR128Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLR64Shift = ~f{~V{4I}~V{4I}~V{16C}}
	vLR64Shift2 = ~f{~V{4I}~V{4I}~V{16C}}
	vR128Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vR64Rotate = ~f{~V{4I}~V{4I}~V{16C}}
	vR64Rotate2 = ~f{~V{4I}~V{4I}~V{16C}}
	vS128Add = ~f{~V{4i}~V{4i}~V{4i}}
	vS128AddS = ~f{~V{4i}~V{4i}~V{4i}}
	vS128Divide = ~f{~V{4i}~V{4i}~V{4i}^~V{4i}}
	vS128HalfMultiply = ~f{~V{4i}~V{4i}~V{4i}}
	vS128Neg = ~f{~V{4i}~V{4i}}
	vS128Sub = ~f{~V{4i}~V{4i}~V{4i}}
	vS128SubS = ~f{~V{4i}~V{4i}~V{4i}}
	vS16Divide = ~f{~V{8s}~V{8s}~V{8s}^~V{8s}}
	vS16HalfMultiply = ~f{~V{8s}~V{8s}~V{8s}}
	vS32Divide = ~f{~V{4i}~V{4i}~V{4i}^~V{4i}}
	vS32FullMulEven = ~f{~V{4i}~V{4i}~V{4i}}
	vS32FullMulOdd = ~f{~V{4i}~V{4i}~V{4i}}
	vS32HalfMultiply = ~f{~V{4i}~V{4i}~V{4i}}
	vS64Add = ~f{~V{4i}~V{4i}~V{4i}}
	vS64AddS = ~f{~V{4i}~V{4i}~V{4i}}
	vS64Divide = ~f{~V{4i}~V{4i}~V{4i}^~V{4i}}
	vS64FullMulEven = ~f{~V{4i}~V{4i}~V{4i}}
	vS64FullMulOdd = ~f{~V{4i}~V{4i}~V{4i}}
	vS64HalfMultiply = ~f{~V{4i}~V{4i}~V{4i}}
	vS64Neg = ~f{~V{4i}~V{4i}}
	vS64Sub = ~f{~V{4i}~V{4i}~V{4i}}
	vS64SubS = ~f{~V{4i}~V{4i}~V{4i}}
	vS8Divide = ~f{~V{16c}~V{16c}~V{16c}^~V{16c}}
	vS8HalfMultiply = ~f{~V{16c}~V{16c}~V{16c}}
	vU128Add = ~f{~V{4I}~V{4I}~V{4I}}
	vU128AddS = ~f{~V{4I}~V{4I}~V{4I}}
	vU128Divide = ~f{~V{4I}~V{4I}~V{4I}^~V{4I}}
	vU128HalfMultiply = ~f{~V{4I}~V{4I}~V{4I}}
	vU128Neg = ~f{~V{4I}~V{4I}}
	vU128Sub = ~f{~V{4I}~V{4I}~V{4I}}
	vU128SubS = ~f{~V{4I}~V{4I}~V{4I}}
	vU16Divide = ~f{~V{8S}~V{8S}~V{8S}^~V{8S}}
	vU16HalfMultiply = ~f{~V{8S}~V{8S}~V{8S}}
	vU32Divide = ~f{~V{4I}~V{4I}~V{4I}^~V{4I}}
	vU32FullMulEven = ~f{~V{4I}~V{4I}~V{4I}}
	vU32FullMulOdd = ~f{~V{4I}~V{4I}~V{4I}}
	vU32HalfMultiply = ~f{~V{4I}~V{4I}~V{4I}}
	vU64Add = ~f{~V{4I}~V{4I}~V{4I}}
	vU64AddS = ~f{~V{4I}~V{4I}~V{4I}}
	vU64Divide = ~f{~V{4I}~V{4I}~V{4I}^~V{4I}}
	vU64FullMulEven = ~f{~V{4I}~V{4I}~V{4I}}
	vU64FullMulOdd = ~f{~V{4I}~V{4I}~V{4I}}
	vU64HalfMultiply = ~f{~V{4I}~V{4I}~V{4I}}
	vU64Neg = ~f{~V{4I}~V{4I}}
	vU64Sub = ~f{~V{4I}~V{4I}~V{4I}}
	vU64SubS = ~f{~V{4I}~V{4I}~V{4I}}
	vU8Divide = ~f{~V{16C}~V{16C}~V{16C}^~V{16C}}
	vU8HalfMultiply = ~f{~V{16C}~V{16C}~V{16C}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach-o/dyld.h
	NSAddImage = ~f{^v^cI}
	NSAddLibrary = ~f{B^c}
	NSAddLibraryWithSearching = ~f{B^c}
	NSAddressOfSymbol = ~f{^v^v}
	NSCreateObjectFileImageFromFile = ~f{I^c^^v}
	NSCreateObjectFileImageFromMemory = ~f{I^vL^^v}
	NSDestroyObjectFileImage = ~f{B^v}
	NSGetSectionDataInObjectFileImage = ~f{^v^v^c^c^L}
	NSInstallLinkEditErrorHandlers = ~f{v^v}
	NSIsSymbolDefinedInObjectFileImage = ~f{B^v^c}
	NSIsSymbolNameDefined = ~f{B^c}
	NSIsSymbolNameDefinedInImage = ~f{B^v^c}
	NSIsSymbolNameDefinedWithHint = ~f{B^c^c}
	NSLibraryNameForModule = ~f{^c^v}
	NSLinkEditError = ~f{v^I^i^^c^^c}
	NSLinkModule = ~f{^v^v^cI}
	NSLookupAndBindSymbol = ~f{^v^c}
	NSLookupAndBindSymbolWithHint = ~f{^v^c^c}
	NSLookupSymbolInImage = ~f{^v^v^cI}
	NSLookupSymbolInModule = ~f{^v^v^c}
	NSModuleForSymbol = ~f{^v^v}
	NSNameOfModule = ~f{^c^v}
	NSNameOfSymbol = ~f{^c^v}
	NSSymbolDefinitionCountInObjectFileImage = ~f{I^v}
	NSSymbolDefinitionNameInObjectFileImage = ~f{^c^vI}
	NSSymbolReferenceCountInObjectFileImage = ~f{I^v}
	NSSymbolReferenceNameInObjectFileImage = ~f{^c^vI^B}
	NSUnLinkModule = ~f{B^vI}
	NSVersionOfLinkTimeLibrary = ~f{i^c}
	NSVersionOfRunTimeLibrary = ~f{i^c}
	_NSGetExecutablePath = ~f{i^c^I}
	_dyld_all_twolevel_modules_prebound = ~f{B}
	_dyld_bind_fully_image_containing_address = ~f{B^v}
	_dyld_get_image_header = ~f{^vI}
	_dyld_get_image_header_containing_address = ~f{^v^v}
	_dyld_get_image_name = ~f{^cI}
	_dyld_get_image_vmaddr_slide = ~f{lI}
	_dyld_image_containing_address = ~f{B^v}
	_dyld_image_count = ~f{I}
	_dyld_launched_prebound = ~f{B}
	_dyld_lookup_and_bind = ~f{v^c^^v^^v}
	_dyld_lookup_and_bind_fully = ~f{v^c^^v^^v}
	_dyld_lookup_and_bind_with_hint = ~f{v^c^c^^v^^v}
	_dyld_present = ~f{B}
	_dyld_register_func_for_add_image = ~f{v^~f{v^vl}}
	_dyld_register_func_for_remove_image = ~f{v^~f{v^vl}}
	_tlv_atexit = ~f{v^~f{v^v}^v}
	_tlv_bootstrap = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/Random.h
	swift_stdlib_random = ~f{v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMIDI.framework/Headers/MIDIThruConnection.h
	MIDIThruConnectionCreate = ~f{i^v^v^I}
	MIDIThruConnectionDispose = ~f{iI}
	MIDIThruConnectionFind = ~f{i^v^^v}
	MIDIThruConnectionGetParams = ~f{iI^^v}
	MIDIThruConnectionParamsInitialize = ~f{v^v}
	MIDIThruConnectionParamsSize = ~f{L^v}
	MIDIThruConnectionSetParams = ~f{iI^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CoreText.h
	CTGetCoreTextVersion = ~f{I}
/usr/local/lib/clang/9.0.1/include/emmintrin.h
	_mm_add_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_add_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_add_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_add_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_add_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_add_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_add_si64 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_adds_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_adds_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_adds_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_adds_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_and_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_and_si128 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_andnot_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_andnot_si128 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_avg_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_avg_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_castpd_ps = ~f{~V{4f}~V{2d}}
	_mm_castpd_si128 = ~f{~V{2q}~V{2d}}
	_mm_castps_pd = ~f{~V{2d}~V{4f}}
	_mm_castps_si128 = ~f{~V{2q}~V{4f}}
	_mm_castsi128_pd = ~f{~V{2d}~V{2q}}
	_mm_castsi128_ps = ~f{~V{4f}~V{2q}}
	_mm_clflush = ~f{v^v}
	_mm_cmpeq_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmpeq_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmpeq_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmpeq_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpeq_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpge_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpge_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpgt_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmpgt_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmpgt_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmpgt_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpgt_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmple_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmple_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmplt_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmplt_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmplt_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cmplt_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmplt_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpneq_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpneq_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpnge_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpnge_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpngt_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpngt_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpnle_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpnle_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpnlt_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpnlt_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpord_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpord_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpunord_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_cmpunord_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_comieq_sd = ~f{i~V{2d}~V{2d}}
	_mm_comige_sd = ~f{i~V{2d}~V{2d}}
	_mm_comigt_sd = ~f{i~V{2d}~V{2d}}
	_mm_comile_sd = ~f{i~V{2d}~V{2d}}
	_mm_comilt_sd = ~f{i~V{2d}~V{2d}}
	_mm_comineq_sd = ~f{i~V{2d}~V{2d}}
	_mm_cvtepi32_pd = ~f{~V{2d}~V{2q}}
	_mm_cvtepi32_ps = ~f{~V{4f}~V{2q}}
	_mm_cvtpd_epi32 = ~f{~V{2q}~V{2d}}
	_mm_cvtpd_pi32 = ~f{~V{1q}~V{2d}}
	_mm_cvtpd_ps = ~f{~V{4f}~V{2d}}
	_mm_cvtpi32_pd = ~f{~V{2d}~V{1q}}
	_mm_cvtps_epi32 = ~f{~V{2q}~V{4f}}
	_mm_cvtps_pd = ~f{~V{2d}~V{4f}}
	_mm_cvtsd_f64 = ~f{d~V{2d}}
	_mm_cvtsd_si32 = ~f{i~V{2d}}
	_mm_cvtsd_si64 = ~f{q~V{2d}}
	_mm_cvtsd_ss = ~f{~V{4f}~V{4f}~V{2d}}
	_mm_cvtsi128_si32 = ~f{i~V{2q}}
	_mm_cvtsi128_si64 = ~f{q~V{2q}}
	_mm_cvtsi32_sd = ~f{~V{2d}~V{2d}i}
	_mm_cvtsi32_si128 = ~f{~V{2q}i}
	_mm_cvtsi64_sd = ~f{~V{2d}~V{2d}q}
	_mm_cvtsi64_si128 = ~f{~V{2q}q}
	_mm_cvtss_sd = ~f{~V{2d}~V{2d}~V{4f}}
	_mm_cvttpd_epi32 = ~f{~V{2q}~V{2d}}
	_mm_cvttpd_pi32 = ~f{~V{1q}~V{2d}}
	_mm_cvttps_epi32 = ~f{~V{2q}~V{4f}}
	_mm_cvttsd_si32 = ~f{i~V{2d}}
	_mm_cvttsd_si64 = ~f{q~V{2d}}
	_mm_div_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_div_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_lfence = ~f{v}
	_mm_load1_pd = ~f{~V{2d}^d}
	_mm_load_pd = ~f{~V{2d}^d}
	_mm_load_sd = ~f{~V{2d}^d}
	_mm_load_si128 = ~f{~V{2q}^~V{2q}}
	_mm_loadh_pd = ~f{~V{2d}~V{2d}^d}
	_mm_loadl_epi64 = ~f{~V{2q}^~V{2q}}
	_mm_loadl_pd = ~f{~V{2d}~V{2d}^d}
	_mm_loadr_pd = ~f{~V{2d}^d}
	_mm_loadu_pd = ~f{~V{2d}^d}
	_mm_loadu_si128 = ~f{~V{2q}^~V{2q}}
	_mm_loadu_si16 = ~f{~V{2q}^v}
	_mm_loadu_si32 = ~f{~V{2q}^v}
	_mm_loadu_si64 = ~f{~V{2q}^v}
	_mm_madd_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_maskmoveu_si128 = ~f{v~V{2q}~V{2q}^c}
	_mm_max_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_max_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_max_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_max_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_mfence = ~f{v}
	_mm_min_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_min_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_move_epi64 = ~f{~V{2q}~V{2q}}
	_mm_move_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_movemask_epi8 = ~f{i~V{2q}}
	_mm_movemask_pd = ~f{i~V{2d}}
	_mm_movepi64_pi64 = ~f{~V{1q}~V{2q}}
	_mm_movpi64_epi64 = ~f{~V{2q}~V{1q}}
	_mm_mul_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_mul_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_mul_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_mul_su32 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_mulhi_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_mulhi_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_mullo_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_or_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_or_si128 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_packs_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_packs_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_packus_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_pause = ~f{v}
	_mm_sad_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_set1_epi16 = ~f{~V{2q}s}
	_mm_set1_epi32 = ~f{~V{2q}i}
	_mm_set1_epi64 = ~f{~V{2q}~V{1q}}
	_mm_set1_epi64x = ~f{~V{2q}q}
	_mm_set1_epi8 = ~f{~V{2q}c}
	_mm_set1_pd = ~f{~V{2d}d}
	_mm_set_epi16 = ~f{~V{2q}ssssssss}
	_mm_set_epi32 = ~f{~V{2q}iiii}
	_mm_set_epi64 = ~f{~V{2q}~V{1q}~V{1q}}
	_mm_set_epi64x = ~f{~V{2q}qq}
	_mm_set_epi8 = ~f{~V{2q}cccccccccccccccc}
	_mm_set_pd = ~f{~V{2d}dd}
	_mm_set_pd1 = ~f{~V{2d}d}
	_mm_set_sd = ~f{~V{2d}d}
	_mm_setr_epi16 = ~f{~V{2q}ssssssss}
	_mm_setr_epi32 = ~f{~V{2q}iiii}
	_mm_setr_epi64 = ~f{~V{2q}~V{1q}~V{1q}}
	_mm_setr_epi8 = ~f{~V{2q}cccccccccccccccc}
	_mm_setr_pd = ~f{~V{2d}dd}
	_mm_setzero_pd = ~f{~V{2d}}
	_mm_setzero_si128 = ~f{~V{2q}}
	_mm_sll_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sll_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sll_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_slli_epi16 = ~f{~V{2q}~V{2q}i}
	_mm_slli_epi32 = ~f{~V{2q}~V{2q}i}
	_mm_slli_epi64 = ~f{~V{2q}~V{2q}i}
	_mm_sqrt_pd = ~f{~V{2d}~V{2d}}
	_mm_sqrt_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_sra_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sra_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srai_epi16 = ~f{~V{2q}~V{2q}i}
	_mm_srai_epi32 = ~f{~V{2q}~V{2q}i}
	_mm_srl_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srl_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srl_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srli_epi16 = ~f{~V{2q}~V{2q}i}
	_mm_srli_epi32 = ~f{~V{2q}~V{2q}i}
	_mm_srli_epi64 = ~f{~V{2q}~V{2q}i}
	_mm_store1_pd = ~f{v^d~V{2d}}
	_mm_store_pd = ~f{v^d~V{2d}}
	_mm_store_pd1 = ~f{v^d~V{2d}}
	_mm_store_sd = ~f{v^d~V{2d}}
	_mm_store_si128 = ~f{v^~V{2q}~V{2q}}
	_mm_storeh_pd = ~f{v^d~V{2d}}
	_mm_storel_epi64 = ~f{v^~V{2q}~V{2q}}
	_mm_storel_pd = ~f{v^d~V{2d}}
	_mm_storer_pd = ~f{v^d~V{2d}}
	_mm_storeu_pd = ~f{v^d~V{2d}}
	_mm_storeu_si128 = ~f{v^~V{2q}~V{2q}}
	_mm_storeu_si16 = ~f{v^v~V{2q}}
	_mm_storeu_si32 = ~f{v^v~V{2q}}
	_mm_storeu_si64 = ~f{v^v~V{2q}}
	_mm_stream_pd = ~f{v^d~V{2d}}
	_mm_stream_si128 = ~f{v^~V{2q}~V{2q}}
	_mm_stream_si32 = ~f{v^ii}
	_mm_stream_si64 = ~f{v^qq}
	_mm_sub_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sub_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sub_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sub_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sub_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_sub_sd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_sub_si64 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_subs_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_subs_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_subs_epu16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_subs_epu8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_ucomieq_sd = ~f{i~V{2d}~V{2d}}
	_mm_ucomige_sd = ~f{i~V{2d}~V{2d}}
	_mm_ucomigt_sd = ~f{i~V{2d}~V{2d}}
	_mm_ucomile_sd = ~f{i~V{2d}~V{2d}}
	_mm_ucomilt_sd = ~f{i~V{2d}~V{2d}}
	_mm_ucomineq_sd = ~f{i~V{2d}~V{2d}}
	_mm_undefined_pd = ~f{~V{2d}}
	_mm_undefined_si128 = ~f{~V{2q}}
	_mm_unpackhi_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpackhi_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpackhi_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpackhi_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpackhi_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_unpacklo_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpacklo_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpacklo_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpacklo_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_unpacklo_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_xor_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_xor_si128 = ~f{~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/relaxng.h
	xmlRelaxNGCleanupTypes = ~f{v}
	xmlRelaxNGDump = ~f{v^v^v}
	xmlRelaxNGDumpTree = ~f{v^v^v}
	xmlRelaxNGFree = ~f{v^v}
	xmlRelaxNGFreeParserCtxt = ~f{v^v}
	xmlRelaxNGFreeValidCtxt = ~f{v^v}
	xmlRelaxNGGetParserErrors = ~f{i^v^^~f{v^v^c$}^^~f{v^v^c$}^^v}
	xmlRelaxNGGetValidErrors = ~f{i^v^^~f{v^v^c$}^^~f{v^v^c$}^^v}
	xmlRelaxNGInitTypes = ~f{i}
	xmlRelaxNGNewDocParserCtxt = ~f{^v^v}
	xmlRelaxNGNewMemParserCtxt = ~f{^v^ci}
	xmlRelaxNGNewParserCtxt = ~f{^v^c}
	xmlRelaxNGNewValidCtxt = ~f{^v^v}
	xmlRelaxNGParse = ~f{^v^v}
	xmlRelaxNGSetParserErrors = ~f{v^v^~f{v^v^c$}^~f{v^v^c$}^v}
	xmlRelaxNGSetParserStructuredErrors = ~f{v^v^~f{v^v^v}^v}
	xmlRelaxNGSetValidErrors = ~f{v^v^~f{v^v^c$}^~f{v^v^c$}^v}
	xmlRelaxNGSetValidStructuredErrors = ~f{v^v^~f{v^v^v}^v}
	xmlRelaxNGValidateDoc = ~f{i^v^v}
	xmlRelaxNGValidateFullElement = ~f{i^v^v^v}
	xmlRelaxNGValidatePopElement = ~f{i^v^v^v}
	xmlRelaxNGValidatePushCData = ~f{i^v^Ci}
	xmlRelaxNGValidatePushElement = ~f{i^v^v^v}
	xmlRelaxParserSetFlag = ~f{i^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/readpassphrase.h
	readpassphrase = ~f{^c^c^cLi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vfp.h
	vacosf = ~f{~V{4f}~V{4f}}
	vacoshf = ~f{~V{4f}~V{4f}}
	vasinf = ~f{~V{4f}~V{4f}}
	vasinhf = ~f{~V{4f}~V{4f}}
	vatan2f = ~f{~V{4f}~V{4f}~V{4f}}
	vatanf = ~f{~V{4f}~V{4f}}
	vatanhf = ~f{~V{4f}~V{4f}}
	vceilf = ~f{~V{4f}~V{4f}}
	vclassifyf = ~f{~V{4I}~V{4f}}
	vcopysignf = ~f{~V{4f}~V{4f}~V{4f}}
	vcosf = ~f{~V{4f}~V{4f}}
	vcoshf = ~f{~V{4f}~V{4f}}
	vcospif = ~f{~V{4f}~V{4f}}
	vdivf = ~f{~V{4f}~V{4f}~V{4f}}
	vexp2f = ~f{~V{4f}~V{4f}}
	vexpf = ~f{~V{4f}~V{4f}}
	vexpm1f = ~f{~V{4f}~V{4f}}
	vfabf = ~f{~V{4f}~V{4f}}
	vfabsf = ~f{~V{4f}~V{4f}}
	vfloorf = ~f{~V{4f}~V{4f}}
	vfmodf = ~f{~V{4f}~V{4f}~V{4f}}
	vintf = ~f{~V{4f}~V{4f}}
	vipowf = ~f{~V{4f}~V{4f}~V{4i}}
	vlog10f = ~f{~V{4f}~V{4f}}
	vlog1pf = ~f{~V{4f}~V{4f}}
	vlog2f = ~f{~V{4f}~V{4f}}
	vlogbf = ~f{~V{4f}~V{4f}}
	vlogf = ~f{~V{4f}~V{4f}}
	vnextafterf = ~f{~V{4f}~V{4f}~V{4f}}
	vnintf = ~f{~V{4f}~V{4f}}
	vpowf = ~f{~V{4f}~V{4f}~V{4f}}
	vrecf = ~f{~V{4f}~V{4f}}
	vremainderf = ~f{~V{4f}~V{4f}~V{4f}}
	vremquof = ~f{~V{4f}~V{4f}~V{4f}^~V{4I}}
	vrsqrtf = ~f{~V{4f}~V{4f}}
	vscalbf = ~f{~V{4f}~V{4f}~V{4i}}
	vsignbitf = ~f{~V{4I}~V{4f}}
	vsincosf = ~f{~V{4f}~V{4f}^~V{4f}}
	vsinf = ~f{~V{4f}~V{4f}}
	vsinhf = ~f{~V{4f}~V{4f}}
	vsinpif = ~f{~V{4f}~V{4f}}
	vsqrtf = ~f{~V{4f}~V{4f}}
	vtablelookup = ~f{~V{4I}~V{4i}^I}
	vtanf = ~f{~V{4f}~V{4f}}
	vtanhf = ~f{~V{4f}~V{4f}}
	vtanpif = ~f{~V{4f}~V{4f}}
	vtruncf = ~f{~V{4f}~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Vision.framework/Headers/VNUtils.h
	VNElementTypeSize = ~f{LL}
	VNImagePointForFaceLandmarkPoint = ~f{{=dd}~V{2f}{={=dd}{=dd}}LL}
	VNImagePointForNormalizedPoint = ~f{{=dd}{=dd}LL}
	VNImageRectForNormalizedRect = ~f{{={=dd}{=dd}}{={=dd}{=dd}}LL}
	VNNormalizedFaceBoundingBoxPointForLandmarkPoint = ~f{{=dd}~V{2f}{={=dd}{=dd}}LL}
	VNNormalizedRectForImageRect = ~f{{={=dd}{=dd}}{={=dd}{=dd}}LL}
	VNNormalizedRectIsIdentityRect = ~f{B{={=dd}{=dd}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/ImageIO.framework/Headers/CGImageMetadata.h
	CGImageMetadataCopyStringValueWithPath = ~f{^v^v^v^v}
	CGImageMetadataCopyTagMatchingImageProperty = ~f{^v^v^v^v}
	CGImageMetadataCopyTagWithPath = ~f{^v^v^v^v}
	CGImageMetadataCopyTags = ~f{^v^v}
	CGImageMetadataCreateFromXMPData = ~f{^v^v}
	CGImageMetadataCreateMutable = ~f{^v}
	CGImageMetadataCreateMutableCopy = ~f{^v^v}
	CGImageMetadataCreateXMPData = ~f{^v^v^v}
	CGImageMetadataEnumerateTagsUsingBlock = ~f{v^v^v^v%~f{B^v^v}}
	CGImageMetadataGetTypeID = ~f{L}
	CGImageMetadataRegisterNamespaceForPrefix = ~f{B^v^v^v^^v}
	CGImageMetadataRemoveTagWithPath = ~f{B^v^v^v}
	CGImageMetadataSetTagWithPath = ~f{B^v^v^v^v}
	CGImageMetadataSetValueMatchingImageProperty = ~f{B^v^v^v^v}
	CGImageMetadataSetValueWithPath = ~f{B^v^v^v^v}
	CGImageMetadataTagCopyName = ~f{^v^v}
	CGImageMetadataTagCopyNamespace = ~f{^v^v}
	CGImageMetadataTagCopyPrefix = ~f{^v^v}
	CGImageMetadataTagCopyQualifiers = ~f{^v^v}
	CGImageMetadataTagCopyValue = ~f{^v^v}
	CGImageMetadataTagCreate = ~f{^v^v^v^vi^v}
	CGImageMetadataTagGetType = ~f{i^v}
	CGImageMetadataTagGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/gethostuuid.h
	gethostuuid = ~f{i^C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/CommonCrypto/CommonCryptor.h
	CCCrypt = ~f{iIII^vL^v^vL^vL^L}
	CCCryptorCreate = ~f{iIII^vL^v^^v}
	CCCryptorCreateFromData = ~f{iIII^vL^v^vL^^v^L}
	CCCryptorCreateWithMode = ~f{iIIII^v^vL^vLiI^^v}
	CCCryptorFinal = ~f{i^v^vL^L}
	CCCryptorGetOutputLength = ~f{L^vLB}
	CCCryptorRelease = ~f{i^v}
	CCCryptorReset = ~f{i^v^v}
	CCCryptorUpdate = ~f{i^v^vL^vL^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/vector_make.h
	simd_make_char16 = ~f{~V{16c}~V{64c}}
	simd_make_char16_undef = ~f{~V{16c}~V{8c}}
	simd_make_char2 = ~f{~V{2c}~V{64c}}
	simd_make_char2_undef = ~f{~V{2c}c}
	simd_make_char3 = ~f{~V{3c}~V{64c}}
	simd_make_char32 = ~f{~V{32c}~V{64c}}
	simd_make_char32_undef = ~f{~V{32c}~V{16c}}
	simd_make_char3_undef = ~f{~V{3c}~V{2c}}
	simd_make_char4 = ~f{~V{4c}~V{64c}}
	simd_make_char4_undef = ~f{~V{4c}~V{3c}}
	simd_make_char64 = ~f{~V{64c}~V{64c}}
	simd_make_char64_undef = ~f{~V{64c}~V{32c}}
	simd_make_char8 = ~f{~V{8c}~V{64c}}
	simd_make_char8_undef = ~f{~V{8c}~V{4c}}
	simd_make_double2 = ~f{~V{2d}~V{8d}}
	simd_make_double2_undef = ~f{~V{2d}d}
	simd_make_double3 = ~f{~V{3d}~V{8d}}
	simd_make_double3_undef = ~f{~V{3d}~V{2d}}
	simd_make_double4 = ~f{~V{4d}~V{8d}}
	simd_make_double4_undef = ~f{~V{4d}~V{3d}}
	simd_make_double8 = ~f{~V{8d}~V{8d}}
	simd_make_double8_undef = ~f{~V{8d}~V{4d}}
	simd_make_float16 = ~f{~V{16f}~V{16f}}
	simd_make_float16_undef = ~f{~V{16f}~V{8f}}
	simd_make_float2 = ~f{~V{2f}~V{16f}}
	simd_make_float2_undef = ~f{~V{2f}f}
	simd_make_float3 = ~f{~V{3f}~V{16f}}
	simd_make_float3_undef = ~f{~V{3f}~V{2f}}
	simd_make_float4 = ~f{~V{4f}~V{16f}}
	simd_make_float4_undef = ~f{~V{4f}~V{3f}}
	simd_make_float8 = ~f{~V{8f}~V{16f}}
	simd_make_float8_undef = ~f{~V{8f}~V{4f}}
	simd_make_int16 = ~f{~V{16i}~V{16i}}
	simd_make_int16_undef = ~f{~V{16i}~V{8i}}
	simd_make_int2 = ~f{~V{2i}~V{16i}}
	simd_make_int2_undef = ~f{~V{2i}i}
	simd_make_int3 = ~f{~V{3i}~V{16i}}
	simd_make_int3_undef = ~f{~V{3i}~V{2i}}
	simd_make_int4 = ~f{~V{4i}~V{16i}}
	simd_make_int4_undef = ~f{~V{4i}~V{3i}}
	simd_make_int8 = ~f{~V{8i}~V{16i}}
	simd_make_int8_undef = ~f{~V{8i}~V{4i}}
	simd_make_long2 = ~f{~V{2l}~V{8l}}
	simd_make_long2_undef = ~f{~V{2l}l}
	simd_make_long3 = ~f{~V{3l}~V{8l}}
	simd_make_long3_undef = ~f{~V{3l}~V{2l}}
	simd_make_long4 = ~f{~V{4l}~V{8l}}
	simd_make_long4_undef = ~f{~V{4l}~V{3l}}
	simd_make_long8 = ~f{~V{8l}~V{8l}}
	simd_make_long8_undef = ~f{~V{8l}~V{4l}}
	simd_make_short16 = ~f{~V{16s}~V{32s}}
	simd_make_short16_undef = ~f{~V{16s}~V{8s}}
	simd_make_short2 = ~f{~V{2s}~V{32s}}
	simd_make_short2_undef = ~f{~V{2s}s}
	simd_make_short3 = ~f{~V{3s}~V{32s}}
	simd_make_short32 = ~f{~V{32s}~V{32s}}
	simd_make_short32_undef = ~f{~V{32s}~V{16s}}
	simd_make_short3_undef = ~f{~V{3s}~V{2s}}
	simd_make_short4 = ~f{~V{4s}~V{32s}}
	simd_make_short4_undef = ~f{~V{4s}~V{3s}}
	simd_make_short8 = ~f{~V{8s}~V{32s}}
	simd_make_short8_undef = ~f{~V{8s}~V{4s}}
	simd_make_uchar16 = ~f{~V{16C}~V{64C}}
	simd_make_uchar16_undef = ~f{~V{16C}~V{8C}}
	simd_make_uchar2 = ~f{~V{2C}~V{64C}}
	simd_make_uchar2_undef = ~f{~V{2C}C}
	simd_make_uchar3 = ~f{~V{3C}~V{64C}}
	simd_make_uchar32 = ~f{~V{32C}~V{64C}}
	simd_make_uchar32_undef = ~f{~V{32C}~V{16C}}
	simd_make_uchar3_undef = ~f{~V{3C}~V{2C}}
	simd_make_uchar4 = ~f{~V{4C}~V{64C}}
	simd_make_uchar4_undef = ~f{~V{4C}~V{3C}}
	simd_make_uchar64 = ~f{~V{64C}~V{64C}}
	simd_make_uchar64_undef = ~f{~V{64C}~V{32C}}
	simd_make_uchar8 = ~f{~V{8C}~V{64C}}
	simd_make_uchar8_undef = ~f{~V{8C}~V{4C}}
	simd_make_uint16 = ~f{~V{16I}~V{16I}}
	simd_make_uint16_undef = ~f{~V{16I}~V{8I}}
	simd_make_uint2 = ~f{~V{2I}~V{16I}}
	simd_make_uint2_undef = ~f{~V{2I}I}
	simd_make_uint3 = ~f{~V{3I}~V{16I}}
	simd_make_uint3_undef = ~f{~V{3I}~V{2I}}
	simd_make_uint4 = ~f{~V{4I}~V{16I}}
	simd_make_uint4_undef = ~f{~V{4I}~V{3I}}
	simd_make_uint8 = ~f{~V{8I}~V{16I}}
	simd_make_uint8_undef = ~f{~V{8I}~V{4I}}
	simd_make_ulong2 = ~f{~V{2L}~V{8L}}
	simd_make_ulong2_undef = ~f{~V{2L}L}
	simd_make_ulong3 = ~f{~V{3L}~V{8L}}
	simd_make_ulong3_undef = ~f{~V{3L}~V{2L}}
	simd_make_ulong4 = ~f{~V{4L}~V{8L}}
	simd_make_ulong4_undef = ~f{~V{4L}~V{3L}}
	simd_make_ulong8 = ~f{~V{8L}~V{8L}}
	simd_make_ulong8_undef = ~f{~V{8L}~V{4L}}
	simd_make_ushort16 = ~f{~V{16S}~V{32S}}
	simd_make_ushort16_undef = ~f{~V{16S}~V{8S}}
	simd_make_ushort2 = ~f{~V{2S}~V{32S}}
	simd_make_ushort2_undef = ~f{~V{2S}S}
	simd_make_ushort3 = ~f{~V{3S}~V{32S}}
	simd_make_ushort32 = ~f{~V{32S}~V{32S}}
	simd_make_ushort32_undef = ~f{~V{32S}~V{16S}}
	simd_make_ushort3_undef = ~f{~V{3S}~V{2S}}
	simd_make_ushort4 = ~f{~V{4S}~V{32S}}
	simd_make_ushort4_undef = ~f{~V{4S}~V{3S}}
	simd_make_ushort8 = ~f{~V{8S}~V{32S}}
	simd_make_ushort8_undef = ~f{~V{8S}~V{4S}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread/qos.h
	pthread_attr_get_qos_class_np = ~f{i^v^I^i}
	pthread_attr_set_qos_class_np = ~f{i^vIi}
	pthread_get_qos_class_np = ~f{i^v^I^i}
	pthread_override_qos_class_end_np = ~f{i^v}
	pthread_override_qos_class_start_np = ~f{^v^vIi}
	pthread_set_qos_class_self_np = ~f{iIi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/time.h
	dispatch_time = ~f{QQq}
	dispatch_walltime = ~f{Q^vq}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCDynamicStoreKey.h
	SCDynamicStoreKeyCreate = ~f{^v^v^v$}
	SCDynamicStoreKeyCreateComputerName = ~f{^v^v}
	SCDynamicStoreKeyCreateConsoleUser = ~f{^v^v}
	SCDynamicStoreKeyCreateHostNames = ~f{^v^v}
	SCDynamicStoreKeyCreateLocation = ~f{^v^v}
	SCDynamicStoreKeyCreateNetworkGlobalEntity = ~f{^v^v^v^v}
	SCDynamicStoreKeyCreateNetworkInterface = ~f{^v^v^v}
	SCDynamicStoreKeyCreateNetworkInterfaceEntity = ~f{^v^v^v^v^v}
	SCDynamicStoreKeyCreateNetworkServiceEntity = ~f{^v^v^v^v^v}
	SCDynamicStoreKeyCreateProxies = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMIDI.framework/Headers/MIDIDriver.h
	MIDIDeviceCreate = ~f{i^^v^v^v^v^I}
	MIDIDeviceDispose = ~f{iI}
	MIDIDeviceListAddDevice = ~f{iII}
	MIDIDeviceListDispose = ~f{iI}
	MIDIDeviceListGetDevice = ~f{IIL}
	MIDIDeviceListGetNumberOfDevices = ~f{LI}
	MIDIDriverEnableMonitoring = ~f{i^^vC}
	MIDIEndpointGetRefCons = ~f{iI^^v^^v}
	MIDIEndpointSetRefCons = ~f{iI^v^v}
	MIDIGetDriverDeviceList = ~f{I^^v}
	MIDIGetDriverIORunLoop = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/queue.h
	dispatch_after = ~f{vQ@%~f{v}}
	dispatch_after_f = ~f{vQ@^v^~f{v^v}}
	dispatch_apply = ~f{vL@%~f{vL}}
	dispatch_apply_f = ~f{vL@^v^~f{v^vL}}
	dispatch_assert_queue = ~f{v@}
	dispatch_assert_queue_barrier = ~f{v@}
	dispatch_assert_queue_not = ~f{v@}
	dispatch_async = ~f{v@%~f{v}}
	dispatch_async_and_wait = ~f{v@%~f{v}}
	dispatch_async_and_wait_f = ~f{v@^v^~f{v^v}}
	dispatch_async_f = ~f{v@^v^~f{v^v}}
	dispatch_barrier_async = ~f{v@%~f{v}}
	dispatch_barrier_async_and_wait = ~f{v@%~f{v}}
	dispatch_barrier_async_and_wait_f = ~f{v@^v^~f{v^v}}
	dispatch_barrier_async_f = ~f{v@^v^~f{v^v}}
	dispatch_barrier_sync = ~f{v@%~f{v}}
	dispatch_barrier_sync_f = ~f{v@^v^~f{v^v}}
	dispatch_get_current_queue = ~f{@}
	dispatch_get_global_queue = ~f{@lL}
	dispatch_get_main_queue = ~f{@}
	dispatch_get_specific = ~f{^v^v}
	dispatch_main = ~f{v}
	dispatch_queue_attr_make_initially_inactive = ~f{@@}
	dispatch_queue_attr_make_with_autorelease_frequency = ~f{@@L}
	dispatch_queue_attr_make_with_qos_class = ~f{@@Ii}
	dispatch_queue_create = ~f{@^c@}
	dispatch_queue_create_with_target = ~f{@^c@@}
	dispatch_queue_get_label = ~f{^c@}
	dispatch_queue_get_qos_class = ~f{I@^i}
	dispatch_queue_get_specific = ~f{^v@^v}
	dispatch_queue_set_specific = ~f{v@^v^v^~f{v^v}}
	dispatch_set_target_queue = ~f{v@@}
	dispatch_sync = ~f{v@%~f{v}}
	dispatch_sync_f = ~f{v@^v^~f{v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKMatrix4.h
	GLKMatrix4Add = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=ffffffffffffffff}}
	GLKMatrix4GetColumn = ~f{{=ffff}{=ffffffffffffffff}i}
	GLKMatrix4GetMatrix2 = ~f{{=ffffffff}{=ffffffffffffffff}}
	GLKMatrix4GetMatrix3 = ~f{{=fffffffff}{=ffffffffffffffff}}
	GLKMatrix4GetRow = ~f{{=ffff}{=ffffffffffffffff}i}
	GLKMatrix4Invert = ~f{{=ffffffffffffffff}{=ffffffffffffffff}^B}
	GLKMatrix4InvertAndTranspose = ~f{{=ffffffffffffffff}{=ffffffffffffffff}^B}
	GLKMatrix4Make = ~f{{=ffffffffffffffff}ffffffffffffffff}
	GLKMatrix4MakeAndTranspose = ~f{{=ffffffffffffffff}ffffffffffffffff}
	GLKMatrix4MakeFrustum = ~f{{=ffffffffffffffff}ffffff}
	GLKMatrix4MakeLookAt = ~f{{=ffffffffffffffff}fffffffff}
	GLKMatrix4MakeOrtho = ~f{{=ffffffffffffffff}ffffff}
	GLKMatrix4MakePerspective = ~f{{=ffffffffffffffff}ffff}
	GLKMatrix4MakeRotation = ~f{{=ffffffffffffffff}ffff}
	GLKMatrix4MakeScale = ~f{{=ffffffffffffffff}fff}
	GLKMatrix4MakeTranslation = ~f{{=ffffffffffffffff}fff}
	GLKMatrix4MakeWithArray = ~f{{=ffffffffffffffff}^f}
	GLKMatrix4MakeWithArrayAndTranspose = ~f{{=ffffffffffffffff}^f}
	GLKMatrix4MakeWithColumns = ~f{{=ffffffffffffffff}{=ffff}{=ffff}{=ffff}{=ffff}}
	GLKMatrix4MakeWithQuaternion = ~f{{=ffffffffffffffff}{=ffff}}
	GLKMatrix4MakeWithRows = ~f{{=ffffffffffffffff}{=ffff}{=ffff}{=ffff}{=ffff}}
	GLKMatrix4MakeXRotation = ~f{{=ffffffffffffffff}f}
	GLKMatrix4MakeYRotation = ~f{{=ffffffffffffffff}f}
	GLKMatrix4MakeZRotation = ~f{{=ffffffffffffffff}f}
	GLKMatrix4Multiply = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=ffffffffffffffff}}
	GLKMatrix4MultiplyAndProjectVector3 = ~f{{=fff}{=ffffffffffffffff}{=fff}}
	GLKMatrix4MultiplyAndProjectVector3Array = ~f{v{=ffffffffffffffff}^vL}
	GLKMatrix4MultiplyVector3 = ~f{{=fff}{=ffffffffffffffff}{=fff}}
	GLKMatrix4MultiplyVector3Array = ~f{v{=ffffffffffffffff}^vL}
	GLKMatrix4MultiplyVector3ArrayWithTranslation = ~f{v{=ffffffffffffffff}^vL}
	GLKMatrix4MultiplyVector3WithTranslation = ~f{{=fff}{=ffffffffffffffff}{=fff}}
	GLKMatrix4MultiplyVector4 = ~f{{=ffff}{=ffffffffffffffff}{=ffff}}
	GLKMatrix4MultiplyVector4Array = ~f{v{=ffffffffffffffff}^vL}
	GLKMatrix4Rotate = ~f{{=ffffffffffffffff}{=ffffffffffffffff}ffff}
	GLKMatrix4RotateWithVector3 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}f{=fff}}
	GLKMatrix4RotateWithVector4 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}f{=ffff}}
	GLKMatrix4RotateX = ~f{{=ffffffffffffffff}{=ffffffffffffffff}f}
	GLKMatrix4RotateY = ~f{{=ffffffffffffffff}{=ffffffffffffffff}f}
	GLKMatrix4RotateZ = ~f{{=ffffffffffffffff}{=ffffffffffffffff}f}
	GLKMatrix4Scale = ~f{{=ffffffffffffffff}{=ffffffffffffffff}fff}
	GLKMatrix4ScaleWithVector3 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=fff}}
	GLKMatrix4ScaleWithVector4 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=ffff}}
	GLKMatrix4SetColumn = ~f{{=ffffffffffffffff}{=ffffffffffffffff}i{=ffff}}
	GLKMatrix4SetRow = ~f{{=ffffffffffffffff}{=ffffffffffffffff}i{=ffff}}
	GLKMatrix4Subtract = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=ffffffffffffffff}}
	GLKMatrix4Translate = ~f{{=ffffffffffffffff}{=ffffffffffffffff}fff}
	GLKMatrix4TranslateWithVector3 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=fff}}
	GLKMatrix4TranslateWithVector4 = ~f{{=ffffffffffffffff}{=ffffffffffffffff}{=ffff}}
	GLKMatrix4Transpose = ~f{{=ffffffffffffffff}{=ffffffffffffffff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFNumberFormatter.h
	CFNumberFormatterCopyProperty = ~f{^v^v^v}
	CFNumberFormatterCreate = ~f{^v^v^vl}
	CFNumberFormatterCreateNumberFromString = ~f{^v^v^v^v^vL}
	CFNumberFormatterCreateStringWithNumber = ~f{^v^v^v^v}
	CFNumberFormatterCreateStringWithValue = ~f{^v^v^vl^v}
	CFNumberFormatterGetDecimalInfoForCurrencyCode = ~f{C^v^i^d}
	CFNumberFormatterGetFormat = ~f{^v^v}
	CFNumberFormatterGetLocale = ~f{^v^v}
	CFNumberFormatterGetStyle = ~f{l^v}
	CFNumberFormatterGetTypeID = ~f{L}
	CFNumberFormatterGetValueFromString = ~f{C^v^v^vl^v}
	CFNumberFormatterSetFormat = ~f{v^v^v}
	CFNumberFormatterSetProperty = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AddressBook.framework/Headers/ABAddressBook.h
	ABAddressBookAddRecord = ~f{B^v^v^^v}
	ABAddressBookCopyLocalizedLabel = ~f{^v^v}
	ABAddressBookCreate = ~f{^v}
	ABAddressBookCreateWithOptions = ~f{^v^v^^v}
	ABAddressBookGetAuthorizationStatus = ~f{l}
	ABAddressBookHasUnsavedChanges = ~f{B^v}
	ABAddressBookRegisterExternalChangeCallback = ~f{v^v^~f{v^v^v^v}^v}
	ABAddressBookRemoveRecord = ~f{B^v^v^^v}
	ABAddressBookRequestAccessWithCompletion = ~f{v^v%~f{vB^v}}
	ABAddressBookRevert = ~f{v^v}
	ABAddressBookSave = ~f{B^v^^v}
	ABAddressBookUnregisterExternalChangeCallback = ~f{v^v^~f{v^v^v^v}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vBigNum.h
	vA1024Shift = ~f{v^vI^v}
	vA256Shift = ~f{v^vI^v}
	vA512Shift = ~f{v^vI^v}
	vL1024Rotate = ~f{v^vI^v}
	vL256Rotate = ~f{v^vI^v}
	vL512Rotate = ~f{v^vI^v}
	vLL1024Shift = ~f{v^vI^v}
	vLL256Shift = ~f{v^vI^v}
	vLL512Shift = ~f{v^vI^v}
	vLR1024Shift = ~f{v^vI^v}
	vLR256Shift = ~f{v^vI^v}
	vLR512Shift = ~f{v^vI^v}
	vR1024Rotate = ~f{v^vI^v}
	vR256Rotate = ~f{v^vI^v}
	vR512Rotate = ~f{v^vI^v}
	vS1024Add = ~f{v^v^v^v}
	vS1024AddS = ~f{v^v^v^v}
	vS1024Divide = ~f{v^v^v^v^v}
	vS1024HalfMultiply = ~f{v^v^v^v}
	vS1024Mod = ~f{v^v^v^v}
	vS1024Neg = ~f{v^v^v}
	vS1024Sub = ~f{v^v^v^v}
	vS1024SubS = ~f{v^v^v^v}
	vS128FullMultiply = ~f{v^v^v^v}
	vS256Add = ~f{v^v^v^v}
	vS256AddS = ~f{v^v^v^v}
	vS256Divide = ~f{v^v^v^v^v}
	vS256FullMultiply = ~f{v^v^v^v}
	vS256HalfMultiply = ~f{v^v^v^v}
	vS256Mod = ~f{v^v^v^v}
	vS256Neg = ~f{v^v^v}
	vS256Sub = ~f{v^v^v^v}
	vS256SubS = ~f{v^v^v^v}
	vS512Add = ~f{v^v^v^v}
	vS512AddS = ~f{v^v^v^v}
	vS512Divide = ~f{v^v^v^v^v}
	vS512FullMultiply = ~f{v^v^v^v}
	vS512HalfMultiply = ~f{v^v^v^v}
	vS512Mod = ~f{v^v^v^v}
	vS512Neg = ~f{v^v^v}
	vS512Sub = ~f{v^v^v^v}
	vS512SubS = ~f{v^v^v^v}
	vU1024Add = ~f{v^v^v^v}
	vU1024AddS = ~f{v^v^v^v}
	vU1024Divide = ~f{v^v^v^v^v}
	vU1024HalfMultiply = ~f{v^v^v^v}
	vU1024Mod = ~f{v^v^v^v}
	vU1024Neg = ~f{v^v^v}
	vU1024Sub = ~f{v^v^v^v}
	vU1024SubS = ~f{v^v^v^v}
	vU128FullMultiply = ~f{v^v^v^v}
	vU256Add = ~f{v^v^v^v}
	vU256AddS = ~f{v^v^v^v}
	vU256Divide = ~f{v^v^v^v^v}
	vU256FullMultiply = ~f{v^v^v^v}
	vU256HalfMultiply = ~f{v^v^v^v}
	vU256Mod = ~f{v^v^v^v}
	vU256Neg = ~f{v^v^v}
	vU256Sub = ~f{v^v^v^v}
	vU256SubS = ~f{v^v^v^v}
	vU512Add = ~f{v^v^v^v}
	vU512AddS = ~f{v^v^v^v}
	vU512Divide = ~f{v^v^v^v^v}
	vU512FullMultiply = ~f{v^v^v^v}
	vU512HalfMultiply = ~f{v^v^v^v}
	vU512Mod = ~f{v^v^v^v}
	vU512Neg = ~f{v^v^v}
	vU512Sub = ~f{v^v^v^v}
	vU512SubS = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecureTransport.h
	SSLAddDistinguishedName = ~f{i^v^vL}
	SSLClose = ~f{i^v}
	SSLContextGetTypeID = ~f{L}
	SSLCopyALPNProtocols = ~f{i^v^^v}
	SSLCopyDistinguishedNames = ~f{i^v^^v}
	SSLCopyPeerTrust = ~f{i^v^^v}
	SSLCopyRequestedPeerName = ~f{i^v^c^L}
	SSLCopyRequestedPeerNameLength = ~f{i^v^L}
	SSLCreateContext = ~f{^v^vii}
	SSLGetBufferedReadSize = ~f{i^v^L}
	SSLGetClientCertificateState = ~f{i^v^i}
	SSLGetConnection = ~f{i^v^^v}
	SSLGetDatagramWriteSize = ~f{i^v^L}
	SSLGetEnabledCiphers = ~f{i^v^S^L}
	SSLGetMaxDatagramRecordSize = ~f{i^v^L}
	SSLGetNegotiatedCipher = ~f{i^v^S}
	SSLGetNegotiatedProtocolVersion = ~f{i^v^i}
	SSLGetNumberEnabledCiphers = ~f{i^v^L}
	SSLGetNumberSupportedCiphers = ~f{i^v^L}
	SSLGetPeerDomainName = ~f{i^v^c^L}
	SSLGetPeerDomainNameLength = ~f{i^v^L}
	SSLGetPeerID = ~f{i^v^^v^L}
	SSLGetProtocolVersionMax = ~f{i^v^i}
	SSLGetProtocolVersionMin = ~f{i^v^i}
	SSLGetSessionOption = ~f{i^vi^C}
	SSLGetSessionState = ~f{i^v^i}
	SSLGetSupportedCiphers = ~f{i^v^S^L}
	SSLHandshake = ~f{i^v}
	SSLReHandshake = ~f{i^v}
	SSLRead = ~f{i^v^vL^L}
	SSLSetALPNProtocols = ~f{i^v^v}
	SSLSetCertificate = ~f{i^v^v}
	SSLSetClientSideAuthenticate = ~f{i^vi}
	SSLSetConnection = ~f{i^v^v}
	SSLSetDatagramHelloCookie = ~f{i^v^vL}
	SSLSetEnabledCiphers = ~f{i^v^SL}
	SSLSetEncryptionCertificate = ~f{i^v^v}
	SSLSetError = ~f{i^vi}
	SSLSetIOFuncs = ~f{i^v^~f{i^v^v^L}^~f{i^v^v^L}}
	SSLSetMaxDatagramRecordSize = ~f{i^vL}
	SSLSetOCSPResponse = ~f{i^v^v}
	SSLSetPeerDomainName = ~f{i^v^cL}
	SSLSetPeerID = ~f{i^v^vL}
	SSLSetProtocolVersionMax = ~f{i^vi}
	SSLSetProtocolVersionMin = ~f{i^vi}
	SSLSetSessionConfig = ~f{i^v^v}
	SSLSetSessionOption = ~f{i^viC}
	SSLSetSessionTicketsEnabled = ~f{i^vC}
	SSLWrite = ~f{i^v^vL^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/utext.h
	utext_char32At = ~f{i^vq}
	utext_clone = ~f{^v^v^vcc^i}
	utext_close = ~f{^v^v}
	utext_copy = ~f{v^vqqqc^i}
	utext_current32 = ~f{i^v}
	utext_equals = ~f{c^v^v}
	utext_extract = ~f{i^vqq^Si^i}
	utext_freeze = ~f{v^v}
	utext_getNativeIndex = ~f{q^v}
	utext_getPreviousNativeIndex = ~f{q^v}
	utext_hasMetaData = ~f{c^v}
	utext_isLengthExpensive = ~f{c^v}
	utext_isWritable = ~f{c^v}
	utext_moveIndex32 = ~f{c^vi}
	utext_nativeLength = ~f{q^v}
	utext_next32 = ~f{i^v}
	utext_next32From = ~f{i^vq}
	utext_openUChars = ~f{^v^v^Sq^i}
	utext_openUTF8 = ~f{^v^v^cq^i}
	utext_previous32 = ~f{i^v}
	utext_previous32From = ~f{i^vq}
	utext_replace = ~f{i^vqq^Si^i}
	utext_setNativeIndex = ~f{v^vq}
	utext_setup = ~f{^v^vi^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/ndbm.h
	dbm_clearerr = ~f{i^v}
	dbm_close = ~f{v^v}
	dbm_delete = ~f{i^v{=^vL}}
	dbm_dirfno = ~f{i^v}
	dbm_error = ~f{i^v}
	dbm_fetch = ~f{{=^vL}^v{=^vL}}
	dbm_firstkey = ~f{{=^vL}^v}
	dbm_forder = ~f{l^v{=^vL}}
	dbm_nextkey = ~f{{=^vL}^v}
	dbm_open = ~f{^v^ciS}
	dbm_store = ~f{i^v{=^vL}{=^vL}i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_wctype.h
	iswblank_l = ~f{ii^v}
	iswhexnumber_l = ~f{ii^v}
	iswideogram_l = ~f{ii^v}
	iswnumber_l = ~f{ii^v}
	iswphonogram_l = ~f{ii^v}
	iswrune_l = ~f{ii^v}
	iswspecial_l = ~f{ii^v}
	nextwctype_l = ~f{iiI^v}
	towctrans_l = ~f{iii^v}
	wctrans_l = ~f{i^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/common.h
	simd_abs = ~f{~V{8d}~V{8d}}
	simd_clamp = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	simd_equal = ~f{B~V{8d}~V{8d}}
	simd_fast_recip = ~f{~V{8d}~V{8d}}
	simd_fast_rsqrt = ~f{~V{8d}~V{8d}}
	simd_fract = ~f{~V{8d}~V{8d}}
	simd_max = ~f{~V{8d}~V{8d}~V{8d}}
	simd_min = ~f{~V{8d}~V{8d}~V{8d}}
	simd_mix = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	simd_precise_recip = ~f{~V{8d}~V{8d}}
	simd_precise_rsqrt = ~f{~V{8d}~V{8d}}
	simd_recip = ~f{~V{8d}~V{8d}}
	simd_reduce_add = ~f{d~V{8d}}
	simd_reduce_max = ~f{d~V{8d}}
	simd_reduce_min = ~f{d~V{8d}}
	simd_rsqrt = ~f{~V{8d}~V{8d}}
	simd_sign = ~f{~V{8d}~V{8d}}
	simd_smoothstep = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	simd_step = ~f{~V{8d}~V{8d}~V{8d}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/wctype.h
	iswascii = ~f{ii}
	iswblank = ~f{ii}
	iswhexnumber = ~f{ii}
	iswideogram = ~f{ii}
	iswnumber = ~f{ii}
	iswphonogram = ~f{ii}
	iswrune = ~f{ii}
	iswspecial = ~f{ii}
	nextwctype = ~f{iiI}
	towctrans = ~f{iii}
	wctrans = ~f{i^c}
/usr/local/lib/clang/9.0.1/include/ammintrin.h
	_mm_extract_si64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_insert_si64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_stream_sd = ~f{v^d~V{2d}}
	_mm_stream_ss = ~f{v^f~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenGLES.framework/Headers/ES3/glext.h
	glActiveShaderProgramEXT = ~f{vII}
	glBindProgramPipelineEXT = ~f{vI}
	glCopyTextureLevelsAPPLE = ~f{vIIii}
	glCreateShaderProgramvEXT = ~f{IIi^^c}
	glDeleteProgramPipelinesEXT = ~f{vi^I}
	glGenProgramPipelinesEXT = ~f{vi^I}
	glGetObjectLabelEXT = ~f{vIIi^i^c}
	glGetProgramPipelineInfoLogEXT = ~f{vIi^i^c}
	glGetProgramPipelineivEXT = ~f{vII^i}
	glInsertEventMarkerEXT = ~f{vi^c}
	glIsProgramPipelineEXT = ~f{CI}
	glLabelObjectEXT = ~f{vIIi^c}
	glPopGroupMarkerEXT = ~f{v}
	glProgramParameteriEXT = ~f{vIIi}
	glProgramUniform1fEXT = ~f{vIif}
	glProgramUniform1fvEXT = ~f{vIii^f}
	glProgramUniform1iEXT = ~f{vIii}
	glProgramUniform1ivEXT = ~f{vIii^i}
	glProgramUniform1uiEXT = ~f{vIiI}
	glProgramUniform1uivEXT = ~f{vIii^I}
	glProgramUniform2fEXT = ~f{vIiff}
	glProgramUniform2fvEXT = ~f{vIii^f}
	glProgramUniform2iEXT = ~f{vIiii}
	glProgramUniform2ivEXT = ~f{vIii^i}
	glProgramUniform2uiEXT = ~f{vIiII}
	glProgramUniform2uivEXT = ~f{vIii^I}
	glProgramUniform3fEXT = ~f{vIifff}
	glProgramUniform3fvEXT = ~f{vIii^f}
	glProgramUniform3iEXT = ~f{vIiiii}
	glProgramUniform3ivEXT = ~f{vIii^i}
	glProgramUniform3uiEXT = ~f{vIiIII}
	glProgramUniform3uivEXT = ~f{vIii^I}
	glProgramUniform4fEXT = ~f{vIiffff}
	glProgramUniform4fvEXT = ~f{vIii^f}
	glProgramUniform4iEXT = ~f{vIiiiii}
	glProgramUniform4ivEXT = ~f{vIii^i}
	glProgramUniform4uiEXT = ~f{vIiIIII}
	glProgramUniform4uivEXT = ~f{vIii^I}
	glProgramUniformMatrix2fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix2x3fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix2x4fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix3fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix3x2fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix3x4fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix4fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix4x2fvEXT = ~f{vIiiC^f}
	glProgramUniformMatrix4x3fvEXT = ~f{vIiiC^f}
	glPushGroupMarkerEXT = ~f{vi^c}
	glUseProgramStagesEXT = ~f{vIII}
	glValidateProgramPipelineEXT = ~f{vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFCharacterSet.h
	CFCharacterSetAddCharactersInRange = ~f{v^v{=ll}}
	CFCharacterSetAddCharactersInString = ~f{v^v^v}
	CFCharacterSetCreateBitmapRepresentation = ~f{^v^v^v}
	CFCharacterSetCreateCopy = ~f{^v^v^v}
	CFCharacterSetCreateInvertedSet = ~f{^v^v^v}
	CFCharacterSetCreateMutable = ~f{^v^v}
	CFCharacterSetCreateMutableCopy = ~f{^v^v^v}
	CFCharacterSetCreateWithBitmapRepresentation = ~f{^v^v^v}
	CFCharacterSetCreateWithCharactersInRange = ~f{^v^v{=ll}}
	CFCharacterSetCreateWithCharactersInString = ~f{^v^v^v}
	CFCharacterSetGetPredefined = ~f{^vl}
	CFCharacterSetGetTypeID = ~f{L}
	CFCharacterSetHasMemberInPlane = ~f{C^vl}
	CFCharacterSetIntersect = ~f{v^v^v}
	CFCharacterSetInvert = ~f{v^v}
	CFCharacterSetIsCharacterMember = ~f{C^vS}
	CFCharacterSetIsLongCharacterMember = ~f{C^vI}
	CFCharacterSetIsSupersetOfSet = ~f{C^v^v}
	CFCharacterSetRemoveCharactersInRange = ~f{v^v{=ll}}
	CFCharacterSetRemoveCharactersInString = ~f{v^v^v}
	CFCharacterSetUnion = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecProtocolOptions.h
	sec_protocol_options_add_pre_shared_key = ~f{v@@@}
	sec_protocol_options_add_tls_application_protocol = ~f{v@^c}
	sec_protocol_options_add_tls_ciphersuite = ~f{v@S}
	sec_protocol_options_add_tls_ciphersuite_group = ~f{v@i}
	sec_protocol_options_append_tls_ciphersuite = ~f{v@S}
	sec_protocol_options_append_tls_ciphersuite_group = ~f{v@S}
	sec_protocol_options_are_equal = ~f{B@@}
	sec_protocol_options_get_default_max_dtls_protocol_version = ~f{S}
	sec_protocol_options_get_default_max_tls_protocol_version = ~f{S}
	sec_protocol_options_get_default_min_dtls_protocol_version = ~f{S}
	sec_protocol_options_get_default_min_tls_protocol_version = ~f{S}
	sec_protocol_options_set_challenge_block = ~f{v@%~f{v@%~f{v@}}@}
	sec_protocol_options_set_key_update_block = ~f{v@%~f{v@%~f{v}}@}
	sec_protocol_options_set_local_identity = ~f{v@@}
	sec_protocol_options_set_max_tls_protocol_version = ~f{v@S}
	sec_protocol_options_set_min_tls_protocol_version = ~f{v@S}
	sec_protocol_options_set_peer_authentication_required = ~f{v@B}
	sec_protocol_options_set_pre_shared_key_selection_block = ~f{v@%~f{v@@%~f{v@}}@}
	sec_protocol_options_set_tls_diffie_hellman_parameters = ~f{v@@}
	sec_protocol_options_set_tls_false_start_enabled = ~f{v@B}
	sec_protocol_options_set_tls_is_fallback_attempt = ~f{v@B}
	sec_protocol_options_set_tls_max_version = ~f{v@i}
	sec_protocol_options_set_tls_min_version = ~f{v@i}
	sec_protocol_options_set_tls_ocsp_enabled = ~f{v@B}
	sec_protocol_options_set_tls_pre_shared_key_identity_hint = ~f{v@@}
	sec_protocol_options_set_tls_renegotiation_enabled = ~f{v@B}
	sec_protocol_options_set_tls_resumption_enabled = ~f{v@B}
	sec_protocol_options_set_tls_sct_enabled = ~f{v@B}
	sec_protocol_options_set_tls_server_name = ~f{v@^c}
	sec_protocol_options_set_tls_tickets_enabled = ~f{v@B}
	sec_protocol_options_set_verify_block = ~f{v@%~f{v@@%~f{vB}}@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/quaternion.h
	__tg_exp = ~f{{=~V{4d}}{=~V{4d}}}
	__tg_log = ~f{{=~V{4d}}{=~V{4d}}}
	__tg_promote = ~f{{=~V{4d}}{=~V{4d}}}
	_simd_angle = ~f{d{=~V{4d}}{=~V{4d}}}
	_simd_intermediate = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}{=~V{4d}}}
	_simd_quaternion = ~f{{=~V{4d}}~V{3d}d}
	_simd_quaternion_reduced = ~f{{=~V{4d}}~V{3d}~V{3d}}
	_simd_sinc = ~f{dd}
	_simd_slerp_internal = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}d}
	_simd_squad = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}{=~V{4d}}{=~V{4d}}d}
	simd_act = ~f{~V{3d}{=~V{4d}}~V{3d}}
	simd_add = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}}
	simd_angle = ~f{d{=~V{4d}}}
	simd_axis = ~f{~V{3d}{=~V{4d}}}
	simd_bezier = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}{=~V{4d}}{=~V{4d}}d}
	simd_conjugate = ~f{{=~V{4d}}{=~V{4d}}}
	simd_dot = ~f{d{=~V{4d}}{=~V{4d}}}
	simd_imag = ~f{~V{3d}{=~V{4d}}}
	simd_inverse = ~f{{=~V{4d}}{=~V{4d}}}
	simd_length = ~f{d{=~V{4d}}}
	simd_mul = ~f{{=~V{4d}}d{=~V{4d}}}
	simd_negate = ~f{{=~V{4d}}{=~V{4d}}}
	simd_normalize = ~f{{=~V{4d}}{=~V{4d}}}
	simd_quaternion = ~f{{=~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	simd_real = ~f{d{=~V{4d}}}
	simd_slerp = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}d}
	simd_slerp_longest = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}d}
	simd_spline = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}{=~V{4d}}{=~V{4d}}d}
	simd_sub = ~f{{=~V{4d}}{=~V{4d}}{=~V{4d}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFLocale.h
	CFLocaleCopyAvailableLocaleIdentifiers = ~f{^v}
	CFLocaleCopyCommonISOCurrencyCodes = ~f{^v}
	CFLocaleCopyCurrent = ~f{^v}
	CFLocaleCopyDisplayNameForPropertyValue = ~f{^v^v^v^v}
	CFLocaleCopyISOCountryCodes = ~f{^v}
	CFLocaleCopyISOCurrencyCodes = ~f{^v}
	CFLocaleCopyISOLanguageCodes = ~f{^v}
	CFLocaleCopyPreferredLanguages = ~f{^v}
	CFLocaleCreate = ~f{^v^v^v}
	CFLocaleCreateCanonicalLanguageIdentifierFromString = ~f{^v^v^v}
	CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes = ~f{^v^vss}
	CFLocaleCreateCanonicalLocaleIdentifierFromString = ~f{^v^v^v}
	CFLocaleCreateComponentsFromLocaleIdentifier = ~f{^v^v^v}
	CFLocaleCreateCopy = ~f{^v^v^v}
	CFLocaleCreateLocaleIdentifierFromComponents = ~f{^v^v^v}
	CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode = ~f{^v^vI}
	CFLocaleGetIdentifier = ~f{^v^v}
	CFLocaleGetLanguageCharacterDirection = ~f{l^v}
	CFLocaleGetLanguageLineDirection = ~f{l^v}
	CFLocaleGetSystem = ~f{^v}
	CFLocaleGetTypeID = ~f{L}
	CFLocaleGetValue = ~f{^v^v^v}
	CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier = ~f{I^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/pthread/spawn.h
	posix_spawnattr_get_qos_class_np = ~f{i^^v^I}
	posix_spawnattr_set_qos_class_np = ~f{i^^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreServices.framework/Headers/UTType.h
	UTCreateStringForOSType = ~f{^vI}
	UTGetOSTypeFromString = ~f{I^v}
	UTTypeConformsTo = ~f{C^v^v}
	UTTypeCopyAllTagsWithClass = ~f{^v^v^v}
	UTTypeCopyDeclaration = ~f{^v^v}
	UTTypeCopyDeclaringBundleURL = ~f{^v^v}
	UTTypeCopyDescription = ~f{^v^v}
	UTTypeCopyPreferredTagWithClass = ~f{^v^v^v}
	UTTypeCreateAllIdentifiersForTag = ~f{^v^v^v^v}
	UTTypeCreatePreferredIdentifierForTag = ~f{^v^v^v^v}
	UTTypeEqual = ~f{C^v^v}
	UTTypeIsDeclared = ~f{C^v}
	UTTypeIsDynamic = ~f{C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GameController.framework/Headers/GCMicroGamepadSnapshot.h
	GCMicroGamepadSnapShotDataV100FromNSData = ~f{B^v@}
	GCMicroGamepadSnapshotDataFromNSData = ~f{B^v@}
	NSDataFromGCMicroGamepadSnapShotDataV100 = ~f{@^v}
	NSDataFromGCMicroGamepadSnapshotData = ~f{@^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileDescriptor.h
	CFFileDescriptorCreate = ~f{^v^viC^~f{v^vL^v}^v}
	CFFileDescriptorCreateRunLoopSource = ~f{^v^v^vl}
	CFFileDescriptorDisableCallBacks = ~f{v^vL}
	CFFileDescriptorEnableCallBacks = ~f{v^vL}
	CFFileDescriptorGetContext = ~f{v^v^v}
	CFFileDescriptorGetNativeDescriptor = ~f{i^v}
	CFFileDescriptorGetTypeID = ~f{L}
	CFFileDescriptorInvalidate = ~f{v^v}
	CFFileDescriptorIsValid = ~f{C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioFile.h
	AudioFileClose = ~f{i^v}
	AudioFileCountUserData = ~f{i^vI^I}
	AudioFileCreateWithURL = ~f{i^vI^vI^^v}
	AudioFileGetGlobalInfo = ~f{iII^v^I^v}
	AudioFileGetGlobalInfoSize = ~f{iII^v^I}
	AudioFileGetProperty = ~f{i^vI^I^v}
	AudioFileGetPropertyInfo = ~f{i^vI^I^I}
	AudioFileGetUserData = ~f{i^vII^I^v}
	AudioFileGetUserDataSize = ~f{i^vII^I}
	AudioFileInitializeWithCallbacks = ~f{i^v^~f{i^vqI^v^I}^~f{i^vqI^v^I}^~f{q^v}^~f{i^vq}I^vI^^v}
	AudioFileOpenURL = ~f{i^vcI^^v}
	AudioFileOpenWithCallbacks = ~f{i^v^~f{i^vqI^v^I}^~f{i^vqI^v^I}^~f{q^v}^~f{i^vq}I^^v}
	AudioFileOptimize = ~f{i^v}
	AudioFileReadBytes = ~f{i^vCq^I^v}
	AudioFileReadPacketData = ~f{i^vC^I^vq^I^v}
	AudioFileReadPackets = ~f{i^vC^I^vq^I^v}
	AudioFileRemoveUserData = ~f{i^vII}
	AudioFileSetProperty = ~f{i^vII^v}
	AudioFileSetUserData = ~f{i^vIII^v}
	AudioFileWriteBytes = ~f{i^vCq^I^v}
	AudioFileWritePackets = ~f{i^vCI^vq^I^v}
	NextAudioFileRegion = ~f{^v^v}
	NumAudioFileMarkersToNumBytes = ~f{LL}
	NumBytesToNumAudioFileMarkers = ~f{LL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/quota.h
	dqhashshift = ~f{iI}
	quotactl = ~f{i^cii^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/_select.h
	select = ~f{ii^v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vDSP.h
	vDSP_DCT_CreateSetup = ~f{^v^vLi}
	vDSP_DCT_Execute = ~f{v^v^f^f}
	vDSP_DFT_CreateSetup = ~f{^v^vL}
	vDSP_DFT_DestroySetup = ~f{v^v}
	vDSP_DFT_DestroySetupD = ~f{v^v}
	vDSP_DFT_Execute = ~f{v^v^f^f^f^f}
	vDSP_DFT_ExecuteD = ~f{v^v^d^d^d^d}
	vDSP_DFT_zop = ~f{v^v^f^fl^f^fli}
	vDSP_DFT_zop_CreateSetup = ~f{^v^vLi}
	vDSP_DFT_zop_CreateSetupD = ~f{^v^vLi}
	vDSP_DFT_zrop_CreateSetup = ~f{^v^vLi}
	vDSP_DFT_zrop_CreateSetupD = ~f{^v^vLi}
	vDSP_FFT16_copv = ~f{v^f^fi}
	vDSP_FFT16_zopv = ~f{v^f^f^f^fi}
	vDSP_FFT32_copv = ~f{v^f^fi}
	vDSP_FFT32_zopv = ~f{v^f^f^f^fi}
	vDSP_biquad = ~f{v^v^f^fl^flL}
	vDSP_biquadD = ~f{v^v^d^dl^dlL}
	vDSP_biquad_CreateSetup = ~f{^v^dL}
	vDSP_biquad_CreateSetupD = ~f{^v^dL}
	vDSP_biquad_DestroySetup = ~f{v^v}
	vDSP_biquad_DestroySetupD = ~f{v^v}
	vDSP_biquadm = ~f{v^v^^fl^^flL}
	vDSP_biquadmD = ~f{v^v^^dl^^dlL}
	vDSP_biquadm_CopyState = ~f{v^v^v}
	vDSP_biquadm_CopyStateD = ~f{v^v^v}
	vDSP_biquadm_CreateSetup = ~f{^v^dLL}
	vDSP_biquadm_CreateSetupD = ~f{^v^dLL}
	vDSP_biquadm_DestroySetup = ~f{v^v}
	vDSP_biquadm_DestroySetupD = ~f{v^v}
	vDSP_biquadm_ResetState = ~f{v^v}
	vDSP_biquadm_ResetStateD = ~f{v^v}
	vDSP_biquadm_SetActiveFilters = ~f{v^v^B}
	vDSP_biquadm_SetCoefficientsDouble = ~f{v^v^dLLLL}
	vDSP_biquadm_SetCoefficientsSingle = ~f{v^v^fLLLL}
	vDSP_biquadm_SetTargetsDouble = ~f{v^v^dffLLLL}
	vDSP_biquadm_SetTargetsSingle = ~f{v^v^fffLLLL}
	vDSP_blkman_window = ~f{v^fLi}
	vDSP_blkman_windowD = ~f{v^dLi}
	vDSP_conv = ~f{v^fl^fl^flLL}
	vDSP_convD = ~f{v^dl^dl^dlLL}
	vDSP_create_fftsetup = ~f{^vLi}
	vDSP_create_fftsetupD = ~f{^vLi}
	vDSP_ctoz = ~f{v^vl^vlL}
	vDSP_ctozD = ~f{v^vl^vlL}
	vDSP_deq22 = ~f{v^fl^f^flL}
	vDSP_deq22D = ~f{v^dl^d^dlL}
	vDSP_desamp = ~f{v^fl^f^fLL}
	vDSP_desampD = ~f{v^dl^d^dLL}
	vDSP_destroy_fftsetup = ~f{v^v}
	vDSP_destroy_fftsetupD = ~f{v^v}
	vDSP_distancesq = ~f{v^fl^fl^fL}
	vDSP_distancesqD = ~f{v^dl^dl^dL}
	vDSP_dotpr = ~f{v^fl^fl^fL}
	vDSP_dotpr2 = ~f{v^fl^fl^fl^f^fL}
	vDSP_dotpr2D = ~f{v^dl^dl^dl^d^dL}
	vDSP_dotpr2_s1_15 = ~f{v^sl^sl^sl^s^sL}
	vDSP_dotpr2_s8_24 = ~f{v^il^il^il^i^iL}
	vDSP_dotprD = ~f{v^dl^dl^dL}
	vDSP_dotpr_s1_15 = ~f{v^sl^sl^sL}
	vDSP_dotpr_s8_24 = ~f{v^il^il^iL}
	vDSP_f3x3 = ~f{v^fLL^f^f}
	vDSP_f3x3D = ~f{v^dLL^d^d}
	vDSP_f5x5 = ~f{v^fLL^f^f}
	vDSP_f5x5D = ~f{v^dLL^d^d}
	vDSP_fft2d_zip = ~f{v^v^vllLLi}
	vDSP_fft2d_zipD = ~f{v^v^vllLLi}
	vDSP_fft2d_zipt = ~f{v^v^vll^vLLi}
	vDSP_fft2d_ziptD = ~f{v^v^vll^vLLi}
	vDSP_fft2d_zop = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zopD = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zopt = ~f{v^v^vll^vll^vLLi}
	vDSP_fft2d_zoptD = ~f{v^v^vll^vll^vLLi}
	vDSP_fft2d_zrip = ~f{v^v^vllLLi}
	vDSP_fft2d_zripD = ~f{v^v^vllLLi}
	vDSP_fft2d_zript = ~f{v^v^vll^vLLi}
	vDSP_fft2d_zriptD = ~f{v^v^vll^vLLi}
	vDSP_fft2d_zrop = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zropD = ~f{v^v^vll^vllLLi}
	vDSP_fft2d_zropt = ~f{v^v^vll^vll^vLLi}
	vDSP_fft2d_zroptD = ~f{v^v^vll^vll^vLLi}
	vDSP_fft3_zop = ~f{v^v^vl^vlLi}
	vDSP_fft3_zopD = ~f{v^v^vl^vlLi}
	vDSP_fft5_zop = ~f{v^v^vl^vlLi}
	vDSP_fft5_zopD = ~f{v^v^vl^vlLi}
	vDSP_fft_zip = ~f{v^v^vlLi}
	vDSP_fft_zipD = ~f{v^v^vlLi}
	vDSP_fft_zipt = ~f{v^v^vl^vLi}
	vDSP_fft_ziptD = ~f{v^v^vl^vLi}
	vDSP_fft_zop = ~f{v^v^vl^vlLi}
	vDSP_fft_zopD = ~f{v^v^vl^vlLi}
	vDSP_fft_zopt = ~f{v^v^vl^vl^vLi}
	vDSP_fft_zoptD = ~f{v^v^vl^vl^vLi}
	vDSP_fft_zrip = ~f{v^v^vlLi}
	vDSP_fft_zripD = ~f{v^v^vlLi}
	vDSP_fft_zript = ~f{v^v^vl^vLi}
	vDSP_fft_zriptD = ~f{v^v^vl^vLi}
	vDSP_fft_zrop = ~f{v^v^vl^vlLi}
	vDSP_fft_zropD = ~f{v^v^vl^vlLi}
	vDSP_fft_zropt = ~f{v^v^vl^vl^vLi}
	vDSP_fft_zroptD = ~f{v^v^vl^vl^vLi}
	vDSP_fftm_zip = ~f{v^v^vllLLi}
	vDSP_fftm_zipD = ~f{v^v^vllLLi}
	vDSP_fftm_zipt = ~f{v^v^vll^vLLi}
	vDSP_fftm_ziptD = ~f{v^v^vll^vLLi}
	vDSP_fftm_zop = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zopD = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zopt = ~f{v^v^vll^vll^vLLi}
	vDSP_fftm_zoptD = ~f{v^v^vll^vll^vLLi}
	vDSP_fftm_zrip = ~f{v^v^vllLLi}
	vDSP_fftm_zripD = ~f{v^v^vllLLi}
	vDSP_fftm_zript = ~f{v^v^vll^vLLi}
	vDSP_fftm_zriptD = ~f{v^v^vll^vLLi}
	vDSP_fftm_zrop = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zropD = ~f{v^v^vll^vllLLi}
	vDSP_fftm_zropt = ~f{v^v^vll^vll^vLLi}
	vDSP_fftm_zroptD = ~f{v^v^vll^vll^vLLi}
	vDSP_hamm_window = ~f{v^fLi}
	vDSP_hamm_windowD = ~f{v^dLi}
	vDSP_hann_window = ~f{v^fLi}
	vDSP_hann_windowD = ~f{v^dLi}
	vDSP_imgfir = ~f{v^fLL^f^fLL}
	vDSP_imgfirD = ~f{v^dLL^d^dLL}
	vDSP_maxmgv = ~f{v^fl^fL}
	vDSP_maxmgvD = ~f{v^dl^dL}
	vDSP_maxmgvi = ~f{v^fl^f^LL}
	vDSP_maxmgviD = ~f{v^dl^d^LL}
	vDSP_maxv = ~f{v^fl^fL}
	vDSP_maxvD = ~f{v^dl^dL}
	vDSP_maxvi = ~f{v^fl^f^LL}
	vDSP_maxviD = ~f{v^dl^d^LL}
	vDSP_meamgv = ~f{v^fl^fL}
	vDSP_meamgvD = ~f{v^dl^dL}
	vDSP_meanv = ~f{v^fl^fL}
	vDSP_meanvD = ~f{v^dl^dL}
	vDSP_measqv = ~f{v^fl^fL}
	vDSP_measqvD = ~f{v^dl^dL}
	vDSP_minmgv = ~f{v^fl^fL}
	vDSP_minmgvD = ~f{v^dl^dL}
	vDSP_minmgvi = ~f{v^fl^f^LL}
	vDSP_minmgviD = ~f{v^dl^d^LL}
	vDSP_minv = ~f{v^fl^fL}
	vDSP_minvD = ~f{v^dl^dL}
	vDSP_minvi = ~f{v^fl^f^LL}
	vDSP_minviD = ~f{v^dl^d^LL}
	vDSP_mmov = ~f{v^f^fLLLL}
	vDSP_mmovD = ~f{v^d^dLLLL}
	vDSP_mmul = ~f{v^fl^fl^flLLL}
	vDSP_mmulD = ~f{v^dl^dl^dlLLL}
	vDSP_mtrans = ~f{v^fl^flLL}
	vDSP_mtransD = ~f{v^dl^dlLL}
	vDSP_mvessq = ~f{v^fl^fL}
	vDSP_mvessqD = ~f{v^dl^dL}
	vDSP_normalize = ~f{v^fl^fl^f^fL}
	vDSP_normalizeD = ~f{v^dl^dl^d^dL}
	vDSP_nzcros = ~f{v^flL^L^LL}
	vDSP_nzcrosD = ~f{v^dlL^L^LL}
	vDSP_polar = ~f{v^fl^flL}
	vDSP_polarD = ~f{v^dl^dlL}
	vDSP_rect = ~f{v^fl^flL}
	vDSP_rectD = ~f{v^dl^dlL}
	vDSP_rmsqv = ~f{v^fl^fL}
	vDSP_rmsqvD = ~f{v^dl^dL}
	vDSP_svdiv = ~f{v^f^fl^flL}
	vDSP_svdivD = ~f{v^d^dl^dlL}
	vDSP_sve = ~f{v^fl^fL}
	vDSP_sveD = ~f{v^dl^dL}
	vDSP_sve_svesq = ~f{v^fl^f^fL}
	vDSP_sve_svesqD = ~f{v^dl^d^dL}
	vDSP_svemg = ~f{v^fl^fL}
	vDSP_svemgD = ~f{v^dl^dL}
	vDSP_svesq = ~f{v^fl^fL}
	vDSP_svesqD = ~f{v^dl^dL}
	vDSP_svs = ~f{v^fl^fL}
	vDSP_svsD = ~f{v^dl^dL}
	vDSP_vaam = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vaamD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vabs = ~f{v^fl^flL}
	vDSP_vabsD = ~f{v^dl^dlL}
	vDSP_vabsi = ~f{v^il^ilL}
	vDSP_vadd = ~f{v^fl^fl^flL}
	vDSP_vaddD = ~f{v^dl^dl^dlL}
	vDSP_vaddi = ~f{v^il^il^ilL}
	vDSP_vaddsub = ~f{v^fl^fl^fl^flL}
	vDSP_vaddsubD = ~f{v^dl^dl^dl^dlL}
	vDSP_vam = ~f{v^fl^fl^fl^flL}
	vDSP_vamD = ~f{v^dl^dl^dl^dlL}
	vDSP_vasbm = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vasbmD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vasm = ~f{v^fl^fl^f^flL}
	vDSP_vasmD = ~f{v^dl^dl^d^dlL}
	vDSP_vavlin = ~f{v^fl^f^flL}
	vDSP_vavlinD = ~f{v^dl^d^dlL}
	vDSP_vclip = ~f{v^fl^f^f^flL}
	vDSP_vclipD = ~f{v^dl^d^d^dlL}
	vDSP_vclipc = ~f{v^fl^f^f^flL^L^L}
	vDSP_vclipcD = ~f{v^dl^d^d^dlL^L^L}
	vDSP_vclr = ~f{v^flL}
	vDSP_vclrD = ~f{v^dlL}
	vDSP_vcmprs = ~f{v^fl^fl^flL}
	vDSP_vcmprsD = ~f{v^dl^dl^dlL}
	vDSP_vdbcon = ~f{v^fl^f^flLI}
	vDSP_vdbconD = ~f{v^dl^d^dlLI}
	vDSP_vdist = ~f{v^fl^fl^flL}
	vDSP_vdistD = ~f{v^dl^dl^dlL}
	vDSP_vdiv = ~f{v^fl^fl^flL}
	vDSP_vdivD = ~f{v^dl^dl^dlL}
	vDSP_vdivi = ~f{v^il^il^ilL}
	vDSP_vdpsp = ~f{v^dl^flL}
	vDSP_venvlp = ~f{v^fl^fl^fl^flL}
	vDSP_venvlpD = ~f{v^dl^dl^dl^dlL}
	vDSP_veqvi = ~f{v^il^il^ilL}
	vDSP_vfill = ~f{v^f^flL}
	vDSP_vfillD = ~f{v^d^dlL}
	vDSP_vfilli = ~f{v^i^ilL}
	vDSP_vfix16 = ~f{v^fl^slL}
	vDSP_vfix16D = ~f{v^dl^slL}
	vDSP_vfix32 = ~f{v^fl^ilL}
	vDSP_vfix32D = ~f{v^dl^ilL}
	vDSP_vfix8 = ~f{v^fl^clL}
	vDSP_vfix8D = ~f{v^dl^clL}
	vDSP_vfixr16 = ~f{v^fl^slL}
	vDSP_vfixr16D = ~f{v^dl^slL}
	vDSP_vfixr32 = ~f{v^fl^ilL}
	vDSP_vfixr32D = ~f{v^dl^ilL}
	vDSP_vfixr8 = ~f{v^fl^clL}
	vDSP_vfixr8D = ~f{v^dl^clL}
	vDSP_vfixru16 = ~f{v^fl^SlL}
	vDSP_vfixru16D = ~f{v^dl^SlL}
	vDSP_vfixru32 = ~f{v^fl^IlL}
	vDSP_vfixru32D = ~f{v^dl^IlL}
	vDSP_vfixru8 = ~f{v^fl^ClL}
	vDSP_vfixru8D = ~f{v^dl^ClL}
	vDSP_vfixu16 = ~f{v^fl^SlL}
	vDSP_vfixu16D = ~f{v^dl^SlL}
	vDSP_vfixu32 = ~f{v^fl^IlL}
	vDSP_vfixu32D = ~f{v^dl^IlL}
	vDSP_vfixu8 = ~f{v^fl^ClL}
	vDSP_vfixu8D = ~f{v^dl^ClL}
	vDSP_vflt16 = ~f{v^sl^flL}
	vDSP_vflt16D = ~f{v^sl^dlL}
	vDSP_vflt24 = ~f{v^vl^flL}
	vDSP_vflt32 = ~f{v^il^flL}
	vDSP_vflt32D = ~f{v^il^dlL}
	vDSP_vflt8 = ~f{v^cl^flL}
	vDSP_vflt8D = ~f{v^cl^dlL}
	vDSP_vfltsm24 = ~f{v^vl^f^flL}
	vDSP_vfltsmu24 = ~f{v^vl^f^flL}
	vDSP_vfltu16 = ~f{v^Sl^flL}
	vDSP_vfltu16D = ~f{v^Sl^dlL}
	vDSP_vfltu24 = ~f{v^vl^flL}
	vDSP_vfltu32 = ~f{v^Il^flL}
	vDSP_vfltu32D = ~f{v^Il^dlL}
	vDSP_vfltu8 = ~f{v^Cl^flL}
	vDSP_vfltu8D = ~f{v^Cl^dlL}
	vDSP_vfrac = ~f{v^fl^flL}
	vDSP_vfracD = ~f{v^dl^dlL}
	vDSP_vgathr = ~f{v^f^Ll^flL}
	vDSP_vgathrD = ~f{v^d^Ll^dlL}
	vDSP_vgathra = ~f{v^^fl^flL}
	vDSP_vgathraD = ~f{v^^dl^dlL}
	vDSP_vgen = ~f{v^f^f^flL}
	vDSP_vgenD = ~f{v^d^d^dlL}
	vDSP_vgenp = ~f{v^fl^fl^flLL}
	vDSP_vgenpD = ~f{v^dl^dl^dlLL}
	vDSP_viclip = ~f{v^fl^f^f^flL}
	vDSP_viclipD = ~f{v^dl^d^d^dlL}
	vDSP_vindex = ~f{v^f^fl^flL}
	vDSP_vindexD = ~f{v^d^dl^dlL}
	vDSP_vintb = ~f{v^fl^fl^f^flL}
	vDSP_vintbD = ~f{v^dl^dl^d^dlL}
	vDSP_vlim = ~f{v^fl^f^f^flL}
	vDSP_vlimD = ~f{v^dl^d^d^dlL}
	vDSP_vlint = ~f{v^f^fl^flLL}
	vDSP_vlintD = ~f{v^d^dl^dlLL}
	vDSP_vma = ~f{v^fl^fl^fl^flL}
	vDSP_vmaD = ~f{v^dl^dl^dl^dlL}
	vDSP_vmax = ~f{v^fl^fl^flL}
	vDSP_vmaxD = ~f{v^dl^dl^dlL}
	vDSP_vmaxmg = ~f{v^fl^fl^flL}
	vDSP_vmaxmgD = ~f{v^dl^dl^dlL}
	vDSP_vmin = ~f{v^fl^fl^flL}
	vDSP_vminD = ~f{v^dl^dl^dlL}
	vDSP_vminmg = ~f{v^fl^fl^flL}
	vDSP_vminmgD = ~f{v^dl^dl^dlL}
	vDSP_vmma = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vmmaD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vmmsb = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vmmsbD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vmsa = ~f{v^fl^fl^f^flL}
	vDSP_vmsaD = ~f{v^dl^dl^d^dlL}
	vDSP_vmsb = ~f{v^fl^fl^fl^flL}
	vDSP_vmsbD = ~f{v^dl^dl^dl^dlL}
	vDSP_vmul = ~f{v^fl^fl^flL}
	vDSP_vmulD = ~f{v^dl^dl^dlL}
	vDSP_vnabs = ~f{v^fl^flL}
	vDSP_vnabsD = ~f{v^dl^dlL}
	vDSP_vneg = ~f{v^fl^flL}
	vDSP_vnegD = ~f{v^dl^dlL}
	vDSP_vpoly = ~f{v^fl^fl^flLL}
	vDSP_vpolyD = ~f{v^dl^dl^dlLL}
	vDSP_vpythg = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vpythgD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vqint = ~f{v^f^fl^flLL}
	vDSP_vqintD = ~f{v^d^dl^dlLL}
	vDSP_vramp = ~f{v^f^f^flL}
	vDSP_vrampD = ~f{v^d^d^dlL}
	vDSP_vrampmul = ~f{v^fl^f^f^flL}
	vDSP_vrampmul2 = ~f{v^f^fl^f^f^f^flL}
	vDSP_vrampmul2D = ~f{v^d^dl^d^d^d^dlL}
	vDSP_vrampmul2_s1_15 = ~f{v^s^sl^s^s^s^slL}
	vDSP_vrampmul2_s8_24 = ~f{v^i^il^i^i^i^ilL}
	vDSP_vrampmulD = ~f{v^dl^d^d^dlL}
	vDSP_vrampmul_s1_15 = ~f{v^sl^s^s^slL}
	vDSP_vrampmul_s8_24 = ~f{v^il^i^i^ilL}
	vDSP_vrampmuladd = ~f{v^fl^f^f^flL}
	vDSP_vrampmuladd2 = ~f{v^f^fl^f^f^f^flL}
	vDSP_vrampmuladd2D = ~f{v^d^dl^d^d^d^dlL}
	vDSP_vrampmuladd2_s1_15 = ~f{v^s^sl^s^s^s^slL}
	vDSP_vrampmuladd2_s8_24 = ~f{v^i^il^i^i^i^ilL}
	vDSP_vrampmuladdD = ~f{v^dl^d^d^dlL}
	vDSP_vrampmuladd_s1_15 = ~f{v^sl^s^s^slL}
	vDSP_vrampmuladd_s8_24 = ~f{v^il^i^i^ilL}
	vDSP_vrsum = ~f{v^fl^f^flL}
	vDSP_vrsumD = ~f{v^dl^d^dlL}
	vDSP_vrvrs = ~f{v^flL}
	vDSP_vrvrsD = ~f{v^dlL}
	vDSP_vsadd = ~f{v^fl^f^flL}
	vDSP_vsaddD = ~f{v^dl^d^dlL}
	vDSP_vsaddi = ~f{v^il^i^ilL}
	vDSP_vsbm = ~f{v^fl^fl^fl^flL}
	vDSP_vsbmD = ~f{v^dl^dl^dl^dlL}
	vDSP_vsbsbm = ~f{v^fl^fl^fl^fl^flL}
	vDSP_vsbsbmD = ~f{v^dl^dl^dl^dl^dlL}
	vDSP_vsbsm = ~f{v^fl^fl^f^flL}
	vDSP_vsbsmD = ~f{v^dl^dl^d^dlL}
	vDSP_vsdiv = ~f{v^fl^f^flL}
	vDSP_vsdivD = ~f{v^dl^d^dlL}
	vDSP_vsdivi = ~f{v^il^i^ilL}
	vDSP_vsimps = ~f{v^fl^f^flL}
	vDSP_vsimpsD = ~f{v^dl^d^dlL}
	vDSP_vsma = ~f{v^fl^f^fl^flL}
	vDSP_vsmaD = ~f{v^dl^d^dl^dlL}
	vDSP_vsmfix24 = ~f{v^fl^f^vlL}
	vDSP_vsmfixu24 = ~f{v^fl^f^vlL}
	vDSP_vsmsa = ~f{v^fl^f^f^flL}
	vDSP_vsmsaD = ~f{v^dl^d^d^dlL}
	vDSP_vsmsb = ~f{v^fl^f^fl^flL}
	vDSP_vsmsbD = ~f{v^dl^d^dl^dlL}
	vDSP_vsmsma = ~f{v^fl^f^fl^f^flL}
	vDSP_vsmsmaD = ~f{v^dl^d^dl^d^dlL}
	vDSP_vsmul = ~f{v^fl^f^flL}
	vDSP_vsmulD = ~f{v^dl^d^dlL}
	vDSP_vsort = ~f{v^fLi}
	vDSP_vsortD = ~f{v^dLi}
	vDSP_vsorti = ~f{v^f^L^LLi}
	vDSP_vsortiD = ~f{v^d^L^LLi}
	vDSP_vspdp = ~f{v^fl^dlL}
	vDSP_vsq = ~f{v^fl^flL}
	vDSP_vsqD = ~f{v^dl^dlL}
	vDSP_vssq = ~f{v^fl^flL}
	vDSP_vssqD = ~f{v^dl^dlL}
	vDSP_vsub = ~f{v^fl^fl^flL}
	vDSP_vsubD = ~f{v^dl^dl^dlL}
	vDSP_vswap = ~f{v^fl^flL}
	vDSP_vswapD = ~f{v^dl^dlL}
	vDSP_vswmax = ~f{v^fl^flLL}
	vDSP_vswmaxD = ~f{v^dl^dlLL}
	vDSP_vswsum = ~f{v^fl^flLL}
	vDSP_vswsumD = ~f{v^dl^dlLL}
	vDSP_vtabi = ~f{v^fl^f^f^fL^flL}
	vDSP_vtabiD = ~f{v^dl^d^d^dL^dlL}
	vDSP_vthr = ~f{v^fl^f^flL}
	vDSP_vthrD = ~f{v^dl^d^dlL}
	vDSP_vthres = ~f{v^fl^f^flL}
	vDSP_vthresD = ~f{v^dl^d^dlL}
	vDSP_vthrsc = ~f{v^fl^f^f^flL}
	vDSP_vthrscD = ~f{v^dl^d^d^dlL}
	vDSP_vtmerg = ~f{v^fl^fl^flL}
	vDSP_vtmergD = ~f{v^dl^dl^dlL}
	vDSP_vtrapz = ~f{v^fl^f^flL}
	vDSP_vtrapzD = ~f{v^dl^d^dlL}
	vDSP_wiener = ~f{vL^f^f^f^fi^i}
	vDSP_wienerD = ~f{vL^d^d^d^di^i}
	vDSP_zaspec = ~f{v^v^fL}
	vDSP_zaspecD = ~f{v^v^dL}
	vDSP_zcoher = ~f{v^f^f^v^fL}
	vDSP_zcoherD = ~f{v^d^d^v^dL}
	vDSP_zconv = ~f{v^vl^vl^vlLL}
	vDSP_zconvD = ~f{v^vl^vl^vlLL}
	vDSP_zcspec = ~f{v^v^v^vL}
	vDSP_zcspecD = ~f{v^v^v^vL}
	vDSP_zdotpr = ~f{v^vl^vl^vL}
	vDSP_zdotprD = ~f{v^vl^vl^vL}
	vDSP_zidotpr = ~f{v^vl^vl^vL}
	vDSP_zidotprD = ~f{v^vl^vl^vL}
	vDSP_zmma = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmmaD = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmms = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmmsD = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmmul = ~f{v^vl^vl^vlLLL}
	vDSP_zmmulD = ~f{v^vl^vl^vlLLL}
	vDSP_zmsm = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zmsmD = ~f{v^vl^vl^vl^vlLLL}
	vDSP_zrdesamp = ~f{v^vl^f^vLL}
	vDSP_zrdesampD = ~f{v^vl^d^vLL}
	vDSP_zrdotpr = ~f{v^vl^fl^vL}
	vDSP_zrdotprD = ~f{v^vl^dl^vL}
	vDSP_zrvadd = ~f{v^vl^fl^vlL}
	vDSP_zrvaddD = ~f{v^vl^dl^vlL}
	vDSP_zrvdiv = ~f{v^vl^fl^vlL}
	vDSP_zrvdivD = ~f{v^vl^dl^vlL}
	vDSP_zrvmul = ~f{v^vl^fl^vlL}
	vDSP_zrvmulD = ~f{v^vl^dl^vlL}
	vDSP_zrvsub = ~f{v^vl^fl^vlL}
	vDSP_zrvsubD = ~f{v^vl^dl^vlL}
	vDSP_ztoc = ~f{v^vl^vlL}
	vDSP_ztocD = ~f{v^vl^vlL}
	vDSP_ztrans = ~f{v^f^v^vL}
	vDSP_ztransD = ~f{v^d^v^vL}
	vDSP_zvabs = ~f{v^vl^flL}
	vDSP_zvabsD = ~f{v^vl^dlL}
	vDSP_zvadd = ~f{v^vl^vl^vlL}
	vDSP_zvaddD = ~f{v^vl^vl^vlL}
	vDSP_zvcma = ~f{v^vl^vl^vl^vlL}
	vDSP_zvcmaD = ~f{v^vl^vl^vl^vlL}
	vDSP_zvcmul = ~f{v^vl^vl^vlL}
	vDSP_zvcmulD = ~f{v^vl^vl^vlL}
	vDSP_zvconj = ~f{v^vl^vlL}
	vDSP_zvconjD = ~f{v^vl^vlL}
	vDSP_zvdiv = ~f{v^vl^vl^vlL}
	vDSP_zvdivD = ~f{v^vl^vl^vlL}
	vDSP_zvfill = ~f{v^v^vlL}
	vDSP_zvfillD = ~f{v^v^vlL}
	vDSP_zvma = ~f{v^vl^vl^vl^vlL}
	vDSP_zvmaD = ~f{v^vl^vl^vl^vlL}
	vDSP_zvmags = ~f{v^vl^flL}
	vDSP_zvmagsD = ~f{v^vl^dlL}
	vDSP_zvmgsa = ~f{v^vl^fl^flL}
	vDSP_zvmgsaD = ~f{v^vl^dl^dlL}
	vDSP_zvmmaa = ~f{v^vl^vl^vl^vl^vl^vlL}
	vDSP_zvmmaaD = ~f{v^vl^vl^vl^vl^vl^vlL}
	vDSP_zvmov = ~f{v^vl^vlL}
	vDSP_zvmovD = ~f{v^vl^vlL}
	vDSP_zvmul = ~f{v^vl^vl^vlLi}
	vDSP_zvmulD = ~f{v^vl^vl^vlLi}
	vDSP_zvneg = ~f{v^vl^vlL}
	vDSP_zvnegD = ~f{v^vl^vlL}
	vDSP_zvphas = ~f{v^vl^flL}
	vDSP_zvphasD = ~f{v^vl^dlL}
	vDSP_zvsma = ~f{v^vl^v^vl^vlL}
	vDSP_zvsmaD = ~f{v^vl^v^vl^vlL}
	vDSP_zvsub = ~f{v^vl^vl^vlL}
	vDSP_zvsubD = ~f{v^vl^vl^vlL}
	vDSP_zvzsml = ~f{v^vl^v^vlL}
	vDSP_zvzsmlD = ~f{v^vl^v^vlL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_monetary.h
	strfmon_l = ~f{l^cL^v^c$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/math.h
	__tg_acos = ~f{~V{8d}~V{8d}}
	__tg_acosh = ~f{~V{8d}~V{8d}}
	__tg_asin = ~f{~V{8d}~V{8d}}
	__tg_asinh = ~f{~V{8d}~V{8d}}
	__tg_atan = ~f{~V{8d}~V{8d}}
	__tg_atan2 = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_atanh = ~f{~V{8d}~V{8d}}
	__tg_cbrt = ~f{~V{8d}~V{8d}}
	__tg_ceil = ~f{~V{8d}~V{8d}}
	__tg_copysign = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_cos = ~f{~V{8d}~V{8d}}
	__tg_cosh = ~f{~V{8d}~V{8d}}
	__tg_cospi = ~f{~V{8d}~V{8d}}
	__tg_erf = ~f{~V{8d}~V{8d}}
	__tg_erfc = ~f{~V{8d}~V{8d}}
	__tg_exp = ~f{~V{8d}~V{8d}}
	__tg_exp10 = ~f{~V{8d}~V{8d}}
	__tg_exp2 = ~f{~V{8d}~V{8d}}
	__tg_expm1 = ~f{~V{8d}~V{8d}}
	__tg_fabs = ~f{~V{8d}~V{8d}}
	__tg_fdim = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_floor = ~f{~V{8d}~V{8d}}
	__tg_fma = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
	__tg_fmax = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_fmin = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_fmod = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_hypot = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_log = ~f{~V{8d}~V{8d}}
	__tg_log10 = ~f{~V{8d}~V{8d}}
	__tg_log1p = ~f{~V{8d}~V{8d}}
	__tg_log2 = ~f{~V{8d}~V{8d}}
	__tg_nextafter = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_pow = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_promote = ~f{~V{8d}~V{8d}}
	__tg_remainder = ~f{~V{8d}~V{8d}~V{8d}}
	__tg_rint = ~f{~V{8d}~V{8d}}
	__tg_round = ~f{~V{8d}~V{8d}}
	__tg_sin = ~f{~V{8d}~V{8d}}
	__tg_sinh = ~f{~V{8d}~V{8d}}
	__tg_sinpi = ~f{~V{8d}~V{8d}}
	__tg_sqrt = ~f{~V{8d}~V{8d}}
	__tg_tan = ~f{~V{8d}~V{8d}}
	__tg_tanh = ~f{~V{8d}~V{8d}}
	__tg_tanpi = ~f{~V{8d}~V{8d}}
	__tg_tgamma = ~f{~V{8d}~V{8d}}
	__tg_trunc = ~f{~V{8d}~V{8d}}
	_simd_acos_d2 = ~f{~V{2d}~V{2d}}
	_simd_acos_f4 = ~f{~V{4f}~V{4f}}
	_simd_acosh_d2 = ~f{~V{2d}~V{2d}}
	_simd_acosh_f4 = ~f{~V{4f}~V{4f}}
	_simd_asin_d2 = ~f{~V{2d}~V{2d}}
	_simd_asin_f4 = ~f{~V{4f}~V{4f}}
	_simd_asinh_d2 = ~f{~V{2d}~V{2d}}
	_simd_asinh_f4 = ~f{~V{4f}~V{4f}}
	_simd_atan2_d2 = ~f{~V{2d}~V{2d}~V{2d}}
	_simd_atan2_f4 = ~f{~V{4f}~V{4f}~V{4f}}
	_simd_atan_d2 = ~f{~V{2d}~V{2d}}
	_simd_atan_f4 = ~f{~V{4f}~V{4f}}
	_simd_atanh_d2 = ~f{~V{2d}~V{2d}}
	_simd_atanh_f4 = ~f{~V{4f}~V{4f}}
	_simd_cbrt_d2 = ~f{~V{2d}~V{2d}}
	_simd_cbrt_f4 = ~f{~V{4f}~V{4f}}
	_simd_cos_d2 = ~f{~V{2d}~V{2d}}
	_simd_cos_f4 = ~f{~V{4f}~V{4f}}
	_simd_cosh_d2 = ~f{~V{2d}~V{2d}}
	_simd_cosh_f4 = ~f{~V{4f}~V{4f}}
	_simd_cospi_d2 = ~f{~V{2d}~V{2d}}
	_simd_cospi_f4 = ~f{~V{4f}~V{4f}}
	_simd_erf_d2 = ~f{~V{2d}~V{2d}}
	_simd_erf_f4 = ~f{~V{4f}~V{4f}}
	_simd_erfc_d2 = ~f{~V{2d}~V{2d}}
	_simd_erfc_f4 = ~f{~V{4f}~V{4f}}
	_simd_exp10_d2 = ~f{~V{2d}~V{2d}}
	_simd_exp10_f4 = ~f{~V{4f}~V{4f}}
	_simd_exp2_d2 = ~f{~V{2d}~V{2d}}
	_simd_exp2_f4 = ~f{~V{4f}~V{4f}}
	_simd_exp_d2 = ~f{~V{2d}~V{2d}}
	_simd_exp_f4 = ~f{~V{4f}~V{4f}}
	_simd_expm1_d2 = ~f{~V{2d}~V{2d}}
	_simd_expm1_f4 = ~f{~V{4f}~V{4f}}
	_simd_fma_d2 = ~f{~V{2d}~V{2d}~V{2d}~V{2d}}
	_simd_fma_f4 = ~f{~V{4f}~V{4f}~V{4f}~V{4f}}
	_simd_fmod_d2 = ~f{~V{2d}~V{2d}~V{2d}}
	_simd_fmod_f4 = ~f{~V{4f}~V{4f}~V{4f}}
	_simd_hypot_d2 = ~f{~V{2d}~V{2d}~V{2d}}
	_simd_hypot_f4 = ~f{~V{4f}~V{4f}~V{4f}}
	_simd_log10_d2 = ~f{~V{2d}~V{2d}}
	_simd_log10_f4 = ~f{~V{4f}~V{4f}}
	_simd_log1p_d2 = ~f{~V{2d}~V{2d}}
	_simd_log1p_f4 = ~f{~V{4f}~V{4f}}
	_simd_log2_d2 = ~f{~V{2d}~V{2d}}
	_simd_log2_f4 = ~f{~V{4f}~V{4f}}
	_simd_log_d2 = ~f{~V{2d}~V{2d}}
	_simd_log_f4 = ~f{~V{4f}~V{4f}}
	_simd_nextafter_d2 = ~f{~V{2d}~V{2d}~V{2d}}
	_simd_nextafter_f4 = ~f{~V{4f}~V{4f}~V{4f}}
	_simd_pow_d2 = ~f{~V{2d}~V{2d}~V{2d}}
	_simd_pow_f4 = ~f{~V{4f}~V{4f}~V{4f}}
	_simd_remainder_d2 = ~f{~V{2d}~V{2d}~V{2d}}
	_simd_remainder_f4 = ~f{~V{4f}~V{4f}~V{4f}}
	_simd_round_d2 = ~f{~V{2d}~V{2d}}
	_simd_round_f4 = ~f{~V{4f}~V{4f}}
	_simd_sin_d2 = ~f{~V{2d}~V{2d}}
	_simd_sin_f4 = ~f{~V{4f}~V{4f}}
	_simd_sinh_d2 = ~f{~V{2d}~V{2d}}
	_simd_sinh_f4 = ~f{~V{4f}~V{4f}}
	_simd_sinpi_d2 = ~f{~V{2d}~V{2d}}
	_simd_sinpi_f4 = ~f{~V{4f}~V{4f}}
	_simd_tan_d2 = ~f{~V{2d}~V{2d}}
	_simd_tan_f4 = ~f{~V{4f}~V{4f}}
	_simd_tanh_d2 = ~f{~V{2d}~V{2d}}
	_simd_tanh_f4 = ~f{~V{4f}~V{4f}}
	_simd_tanpi_d2 = ~f{~V{2d}~V{2d}}
	_simd_tanpi_f4 = ~f{~V{4f}~V{4f}}
	_simd_tgamma_d2 = ~f{~V{2d}~V{2d}}
	_simd_tgamma_f4 = ~f{~V{4f}~V{4f}}
	simd_muladd = ~f{~V{8d}~V{8d}~V{8d}~V{8d}}
/usr/local/lib/clang/9.0.1/include/avx512cdintrin.h
	_mm512_broadcastmb_epi64 = ~f{~V{8q}C}
	_mm512_broadcastmw_epi32 = ~f{~V{8q}S}
	_mm512_conflict_epi32 = ~f{~V{8q}~V{8q}}
	_mm512_conflict_epi64 = ~f{~V{8q}~V{8q}}
	_mm512_lzcnt_epi32 = ~f{~V{8q}~V{8q}}
	_mm512_lzcnt_epi64 = ~f{~V{8q}~V{8q}}
	_mm512_mask_conflict_epi32 = ~f{~V{8q}~V{8q}S~V{8q}}
	_mm512_mask_conflict_epi64 = ~f{~V{8q}~V{8q}C~V{8q}}
	_mm512_mask_lzcnt_epi32 = ~f{~V{8q}~V{8q}S~V{8q}}
	_mm512_mask_lzcnt_epi64 = ~f{~V{8q}~V{8q}C~V{8q}}
	_mm512_maskz_conflict_epi32 = ~f{~V{8q}S~V{8q}}
	_mm512_maskz_conflict_epi64 = ~f{~V{8q}C~V{8q}}
	_mm512_maskz_lzcnt_epi32 = ~f{~V{8q}S~V{8q}}
	_mm512_maskz_lzcnt_epi64 = ~f{~V{8q}C~V{8q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/list.h
	xmlLinkGetData = ~f{^v^v}
	xmlListAppend = ~f{i^v^v}
	xmlListClear = ~f{v^v}
	xmlListCopy = ~f{i^v^v}
	xmlListCreate = ~f{^v^~f{v^v}^~f{i^v^v}}
	xmlListDelete = ~f{v^v}
	xmlListDup = ~f{^v^v}
	xmlListEmpty = ~f{i^v}
	xmlListEnd = ~f{^v^v}
	xmlListFront = ~f{^v^v}
	xmlListInsert = ~f{i^v^v}
	xmlListMerge = ~f{v^v^v}
	xmlListPopBack = ~f{v^v}
	xmlListPopFront = ~f{v^v}
	xmlListPushBack = ~f{i^v^v}
	xmlListPushFront = ~f{i^v^v}
	xmlListRemoveAll = ~f{i^v^v}
	xmlListRemoveFirst = ~f{i^v^v}
	xmlListRemoveLast = ~f{i^v^v}
	xmlListReverse = ~f{v^v}
	xmlListReverseSearch = ~f{^v^v^v}
	xmlListReverseWalk = ~f{v^v^~f{i^v^v}^v}
	xmlListSearch = ~f{^v^v^v}
	xmlListSize = ~f{i^v}
	xmlListSort = ~f{v^v}
	xmlListWalk = ~f{v^v^~f{i^v^v}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/ucpmap.h
	ucpmap_get = ~f{I^vi}
	ucpmap_getRange = ~f{i^viII^~f{I^vI}^v^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/tcp_options.h
	nw_protocol_copy_tcp_definition = ~f{@}
	nw_protocol_metadata_is_tcp = ~f{B@}
	nw_tcp_create_options = ~f{@}
	nw_tcp_get_available_receive_buffer = ~f{I@}
	nw_tcp_get_available_send_buffer = ~f{I@}
	nw_tcp_options_set_connection_timeout = ~f{v@I}
	nw_tcp_options_set_disable_ack_stretching = ~f{v@B}
	nw_tcp_options_set_disable_ecn = ~f{v@B}
	nw_tcp_options_set_enable_fast_open = ~f{v@B}
	nw_tcp_options_set_enable_keepalive = ~f{v@B}
	nw_tcp_options_set_keepalive_count = ~f{v@I}
	nw_tcp_options_set_keepalive_idle_time = ~f{v@I}
	nw_tcp_options_set_keepalive_interval = ~f{v@I}
	nw_tcp_options_set_maximum_segment_size = ~f{v@I}
	nw_tcp_options_set_no_delay = ~f{v@B}
	nw_tcp_options_set_no_options = ~f{v@B}
	nw_tcp_options_set_no_push = ~f{v@B}
	nw_tcp_options_set_persist_timeout = ~f{v@I}
	nw_tcp_options_set_retransmit_connection_drop_time = ~f{v@I}
	nw_tcp_options_set_retransmit_fin_drop = ~f{v@B}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/logic.h
	simd_all = ~f{B~V{8L}}
	simd_any = ~f{B~V{8L}}
	simd_bitselect = ~f{~V{8d}~V{8d}~V{8d}~V{8l}}
	simd_select = ~f{~V{8d}~V{8d}~V{8d}~V{8l}}
/usr/local/lib/clang/9.0.1/include/immintrin.h
	_loadbe_i16 = ~f{s^v}
	_loadbe_i32 = ~f{i^v}
	_loadbe_i64 = ~f{q^v}
	_rdpid_u32 = ~f{I}
	_rdrand16_step = ~f{i^S}
	_rdrand32_step = ~f{i^I}
	_rdrand64_step = ~f{i^Q}
	_readfsbase_u32 = ~f{I}
	_readfsbase_u64 = ~f{Q}
	_readgsbase_u32 = ~f{I}
	_readgsbase_u64 = ~f{Q}
	_storebe_i16 = ~f{v^vs}
	_storebe_i32 = ~f{v^vi}
	_storebe_i64 = ~f{v^vq}
	_writefsbase_u32 = ~f{vI}
	_writefsbase_u64 = ~f{vQ}
	_writegsbase_u32 = ~f{vI}
	_writegsbase_u64 = ~f{vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Geometry.h
	vImageAffineWarpCG_ARGB16S = ~f{l^v^v^v^v^sI}
	vImageAffineWarpCG_ARGB16U = ~f{l^v^v^v^v^SI}
	vImageAffineWarpCG_ARGB8888 = ~f{l^v^v^v^v^CI}
	vImageAffineWarpCG_ARGBFFFF = ~f{l^v^v^v^v^fI}
	vImageAffineWarpCG_Planar8 = ~f{l^v^v^v^vCI}
	vImageAffineWarpCG_PlanarF = ~f{l^v^v^v^vfI}
	vImageAffineWarpD_ARGB16S = ~f{l^v^v^v^v^sI}
	vImageAffineWarpD_ARGB16U = ~f{l^v^v^v^v^SI}
	vImageAffineWarpD_ARGB8888 = ~f{l^v^v^v^v^CI}
	vImageAffineWarpD_ARGBFFFF = ~f{l^v^v^v^v^fI}
	vImageAffineWarpD_Planar8 = ~f{l^v^v^v^vCI}
	vImageAffineWarpD_PlanarF = ~f{l^v^v^v^vfI}
	vImageAffineWarp_ARGB16S = ~f{l^v^v^v^v^sI}
	vImageAffineWarp_ARGB16U = ~f{l^v^v^v^v^SI}
	vImageAffineWarp_ARGB8888 = ~f{l^v^v^v^v^CI}
	vImageAffineWarp_ARGBFFFF = ~f{l^v^v^v^v^fI}
	vImageAffineWarp_Planar8 = ~f{l^v^v^v^vCI}
	vImageAffineWarp_PlanarF = ~f{l^v^v^v^vfI}
	vImageDestroyResamplingFilter = ~f{v^v}
	vImageGetResamplingFilterExtent = ~f{L^vI}
	vImageGetResamplingFilterSize = ~f{Lf^~f{v^f^fL^v}fI}
	vImageHorizontalReflect_ARGB16S = ~f{l^v^vI}
	vImageHorizontalReflect_ARGB16U = ~f{l^v^vI}
	vImageHorizontalReflect_ARGB8888 = ~f{l^v^vI}
	vImageHorizontalReflect_ARGBFFFF = ~f{l^v^vI}
	vImageHorizontalReflect_Planar16U = ~f{l^v^vI}
	vImageHorizontalReflect_Planar8 = ~f{l^v^vI}
	vImageHorizontalReflect_PlanarF = ~f{l^v^vI}
	vImageHorizontalShearD_ARGB16S = ~f{l^v^vLLdd^v^sI}
	vImageHorizontalShearD_ARGB16U = ~f{l^v^vLLdd^v^SI}
	vImageHorizontalShearD_ARGB8888 = ~f{l^v^vLLdd^v^CI}
	vImageHorizontalShearD_ARGBFFFF = ~f{l^v^vLLdd^v^fI}
	vImageHorizontalShearD_Planar8 = ~f{l^v^vLLdd^vCI}
	vImageHorizontalShearD_PlanarF = ~f{l^v^vLLdd^vfI}
	vImageHorizontalShear_ARGB16S = ~f{l^v^vLLff^v^sI}
	vImageHorizontalShear_ARGB16U = ~f{l^v^vLLff^v^SI}
	vImageHorizontalShear_ARGB8888 = ~f{l^v^vLLff^v^CI}
	vImageHorizontalShear_ARGBFFFF = ~f{l^v^vLLff^v^fI}
	vImageHorizontalShear_CbCr16U = ~f{l^v^vLLff^v^SI}
	vImageHorizontalShear_CbCr8 = ~f{l^v^vLLff^v^CI}
	vImageHorizontalShear_Planar16S = ~f{l^v^vLLff^vsI}
	vImageHorizontalShear_Planar16U = ~f{l^v^vLLff^vSI}
	vImageHorizontalShear_Planar8 = ~f{l^v^vLLff^vCI}
	vImageHorizontalShear_PlanarF = ~f{l^v^vLLff^vfI}
	vImageHorizontalShear_XRGB2101010W = ~f{l^v^vLLff^vII}
	vImageNewResamplingFilter = ~f{^vfI}
	vImageNewResamplingFilterForFunctionUsingBuffer = ~f{l^vf^~f{v^f^fL^v}f^vI}
	vImageRotate90_ARGB16S = ~f{l^v^vC^sI}
	vImageRotate90_ARGB16U = ~f{l^v^vC^SI}
	vImageRotate90_ARGB8888 = ~f{l^v^vC^CI}
	vImageRotate90_ARGBFFFF = ~f{l^v^vC^fI}
	vImageRotate90_Planar16U = ~f{l^v^vCSI}
	vImageRotate90_Planar8 = ~f{l^v^vCCI}
	vImageRotate90_PlanarF = ~f{l^v^vCfI}
	vImageRotate_ARGB16S = ~f{l^v^v^vf^sI}
	vImageRotate_ARGB16U = ~f{l^v^v^vf^SI}
	vImageRotate_ARGB8888 = ~f{l^v^v^vf^CI}
	vImageRotate_ARGBFFFF = ~f{l^v^v^vf^fI}
	vImageRotate_Planar8 = ~f{l^v^v^vfCI}
	vImageRotate_PlanarF = ~f{l^v^v^vffI}
	vImageScale_ARGB16S = ~f{l^v^v^vI}
	vImageScale_ARGB16U = ~f{l^v^v^vI}
	vImageScale_ARGB8888 = ~f{l^v^v^vI}
	vImageScale_ARGBFFFF = ~f{l^v^v^vI}
	vImageScale_CbCr16U = ~f{l^v^v^vI}
	vImageScale_CbCr8 = ~f{l^v^v^vI}
	vImageScale_Planar16S = ~f{l^v^v^vI}
	vImageScale_Planar16U = ~f{l^v^v^vI}
	vImageScale_Planar8 = ~f{l^v^v^vI}
	vImageScale_PlanarF = ~f{l^v^v^vI}
	vImageScale_XRGB2101010W = ~f{l^v^v^vI}
	vImageVerticalReflect_ARGB16S = ~f{l^v^vI}
	vImageVerticalReflect_ARGB16U = ~f{l^v^vI}
	vImageVerticalReflect_ARGB8888 = ~f{l^v^vI}
	vImageVerticalReflect_ARGBFFFF = ~f{l^v^vI}
	vImageVerticalReflect_Planar16U = ~f{l^v^vI}
	vImageVerticalReflect_Planar8 = ~f{l^v^vI}
	vImageVerticalReflect_PlanarF = ~f{l^v^vI}
	vImageVerticalShearD_ARGB16S = ~f{l^v^vLLdd^v^sI}
	vImageVerticalShearD_ARGB16U = ~f{l^v^vLLdd^v^SI}
	vImageVerticalShearD_ARGB8888 = ~f{l^v^vLLdd^v^CI}
	vImageVerticalShearD_ARGBFFFF = ~f{l^v^vLLdd^v^fI}
	vImageVerticalShearD_Planar8 = ~f{l^v^vLLdd^vCI}
	vImageVerticalShearD_PlanarF = ~f{l^v^vLLdd^vfI}
	vImageVerticalShear_ARGB16S = ~f{l^v^vLLff^v^sI}
	vImageVerticalShear_ARGB16U = ~f{l^v^vLLff^v^SI}
	vImageVerticalShear_ARGB8888 = ~f{l^v^vLLff^v^CI}
	vImageVerticalShear_ARGBFFFF = ~f{l^v^vLLff^v^fI}
	vImageVerticalShear_CbCr16U = ~f{l^v^vLLff^v^SI}
	vImageVerticalShear_CbCr8 = ~f{l^v^vLLff^v^CI}
	vImageVerticalShear_Planar16S = ~f{l^v^vLLff^vsI}
	vImageVerticalShear_Planar16U = ~f{l^v^vLLff^vSI}
	vImageVerticalShear_Planar8 = ~f{l^v^vLLff^vCI}
	vImageVerticalShear_PlanarF = ~f{l^v^vLLff^vfI}
	vImageVerticalShear_XRGB2101010W = ~f{l^v^vLLff^vII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/rpc.h
	bindresvport = ~f{ii^v}
	bindresvport_sa = ~f{ii^v}
/usr/local/lib/clang/9.0.1/include/xsavesintrin.h
	_xrstors = ~f{v^vQ}
	_xrstors64 = ~f{v^vQ}
	_xsaves = ~f{v^vQ}
	_xsaves64 = ~f{v^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFArray.h
	CFArrayAppendArray = ~f{v^v^v{=ll}}
	CFArrayAppendValue = ~f{v^v^v}
	CFArrayApplyFunction = ~f{v^v{=ll}^~f{v^v^v}^v}
	CFArrayBSearchValues = ~f{l^v{=ll}^v^~f{l^v^v^v}^v}
	CFArrayContainsValue = ~f{C^v{=ll}^v}
	CFArrayCreate = ~f{^v^v^^vl^v}
	CFArrayCreateCopy = ~f{^v^v^v}
	CFArrayCreateMutable = ~f{^v^vl^v}
	CFArrayCreateMutableCopy = ~f{^v^vl^v}
	CFArrayExchangeValuesAtIndices = ~f{v^vll}
	CFArrayGetCount = ~f{l^v}
	CFArrayGetCountOfValue = ~f{l^v{=ll}^v}
	CFArrayGetFirstIndexOfValue = ~f{l^v{=ll}^v}
	CFArrayGetLastIndexOfValue = ~f{l^v{=ll}^v}
	CFArrayGetTypeID = ~f{L}
	CFArrayGetValueAtIndex = ~f{^v^vl}
	CFArrayGetValues = ~f{v^v{=ll}^^v}
	CFArrayInsertValueAtIndex = ~f{v^vl^v}
	CFArrayRemoveAllValues = ~f{v^v}
	CFArrayRemoveValueAtIndex = ~f{v^vl}
	CFArrayReplaceValues = ~f{v^v{=ll}^^vl}
	CFArraySetValueAtIndex = ~f{v^vl^v}
	CFArraySortValues = ~f{v^v{=ll}^~f{l^v^v^v}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCDynamicStoreCopySpecific.h
	SCDynamicStoreCopyComputerName = ~f{^v^v^I}
	SCDynamicStoreCopyConsoleUser = ~f{^v^v^I^I}
	SCDynamicStoreCopyLocalHostName = ~f{^v^v}
	SCDynamicStoreCopyLocation = ~f{^v^v}
	SCDynamicStoreCopyProxies = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_langinfo.h
	nl_langinfo_l = ~f{^ci^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFAttributedString.h
	CFAttributedStringBeginEditing = ~f{v^v}
	CFAttributedStringCreate = ~f{^v^v^v^v}
	CFAttributedStringCreateCopy = ~f{^v^v^v}
	CFAttributedStringCreateMutable = ~f{^v^vl}
	CFAttributedStringCreateMutableCopy = ~f{^v^vl^v}
	CFAttributedStringCreateWithSubstring = ~f{^v^v^v{=ll}}
	CFAttributedStringEndEditing = ~f{v^v}
	CFAttributedStringGetAttribute = ~f{^v^vl^v^v}
	CFAttributedStringGetAttributeAndLongestEffectiveRange = ~f{^v^vl^v{=ll}^v}
	CFAttributedStringGetAttributes = ~f{^v^vl^v}
	CFAttributedStringGetAttributesAndLongestEffectiveRange = ~f{^v^vl{=ll}^v}
	CFAttributedStringGetLength = ~f{l^v}
	CFAttributedStringGetMutableString = ~f{^v^v}
	CFAttributedStringGetString = ~f{^v^v}
	CFAttributedStringGetTypeID = ~f{L}
	CFAttributedStringRemoveAttribute = ~f{v^v{=ll}^v}
	CFAttributedStringReplaceAttributedString = ~f{v^v{=ll}^v}
	CFAttributedStringReplaceString = ~f{v^v{=ll}^v}
	CFAttributedStringSetAttribute = ~f{v^v{=ll}^v^v}
	CFAttributedStringSetAttributes = ~f{v^v{=ll}^vC}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGBitmapContext.h
	CGBitmapContextCreate = ~f{^v^vLLLL^vI}
	CGBitmapContextCreateImage = ~f{^v^v}
	CGBitmapContextCreateWithData = ~f{^v^vLLLL^vI^~f{v^v^v}^v}
	CGBitmapContextGetAlphaInfo = ~f{I^v}
	CGBitmapContextGetBitmapInfo = ~f{I^v}
	CGBitmapContextGetBitsPerComponent = ~f{L^v}
	CGBitmapContextGetBitsPerPixel = ~f{L^v}
	CGBitmapContextGetBytesPerRow = ~f{L^v}
	CGBitmapContextGetColorSpace = ~f{^v^v}
	CGBitmapContextGetData = ~f{^v^v}
	CGBitmapContextGetHeight = ~f{L^v}
	CGBitmapContextGetWidth = ~f{L^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVHostTime.h
	CVGetCurrentHostTime = ~f{Q}
	CVGetHostClockFrequency = ~f{d}
	CVGetHostClockMinimumTimeDelta = ~f{I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/ipc.h
	ftok = ~f{i^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSByteOrder.h
	NSConvertHostDoubleToSwapped = ~f{{=Q}d}
	NSConvertHostFloatToSwapped = ~f{{=I}f}
	NSConvertSwappedDoubleToHost = ~f{d{=Q}}
	NSConvertSwappedFloatToHost = ~f{f{=I}}
	NSHostByteOrder = ~f{l}
	NSSwapBigDoubleToHost = ~f{d{=Q}}
	NSSwapBigFloatToHost = ~f{f{=I}}
	NSSwapBigIntToHost = ~f{II}
	NSSwapBigLongLongToHost = ~f{QQ}
	NSSwapBigLongToHost = ~f{LL}
	NSSwapBigShortToHost = ~f{SS}
	NSSwapDouble = ~f{{=Q}{=Q}}
	NSSwapFloat = ~f{{=I}{=I}}
	NSSwapHostDoubleToBig = ~f{{=Q}d}
	NSSwapHostDoubleToLittle = ~f{{=Q}d}
	NSSwapHostFloatToBig = ~f{{=I}f}
	NSSwapHostFloatToLittle = ~f{{=I}f}
	NSSwapHostIntToBig = ~f{II}
	NSSwapHostIntToLittle = ~f{II}
	NSSwapHostLongLongToBig = ~f{QQ}
	NSSwapHostLongLongToLittle = ~f{QQ}
	NSSwapHostLongToBig = ~f{LL}
	NSSwapHostLongToLittle = ~f{LL}
	NSSwapHostShortToBig = ~f{SS}
	NSSwapHostShortToLittle = ~f{SS}
	NSSwapInt = ~f{II}
	NSSwapLittleDoubleToHost = ~f{d{=Q}}
	NSSwapLittleFloatToHost = ~f{f{=I}}
	NSSwapLittleIntToHost = ~f{II}
	NSSwapLittleLongLongToHost = ~f{QQ}
	NSSwapLittleLongToHost = ~f{LL}
	NSSwapLittleShortToHost = ~f{SS}
	NSSwapLong = ~f{LL}
	NSSwapLongLong = ~f{QQ}
	NSSwapShort = ~f{SS}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/once.h
	_dispatch_once = ~f{v^l%~f{v}}
	_dispatch_once_f = ~f{v^l^v^~f{v^v}}
	dispatch_once = ~f{v^l%~f{v}}
	dispatch_once_f = ~f{v^l^v^~f{v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/Dispatch/source.h
	dispatch_source_cancel = ~f{v@}
	dispatch_source_create = ~f{@^vLL@}
	dispatch_source_get_data = ~f{L@}
	dispatch_source_get_handle = ~f{L@}
	dispatch_source_get_mask = ~f{L@}
	dispatch_source_merge_data = ~f{v@L}
	dispatch_source_set_cancel_handler = ~f{v@%~f{v}}
	dispatch_source_set_cancel_handler_f = ~f{v@^~f{v^v}}
	dispatch_source_set_event_handler = ~f{v@%~f{v}}
	dispatch_source_set_event_handler_f = ~f{v@^~f{v^v}}
	dispatch_source_set_registration_handler = ~f{v@%~f{v}}
	dispatch_source_set_registration_handler_f = ~f{v@^~f{v^v}}
	dispatch_source_set_timer = ~f{v@QQQ}
	dispatch_source_testcancel = ~f{l@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlreader.h
	xmlFreeTextReader = ~f{v^v}
	xmlNewTextReader = ~f{^v^v^c}
	xmlNewTextReaderFilename = ~f{^v^c}
	xmlReaderForDoc = ~f{^v^C^c^ci}
	xmlReaderForFd = ~f{^vi^c^ci}
	xmlReaderForFile = ~f{^v^c^ci}
	xmlReaderForIO = ~f{^v^~f{i^v^ci}^~f{i^v}^v^c^ci}
	xmlReaderForMemory = ~f{^v^ci^c^ci}
	xmlReaderNewDoc = ~f{i^v^C^c^ci}
	xmlReaderNewFd = ~f{i^vi^c^ci}
	xmlReaderNewFile = ~f{i^v^c^ci}
	xmlReaderNewIO = ~f{i^v^~f{i^v^ci}^~f{i^v}^v^c^ci}
	xmlReaderNewMemory = ~f{i^v^ci^c^ci}
	xmlReaderNewWalker = ~f{i^v^v}
	xmlReaderWalker = ~f{^v^v}
	xmlTextReaderAttributeCount = ~f{i^v}
	xmlTextReaderBaseUri = ~f{^C^v}
	xmlTextReaderByteConsumed = ~f{l^v}
	xmlTextReaderClose = ~f{i^v}
	xmlTextReaderConstBaseUri = ~f{^C^v}
	xmlTextReaderConstEncoding = ~f{^C^v}
	xmlTextReaderConstLocalName = ~f{^C^v}
	xmlTextReaderConstName = ~f{^C^v}
	xmlTextReaderConstNamespaceUri = ~f{^C^v}
	xmlTextReaderConstPrefix = ~f{^C^v}
	xmlTextReaderConstString = ~f{^C^v^C}
	xmlTextReaderConstValue = ~f{^C^v}
	xmlTextReaderConstXmlLang = ~f{^C^v}
	xmlTextReaderConstXmlVersion = ~f{^C^v}
	xmlTextReaderCurrentDoc = ~f{^v^v}
	xmlTextReaderCurrentNode = ~f{^v^v}
	xmlTextReaderDepth = ~f{i^v}
	xmlTextReaderExpand = ~f{^v^v}
	xmlTextReaderGetAttribute = ~f{^C^v^C}
	xmlTextReaderGetAttributeNo = ~f{^C^vi}
	xmlTextReaderGetAttributeNs = ~f{^C^v^C^C}
	xmlTextReaderGetErrorHandler = ~f{v^v^^~f{v^v^cI^v}^^v}
	xmlTextReaderGetParserColumnNumber = ~f{i^v}
	xmlTextReaderGetParserLineNumber = ~f{i^v}
	xmlTextReaderGetParserProp = ~f{i^vi}
	xmlTextReaderGetRemainder = ~f{^v^v}
	xmlTextReaderHasAttributes = ~f{i^v}
	xmlTextReaderHasValue = ~f{i^v}
	xmlTextReaderIsDefault = ~f{i^v}
	xmlTextReaderIsEmptyElement = ~f{i^v}
	xmlTextReaderIsNamespaceDecl = ~f{i^v}
	xmlTextReaderIsValid = ~f{i^v}
	xmlTextReaderLocalName = ~f{^C^v}
	xmlTextReaderLocatorBaseURI = ~f{^C^v}
	xmlTextReaderLocatorLineNumber = ~f{i^v}
	xmlTextReaderLookupNamespace = ~f{^C^v^C}
	xmlTextReaderMoveToAttribute = ~f{i^v^C}
	xmlTextReaderMoveToAttributeNo = ~f{i^vi}
	xmlTextReaderMoveToAttributeNs = ~f{i^v^C^C}
	xmlTextReaderMoveToElement = ~f{i^v}
	xmlTextReaderMoveToFirstAttribute = ~f{i^v}
	xmlTextReaderMoveToNextAttribute = ~f{i^v}
	xmlTextReaderName = ~f{^C^v}
	xmlTextReaderNamespaceUri = ~f{^C^v}
	xmlTextReaderNext = ~f{i^v}
	xmlTextReaderNextSibling = ~f{i^v}
	xmlTextReaderNodeType = ~f{i^v}
	xmlTextReaderNormalization = ~f{i^v}
	xmlTextReaderPrefix = ~f{^C^v}
	xmlTextReaderPreserve = ~f{^v^v}
	xmlTextReaderPreservePattern = ~f{i^v^C^^C}
	xmlTextReaderQuoteChar = ~f{i^v}
	xmlTextReaderRead = ~f{i^v}
	xmlTextReaderReadAttributeValue = ~f{i^v}
	xmlTextReaderReadInnerXml = ~f{^C^v}
	xmlTextReaderReadOuterXml = ~f{^C^v}
	xmlTextReaderReadState = ~f{i^v}
	xmlTextReaderReadString = ~f{^C^v}
	xmlTextReaderRelaxNGSetSchema = ~f{i^v^v}
	xmlTextReaderRelaxNGValidate = ~f{i^v^c}
	xmlTextReaderRelaxNGValidateCtxt = ~f{i^v^vi}
	xmlTextReaderSchemaValidate = ~f{i^v^c}
	xmlTextReaderSchemaValidateCtxt = ~f{i^v^vi}
	xmlTextReaderSetErrorHandler = ~f{v^v^~f{v^v^cI^v}^v}
	xmlTextReaderSetParserProp = ~f{i^vii}
	xmlTextReaderSetSchema = ~f{i^v^v}
	xmlTextReaderSetStructuredErrorHandler = ~f{v^v^~f{v^v^v}^v}
	xmlTextReaderSetup = ~f{i^v^v^c^ci}
	xmlTextReaderStandalone = ~f{i^v}
	xmlTextReaderValue = ~f{^C^v}
	xmlTextReaderXmlLang = ~f{^C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/http.h
	httpAcceptConnection = ~f{^vii}
	httpAddCredential = ~f{i^v^vL}
	httpAddrAny = ~f{i^v}
	httpAddrClose = ~f{i^vi}
	httpAddrConnect = ~f{^v^v^i}
	httpAddrConnect2 = ~f{^v^v^ii^i}
	httpAddrCopyList = ~f{^v^v}
	httpAddrEqual = ~f{i^v^v}
	httpAddrFamily = ~f{i^v}
	httpAddrFreeList = ~f{v^v}
	httpAddrGetList = ~f{^v^ci^c}
	httpAddrLength = ~f{i^v}
	httpAddrListen = ~f{i^vi}
	httpAddrLocalhost = ~f{i^v}
	httpAddrLookup = ~f{^c^v^ci}
	httpAddrPort = ~f{i^v}
	httpAddrString = ~f{^c^v^ci}
	httpAssembleURI = ~f{iI^ci^c^c^ci^c}
	httpAssembleURIf = ~f{iI^ci^c^c^ci^c$}
	httpAssembleUUID = ~f{^c^ci^ci^cL}
	httpBlocking = ~f{v^vi}
	httpCheck = ~f{i^v}
	httpClearCookie = ~f{v^v}
	httpClearFields = ~f{v^v}
	httpClose = ~f{v^v}
	httpCompareCredentials = ~f{i^v^v}
	httpConnect = ~f{^v^ci}
	httpConnect2 = ~f{^v^ci^viIii^i}
	httpConnectEncrypt = ~f{^v^ciI}
	httpCopyCredentials = ~f{i^v^^v}
	httpCredentialsAreValidForName = ~f{i^v^c}
	httpCredentialsGetExpiration = ~f{l^v}
	httpCredentialsGetTrust = ~f{I^v^c}
	httpCredentialsString = ~f{L^v^cL}
	httpDecode64 = ~f{^c^c^c}
	httpDecode64_2 = ~f{^c^c^i^c}
	httpDelete = ~f{i^v^c}
	httpEncode64 = ~f{^c^c^c}
	httpEncode64_2 = ~f{^c^ci^ci}
	httpEncryption = ~f{i^vI}
	httpError = ~f{i^v}
	httpFieldValue = ~f{i^c}
	httpFlush = ~f{v^v}
	httpFlushWrite = ~f{i^v}
	httpFreeCredentials = ~f{v^v}
	httpGet = ~f{i^v^c}
	httpGetActivity = ~f{l^v}
	httpGetAddress = ~f{^v^v}
	httpGetAuthString = ~f{^c^v}
	httpGetBlocking = ~f{i^v}
	httpGetContentEncoding = ~f{^c^v}
	httpGetCookie = ~f{^c^v}
	httpGetDateString = ~f{^cl}
	httpGetDateString2 = ~f{^cl^ci}
	httpGetDateTime = ~f{l^c}
	httpGetEncryption = ~f{I^v}
	httpGetExpect = ~f{i^v}
	httpGetFd = ~f{i^v}
	httpGetField = ~f{^c^vi}
	httpGetHostByName = ~f{^v^c}
	httpGetHostname = ~f{^c^v^ci}
	httpGetKeepAlive = ~f{I^v}
	httpGetLength = ~f{i^v}
	httpGetLength2 = ~f{q^v}
	httpGetPending = ~f{L^v}
	httpGetReady = ~f{L^v}
	httpGetRemaining = ~f{L^v}
	httpGetState = ~f{i^v}
	httpGetStatus = ~f{i^v}
	httpGetSubField = ~f{^c^vi^c^c}
	httpGetSubField2 = ~f{^c^vi^c^ci}
	httpGetVersion = ~f{I^v}
	httpGets = ~f{^c^ci^v}
	httpHead = ~f{i^v^c}
	httpInitialize = ~f{v}
	httpIsChunked = ~f{i^v}
	httpIsEncrypted = ~f{i^v}
	httpLoadCredentials = ~f{i^c^^v^c}
	httpMD5 = ~f{^c^c^c^c^c}
	httpMD5Final = ~f{^c^c^c^c^c}
	httpMD5String = ~f{^c^C^c}
	httpOptions = ~f{i^v^c}
	httpPeek = ~f{l^v^cL}
	httpPost = ~f{i^v^c}
	httpPrintf = ~f{i^v^c$}
	httpPut = ~f{i^v^c}
	httpRead = ~f{i^v^ci}
	httpRead2 = ~f{l^v^cL}
	httpReadRequest = ~f{i^v^cL}
	httpReconnect = ~f{i^v}
	httpReconnect2 = ~f{i^vi^i}
	httpResolveHostname = ~f{^c^v^cL}
	httpSaveCredentials = ~f{i^c^v^c}
	httpSeparate = ~f{v^c^c^c^c^i^c}
	httpSeparate2 = ~f{v^c^ci^ci^ci^i^ci}
	httpSeparateURI = ~f{iI^c^ci^ci^ci^i^ci}
	httpSetAuthString = ~f{v^v^c^c}
	httpSetCookie = ~f{v^v^c}
	httpSetCredentials = ~f{i^v^v}
	httpSetDefaultField = ~f{v^vi^c}
	httpSetExpect = ~f{v^vi}
	httpSetField = ~f{v^vi^c}
	httpSetKeepAlive = ~f{v^vI}
	httpSetLength = ~f{v^vL}
	httpSetTimeout = ~f{v^vd^~f{i^v^v}^v}
	httpShutdown = ~f{v^v}
	httpStateString = ~f{^ci}
	httpStatus = ~f{^ci}
	httpTrace = ~f{i^v^c}
	httpURIStatusString = ~f{^ci}
	httpUpdate = ~f{i^v}
	httpWait = ~f{i^vi}
	httpWrite = ~f{i^v^ci}
	httpWrite2 = ~f{l^v^cL}
	httpWriteResponse = ~f{i^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecAccessControl.h
	SecAccessControlCreateWithFlags = ~f{^v^v^vL^^v}
	SecAccessControlGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/language.h
	cupsLangDefault = ~f{^v}
	cupsLangEncoding = ~f{^c^v}
	cupsLangFlush = ~f{v}
	cupsLangFree = ~f{v^v}
	cupsLangGet = ~f{^v^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/introspection.h
	dispatch_introspection_hook_queue_callout_begin = ~f{v@^v^~f{v^v}}
	dispatch_introspection_hook_queue_callout_end = ~f{v@^v^~f{v^v}}
	dispatch_introspection_hook_queue_create = ~f{v@}
	dispatch_introspection_hook_queue_destroy = ~f{v@}
	dispatch_introspection_hook_queue_item_complete = ~f{v@}
	dispatch_introspection_hook_queue_item_dequeue = ~f{v@@}
	dispatch_introspection_hook_queue_item_enqueue = ~f{v@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKMatrix3.h
	GLKMatrix3Add = ~f{{=fffffffff}{=fffffffff}{=fffffffff}}
	GLKMatrix3GetColumn = ~f{{=fff}{=fffffffff}i}
	GLKMatrix3GetMatrix2 = ~f{{=ffffffff}{=fffffffff}}
	GLKMatrix3GetRow = ~f{{=fff}{=fffffffff}i}
	GLKMatrix3Invert = ~f{{=fffffffff}{=fffffffff}^B}
	GLKMatrix3InvertAndTranspose = ~f{{=fffffffff}{=fffffffff}^B}
	GLKMatrix3Make = ~f{{=fffffffff}fffffffff}
	GLKMatrix3MakeAndTranspose = ~f{{=fffffffff}fffffffff}
	GLKMatrix3MakeRotation = ~f{{=fffffffff}ffff}
	GLKMatrix3MakeScale = ~f{{=fffffffff}fff}
	GLKMatrix3MakeWithArray = ~f{{=fffffffff}^f}
	GLKMatrix3MakeWithArrayAndTranspose = ~f{{=fffffffff}^f}
	GLKMatrix3MakeWithColumns = ~f{{=fffffffff}{=fff}{=fff}{=fff}}
	GLKMatrix3MakeWithQuaternion = ~f{{=fffffffff}{=ffff}}
	GLKMatrix3MakeWithRows = ~f{{=fffffffff}{=fff}{=fff}{=fff}}
	GLKMatrix3MakeXRotation = ~f{{=fffffffff}f}
	GLKMatrix3MakeYRotation = ~f{{=fffffffff}f}
	GLKMatrix3MakeZRotation = ~f{{=fffffffff}f}
	GLKMatrix3Multiply = ~f{{=fffffffff}{=fffffffff}{=fffffffff}}
	GLKMatrix3MultiplyVector3 = ~f{{=fff}{=fffffffff}{=fff}}
	GLKMatrix3MultiplyVector3Array = ~f{v{=fffffffff}^vL}
	GLKMatrix3Rotate = ~f{{=fffffffff}{=fffffffff}ffff}
	GLKMatrix3RotateWithVector3 = ~f{{=fffffffff}{=fffffffff}f{=fff}}
	GLKMatrix3RotateWithVector4 = ~f{{=fffffffff}{=fffffffff}f{=ffff}}
	GLKMatrix3RotateX = ~f{{=fffffffff}{=fffffffff}f}
	GLKMatrix3RotateY = ~f{{=fffffffff}{=fffffffff}f}
	GLKMatrix3RotateZ = ~f{{=fffffffff}{=fffffffff}f}
	GLKMatrix3Scale = ~f{{=fffffffff}{=fffffffff}fff}
	GLKMatrix3ScaleWithVector3 = ~f{{=fffffffff}{=fffffffff}{=fff}}
	GLKMatrix3ScaleWithVector4 = ~f{{=fffffffff}{=fffffffff}{=ffff}}
	GLKMatrix3SetColumn = ~f{{=fffffffff}{=fffffffff}i{=fff}}
	GLKMatrix3SetRow = ~f{{=fffffffff}{=fffffffff}i{=fff}}
	GLKMatrix3Subtract = ~f{{=fffffffff}{=fffffffff}{=fffffffff}}
	GLKMatrix3Transpose = ~f{{=fffffffff}{=fffffffff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/utypes.h
	u_errorName = ~f{^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libkern/OSSpinLockDeprecated.h
	OSSpinLockLock = ~f{v^i}
	OSSpinLockTry = ~f{B^i}
	OSSpinLockUnlock = ~f{v^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTFramesetter.h
	CTFramesetterCreateFrame = ~f{^v^v{=ll}^v^v}
	CTFramesetterCreateWithAttributedString = ~f{^v^v}
	CTFramesetterCreateWithTypesetter = ~f{^v^v}
	CTFramesetterGetTypeID = ~f{L}
	CTFramesetterGetTypesetter = ~f{^v^v}
	CTFramesetterSuggestFrameSizeWithConstraints = ~f{{=dd}^v{=ll}^v{=dd}^v}
/usr/local/lib/clang/9.0.1/include/avx512vbmivlintrin.h
	_mm256_mask2_permutex2var_epi8 = ~f{~V{4q}~V{4q}~V{4q}I~V{4q}}
	_mm256_mask_multishift_epi64_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_permutex2var_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_permutexvar_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_multishift_epi64_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_permutex2var_epi8 = ~f{~V{4q}I~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_permutexvar_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_multishift_epi64_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_permutex2var_epi8 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_permutexvar_epi8 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm_mask2_permutex2var_epi8 = ~f{~V{2q}~V{2q}~V{2q}S~V{2q}}
	_mm_mask_multishift_epi64_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_permutex2var_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_permutexvar_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_multishift_epi64_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_permutex2var_epi8 = ~f{~V{2q}S~V{2q}~V{2q}~V{2q}}
	_mm_maskz_permutexvar_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_multishift_epi64_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_permutex2var_epi8 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_permutexvar_epi8 = ~f{~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/task.h
	lock_set_create = ~f{iI^Iii}
	lock_set_destroy = ~f{iII}
	mach_ports_lookup = ~f{iI^^I^I}
	mach_ports_register = ~f{iI^II}
	mig_strncpy_zerofill = ~f{i^c^ci}
	semaphore_create = ~f{iI^Iii}
	semaphore_destroy = ~f{iII}
	task_assign = ~f{iIII}
	task_assign_default = ~f{iII}
	task_create = ~f{iI^III^I}
	task_generate_corpse = ~f{iI^I}
	task_get_assignment = ~f{iI^I}
	task_get_dyld_image_infos = ~f{iI^^v^I}
	task_get_emulation_vector = ~f{iI^i^^Q^I}
	task_get_exc_guard_behavior = ~f{iI^I}
	task_get_exception_ports = ~f{iII^I^I^I^i^i}
	task_get_mach_voucher = ~f{iII^I}
	task_get_special_port = ~f{iIi^I}
	task_get_state = ~f{iIi^I^I}
	task_info = ~f{iII^i^I}
	task_inspect = ~f{iII^i^I}
	task_map_corpse_info = ~f{iII^L^I}
	task_map_corpse_info_64 = ~f{iII^Q^Q}
	task_policy = ~f{iIi^iIII}
	task_policy_get = ~f{iII^i^I^I}
	task_policy_set = ~f{iII^iI}
	task_purgable_info = ~f{iI^v}
	task_register_dyld_get_process_state = ~f{iI^v}
	task_register_dyld_image_infos = ~f{iI^vI}
	task_register_dyld_set_dyld_state = ~f{iIC}
	task_register_dyld_shared_cache_image_info = ~f{iI{=CCCCCCCCCCCCCCCC{=II}{=ii}Q}II}
	task_resume = ~f{iI}
	task_resume2 = ~f{iI}
	task_sample = ~f{iII}
	task_set_emulation = ~f{iILi}
	task_set_emulation_vector = ~f{iIi^QI}
	task_set_exc_guard_behavior = ~f{iII}
	task_set_exception_ports = ~f{iIIIii}
	task_set_info = ~f{iII^iI}
	task_set_mach_voucher = ~f{iII}
	task_set_phys_footprint_limit = ~f{iIi^i}
	task_set_policy = ~f{iIIi^iI^iII}
	task_set_ras_pc = ~f{iILL}
	task_set_special_port = ~f{iIiI}
	task_set_state = ~f{iIi^II}
	task_suspend = ~f{iI}
	task_suspend2 = ~f{iI^I}
	task_swap_exception_ports = ~f{iIIIii^I^I^I^i^i}
	task_swap_mach_voucher = ~f{iII^I}
	task_terminate = ~f{iI}
	task_threads = ~f{iI^^I^I}
	task_unregister_dyld_image_infos = ~f{iI^vI}
	task_zone_info = ~f{iI^^v^I^^v^I}
	thread_create = ~f{iI^I}
	thread_create_running = ~f{iIi^II^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/hash.h
	xmlHashAddEntry = ~f{i^v^C^v}
	xmlHashAddEntry2 = ~f{i^v^C^C^v}
	xmlHashAddEntry3 = ~f{i^v^C^C^C^v}
	xmlHashCopy = ~f{^v^v^~f{^v^v^C}}
	xmlHashCreate = ~f{^vi}
	xmlHashCreateDict = ~f{^vi^v}
	xmlHashFree = ~f{v^v^~f{v^v^C}}
	xmlHashLookup = ~f{^v^v^C}
	xmlHashLookup2 = ~f{^v^v^C^C}
	xmlHashLookup3 = ~f{^v^v^C^C^C}
	xmlHashQLookup = ~f{^v^v^C^C}
	xmlHashQLookup2 = ~f{^v^v^C^C^C^C}
	xmlHashQLookup3 = ~f{^v^v^C^C^C^C^C^C}
	xmlHashRemoveEntry = ~f{i^v^C^~f{v^v^C}}
	xmlHashRemoveEntry2 = ~f{i^v^C^C^~f{v^v^C}}
	xmlHashRemoveEntry3 = ~f{i^v^C^C^C^~f{v^v^C}}
	xmlHashScan = ~f{v^v^~f{v^v^v^C}^v}
	xmlHashScan3 = ~f{v^v^C^C^C^~f{v^v^v^C}^v}
	xmlHashScanFull = ~f{v^v^~f{v^v^v^C^C^C}^v}
	xmlHashScanFull3 = ~f{v^v^C^C^C^~f{v^v^v^C^C^C}^v}
	xmlHashSize = ~f{i^v}
	xmlHashUpdateEntry = ~f{i^v^C^v^~f{v^v^C}}
	xmlHashUpdateEntry2 = ~f{i^v^C^C^v^~f{v^v^C}}
	xmlHashUpdateEntry3 = ~f{i^v^C^C^C^v^~f{v^v^C}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenAL.framework/Headers/al.h
	alBuffer3f = ~f{vIifff}
	alBuffer3i = ~f{vIiiii}
	alBufferData = ~f{vIi^vii}
	alBufferf = ~f{vIif}
	alBufferfv = ~f{vIi^f}
	alBufferi = ~f{vIii}
	alBufferiv = ~f{vIi^i}
	alDeleteBuffers = ~f{vi^I}
	alDeleteSources = ~f{vi^I}
	alDisable = ~f{vi}
	alDistanceModel = ~f{vi}
	alDopplerFactor = ~f{vf}
	alDopplerVelocity = ~f{vf}
	alEnable = ~f{vi}
	alGenBuffers = ~f{vi^I}
	alGenSources = ~f{vi^I}
	alGetBoolean = ~f{ci}
	alGetBooleanv = ~f{vi^c}
	alGetBuffer3f = ~f{vIi^f^f^f}
	alGetBuffer3i = ~f{vIi^i^i^i}
	alGetBufferf = ~f{vIi^f}
	alGetBufferfv = ~f{vIi^f}
	alGetBufferi = ~f{vIi^i}
	alGetBufferiv = ~f{vIi^i}
	alGetDouble = ~f{di}
	alGetDoublev = ~f{vi^d}
	alGetEnumValue = ~f{i^c}
	alGetError = ~f{i}
	alGetFloat = ~f{fi}
	alGetFloatv = ~f{vi^f}
	alGetInteger = ~f{ii}
	alGetIntegerv = ~f{vi^i}
	alGetListener3f = ~f{vi^f^f^f}
	alGetListener3i = ~f{vi^i^i^i}
	alGetListenerf = ~f{vi^f}
	alGetListenerfv = ~f{vi^f}
	alGetListeneri = ~f{vi^i}
	alGetListeneriv = ~f{vi^i}
	alGetProcAddress = ~f{^v^c}
	alGetSource3f = ~f{vIi^f^f^f}
	alGetSource3i = ~f{vIi^i^i^i}
	alGetSourcef = ~f{vIi^f}
	alGetSourcefv = ~f{vIi^f}
	alGetSourcei = ~f{vIi^i}
	alGetSourceiv = ~f{vIi^i}
	alGetString = ~f{^ci}
	alIsBuffer = ~f{cI}
	alIsEnabled = ~f{ci}
	alIsExtensionPresent = ~f{c^c}
	alIsSource = ~f{cI}
	alListener3f = ~f{vifff}
	alListener3i = ~f{viiii}
	alListenerf = ~f{vif}
	alListenerfv = ~f{vi^f}
	alListeneri = ~f{vii}
	alListeneriv = ~f{vi^i}
	alSource3f = ~f{vIifff}
	alSource3i = ~f{vIiiii}
	alSourcePause = ~f{vI}
	alSourcePausev = ~f{vi^I}
	alSourcePlay = ~f{vI}
	alSourcePlayv = ~f{vi^I}
	alSourceQueueBuffers = ~f{vIi^I}
	alSourceRewind = ~f{vI}
	alSourceRewindv = ~f{vi^I}
	alSourceStop = ~f{vI}
	alSourceStopv = ~f{vi^I}
	alSourceUnqueueBuffers = ~f{vIi^I}
	alSourcef = ~f{vIif}
	alSourcefv = ~f{vIi^f}
	alSourcei = ~f{vIii}
	alSourceiv = ~f{vIi^i}
	alSpeedOfSound = ~f{vf}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unicode/uversion.h
	u_getVersion = ~f{v^C}
	u_versionFromString = ~f{v^C^c}
	u_versionFromUString = ~f{v^C^S}
	u_versionToString = ~f{v^C^c}
/usr/local/lib/clang/9.0.1/include/avx512ifmavlintrin.h
	_mm256_madd52hi_epu64 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_madd52lo_epu64 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_mask_madd52hi_epu64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_madd52lo_epu64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_madd52hi_epu64 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_madd52lo_epu64 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm_madd52hi_epu64 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_madd52lo_epu64 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_mask_madd52hi_epu64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_madd52lo_epu64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_madd52hi_epu64 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_madd52lo_epu64 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCDynamicStoreCopyDHCPInfo.h
	DHCPInfoGetLeaseExpirationTime = ~f{^v^v}
	DHCPInfoGetLeaseStartTime = ~f{^v^v}
	DHCPInfoGetOptionData = ~f{^v^vC}
	SCDynamicStoreCopyDHCPInfo = ~f{^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/HeapObject.h
	_swift_instantiateInertHeapObject = ~f{v^v^v}
	swift_retainCount = ~f{L^v}
	swift_unownedRetainCount = ~f{L^v}
	swift_weakRetainCount = ~f{L^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFUserNotification.h
	CFUserNotificationCancel = ~f{i^v}
	CFUserNotificationCheckBoxChecked = ~f{Ll}
	CFUserNotificationCreate = ~f{^v^vdL^i^v}
	CFUserNotificationCreateRunLoopSource = ~f{^v^v^v^~f{v^vL}l}
	CFUserNotificationDisplayAlert = ~f{idL^v^v^v^v^v^v^v^v^L}
	CFUserNotificationDisplayNotice = ~f{idL^v^v^v^v^v^v}
	CFUserNotificationGetResponseDictionary = ~f{^v^v}
	CFUserNotificationGetResponseValue = ~f{^v^v^vl}
	CFUserNotificationGetTypeID = ~f{L}
	CFUserNotificationPopUpSelection = ~f{Ll}
	CFUserNotificationReceiveResponse = ~f{i^vd^L}
	CFUserNotificationSecureTextField = ~f{Ll}
	CFUserNotificationUpdate = ~f{i^vdL^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreAudioTypes.framework/Headers/CoreAudioBaseTypes.h
	AudioChannelLayoutTag_GetNumberOfChannels = ~f{II}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/host_security.h
	host_security_create_task_token = ~f{iII{=II}{=IIIIIIII}I^III^I}
	host_security_set_task_token = ~f{iII{=II}{=IIIIIIII}I}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGColor.h
	CGColorCreate = ~f{^v^v^d}
	CGColorCreateCopy = ~f{^v^v}
	CGColorCreateCopyByMatchingToColorSpace = ~f{^v^vi^v^v}
	CGColorCreateCopyWithAlpha = ~f{^v^vd}
	CGColorCreateGenericCMYK = ~f{^vddddd}
	CGColorCreateGenericGray = ~f{^vdd}
	CGColorCreateGenericGrayGamma2_2 = ~f{^vdd}
	CGColorCreateGenericRGB = ~f{^vdddd}
	CGColorCreateSRGB = ~f{^vdddd}
	CGColorCreateWithPattern = ~f{^v^v^v^d}
	CGColorEqualToColor = ~f{B^v^v}
	CGColorGetAlpha = ~f{d^v}
	CGColorGetColorSpace = ~f{^v^v}
	CGColorGetComponents = ~f{^d^v}
	CGColorGetConstantColor = ~f{^v^v}
	CGColorGetNumberOfComponents = ~f{L^v}
	CGColorGetPattern = ~f{^v^v}
	CGColorGetTypeID = ~f{L}
	CGColorRelease = ~f{v^v}
	CGColorRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MapKit.framework/Headers/MKOverlayView.h
	MKRoadWidthAtZoomScale = ~f{dd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Morphology.h
	vImageDilate_ARGB8888 = ~f{l^v^vLL^CLLI}
	vImageDilate_ARGBFFFF = ~f{l^v^vLL^fLLI}
	vImageDilate_Planar8 = ~f{l^v^vLL^CLLI}
	vImageDilate_PlanarF = ~f{l^v^vLL^fLLI}
	vImageErode_ARGB8888 = ~f{l^v^vLL^CLLI}
	vImageErode_ARGBFFFF = ~f{l^v^vLL^fLLI}
	vImageErode_Planar8 = ~f{l^v^vLL^CLLI}
	vImageErode_PlanarF = ~f{l^v^vLL^fLLI}
	vImageMax_ARGB8888 = ~f{l^v^v^vLLLLI}
	vImageMax_ARGBFFFF = ~f{l^v^v^vLLLLI}
	vImageMax_Planar8 = ~f{l^v^v^vLLLLI}
	vImageMax_PlanarF = ~f{l^v^v^vLLLLI}
	vImageMin_ARGB8888 = ~f{l^v^v^vLLLLI}
	vImageMin_ARGBFFFF = ~f{l^v^v^vLLLLI}
	vImageMin_Planar8 = ~f{l^v^v^vLLLLI}
	vImageMin_PlanarF = ~f{l^v^v^vLLLLI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGContext.h
	CGContextAddArc = ~f{v^vdddddi}
	CGContextAddArcToPoint = ~f{v^vddddd}
	CGContextAddCurveToPoint = ~f{v^vdddddd}
	CGContextAddEllipseInRect = ~f{v^v{={=dd}{=dd}}}
	CGContextAddLineToPoint = ~f{v^vdd}
	CGContextAddLines = ~f{v^v^vL}
	CGContextAddPath = ~f{v^v^v}
	CGContextAddQuadCurveToPoint = ~f{v^vdddd}
	CGContextAddRect = ~f{v^v{={=dd}{=dd}}}
	CGContextAddRects = ~f{v^v^vL}
	CGContextBeginPage = ~f{v^v^v}
	CGContextBeginPath = ~f{v^v}
	CGContextBeginTransparencyLayer = ~f{v^v^v}
	CGContextBeginTransparencyLayerWithRect = ~f{v^v{={=dd}{=dd}}^v}
	CGContextClearRect = ~f{v^v{={=dd}{=dd}}}
	CGContextClip = ~f{v^v}
	CGContextClipToMask = ~f{v^v{={=dd}{=dd}}^v}
	CGContextClipToRect = ~f{v^v{={=dd}{=dd}}}
	CGContextClipToRects = ~f{v^v^vL}
	CGContextClosePath = ~f{v^v}
	CGContextConcatCTM = ~f{v^v{=dddddd}}
	CGContextConvertPointToDeviceSpace = ~f{{=dd}^v{=dd}}
	CGContextConvertPointToUserSpace = ~f{{=dd}^v{=dd}}
	CGContextConvertRectToDeviceSpace = ~f{{={=dd}{=dd}}^v{={=dd}{=dd}}}
	CGContextConvertRectToUserSpace = ~f{{={=dd}{=dd}}^v{={=dd}{=dd}}}
	CGContextConvertSizeToDeviceSpace = ~f{{=dd}^v{=dd}}
	CGContextConvertSizeToUserSpace = ~f{{=dd}^v{=dd}}
	CGContextCopyPath = ~f{^v^v}
	CGContextDrawImage = ~f{v^v{={=dd}{=dd}}^v}
	CGContextDrawLinearGradient = ~f{v^v^v{=dd}{=dd}I}
	CGContextDrawPDFDocument = ~f{v^v{={=dd}{=dd}}^vi}
	CGContextDrawPDFPage = ~f{v^v^v}
	CGContextDrawPath = ~f{v^vi}
	CGContextDrawRadialGradient = ~f{v^v^v{=dd}d{=dd}dI}
	CGContextDrawShading = ~f{v^v^v}
	CGContextDrawTiledImage = ~f{v^v{={=dd}{=dd}}^v}
	CGContextEOClip = ~f{v^v}
	CGContextEOFillPath = ~f{v^v}
	CGContextEndPage = ~f{v^v}
	CGContextEndTransparencyLayer = ~f{v^v}
	CGContextFillEllipseInRect = ~f{v^v{={=dd}{=dd}}}
	CGContextFillPath = ~f{v^v}
	CGContextFillRect = ~f{v^v{={=dd}{=dd}}}
	CGContextFillRects = ~f{v^v^vL}
	CGContextFlush = ~f{v^v}
	CGContextGetCTM = ~f{{=dddddd}^v}
	CGContextGetClipBoundingBox = ~f{{={=dd}{=dd}}^v}
	CGContextGetInterpolationQuality = ~f{i^v}
	CGContextGetPathBoundingBox = ~f{{={=dd}{=dd}}^v}
	CGContextGetPathCurrentPoint = ~f{{=dd}^v}
	CGContextGetTextMatrix = ~f{{=dddddd}^v}
	CGContextGetTextPosition = ~f{{=dd}^v}
	CGContextGetTypeID = ~f{L}
	CGContextGetUserSpaceToDeviceSpaceTransform = ~f{{=dddddd}^v}
	CGContextIsPathEmpty = ~f{B^v}
	CGContextMoveToPoint = ~f{v^vdd}
	CGContextPathContainsPoint = ~f{B^v{=dd}i}
	CGContextRelease = ~f{v^v}
	CGContextReplacePathWithStrokedPath = ~f{v^v}
	CGContextResetClip = ~f{v^v}
	CGContextRestoreGState = ~f{v^v}
	CGContextRetain = ~f{^v^v}
	CGContextRotateCTM = ~f{v^vd}
	CGContextSaveGState = ~f{v^v}
	CGContextScaleCTM = ~f{v^vdd}
	CGContextSelectFont = ~f{v^v^cdi}
	CGContextSetAllowsAntialiasing = ~f{v^vB}
	CGContextSetAllowsFontSmoothing = ~f{v^vB}
	CGContextSetAllowsFontSubpixelPositioning = ~f{v^vB}
	CGContextSetAllowsFontSubpixelQuantization = ~f{v^vB}
	CGContextSetAlpha = ~f{v^vd}
	CGContextSetBlendMode = ~f{v^vi}
	CGContextSetCMYKFillColor = ~f{v^vddddd}
	CGContextSetCMYKStrokeColor = ~f{v^vddddd}
	CGContextSetCharacterSpacing = ~f{v^vd}
	CGContextSetFillColor = ~f{v^v^d}
	CGContextSetFillColorSpace = ~f{v^v^v}
	CGContextSetFillColorWithColor = ~f{v^v^v}
	CGContextSetFillPattern = ~f{v^v^v^d}
	CGContextSetFlatness = ~f{v^vd}
	CGContextSetFont = ~f{v^v^v}
	CGContextSetFontSize = ~f{v^vd}
	CGContextSetGrayFillColor = ~f{v^vdd}
	CGContextSetGrayStrokeColor = ~f{v^vdd}
	CGContextSetInterpolationQuality = ~f{v^vi}
	CGContextSetLineCap = ~f{v^vi}
	CGContextSetLineDash = ~f{v^vd^dL}
	CGContextSetLineJoin = ~f{v^vi}
	CGContextSetLineWidth = ~f{v^vd}
	CGContextSetMiterLimit = ~f{v^vd}
	CGContextSetPatternPhase = ~f{v^v{=dd}}
	CGContextSetRGBFillColor = ~f{v^vdddd}
	CGContextSetRGBStrokeColor = ~f{v^vdddd}
	CGContextSetRenderingIntent = ~f{v^vi}
	CGContextSetShadow = ~f{v^v{=dd}d}
	CGContextSetShadowWithColor = ~f{v^v{=dd}d^v}
	CGContextSetShouldAntialias = ~f{v^vB}
	CGContextSetShouldSmoothFonts = ~f{v^vB}
	CGContextSetShouldSubpixelPositionFonts = ~f{v^vB}
	CGContextSetShouldSubpixelQuantizeFonts = ~f{v^vB}
	CGContextSetStrokeColor = ~f{v^v^d}
	CGContextSetStrokeColorSpace = ~f{v^v^v}
	CGContextSetStrokeColorWithColor = ~f{v^v^v}
	CGContextSetStrokePattern = ~f{v^v^v^d}
	CGContextSetTextDrawingMode = ~f{v^vi}
	CGContextSetTextMatrix = ~f{v^v{=dddddd}}
	CGContextSetTextPosition = ~f{v^vdd}
	CGContextShowGlyphs = ~f{v^v^SL}
	CGContextShowGlyphsAtPoint = ~f{v^vdd^SL}
	CGContextShowGlyphsAtPositions = ~f{v^v^S^vL}
	CGContextShowGlyphsWithAdvances = ~f{v^v^S^vL}
	CGContextShowText = ~f{v^v^cL}
	CGContextShowTextAtPoint = ~f{v^vdd^cL}
	CGContextStrokeEllipseInRect = ~f{v^v{={=dd}{=dd}}}
	CGContextStrokeLineSegments = ~f{v^v^vL}
	CGContextStrokePath = ~f{v^v}
	CGContextStrokeRect = ~f{v^v{={=dd}{=dd}}}
	CGContextStrokeRectWithWidth = ~f{v^v{={=dd}{=dd}}d}
	CGContextSynchronize = ~f{v^v}
	CGContextTranslateCTM = ~f{v^vdd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlmemory.h
	xmlCleanupMemory = ~f{v}
	xmlGcMemGet = ~f{i^^~f{v^v}^^~f{^vL}^^~f{^vL}^^~f{^v^vL}^^~f{^c^c}}
	xmlGcMemSetup = ~f{i^~f{v^v}^~f{^vL}^~f{^vL}^~f{^v^vL}^~f{^c^c}}
	xmlInitMemory = ~f{i}
	xmlMallocAtomicLoc = ~f{^vL^ci}
	xmlMallocLoc = ~f{^vL^ci}
	xmlMemBlocks = ~f{i}
	xmlMemDisplay = ~f{v^v}
	xmlMemDisplayLast = ~f{v^vl}
	xmlMemFree = ~f{v^v}
	xmlMemGet = ~f{i^^~f{v^v}^^~f{^vL}^^~f{^v^vL}^^~f{^c^c}}
	xmlMemMalloc = ~f{^vL}
	xmlMemRealloc = ~f{^v^vL}
	xmlMemSetup = ~f{i^~f{v^v}^~f{^vL}^~f{^v^vL}^~f{^c^c}}
	xmlMemShow = ~f{v^vi}
	xmlMemStrdupLoc = ~f{^c^c^ci}
	xmlMemUsed = ~f{i}
	xmlMemoryDump = ~f{v}
	xmlMemoryStrdup = ~f{^c^c}
	xmlReallocLoc = ~f{^v^vL^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTParagraphStyle.h
	CTParagraphStyleCreate = ~f{^v^vL}
	CTParagraphStyleCreateCopy = ~f{^v^v}
	CTParagraphStyleGetTypeID = ~f{L}
	CTParagraphStyleGetValueForSpecifier = ~f{B^vIL^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTLine.h
	CTLineCreateJustifiedLine = ~f{^v^vdd}
	CTLineCreateTruncatedLine = ~f{^v^vdI^v}
	CTLineCreateWithAttributedString = ~f{^v^v}
	CTLineDraw = ~f{v^v^v}
	CTLineEnumerateCaretOffsets = ~f{v^v%~f{vdlB^B}}
	CTLineGetBoundsWithOptions = ~f{{={=dd}{=dd}}^vL}
	CTLineGetGlyphCount = ~f{l^v}
	CTLineGetGlyphRuns = ~f{^v^v}
	CTLineGetImageBounds = ~f{{={=dd}{=dd}}^v^v}
	CTLineGetOffsetForStringIndex = ~f{d^vl^d}
	CTLineGetPenOffsetForFlush = ~f{d^vdd}
	CTLineGetStringIndexForPosition = ~f{l^v{=dd}}
	CTLineGetStringRange = ~f{{=ll}^v}
	CTLineGetTrailingWhitespaceWidth = ~f{d^v}
	CTLineGetTypeID = ~f{L}
	CTLineGetTypographicBounds = ~f{d^v^d^d^d}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/ip_options.h
	nw_ip_create_metadata = ~f{@}
	nw_ip_metadata_get_ecn_flag = ~f{I@}
	nw_ip_metadata_get_receive_time = ~f{Q@}
	nw_ip_metadata_get_service_class = ~f{I@}
	nw_ip_metadata_set_ecn_flag = ~f{v@I}
	nw_ip_metadata_set_service_class = ~f{v@I}
	nw_ip_options_set_calculate_receive_time = ~f{v@B}
	nw_ip_options_set_disable_fragmentation = ~f{v@B}
	nw_ip_options_set_hop_limit = ~f{v@C}
	nw_ip_options_set_local_address_preference = ~f{v@I}
	nw_ip_options_set_use_minimum_mtu = ~f{v@B}
	nw_ip_options_set_version = ~f{v@I}
	nw_protocol_copy_ip_definition = ~f{@}
	nw_protocol_metadata_is_ip = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMIDI.framework/Headers/MIDISetup.h
	MIDIDeviceAddEntity = ~f{iI^vCLL^I}
	MIDIDeviceRemoveEntity = ~f{iII}
	MIDIEntityAddOrRemoveEndpoints = ~f{iILL}
	MIDIExternalDeviceCreate = ~f{i^v^v^v^I}
	MIDIGetSerialPortDrivers = ~f{i^^v}
	MIDIGetSerialPortOwner = ~f{i^v^^v}
	MIDISetSerialPortOwner = ~f{i^v^v}
	MIDISetupAddDevice = ~f{iI}
	MIDISetupAddExternalDevice = ~f{iI}
	MIDISetupCreate = ~f{i^I}
	MIDISetupDispose = ~f{iI}
	MIDISetupFromData = ~f{i^v^I}
	MIDISetupGetCurrent = ~f{i^I}
	MIDISetupInstall = ~f{iI}
	MIDISetupRemoveDevice = ~f{iI}
	MIDISetupRemoveExternalDevice = ~f{iI}
	MIDISetupToData = ~f{iI^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/LinearAlgebra/splat.h
	la_matrix_from_splat = ~f{@@LL}
	la_splat_from_double = ~f{@dL}
	la_splat_from_float = ~f{@fL}
	la_splat_from_matrix_element = ~f{@@ll}
	la_splat_from_vector_element = ~f{@@l}
	la_vector_from_splat = ~f{@@L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFHTTPMessage.h
	CFHTTPMessageAddAuthentication = ~f{C^v^v^v^v^vC}
	CFHTTPMessageAppendBytes = ~f{C^v^Cl}
	CFHTTPMessageCopyAllHeaderFields = ~f{^v^v}
	CFHTTPMessageCopyBody = ~f{^v^v}
	CFHTTPMessageCopyHeaderFieldValue = ~f{^v^v^v}
	CFHTTPMessageCopyRequestMethod = ~f{^v^v}
	CFHTTPMessageCopyRequestURL = ~f{^v^v}
	CFHTTPMessageCopyResponseStatusLine = ~f{^v^v}
	CFHTTPMessageCopySerializedMessage = ~f{^v^v}
	CFHTTPMessageCopyVersion = ~f{^v^v}
	CFHTTPMessageCreateCopy = ~f{^v^v^v}
	CFHTTPMessageCreateEmpty = ~f{^v^vC}
	CFHTTPMessageCreateRequest = ~f{^v^v^v^v^v}
	CFHTTPMessageCreateResponse = ~f{^v^vl^v^v}
	CFHTTPMessageGetResponseStatusCode = ~f{l^v}
	CFHTTPMessageGetTypeID = ~f{L}
	CFHTTPMessageIsHeaderComplete = ~f{C^v}
	CFHTTPMessageIsRequest = ~f{C^v}
	CFHTTPMessageSetBody = ~f{v^v^v}
	CFHTTPMessageSetHeaderFieldValue = ~f{v^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFTimeZone.h
	CFTimeZoneCopyAbbreviation = ~f{^v^vd}
	CFTimeZoneCopyAbbreviationDictionary = ~f{^v}
	CFTimeZoneCopyDefault = ~f{^v}
	CFTimeZoneCopyKnownNames = ~f{^v}
	CFTimeZoneCopyLocalizedName = ~f{^v^vl^v}
	CFTimeZoneCopySystem = ~f{^v}
	CFTimeZoneCreate = ~f{^v^v^v^v}
	CFTimeZoneCreateWithName = ~f{^v^v^vC}
	CFTimeZoneCreateWithTimeIntervalFromGMT = ~f{^v^vd}
	CFTimeZoneGetData = ~f{^v^v}
	CFTimeZoneGetDaylightSavingTimeOffset = ~f{d^vd}
	CFTimeZoneGetName = ~f{^v^v}
	CFTimeZoneGetNextDaylightSavingTimeTransition = ~f{d^vd}
	CFTimeZoneGetSecondsFromGMT = ~f{d^vd}
	CFTimeZoneGetTypeID = ~f{L}
	CFTimeZoneIsDaylightSavingTime = ~f{C^vd}
	CFTimeZoneResetSystem = ~f{v}
	CFTimeZoneSetAbbreviationDictionary = ~f{v^v}
	CFTimeZoneSetDefault = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSMapTable.h
	NSAllMapTableKeys = ~f{@@}
	NSAllMapTableValues = ~f{@@}
	NSCompareMapTables = ~f{B@@}
	NSCopyMapTableWithZone = ~f{@@^v}
	NSCountMapTable = ~f{L@}
	NSCreateMapTable = ~f{@{=^~f{L@^v}^~f{B@^v^v}^~f{v@^v}^~f{v@^v}^~f{@@^v}^v}{=^~f{v@^v}^~f{v@^v}^~f{@@^v}}L}
	NSCreateMapTableWithZone = ~f{@{=^~f{L@^v}^~f{B@^v^v}^~f{v@^v}^~f{v@^v}^~f{@@^v}^v}{=^~f{v@^v}^~f{v@^v}^~f{@@^v}}L^v}
	NSEndMapTableEnumeration = ~f{v^v}
	NSEnumerateMapTable = ~f{{=LL^v}@}
	NSFreeMapTable = ~f{v@}
	NSMapGet = ~f{^v@^v}
	NSMapInsert = ~f{v@^v^v}
	NSMapInsertIfAbsent = ~f{^v@^v^v}
	NSMapInsertKnownAbsent = ~f{v@^v^v}
	NSMapMember = ~f{B@^v^^v^^v}
	NSMapRemove = ~f{v@^v}
	NSNextMapEnumeratorPair = ~f{B^v^^v^^v}
	NSResetMapTable = ~f{v@}
	NSStringFromMapTable = ~f{@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/errno.h
	__error = ~f{^i}
/usr/local/lib/clang/9.0.1/include/rdseedintrin.h
	_rdseed16_step = ~f{i^S}
	_rdseed32_step = ~f{i^I}
	_rdseed64_step = ~f{i^Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libkern/OSCacheControl.h
	sys_cache_control = ~f{ii^vL}
	sys_dcache_flush = ~f{v^vL}
	sys_icache_invalidate = ~f{v^vL}
/usr/local/lib/clang/9.0.1/include/avx512vlbwintrin.h
	_mm256_cvtepi16_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_cvtsepi16_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_cvtusepi16_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_loadu_epi16 = ~f{~V{4q}^v}
	_mm256_loadu_epi8 = ~f{~V{4q}^v}
	_mm256_mask2_permutex2var_epi16 = ~f{~V{4q}~V{4q}~V{4q}S~V{4q}}
	_mm256_mask_abs_epi16 = ~f{~V{4q}~V{4q}S~V{4q}}
	_mm256_mask_abs_epi8 = ~f{~V{4q}~V{4q}I~V{4q}}
	_mm256_mask_add_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_add_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_adds_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_adds_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_adds_epu16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_adds_epu8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_avg_epu16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_avg_epu8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_blend_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_blend_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_broadcastb_epi8 = ~f{~V{4q}~V{4q}I~V{2q}}
	_mm256_mask_broadcastw_epi16 = ~f{~V{4q}~V{4q}S~V{2q}}
	_mm256_mask_cvtepi16_epi8 = ~f{~V{2q}~V{2q}S~V{4q}}
	_mm256_mask_cvtepi16_storeu_epi8 = ~f{v^vS~V{4q}}
	_mm256_mask_cvtepi8_epi16 = ~f{~V{4q}~V{4q}S~V{2q}}
	_mm256_mask_cvtepu8_epi16 = ~f{~V{4q}~V{4q}S~V{2q}}
	_mm256_mask_cvtsepi16_epi8 = ~f{~V{2q}~V{2q}S~V{4q}}
	_mm256_mask_cvtsepi16_storeu_epi8 = ~f{v^vS~V{4q}}
	_mm256_mask_cvtusepi16_epi8 = ~f{~V{2q}~V{2q}S~V{4q}}
	_mm256_mask_cvtusepi16_storeu_epi8 = ~f{v^vS~V{4q}}
	_mm256_mask_loadu_epi16 = ~f{~V{4q}~V{4q}S^v}
	_mm256_mask_loadu_epi8 = ~f{~V{4q}~V{4q}I^v}
	_mm256_mask_madd_epi16 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_maddubs_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_max_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_max_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_max_epu16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_max_epu8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_min_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_min_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_min_epu16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_min_epu8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_mov_epi16 = ~f{~V{4q}~V{4q}S~V{4q}}
	_mm256_mask_mov_epi8 = ~f{~V{4q}~V{4q}I~V{4q}}
	_mm256_mask_mulhi_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_mulhi_epu16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_mulhrs_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_mullo_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_packs_epi16 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_packs_epi32 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_packus_epi16 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_packus_epi32 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_permutex2var_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_permutexvar_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_set1_epi16 = ~f{~V{4q}~V{4q}Ss}
	_mm256_mask_set1_epi8 = ~f{~V{4q}~V{4q}Ic}
	_mm256_mask_shuffle_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_sll_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{2q}}
	_mm256_mask_slli_epi16 = ~f{~V{4q}~V{4q}S~V{4q}i}
	_mm256_mask_sllv_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_sra_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{2q}}
	_mm256_mask_srai_epi16 = ~f{~V{4q}~V{4q}S~V{4q}i}
	_mm256_mask_srav_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_srl_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{2q}}
	_mm256_mask_srli_epi16 = ~f{~V{4q}~V{4q}S~V{4q}i}
	_mm256_mask_srlv_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_storeu_epi16 = ~f{v^vS~V{4q}}
	_mm256_mask_storeu_epi8 = ~f{v^vI~V{4q}}
	_mm256_mask_sub_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_sub_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_subs_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_subs_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_subs_epu16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_subs_epu8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_test_epi16_mask = ~f{SS~V{4q}~V{4q}}
	_mm256_mask_test_epi8_mask = ~f{II~V{4q}~V{4q}}
	_mm256_mask_testn_epi16_mask = ~f{SS~V{4q}~V{4q}}
	_mm256_mask_testn_epi8_mask = ~f{II~V{4q}~V{4q}}
	_mm256_mask_unpackhi_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_unpackhi_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_mask_unpacklo_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_unpacklo_epi8 = ~f{~V{4q}~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_abs_epi16 = ~f{~V{4q}S~V{4q}}
	_mm256_maskz_abs_epi8 = ~f{~V{4q}I~V{4q}}
	_mm256_maskz_add_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_add_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_adds_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_adds_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_adds_epu16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_adds_epu8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_avg_epu16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_avg_epu8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_broadcastb_epi8 = ~f{~V{4q}I~V{2q}}
	_mm256_maskz_broadcastw_epi16 = ~f{~V{4q}S~V{2q}}
	_mm256_maskz_cvtepi16_epi8 = ~f{~V{2q}S~V{4q}}
	_mm256_maskz_cvtepi8_epi16 = ~f{~V{4q}S~V{2q}}
	_mm256_maskz_cvtepu8_epi16 = ~f{~V{4q}S~V{2q}}
	_mm256_maskz_cvtsepi16_epi8 = ~f{~V{2q}S~V{4q}}
	_mm256_maskz_cvtusepi16_epi8 = ~f{~V{2q}S~V{4q}}
	_mm256_maskz_loadu_epi16 = ~f{~V{4q}S^v}
	_mm256_maskz_loadu_epi8 = ~f{~V{4q}I^v}
	_mm256_maskz_madd_epi16 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_maddubs_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_max_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_max_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_max_epu16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_max_epu8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_min_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_min_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_min_epu16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_min_epu8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_mov_epi16 = ~f{~V{4q}S~V{4q}}
	_mm256_maskz_mov_epi8 = ~f{~V{4q}I~V{4q}}
	_mm256_maskz_mulhi_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_mulhi_epu16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_mulhrs_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_mullo_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_packs_epi16 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_packs_epi32 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_packus_epi16 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_packus_epi32 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_permutex2var_epi16 = ~f{~V{4q}S~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_permutexvar_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_set1_epi16 = ~f{~V{4q}Ss}
	_mm256_maskz_set1_epi8 = ~f{~V{4q}Ic}
	_mm256_maskz_shuffle_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_sll_epi16 = ~f{~V{4q}S~V{4q}~V{2q}}
	_mm256_maskz_slli_epi16 = ~f{~V{4q}S~V{4q}i}
	_mm256_maskz_sllv_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_sra_epi16 = ~f{~V{4q}S~V{4q}~V{2q}}
	_mm256_maskz_srai_epi16 = ~f{~V{4q}S~V{4q}i}
	_mm256_maskz_srav_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_srl_epi16 = ~f{~V{4q}S~V{4q}~V{2q}}
	_mm256_maskz_srli_epi16 = ~f{~V{4q}S~V{4q}i}
	_mm256_maskz_srlv_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_sub_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_sub_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_subs_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_subs_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_subs_epu16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_subs_epu8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_unpackhi_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_unpackhi_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_maskz_unpacklo_epi16 = ~f{~V{4q}S~V{4q}~V{4q}}
	_mm256_maskz_unpacklo_epi8 = ~f{~V{4q}I~V{4q}~V{4q}}
	_mm256_movepi16_mask = ~f{S~V{4q}}
	_mm256_movepi8_mask = ~f{I~V{4q}}
	_mm256_movm_epi16 = ~f{~V{4q}S}
	_mm256_movm_epi8 = ~f{~V{4q}I}
	_mm256_permutex2var_epi16 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_permutexvar_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_sllv_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_srav_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_srlv_epi16 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_storeu_epi16 = ~f{v^v~V{4q}}
	_mm256_storeu_epi8 = ~f{v^v~V{4q}}
	_mm256_test_epi16_mask = ~f{S~V{4q}~V{4q}}
	_mm256_test_epi8_mask = ~f{I~V{4q}~V{4q}}
	_mm256_testn_epi16_mask = ~f{S~V{4q}~V{4q}}
	_mm256_testn_epi8_mask = ~f{I~V{4q}~V{4q}}
	_mm_cvtepi16_epi8 = ~f{~V{2q}~V{2q}}
	_mm_cvtsepi16_epi8 = ~f{~V{2q}~V{2q}}
	_mm_cvtusepi16_epi8 = ~f{~V{2q}~V{2q}}
	_mm_loadu_epi16 = ~f{~V{2q}^v}
	_mm_loadu_epi8 = ~f{~V{2q}^v}
	_mm_mask2_permutex2var_epi16 = ~f{~V{2q}~V{2q}~V{2q}C~V{2q}}
	_mm_mask_abs_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_abs_epi8 = ~f{~V{2q}~V{2q}S~V{2q}}
	_mm_mask_add_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_add_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_adds_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_adds_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_adds_epu16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_adds_epu8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_avg_epu16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_avg_epu8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_blend_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_mask_blend_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_mask_broadcastb_epi8 = ~f{~V{2q}~V{2q}S~V{2q}}
	_mm_mask_broadcastw_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi16_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi16_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_cvtepi8_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepu8_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtsepi16_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtsepi16_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_cvtusepi16_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtusepi16_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_loadu_epi16 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_loadu_epi8 = ~f{~V{2q}~V{2q}S^v}
	_mm_mask_madd_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_maddubs_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_max_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_max_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_max_epu16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_max_epu8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_min_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_min_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_min_epu16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_min_epu8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_mov_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_mov_epi8 = ~f{~V{2q}~V{2q}S~V{2q}}
	_mm_mask_mulhi_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_mulhi_epu16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_mulhrs_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_mullo_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_packs_epi16 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_packs_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_packus_epi16 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_packus_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_permutex2var_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_permutexvar_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_set1_epi16 = ~f{~V{2q}~V{2q}Cs}
	_mm_mask_set1_epi8 = ~f{~V{2q}~V{2q}Sc}
	_mm_mask_shuffle_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_sll_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_slli_epi16 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_sllv_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sra_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srai_epi16 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_srav_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srl_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srli_epi16 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_srlv_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_storeu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_storeu_epi8 = ~f{v^vS~V{2q}}
	_mm_mask_sub_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sub_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_subs_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_subs_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_subs_epu16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_subs_epu8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_test_epi16_mask = ~f{CC~V{2q}~V{2q}}
	_mm_mask_test_epi8_mask = ~f{SS~V{2q}~V{2q}}
	_mm_mask_testn_epi16_mask = ~f{CC~V{2q}~V{2q}}
	_mm_mask_testn_epi8_mask = ~f{SS~V{2q}~V{2q}}
	_mm_mask_unpackhi_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_unpackhi_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_mask_unpacklo_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_unpacklo_epi8 = ~f{~V{2q}~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_abs_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_abs_epi8 = ~f{~V{2q}S~V{2q}}
	_mm_maskz_add_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_add_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_adds_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_adds_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_adds_epu16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_adds_epu8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_avg_epu16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_avg_epu8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_broadcastb_epi8 = ~f{~V{2q}S~V{2q}}
	_mm_maskz_broadcastw_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi16_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi8_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepu8_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtsepi16_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtusepi16_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_loadu_epi16 = ~f{~V{2q}C^v}
	_mm_maskz_loadu_epi8 = ~f{~V{2q}S^v}
	_mm_maskz_madd_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_maddubs_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_max_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_max_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_max_epu16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_max_epu8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_min_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_min_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_min_epu16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_min_epu8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_mov_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_mov_epi8 = ~f{~V{2q}S~V{2q}}
	_mm_maskz_mulhi_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_mulhi_epu16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_mulhrs_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_mullo_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_packs_epi16 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_packs_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_packus_epi16 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_packus_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_permutex2var_epi16 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_permutexvar_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_set1_epi16 = ~f{~V{2q}Cs}
	_mm_maskz_set1_epi8 = ~f{~V{2q}Sc}
	_mm_maskz_shuffle_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_sll_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_slli_epi16 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_sllv_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sra_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srai_epi16 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_srav_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srl_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srli_epi16 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_srlv_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sub_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sub_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_subs_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_subs_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_subs_epu16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_subs_epu8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_unpackhi_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_unpackhi_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_maskz_unpacklo_epi16 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_unpacklo_epi8 = ~f{~V{2q}S~V{2q}~V{2q}}
	_mm_movepi16_mask = ~f{C~V{2q}}
	_mm_movepi8_mask = ~f{S~V{2q}}
	_mm_movm_epi16 = ~f{~V{2q}C}
	_mm_movm_epi8 = ~f{~V{2q}S}
	_mm_permutex2var_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_permutexvar_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sllv_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srav_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srlv_epi16 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_storeu_epi16 = ~f{v^v~V{2q}}
	_mm_storeu_epi8 = ~f{v^v~V{2q}}
	_mm_test_epi16_mask = ~f{C~V{2q}~V{2q}}
	_mm_test_epi8_mask = ~f{S~V{2q}~V{2q}}
	_mm_testn_epi16_mask = ~f{C~V{2q}~V{2q}}
	_mm_testn_epi8_mask = ~f{S~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImagePickerController.h
	UIImageWriteToSavedPhotosAlbum = ~f{v@@:^v}
	UISaveVideoAtPathToSavedPhotosAlbum = ~f{v@@:^v}
	UIVideoAtPathIsCompatibleWithSavedPhotosAlbum = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVImageBuffer.h
	CVColorPrimariesGetIntegerCodePointForString = ~f{i^v}
	CVColorPrimariesGetStringForIntegerCodePoint = ~f{^vi}
	CVImageBufferCreateColorSpaceFromAttachments = ~f{^v^v}
	CVImageBufferGetCleanRect = ~f{{={=dd}{=dd}}^v}
	CVImageBufferGetDisplaySize = ~f{{=dd}^v}
	CVImageBufferGetEncodedSize = ~f{{=dd}^v}
	CVImageBufferIsFlipped = ~f{C^v}
	CVTransferFunctionGetIntegerCodePointForString = ~f{i^v}
	CVTransferFunctionGetStringForIntegerCodePoint = ~f{^vi}
	CVYCbCrMatrixGetIntegerCodePointForString = ~f{i^v}
	CVYCbCrMatrixGetStringForIntegerCodePoint = ~f{^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/content_context.h
	nw_content_context_copy_antecedent = ~f{@@}
	nw_content_context_copy_protocol_metadata = ~f{@@@}
	nw_content_context_create = ~f{@^c}
	nw_content_context_foreach_protocol_metadata = ~f{v@%~f{v@@}}
	nw_content_context_get_expiration_milliseconds = ~f{Q@}
	nw_content_context_get_identifier = ~f{^c@}
	nw_content_context_get_is_final = ~f{B@}
	nw_content_context_get_relative_priority = ~f{d@}
	nw_content_context_set_antecedent = ~f{v@@}
	nw_content_context_set_expiration_milliseconds = ~f{v@Q}
	nw_content_context_set_is_final = ~f{v@B}
	nw_content_context_set_metadata_for_protocol = ~f{v@@}
	nw_content_context_set_relative_priority = ~f{v@d}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKMathUtils.h
	GLKMathDegreesToRadians = ~f{ff}
	GLKMathProject = ~f{{=fff}{=fff}{=ffffffffffffffff}{=ffffffffffffffff}^i}
	GLKMathRadiansToDegrees = ~f{ff}
	GLKMathUnproject = ~f{{=fff}{=fff}{=ffffffffffffffff}{=ffffffffffffffff}^i^B}
	NSStringFromGLKMatrix2 = ~f{@{=ffffffff}}
	NSStringFromGLKMatrix3 = ~f{@{=fffffffff}}
	NSStringFromGLKMatrix4 = ~f{@{=ffffffffffffffff}}
	NSStringFromGLKQuaternion = ~f{@{=ffff}}
	NSStringFromGLKVector2 = ~f{@{=ff}}
	NSStringFromGLKVector3 = ~f{@{=fff}}
	NSStringFromGLKVector4 = ~f{@{=ffff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/IOSurface.framework/Headers/IOSurfaceRef.h
	IOSurfaceAlignProperty = ~f{L^vL}
	IOSurfaceAllowsPixelSizeCasting = ~f{C^v}
	IOSurfaceCopyAllValues = ~f{^v^v}
	IOSurfaceCopyValue = ~f{^v^v^v}
	IOSurfaceCreate = ~f{^v^v}
	IOSurfaceCreateMachPort = ~f{I^v}
	IOSurfaceDecrementUseCount = ~f{v^v}
	IOSurfaceGetAllocSize = ~f{L^v}
	IOSurfaceGetBaseAddress = ~f{^v^v}
	IOSurfaceGetBaseAddressOfPlane = ~f{^v^vL}
	IOSurfaceGetBitDepthOfComponentOfPlane = ~f{L^vLL}
	IOSurfaceGetBitOffsetOfComponentOfPlane = ~f{L^vLL}
	IOSurfaceGetBytesPerElement = ~f{L^v}
	IOSurfaceGetBytesPerElementOfPlane = ~f{L^vL}
	IOSurfaceGetBytesPerRow = ~f{L^v}
	IOSurfaceGetBytesPerRowOfPlane = ~f{L^vL}
	IOSurfaceGetElementHeight = ~f{L^v}
	IOSurfaceGetElementHeightOfPlane = ~f{L^vL}
	IOSurfaceGetElementWidth = ~f{L^v}
	IOSurfaceGetElementWidthOfPlane = ~f{L^vL}
	IOSurfaceGetHeight = ~f{L^v}
	IOSurfaceGetHeightOfPlane = ~f{L^vL}
	IOSurfaceGetID = ~f{I^v}
	IOSurfaceGetNameOfComponentOfPlane = ~f{i^vLL}
	IOSurfaceGetNumberOfComponentsOfPlane = ~f{L^vL}
	IOSurfaceGetPixelFormat = ~f{I^v}
	IOSurfaceGetPlaneCount = ~f{L^v}
	IOSurfaceGetPropertyAlignment = ~f{L^v}
	IOSurfaceGetPropertyMaximum = ~f{L^v}
	IOSurfaceGetRangeOfComponentOfPlane = ~f{i^vLL}
	IOSurfaceGetSeed = ~f{I^v}
	IOSurfaceGetSubsampling = ~f{i^v}
	IOSurfaceGetTypeID = ~f{L}
	IOSurfaceGetTypeOfComponentOfPlane = ~f{i^vLL}
	IOSurfaceGetUseCount = ~f{i^v}
	IOSurfaceGetWidth = ~f{L^v}
	IOSurfaceGetWidthOfPlane = ~f{L^vL}
	IOSurfaceIncrementUseCount = ~f{v^v}
	IOSurfaceIsInUse = ~f{C^v}
	IOSurfaceLock = ~f{i^vI^I}
	IOSurfaceLookup = ~f{^vI}
	IOSurfaceLookupFromMachPort = ~f{^vI}
	IOSurfaceRemoveAllValues = ~f{v^v}
	IOSurfaceRemoveValue = ~f{v^v^v}
	IOSurfaceSetPurgeable = ~f{i^vI^I}
	IOSurfaceSetValue = ~f{v^v^v^v}
	IOSurfaceSetValues = ~f{v^v^v}
	IOSurfaceUnlock = ~f{i^vI^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/activity.h
	_os_activity_create = ~f{@^v^c@I}
	_os_activity_initiate = ~f{v^v^cI%~f{v}}
	_os_activity_initiate_f = ~f{v^v^cI^v^~f{v^v}}
	_os_activity_label_useraction = ~f{v^v^c}
	_os_activity_set_breadcrumb = ~f{v^v^c}
	_os_activity_start = ~f{@^v^cI}
	os_activity_apply = ~f{v@%~f{v}}
	os_activity_apply_f = ~f{v@^v^~f{v^v}}
	os_activity_end = ~f{v@}
	os_activity_get_active = ~f{I^Q^I}
	os_activity_get_identifier = ~f{Q@^Q}
	os_activity_scope_enter = ~f{v@^v}
	os_activity_scope_leave = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MediaToolbox.framework/Headers/MTAudioProcessingTap.h
	MTAudioProcessingTapCreate = ~f{i^v^vI^^v}
	MTAudioProcessingTapGetSourceAudio = ~f{i^vl^v^I^v^l}
	MTAudioProcessingTapGetStorage = ~f{^v^v}
	MTAudioProcessingTapGetTypeID = ~f{L}
/usr/local/lib/clang/9.0.1/include/avx512ifmaintrin.h
	_mm512_madd52hi_epu64 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_madd52lo_epu64 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_mask_madd52hi_epu64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_mask_madd52lo_epu64 = ~f{~V{8q}~V{8q}C~V{8q}~V{8q}}
	_mm512_maskz_madd52hi_epu64 = ~f{~V{8q}C~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_madd52lo_epu64 = ~f{~V{8q}C~V{8q}~V{8q}~V{8q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/stringlist.h
	sl_add = ~f{i^v^c}
	sl_find = ~f{^c^v^c}
	sl_free = ~f{v^vi}
	sl_init = ~f{^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/VideoToolbox.framework/Headers/VTSession.h
	VTSessionCopyProperty = ~f{i^v^v^v^v}
	VTSessionCopySerializableProperties = ~f{i^v^v^^v}
	VTSessionCopySupportedPropertyDictionary = ~f{i^v^^v}
	VTSessionSetProperties = ~f{i^v^v}
	VTSessionSetProperty = ~f{i^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecTrust.h
	SecTrustCopyCustomAnchorCertificates = ~f{i^v^^v}
	SecTrustCopyExceptions = ~f{^v^v}
	SecTrustCopyPolicies = ~f{i^v^^v}
	SecTrustCopyProperties = ~f{^v^v}
	SecTrustCopyPublicKey = ~f{^v^v}
	SecTrustCopyResult = ~f{^v^v}
	SecTrustCreateWithCertificates = ~f{i^v^v^^v}
	SecTrustEvaluate = ~f{i^v^I}
	SecTrustEvaluateAsync = ~f{i^v@%~f{v^vI}}
	SecTrustEvaluateAsyncWithError = ~f{i^v@%~f{v^vB^v}}
	SecTrustEvaluateWithError = ~f{B^v^^v}
	SecTrustGetCertificateAtIndex = ~f{^v^vl}
	SecTrustGetCertificateCount = ~f{l^v}
	SecTrustGetNetworkFetchAllowed = ~f{i^v^C}
	SecTrustGetTrustResult = ~f{i^v^I}
	SecTrustGetTypeID = ~f{L}
	SecTrustGetVerifyTime = ~f{d^v}
	SecTrustSetAnchorCertificates = ~f{i^v^v}
	SecTrustSetAnchorCertificatesOnly = ~f{i^vC}
	SecTrustSetExceptions = ~f{B^v^v}
	SecTrustSetNetworkFetchAllowed = ~f{i^vC}
	SecTrustSetOCSPResponse = ~f{i^v^v}
	SecTrustSetPolicies = ~f{i^v^v}
	SecTrustSetSignedCertificateTimestamps = ~f{i^v^v}
	SecTrustSetVerifyDate = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Alpha.h
	vImageAlphaBlend_ARGB8888 = ~f{l^v^v^vI}
	vImageAlphaBlend_ARGBFFFF = ~f{l^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888 = ~f{l^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF = ~f{l^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8 = ~f{l^v^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF = ~f{l^v^v^v^vI}
	vImageAlphaBlend_Planar8 = ~f{l^v^v^v^v^v^vI}
	vImageAlphaBlend_PlanarF = ~f{l^v^v^v^v^v^vI}
	vImageClipToAlpha_ARGB8888 = ~f{l^v^vI}
	vImageClipToAlpha_ARGBFFFF = ~f{l^v^vI}
	vImageClipToAlpha_Planar8 = ~f{l^v^v^vI}
	vImageClipToAlpha_PlanarF = ~f{l^v^v^vI}
	vImageClipToAlpha_RGBA8888 = ~f{l^v^vI}
	vImageClipToAlpha_RGBAFFFF = ~f{l^v^vI}
	vImagePremultipliedAlphaBlendDarken_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendLighten_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendMultiply_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendScreen_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendWithPermute_ARGB8888 = ~f{l^v^v^v^CBI}
	vImagePremultipliedAlphaBlendWithPermute_RGBA8888 = ~f{l^v^v^v^CBI}
	vImagePremultipliedAlphaBlend_ARGB8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_ARGBFFFF = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_BGRA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_BGRAFFFF = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_Planar8 = ~f{l^v^v^v^vI}
	vImagePremultipliedAlphaBlend_PlanarF = ~f{l^v^v^v^vI}
	vImagePremultipliedConstAlphaBlend_ARGB8888 = ~f{l^vC^v^vI}
	vImagePremultipliedConstAlphaBlend_ARGBFFFF = ~f{l^vf^v^vI}
	vImagePremultipliedConstAlphaBlend_Planar8 = ~f{l^vC^v^v^vI}
	vImagePremultipliedConstAlphaBlend_PlanarF = ~f{l^vf^v^v^vI}
	vImagePremultiplyData_ARGB16Q12 = ~f{l^v^vI}
	vImagePremultiplyData_ARGB16U = ~f{l^v^vI}
	vImagePremultiplyData_ARGB8888 = ~f{l^v^vI}
	vImagePremultiplyData_ARGBFFFF = ~f{l^v^vI}
	vImagePremultiplyData_Planar8 = ~f{l^v^v^vI}
	vImagePremultiplyData_PlanarF = ~f{l^v^v^vI}
	vImagePremultiplyData_RGBA16Q12 = ~f{l^v^vI}
	vImagePremultiplyData_RGBA16U = ~f{l^v^vI}
	vImagePremultiplyData_RGBA8888 = ~f{l^v^vI}
	vImagePremultiplyData_RGBAFFFF = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGB16Q12 = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGB16U = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGB8888 = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGBFFFF = ~f{l^v^vI}
	vImageUnpremultiplyData_Planar8 = ~f{l^v^v^vI}
	vImageUnpremultiplyData_PlanarF = ~f{l^v^v^vI}
	vImageUnpremultiplyData_RGBA16Q12 = ~f{l^v^vI}
	vImageUnpremultiplyData_RGBA16U = ~f{l^v^vI}
	vImageUnpremultiplyData_RGBA8888 = ~f{l^v^vI}
	vImageUnpremultiplyData_RGBAFFFF = ~f{l^v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/objc/message.h
	_objc_msgForward = ~f{v}
	_objc_msgForward_stret = ~f{v}
	method_invoke = ~f{v}
	method_invoke_stret = ~f{v}
	objc_msgSend = ~f{v}
	objc_msgSendSuper = ~f{v}
	objc_msgSendSuper_stret = ~f{v}
	objc_msgSend_fp2ret = ~f{v}
	objc_msgSend_fpret = ~f{v}
	objc_msgSend_stret = ~f{v}
	objc_msgSendv = ~f{@@:L^v}
	objc_msgSendv_stret = ~f{v^v@:L^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/ws_options.h
	nw_protocol_copy_ws_definition = ~f{@}
	nw_protocol_metadata_is_ws = ~f{B@}
	nw_ws_create_metadata = ~f{@i}
	nw_ws_create_options = ~f{@I}
	nw_ws_metadata_copy_server_response = ~f{@@}
	nw_ws_metadata_get_close_code = ~f{I@}
	nw_ws_metadata_get_opcode = ~f{i@}
	nw_ws_metadata_set_close_code = ~f{v@I}
	nw_ws_metadata_set_pong_handler = ~f{v@@%~f{v@}}
	nw_ws_options_add_additional_header = ~f{v@^c^c}
	nw_ws_options_add_subprotocol = ~f{v@^c}
	nw_ws_options_set_auto_reply_ping = ~f{v@B}
	nw_ws_options_set_client_request_handler = ~f{v@@%~f{@@}}
	nw_ws_options_set_maximum_message_size = ~f{v@L}
	nw_ws_options_set_skip_handshake = ~f{v@B}
	nw_ws_request_enumerate_additional_headers = ~f{B@%~f{B^c^c}}
	nw_ws_request_enumerate_subprotocols = ~f{B@%~f{B^c}}
	nw_ws_response_add_additional_header = ~f{v@^c^c}
	nw_ws_response_create = ~f{@I^c}
	nw_ws_response_enumerate_additional_headers = ~f{B@%~f{B^c^c}}
	nw_ws_response_get_selected_subprotocol = ~f{^c@}
	nw_ws_response_get_status = ~f{I@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_stdio.h
	asprintf_l = ~f{i^^c^v^c$}
	dprintf_l = ~f{ii^v^c$}
	fprintf_l = ~f{i^v^v^c$}
	fscanf_l = ~f{i^v^v^c$}
	printf_l = ~f{i^v^c$}
	scanf_l = ~f{i^v^c$}
	snprintf_l = ~f{i^cL^v^c$}
	sprintf_l = ~f{i^c^v^c$}
	sscanf_l = ~f{i^c^v^c$}
	vasprintf_l = ~f{i^^c^v^c^v}
	vdprintf_l = ~f{ii^v^c^v}
	vfprintf_l = ~f{i^v^v^c^v}
	vfscanf_l = ~f{i^v^v^c^v}
	vprintf_l = ~f{i^v^c^v}
	vscanf_l = ~f{i^v^c^v}
	vsnprintf_l = ~f{i^cL^v^c^v}
	vsprintf_l = ~f{i^c^v^c^v}
	vsscanf_l = ~f{i^c^v^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIGraphics.h
	UIGraphicsAddPDFContextDestinationAtPoint = ~f{v@{=dd}}
	UIGraphicsBeginImageContext = ~f{v{=dd}}
	UIGraphicsBeginImageContextWithOptions = ~f{v{=dd}Bd}
	UIGraphicsBeginPDFContextToData = ~f{v@{={=dd}{=dd}}@}
	UIGraphicsBeginPDFContextToFile = ~f{B@{={=dd}{=dd}}@}
	UIGraphicsBeginPDFPage = ~f{v}
	UIGraphicsBeginPDFPageWithInfo = ~f{v{={=dd}{=dd}}@}
	UIGraphicsEndImageContext = ~f{v}
	UIGraphicsEndPDFContext = ~f{v}
	UIGraphicsGetCurrentContext = ~f{^v}
	UIGraphicsGetImageFromCurrentImageContext = ~f{@}
	UIGraphicsGetPDFContextBounds = ~f{{={=dd}{=dd}}}
	UIGraphicsPopContext = ~f{v}
	UIGraphicsPushContext = ~f{v^v}
	UIGraphicsSetPDFContextDestinationForRect = ~f{v@{={=dd}{=dd}}}
	UIGraphicsSetPDFContextURLForRect = ~f{v@{={=dd}{=dd}}}
	UIRectClip = ~f{v{={=dd}{=dd}}}
	UIRectFill = ~f{v{={=dd}{=dd}}}
	UIRectFillUsingBlendMode = ~f{v{={=dd}{=dd}}i}
	UIRectFrame = ~f{v{={=dd}{=dd}}}
	UIRectFrameUsingBlendMode = ~f{v{={=dd}{=dd}}i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/acl.h
	acl_add_flag_np = ~f{i^vI}
	acl_add_perm = ~f{i^vI}
	acl_calc_mask = ~f{i^^v}
	acl_clear_flags_np = ~f{i^v}
	acl_clear_perms = ~f{i^v}
	acl_copy_entry = ~f{i^v^v}
	acl_copy_ext = ~f{l^v^vl}
	acl_copy_ext_native = ~f{l^v^vl}
	acl_copy_int = ~f{^v^v}
	acl_copy_int_native = ~f{^v^v}
	acl_create_entry = ~f{i^^v^^v}
	acl_create_entry_np = ~f{i^^v^^vi}
	acl_delete_def_file = ~f{i^c}
	acl_delete_entry = ~f{i^v^v}
	acl_delete_flag_np = ~f{i^vI}
	acl_delete_perm = ~f{i^vI}
	acl_dup = ~f{^v^v}
	acl_free = ~f{i^v}
	acl_from_text = ~f{^v^c}
	acl_get_entry = ~f{i^vi^^v}
	acl_get_fd = ~f{^vi}
	acl_get_fd_np = ~f{^viI}
	acl_get_file = ~f{^v^cI}
	acl_get_flag_np = ~f{i^vI}
	acl_get_flagset_np = ~f{i^v^^v}
	acl_get_link_np = ~f{^v^cI}
	acl_get_perm_np = ~f{i^vI}
	acl_get_permset = ~f{i^v^^v}
	acl_get_permset_mask_np = ~f{i^v^Q}
	acl_get_qualifier = ~f{^v^v}
	acl_get_tag_type = ~f{i^v^I}
	acl_init = ~f{^vi}
	acl_maximal_permset_mask_np = ~f{i^Q}
	acl_set_fd = ~f{ii^v}
	acl_set_fd_np = ~f{ii^vI}
	acl_set_file = ~f{i^cI^v}
	acl_set_flagset_np = ~f{i^v^v}
	acl_set_link_np = ~f{i^cI^v}
	acl_set_permset = ~f{i^v^v}
	acl_set_permset_mask_np = ~f{i^vQ}
	acl_set_qualifier = ~f{i^v^v}
	acl_set_tag_type = ~f{i^vI}
	acl_size = ~f{l^v}
	acl_to_text = ~f{^c^v^l}
	acl_valid = ~f{i^v}
	acl_valid_fd_np = ~f{iiI^v}
	acl_valid_file_np = ~f{i^cI^v}
	acl_valid_link_np = ~f{i^cI^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/valid.h
	xmlAddAttributeDecl = ~f{^v^v^v^C^C^CII^C^v}
	xmlAddElementDecl = ~f{^v^v^v^CI^v}
	xmlAddID = ~f{^v^v^v^C^v}
	xmlAddNotationDecl = ~f{^v^v^v^C^C^C}
	xmlAddRef = ~f{^v^v^v^C^v}
	xmlCopyAttributeTable = ~f{^v^v}
	xmlCopyDocElementContent = ~f{^v^v^v}
	xmlCopyElementContent = ~f{^v^v}
	xmlCopyElementTable = ~f{^v^v}
	xmlCopyEnumeration = ~f{^v^v}
	xmlCopyNotationTable = ~f{^v^v}
	xmlCreateEnumeration = ~f{^v^C}
	xmlDumpAttributeDecl = ~f{v^v^v}
	xmlDumpAttributeTable = ~f{v^v^v}
	xmlDumpElementDecl = ~f{v^v^v}
	xmlDumpElementTable = ~f{v^v^v}
	xmlDumpNotationDecl = ~f{v^v^v}
	xmlDumpNotationTable = ~f{v^v^v}
	xmlFreeAttributeTable = ~f{v^v}
	xmlFreeDocElementContent = ~f{v^v^v}
	xmlFreeElementContent = ~f{v^v}
	xmlFreeElementTable = ~f{v^v}
	xmlFreeEnumeration = ~f{v^v}
	xmlFreeIDTable = ~f{v^v}
	xmlFreeNotationTable = ~f{v^v}
	xmlFreeRefTable = ~f{v^v}
	xmlFreeValidCtxt = ~f{v^v}
	xmlGetDtdAttrDesc = ~f{^v^v^C^C}
	xmlGetDtdElementDesc = ~f{^v^v^C}
	xmlGetDtdNotationDesc = ~f{^v^v^C}
	xmlGetDtdQAttrDesc = ~f{^v^v^C^C^C}
	xmlGetDtdQElementDesc = ~f{^v^v^C^C}
	xmlGetID = ~f{^v^v^C}
	xmlGetRefs = ~f{^v^v^C}
	xmlIsID = ~f{i^v^v^v}
	xmlIsMixedElement = ~f{i^v^C}
	xmlIsRef = ~f{i^v^v^v}
	xmlNewDocElementContent = ~f{^v^v^CI}
	xmlNewElementContent = ~f{^v^CI}
	xmlNewValidCtxt = ~f{^v}
	xmlRemoveID = ~f{i^v^v}
	xmlRemoveRef = ~f{i^v^v}
	xmlSnprintfElementContent = ~f{v^ci^vi}
	xmlSprintfElementContent = ~f{v^c^vi}
	xmlValidBuildContentModel = ~f{i^v^v}
	xmlValidCtxtNormalizeAttributeValue = ~f{^C^v^v^v^C^C}
	xmlValidGetPotentialChildren = ~f{i^v^^C^ii}
	xmlValidGetValidElements = ~f{i^v^v^^Ci}
	xmlValidNormalizeAttributeValue = ~f{^C^v^v^C^C}
	xmlValidateAttributeDecl = ~f{i^v^v^v}
	xmlValidateAttributeValue = ~f{iI^C}
	xmlValidateDocument = ~f{i^v^v}
	xmlValidateDocumentFinal = ~f{i^v^v}
	xmlValidateDtd = ~f{i^v^v^v}
	xmlValidateDtdFinal = ~f{i^v^v}
	xmlValidateElement = ~f{i^v^v^v}
	xmlValidateElementDecl = ~f{i^v^v^v}
	xmlValidateNameValue = ~f{i^C}
	xmlValidateNamesValue = ~f{i^C}
	xmlValidateNmtokenValue = ~f{i^C}
	xmlValidateNmtokensValue = ~f{i^C}
	xmlValidateNotationDecl = ~f{i^v^v^v}
	xmlValidateNotationUse = ~f{i^v^v^C}
	xmlValidateOneAttribute = ~f{i^v^v^v^v^C}
	xmlValidateOneElement = ~f{i^v^v^v}
	xmlValidateOneNamespace = ~f{i^v^v^v^C^v^C}
	xmlValidatePopElement = ~f{i^v^v^v^C}
	xmlValidatePushCData = ~f{i^v^Ci}
	xmlValidatePushElement = ~f{i^v^v^v^C}
	xmlValidateRoot = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/MusicPlayer.h
	DisposeMusicEventIterator = ~f{i^v}
	DisposeMusicPlayer = ~f{i^v}
	DisposeMusicSequence = ~f{i^v}
	MusicEventIteratorDeleteEvent = ~f{i^v}
	MusicEventIteratorGetEventInfo = ~f{i^v^d^I^^v^I}
	MusicEventIteratorHasCurrentEvent = ~f{i^v^C}
	MusicEventIteratorHasNextEvent = ~f{i^v^C}
	MusicEventIteratorHasPreviousEvent = ~f{i^v^C}
	MusicEventIteratorNextEvent = ~f{i^v}
	MusicEventIteratorPreviousEvent = ~f{i^v}
	MusicEventIteratorSeek = ~f{i^vd}
	MusicEventIteratorSetEventInfo = ~f{i^vI^v}
	MusicEventIteratorSetEventTime = ~f{i^vd}
	MusicPlayerGetBeatsForHostTime = ~f{i^vQ^d}
	MusicPlayerGetHostTimeForBeats = ~f{i^vd^Q}
	MusicPlayerGetPlayRateScalar = ~f{i^v^d}
	MusicPlayerGetSequence = ~f{i^v^^v}
	MusicPlayerGetTime = ~f{i^v^d}
	MusicPlayerIsPlaying = ~f{i^v^C}
	MusicPlayerPreroll = ~f{i^v}
	MusicPlayerSetPlayRateScalar = ~f{i^vd}
	MusicPlayerSetSequence = ~f{i^v^v}
	MusicPlayerSetTime = ~f{i^vd}
	MusicPlayerStart = ~f{i^v}
	MusicPlayerStop = ~f{i^v}
	MusicSequenceBarBeatTimeToBeats = ~f{i^v^v^d}
	MusicSequenceBeatsToBarBeatTime = ~f{i^vdI^v}
	MusicSequenceDisposeTrack = ~f{i^v^v}
	MusicSequenceFileCreate = ~f{i^v^vIIs}
	MusicSequenceFileCreateData = ~f{i^vIIs^^v}
	MusicSequenceFileLoad = ~f{i^v^vII}
	MusicSequenceFileLoadData = ~f{i^v^vII}
	MusicSequenceGetAUGraph = ~f{i^v^^v}
	MusicSequenceGetBeatsForSeconds = ~f{i^vd^d}
	MusicSequenceGetIndTrack = ~f{i^vI^^v}
	MusicSequenceGetInfoDictionary = ~f{^v^v}
	MusicSequenceGetSMPTEResolution = ~f{vs^c^C}
	MusicSequenceGetSecondsForBeats = ~f{i^vd^d}
	MusicSequenceGetSequenceType = ~f{i^v^I}
	MusicSequenceGetTempoTrack = ~f{i^v^^v}
	MusicSequenceGetTrackCount = ~f{i^v^I}
	MusicSequenceGetTrackIndex = ~f{i^v^v^I}
	MusicSequenceLoadSMFDataWithFlags = ~f{i^v^vI}
	MusicSequenceLoadSMFWithFlags = ~f{i^v^vI}
	MusicSequenceNewTrack = ~f{i^v^^v}
	MusicSequenceReverse = ~f{i^v}
	MusicSequenceSaveMIDIFile = ~f{i^v^v^vSI}
	MusicSequenceSaveSMFData = ~f{i^v^^vS}
	MusicSequenceSetAUGraph = ~f{i^v^v}
	MusicSequenceSetMIDIEndpoint = ~f{i^vI}
	MusicSequenceSetSMPTEResolution = ~f{scC}
	MusicSequenceSetSequenceType = ~f{i^vI}
	MusicSequenceSetUserCallback = ~f{i^v^~f{v^v^v^vd^vdd}^v}
	MusicTrackClear = ~f{i^vdd}
	MusicTrackCopyInsert = ~f{i^vdd^vd}
	MusicTrackCut = ~f{i^vdd}
	MusicTrackGetDestMIDIEndpoint = ~f{i^v^I}
	MusicTrackGetDestNode = ~f{i^v^i}
	MusicTrackGetProperty = ~f{i^vI^v^I}
	MusicTrackGetSequence = ~f{i^v^^v}
	MusicTrackMerge = ~f{i^vdd^vd}
	MusicTrackMoveEvents = ~f{i^vddd}
	MusicTrackNewAUPresetEvent = ~f{i^vd^v}
	MusicTrackNewExtendedNoteEvent = ~f{i^vd^v}
	MusicTrackNewExtendedTempoEvent = ~f{i^vdd}
	MusicTrackNewMIDIChannelEvent = ~f{i^vd^v}
	MusicTrackNewMIDINoteEvent = ~f{i^vd^v}
	MusicTrackNewMIDIRawDataEvent = ~f{i^vd^v}
	MusicTrackNewMetaEvent = ~f{i^vd^v}
	MusicTrackNewParameterEvent = ~f{i^vd^v}
	MusicTrackNewUserEvent = ~f{i^vd^v}
	MusicTrackSetDestMIDIEndpoint = ~f{i^vI}
	MusicTrackSetDestNode = ~f{i^vi}
	MusicTrackSetProperty = ~f{i^vI^vI}
	NewMusicEventIterator = ~f{i^v^^v}
	NewMusicPlayer = ~f{i^^v}
	NewMusicSequence = ~f{i^^v}
	NewMusicTrackFrom = ~f{i^vdd^^v}
/usr/local/lib/clang/9.0.1/include/clflushoptintrin.h
	_mm_clflushopt = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GLKit.framework/Headers/GLKQuaternion.h
	GLKQuaternionAdd = ~f{{=ffff}{=ffff}{=ffff}}
	GLKQuaternionAngle = ~f{f{=ffff}}
	GLKQuaternionAxis = ~f{{=fff}{=ffff}}
	GLKQuaternionConjugate = ~f{{=ffff}{=ffff}}
	GLKQuaternionInvert = ~f{{=ffff}{=ffff}}
	GLKQuaternionLength = ~f{f{=ffff}}
	GLKQuaternionMake = ~f{{=ffff}ffff}
	GLKQuaternionMakeWithAngleAndAxis = ~f{{=ffff}ffff}
	GLKQuaternionMakeWithAngleAndVector3Axis = ~f{{=ffff}f{=fff}}
	GLKQuaternionMakeWithArray = ~f{{=ffff}^f}
	GLKQuaternionMakeWithMatrix3 = ~f{{=ffff}{=fffffffff}}
	GLKQuaternionMakeWithMatrix4 = ~f{{=ffff}{=ffffffffffffffff}}
	GLKQuaternionMakeWithVector3 = ~f{{=ffff}{=fff}f}
	GLKQuaternionMultiply = ~f{{=ffff}{=ffff}{=ffff}}
	GLKQuaternionNormalize = ~f{{=ffff}{=ffff}}
	GLKQuaternionRotateVector3 = ~f{{=fff}{=ffff}{=fff}}
	GLKQuaternionRotateVector3Array = ~f{v{=ffff}^vL}
	GLKQuaternionRotateVector4 = ~f{{=ffff}{=ffff}{=ffff}}
	GLKQuaternionRotateVector4Array = ~f{v{=ffff}^vL}
	GLKQuaternionSlerp = ~f{{=ffff}{=ffff}{=ffff}f}
	GLKQuaternionSubtract = ~f{{=ffff}{=ffff}{=ffff}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h
	UIImageJPEGRepresentation = ~f{@@d}
	UIImagePNGRepresentation = ~f{@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFBitVector.h
	CFBitVectorContainsBit = ~f{C^v{=ll}I}
	CFBitVectorCreate = ~f{^v^v^Cl}
	CFBitVectorCreateCopy = ~f{^v^v^v}
	CFBitVectorCreateMutable = ~f{^v^vl}
	CFBitVectorCreateMutableCopy = ~f{^v^vl^v}
	CFBitVectorFlipBitAtIndex = ~f{v^vl}
	CFBitVectorFlipBits = ~f{v^v{=ll}}
	CFBitVectorGetBitAtIndex = ~f{I^vl}
	CFBitVectorGetBits = ~f{v^v{=ll}^C}
	CFBitVectorGetCount = ~f{l^v}
	CFBitVectorGetCountOfBit = ~f{l^v{=ll}I}
	CFBitVectorGetFirstIndexOfBit = ~f{l^v{=ll}I}
	CFBitVectorGetLastIndexOfBit = ~f{l^v{=ll}I}
	CFBitVectorGetTypeID = ~f{L}
	CFBitVectorSetAllBits = ~f{v^vI}
	CFBitVectorSetBitAtIndex = ~f{v^vlI}
	CFBitVectorSetBits = ~f{v^v{=ll}I}
	CFBitVectorSetCount = ~f{v^vl}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach_time.h
	mach_absolute_time = ~f{Q}
	mach_approximate_time = ~f{Q}
	mach_continuous_approximate_time = ~f{Q}
	mach_continuous_time = ~f{Q}
	mach_timebase_info = ~f{i^v}
	mach_wait_until = ~f{iQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/XCTestOverlayShims.h
	_XCTContextCurrent = ~f{@}
	_XCTContextDidFinishActivity = ~f{v@@}
	_XCTContextShouldStartActivity = ~f{B@@}
	_XCTContextWillStartActivity = ~f{@@@@}
	_XCTCurrentTestCase = ~f{@}
	_XCTRunThrowableBlockBridge = ~f{@%?}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/fnmatch.h
	fnmatch = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Alpha.h
	vImageAlphaBlend_ARGB8888 = ~f{l^v^v^vI}
	vImageAlphaBlend_ARGBFFFF = ~f{l^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888 = ~f{l^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF = ~f{l^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8 = ~f{l^v^v^v^vI}
	vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF = ~f{l^v^v^v^vI}
	vImageAlphaBlend_Planar8 = ~f{l^v^v^v^v^v^vI}
	vImageAlphaBlend_PlanarF = ~f{l^v^v^v^v^v^vI}
	vImageClipToAlpha_ARGB8888 = ~f{l^v^vI}
	vImageClipToAlpha_ARGBFFFF = ~f{l^v^vI}
	vImageClipToAlpha_Planar8 = ~f{l^v^v^vI}
	vImageClipToAlpha_PlanarF = ~f{l^v^v^vI}
	vImageClipToAlpha_RGBA8888 = ~f{l^v^vI}
	vImageClipToAlpha_RGBAFFFF = ~f{l^v^vI}
	vImagePremultipliedAlphaBlendDarken_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendLighten_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendMultiply_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendScreen_RGBA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlendWithPermute_ARGB8888 = ~f{l^v^v^v^CBI}
	vImagePremultipliedAlphaBlendWithPermute_RGBA8888 = ~f{l^v^v^v^CBI}
	vImagePremultipliedAlphaBlend_ARGB8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_ARGBFFFF = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_BGRA8888 = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_BGRAFFFF = ~f{l^v^v^vI}
	vImagePremultipliedAlphaBlend_Planar8 = ~f{l^v^v^v^vI}
	vImagePremultipliedAlphaBlend_PlanarF = ~f{l^v^v^v^vI}
	vImagePremultipliedConstAlphaBlend_ARGB8888 = ~f{l^vC^v^vI}
	vImagePremultipliedConstAlphaBlend_ARGBFFFF = ~f{l^vf^v^vI}
	vImagePremultipliedConstAlphaBlend_Planar8 = ~f{l^vC^v^v^vI}
	vImagePremultipliedConstAlphaBlend_PlanarF = ~f{l^vf^v^v^vI}
	vImagePremultiplyData_ARGB16Q12 = ~f{l^v^vI}
	vImagePremultiplyData_ARGB16U = ~f{l^v^vI}
	vImagePremultiplyData_ARGB8888 = ~f{l^v^vI}
	vImagePremultiplyData_ARGBFFFF = ~f{l^v^vI}
	vImagePremultiplyData_Planar8 = ~f{l^v^v^vI}
	vImagePremultiplyData_PlanarF = ~f{l^v^v^vI}
	vImagePremultiplyData_RGBA16Q12 = ~f{l^v^vI}
	vImagePremultiplyData_RGBA16U = ~f{l^v^vI}
	vImagePremultiplyData_RGBA8888 = ~f{l^v^vI}
	vImagePremultiplyData_RGBAFFFF = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGB16Q12 = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGB16U = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGB8888 = ~f{l^v^vI}
	vImageUnpremultiplyData_ARGBFFFF = ~f{l^v^vI}
	vImageUnpremultiplyData_Planar8 = ~f{l^v^v^vI}
	vImageUnpremultiplyData_PlanarF = ~f{l^v^v^vI}
	vImageUnpremultiplyData_RGBA16Q12 = ~f{l^v^vI}
	vImageUnpremultiplyData_RGBA16U = ~f{l^v^vI}
	vImageUnpremultiplyData_RGBA8888 = ~f{l^v^vI}
	vImageUnpremultiplyData_RGBAFFFF = ~f{l^v^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/signal.h
	signal = ~f{^~f{vi}i^~f{vi}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/BNNS/bnns.h
	BNNSFilterApply = ~f{i^v^v^v}
	BNNSFilterApplyBatch = ~f{i^vL^vL^vL}
	BNNSFilterCreateConvolutionLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreateFullyConnectedLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreatePoolingLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreateVectorActivationLayer = ~f{^v^v^v^v^v}
	BNNSFilterDestroy = ~f{v^v}
/usr/local/lib/clang/9.0.1/include/xsavecintrin.h
	_xsavec = ~f{v^vQ}
	_xsavec64 = ~f{v^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMFormatDescription.h
	CMAudioFormatDescriptionCreate = ~f{i^v^vL^vL^v^v^^v}
	CMAudioFormatDescriptionCreateSummary = ~f{i^v^vI^^v}
	CMAudioFormatDescriptionEqual = ~f{C^v^vI^I}
	CMAudioFormatDescriptionGetChannelLayout = ~f{^v^v^L}
	CMAudioFormatDescriptionGetFormatList = ~f{^v^v^L}
	CMAudioFormatDescriptionGetMagicCookie = ~f{^v^v^L}
	CMAudioFormatDescriptionGetMostCompatibleFormat = ~f{^v^v}
	CMAudioFormatDescriptionGetRichestDecodableFormat = ~f{^v^v}
	CMAudioFormatDescriptionGetStreamBasicDescription = ~f{^v^v}
	CMFormatDescriptionCreate = ~f{i^vII^v^^v}
	CMFormatDescriptionEqual = ~f{C^v^v}
	CMFormatDescriptionEqualIgnoringExtensionKeys = ~f{C^v^v^v^v}
	CMFormatDescriptionGetExtension = ~f{^v^v^v}
	CMFormatDescriptionGetExtensions = ~f{^v^v}
	CMFormatDescriptionGetMediaSubType = ~f{I^v}
	CMFormatDescriptionGetMediaType = ~f{I^v}
	CMFormatDescriptionGetTypeID = ~f{L}
	CMMetadataFormatDescriptionCreateByMergingMetadataFormatDescriptions = ~f{i^v^v^v^^v}
	CMMetadataFormatDescriptionCreateWithKeys = ~f{i^vI^v^^v}
	CMMetadataFormatDescriptionCreateWithMetadataFormatDescriptionAndMetadataSpecifications = ~f{i^v^v^v^^v}
	CMMetadataFormatDescriptionCreateWithMetadataSpecifications = ~f{i^vI^v^^v}
	CMMetadataFormatDescriptionGetIdentifiers = ~f{^v^v}
	CMMetadataFormatDescriptionGetKeyWithLocalID = ~f{^v^vI}
	CMMuxedFormatDescriptionCreate = ~f{i^vI^v^^v}
	CMTextFormatDescriptionGetDefaultStyle = ~f{i^v^S^C^C^C^d^d}
	CMTextFormatDescriptionGetDefaultTextBox = ~f{i^vCd^v}
	CMTextFormatDescriptionGetDisplayFlags = ~f{i^v^I}
	CMTextFormatDescriptionGetFontName = ~f{i^vS^^v}
	CMTextFormatDescriptionGetJustification = ~f{i^v^c^c}
	CMTimeCodeFormatDescriptionCreate = ~f{i^vI{=qiIq}II^v^^v}
	CMTimeCodeFormatDescriptionGetFrameDuration = ~f{{=qiIq}^v}
	CMTimeCodeFormatDescriptionGetFrameQuanta = ~f{I^v}
	CMTimeCodeFormatDescriptionGetTimeCodeFlags = ~f{I^v}
	CMVideoFormatDescriptionCreate = ~f{i^vIii^v^^v}
	CMVideoFormatDescriptionCreateForImageBuffer = ~f{i^v^v^^v}
	CMVideoFormatDescriptionCreateFromH264ParameterSets = ~f{i^vL^^C^Li^^v}
	CMVideoFormatDescriptionCreateFromHEVCParameterSets = ~f{i^vL^^C^Li^v^^v}
	CMVideoFormatDescriptionGetCleanAperture = ~f{{={=dd}{=dd}}^vC}
	CMVideoFormatDescriptionGetDimensions = ~f{{=ii}^v}
	CMVideoFormatDescriptionGetExtensionKeysCommonWithImageBuffers = ~f{^v}
	CMVideoFormatDescriptionGetH264ParameterSetAtIndex = ~f{i^vL^^C^L^L^i}
	CMVideoFormatDescriptionGetHEVCParameterSetAtIndex = ~f{i^vL^^C^L^L^i}
	CMVideoFormatDescriptionGetPresentationDimensions = ~f{{=dd}^vCC}
	CMVideoFormatDescriptionMatchesImageBuffer = ~f{C^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGAffineTransform.h
	CGAffineTransformConcat = ~f{{=dddddd}{=dddddd}{=dddddd}}
	CGAffineTransformEqualToTransform = ~f{B{=dddddd}{=dddddd}}
	CGAffineTransformInvert = ~f{{=dddddd}{=dddddd}}
	CGAffineTransformIsIdentity = ~f{B{=dddddd}}
	CGAffineTransformMake = ~f{{=dddddd}dddddd}
	CGAffineTransformMakeRotation = ~f{{=dddddd}d}
	CGAffineTransformMakeScale = ~f{{=dddddd}dd}
	CGAffineTransformMakeTranslation = ~f{{=dddddd}dd}
	CGAffineTransformRotate = ~f{{=dddddd}{=dddddd}d}
	CGAffineTransformScale = ~f{{=dddddd}{=dddddd}dd}
	CGAffineTransformTranslate = ~f{{=dddddd}{=dddddd}dd}
	CGPointApplyAffineTransform = ~f{{=dd}{=dd}{=dddddd}}
	CGRectApplyAffineTransform = ~f{{={=dd}{=dd}}{={=dd}{=dd}}{=dddddd}}
	CGSizeApplyAffineTransform = ~f{{=dd}{=dd}{=dddddd}}
	__CGAffineTransformMake = ~f{{=dddddd}dddddd}
	__CGPointApplyAffineTransform = ~f{{=dd}{=dd}{=dddddd}}
	__CGSizeApplyAffineTransform = ~f{{=dd}{=dd}{=dddddd}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/DOCBparser.h
	docbCreateFileParserCtxt = ~f{^v^c^c}
	docbCreatePushParserCtxt = ~f{^v^v^v^ci^ci}
	docbEncodeEntities = ~f{i^C^i^C^ii}
	docbFreeParserCtxt = ~f{v^v}
	docbParseChunk = ~f{i^v^cii}
	docbParseDoc = ~f{^v^C^c}
	docbParseDocument = ~f{i^v}
	docbParseFile = ~f{^v^c^c}
	docbSAXParseDoc = ~f{^v^C^c^v^v}
	docbSAXParseFile = ~f{^v^c^c^v^v}
/usr/local/lib/clang/9.0.1/include/xmmintrin.h
	_mm_add_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_add_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_and_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_andnot_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_avg_pu16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_avg_pu8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_cmpeq_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpeq_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpge_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpge_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpgt_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpgt_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmple_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmple_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmplt_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmplt_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpneq_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpneq_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpnge_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpnge_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpngt_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpngt_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpnle_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpnle_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpnlt_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpnlt_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpord_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpord_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpunord_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_cmpunord_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_comieq_ss = ~f{i~V{4f}~V{4f}}
	_mm_comige_ss = ~f{i~V{4f}~V{4f}}
	_mm_comigt_ss = ~f{i~V{4f}~V{4f}}
	_mm_comile_ss = ~f{i~V{4f}~V{4f}}
	_mm_comilt_ss = ~f{i~V{4f}~V{4f}}
	_mm_comineq_ss = ~f{i~V{4f}~V{4f}}
	_mm_cvt_pi2ps = ~f{~V{4f}~V{4f}~V{1q}}
	_mm_cvt_ps2pi = ~f{~V{1q}~V{4f}}
	_mm_cvt_si2ss = ~f{~V{4f}~V{4f}i}
	_mm_cvt_ss2si = ~f{i~V{4f}}
	_mm_cvtpi16_ps = ~f{~V{4f}~V{1q}}
	_mm_cvtpi32_ps = ~f{~V{4f}~V{4f}~V{1q}}
	_mm_cvtpi32x2_ps = ~f{~V{4f}~V{1q}~V{1q}}
	_mm_cvtpi8_ps = ~f{~V{4f}~V{1q}}
	_mm_cvtps_pi16 = ~f{~V{1q}~V{4f}}
	_mm_cvtps_pi32 = ~f{~V{1q}~V{4f}}
	_mm_cvtps_pi8 = ~f{~V{1q}~V{4f}}
	_mm_cvtpu16_ps = ~f{~V{4f}~V{1q}}
	_mm_cvtpu8_ps = ~f{~V{4f}~V{1q}}
	_mm_cvtsi32_ss = ~f{~V{4f}~V{4f}i}
	_mm_cvtsi64_ss = ~f{~V{4f}~V{4f}q}
	_mm_cvtss_f32 = ~f{f~V{4f}}
	_mm_cvtss_si32 = ~f{i~V{4f}}
	_mm_cvtss_si64 = ~f{q~V{4f}}
	_mm_cvtt_ps2pi = ~f{~V{1q}~V{4f}}
	_mm_cvtt_ss2si = ~f{i~V{4f}}
	_mm_cvttps_pi32 = ~f{~V{1q}~V{4f}}
	_mm_cvttss_si32 = ~f{i~V{4f}}
	_mm_cvttss_si64 = ~f{q~V{4f}}
	_mm_div_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_div_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_getcsr = ~f{I}
	_mm_load1_ps = ~f{~V{4f}^f}
	_mm_load_ps = ~f{~V{4f}^f}
	_mm_load_ss = ~f{~V{4f}^f}
	_mm_loadh_pi = ~f{~V{4f}~V{4f}^~V{1q}}
	_mm_loadl_pi = ~f{~V{4f}~V{4f}^~V{1q}}
	_mm_loadr_ps = ~f{~V{4f}^f}
	_mm_loadu_ps = ~f{~V{4f}^f}
	_mm_maskmove_si64 = ~f{v~V{1q}~V{1q}^c}
	_mm_max_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_max_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_max_pu8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_max_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_min_pi16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_min_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_min_pu8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_min_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_move_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_movehl_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_movelh_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_movemask_pi8 = ~f{i~V{1q}}
	_mm_movemask_ps = ~f{i~V{4f}}
	_mm_mul_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_mul_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_mulhi_pu16 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_or_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_rcp_ps = ~f{~V{4f}~V{4f}}
	_mm_rcp_ss = ~f{~V{4f}~V{4f}}
	_mm_rsqrt_ps = ~f{~V{4f}~V{4f}}
	_mm_rsqrt_ss = ~f{~V{4f}~V{4f}}
	_mm_sad_pu8 = ~f{~V{1q}~V{1q}~V{1q}}
	_mm_set1_ps = ~f{~V{4f}f}
	_mm_set_ps = ~f{~V{4f}ffff}
	_mm_set_ps1 = ~f{~V{4f}f}
	_mm_set_ss = ~f{~V{4f}f}
	_mm_setcsr = ~f{vI}
	_mm_setr_ps = ~f{~V{4f}ffff}
	_mm_setzero_ps = ~f{~V{4f}}
	_mm_sfence = ~f{v}
	_mm_sqrt_ps = ~f{~V{4f}~V{4f}}
	_mm_sqrt_ss = ~f{~V{4f}~V{4f}}
	_mm_store1_ps = ~f{v^f~V{4f}}
	_mm_store_ps = ~f{v^f~V{4f}}
	_mm_store_ps1 = ~f{v^f~V{4f}}
	_mm_store_ss = ~f{v^f~V{4f}}
	_mm_storeh_pi = ~f{v^~V{1q}~V{4f}}
	_mm_storel_pi = ~f{v^~V{1q}~V{4f}}
	_mm_storer_ps = ~f{v^f~V{4f}}
	_mm_storeu_ps = ~f{v^f~V{4f}}
	_mm_stream_pi = ~f{v^~V{1q}~V{1q}}
	_mm_stream_ps = ~f{v^f~V{4f}}
	_mm_sub_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_sub_ss = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_ucomieq_ss = ~f{i~V{4f}~V{4f}}
	_mm_ucomige_ss = ~f{i~V{4f}~V{4f}}
	_mm_ucomigt_ss = ~f{i~V{4f}~V{4f}}
	_mm_ucomile_ss = ~f{i~V{4f}~V{4f}}
	_mm_ucomilt_ss = ~f{i~V{4f}~V{4f}}
	_mm_ucomineq_ss = ~f{i~V{4f}~V{4f}}
	_mm_undefined_ps = ~f{~V{4f}}
	_mm_unpackhi_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_unpacklo_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_xor_ps = ~f{~V{4f}~V{4f}~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/CommonCrypto/CommonSymmetricKeywrap.h
	CCSymmetricKeyUnwrap = ~f{iI^CL^CL^CL^C^L}
	CCSymmetricKeyWrap = ~f{iI^CL^CL^CL^C^L}
	CCSymmetricUnwrappedSize = ~f{LIL}
	CCSymmetricWrappedSize = ~f{LIL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/AssertionReporting.h
	_swift_stdlib_reportFatalError = ~f{v^Ci^CiI}
	_swift_stdlib_reportFatalErrorInFile = ~f{v^Ci^Ci^CiII}
	_swift_stdlib_reportUnimplementedInitializer = ~f{v^Ci^CiI}
	_swift_stdlib_reportUnimplementedInitializerInFile = ~f{v^Ci^Ci^CiIII}
/usr/local/lib/clang/9.0.1/include/avx512bwintrin.h
	_cvtmask32_u32 = ~f{II}
	_cvtmask64_u64 = ~f{QQ}
	_cvtu32_mask32 = ~f{II}
	_cvtu64_mask64 = ~f{QQ}
	_kadd_mask32 = ~f{III}
	_kadd_mask64 = ~f{QQQ}
	_kand_mask32 = ~f{III}
	_kand_mask64 = ~f{QQQ}
	_kandn_mask32 = ~f{III}
	_kandn_mask64 = ~f{QQQ}
	_knot_mask32 = ~f{II}
	_knot_mask64 = ~f{QQ}
	_kor_mask32 = ~f{III}
	_kor_mask64 = ~f{QQQ}
	_kortest_mask32_u8 = ~f{CII^C}
	_kortest_mask64_u8 = ~f{CQQ^C}
	_kortestc_mask32_u8 = ~f{CII}
	_kortestc_mask64_u8 = ~f{CQQ}
	_kortestz_mask32_u8 = ~f{CII}
	_kortestz_mask64_u8 = ~f{CQQ}
	_ktest_mask32_u8 = ~f{CII^C}
	_ktest_mask64_u8 = ~f{CQQ^C}
	_ktestc_mask32_u8 = ~f{CII}
	_ktestc_mask64_u8 = ~f{CQQ}
	_ktestz_mask32_u8 = ~f{CII}
	_ktestz_mask64_u8 = ~f{CQQ}
	_kxnor_mask32 = ~f{III}
	_kxnor_mask64 = ~f{QQQ}
	_kxor_mask32 = ~f{III}
	_kxor_mask64 = ~f{QQQ}
	_load_mask32 = ~f{I^I}
	_load_mask64 = ~f{Q^Q}
	_mm512_abs_epi16 = ~f{~V{8q}~V{8q}}
	_mm512_abs_epi8 = ~f{~V{8q}~V{8q}}
	_mm512_add_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_add_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_adds_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_adds_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_adds_epu16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_adds_epu8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_avg_epu16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_avg_epu8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_broadcastb_epi8 = ~f{~V{8q}~V{2q}}
	_mm512_broadcastw_epi16 = ~f{~V{8q}~V{2q}}
	_mm512_cvtepi16_epi8 = ~f{~V{4q}~V{8q}}
	_mm512_cvtepi8_epi16 = ~f{~V{8q}~V{4q}}
	_mm512_cvtepu8_epi16 = ~f{~V{8q}~V{4q}}
	_mm512_cvtsepi16_epi8 = ~f{~V{4q}~V{8q}}
	_mm512_cvtusepi16_epi8 = ~f{~V{4q}~V{8q}}
	_mm512_kunpackd = ~f{QQQ}
	_mm512_kunpackw = ~f{III}
	_mm512_loadu_epi16 = ~f{~V{8q}^v}
	_mm512_loadu_epi8 = ~f{~V{8q}^v}
	_mm512_madd_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_maddubs_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mask2_permutex2var_epi16 = ~f{~V{8q}~V{8q}~V{8q}I~V{8q}}
	_mm512_mask_abs_epi16 = ~f{~V{8q}~V{8q}I~V{8q}}
	_mm512_mask_abs_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}}
	_mm512_mask_add_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_add_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_adds_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_adds_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_adds_epu16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_adds_epu8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_avg_epu16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_avg_epu8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_blend_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_blend_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_broadcastb_epi8 = ~f{~V{8q}~V{8q}Q~V{2q}}
	_mm512_mask_broadcastw_epi16 = ~f{~V{8q}~V{8q}I~V{2q}}
	_mm512_mask_cvtepi16_epi8 = ~f{~V{4q}~V{4q}I~V{8q}}
	_mm512_mask_cvtepi16_storeu_epi8 = ~f{v^vI~V{8q}}
	_mm512_mask_cvtepi8_epi16 = ~f{~V{8q}~V{8q}I~V{4q}}
	_mm512_mask_cvtepu8_epi16 = ~f{~V{8q}~V{8q}I~V{4q}}
	_mm512_mask_cvtsepi16_epi8 = ~f{~V{4q}~V{4q}I~V{8q}}
	_mm512_mask_cvtsepi16_storeu_epi8 = ~f{v^vI~V{8q}}
	_mm512_mask_cvtusepi16_epi8 = ~f{~V{4q}~V{4q}I~V{8q}}
	_mm512_mask_cvtusepi16_storeu_epi8 = ~f{v^vI~V{8q}}
	_mm512_mask_loadu_epi16 = ~f{~V{8q}~V{8q}I^v}
	_mm512_mask_loadu_epi8 = ~f{~V{8q}~V{8q}Q^v}
	_mm512_mask_madd_epi16 = ~f{~V{8q}~V{8q}S~V{8q}~V{8q}}
	_mm512_mask_maddubs_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_max_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_max_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_max_epu16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_max_epu8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_min_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_min_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_min_epu16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_min_epu8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_mov_epi16 = ~f{~V{8q}~V{8q}I~V{8q}}
	_mm512_mask_mov_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}}
	_mm512_mask_mulhi_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_mulhi_epu16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_mulhrs_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_mullo_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_packs_epi16 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_packs_epi32 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_packus_epi16 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_packus_epi32 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_permutex2var_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_permutexvar_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_set1_epi16 = ~f{~V{8q}~V{8q}Is}
	_mm512_mask_set1_epi8 = ~f{~V{8q}~V{8q}Qc}
	_mm512_mask_shuffle_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_sll_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{2q}}
	_mm512_mask_slli_epi16 = ~f{~V{8q}~V{8q}I~V{8q}i}
	_mm512_mask_sllv_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_sra_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{2q}}
	_mm512_mask_srai_epi16 = ~f{~V{8q}~V{8q}I~V{8q}i}
	_mm512_mask_srav_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_srl_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{2q}}
	_mm512_mask_srli_epi16 = ~f{~V{8q}~V{8q}I~V{8q}i}
	_mm512_mask_srlv_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_storeu_epi16 = ~f{v^vI~V{8q}}
	_mm512_mask_storeu_epi8 = ~f{v^vQ~V{8q}}
	_mm512_mask_sub_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_sub_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_subs_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_subs_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_subs_epu16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_subs_epu8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_test_epi16_mask = ~f{II~V{8q}~V{8q}}
	_mm512_mask_test_epi8_mask = ~f{QQ~V{8q}~V{8q}}
	_mm512_mask_testn_epi16_mask = ~f{II~V{8q}~V{8q}}
	_mm512_mask_testn_epi8_mask = ~f{QQ~V{8q}~V{8q}}
	_mm512_mask_unpackhi_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_unpackhi_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_unpacklo_epi16 = ~f{~V{8q}~V{8q}I~V{8q}~V{8q}}
	_mm512_mask_unpacklo_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_abs_epi16 = ~f{~V{8q}I~V{8q}}
	_mm512_maskz_abs_epi8 = ~f{~V{8q}Q~V{8q}}
	_mm512_maskz_add_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_add_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_adds_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_adds_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_adds_epu16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_adds_epu8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_avg_epu16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_avg_epu8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_broadcastb_epi8 = ~f{~V{8q}Q~V{2q}}
	_mm512_maskz_broadcastw_epi16 = ~f{~V{8q}I~V{2q}}
	_mm512_maskz_cvtepi16_epi8 = ~f{~V{4q}I~V{8q}}
	_mm512_maskz_cvtepi8_epi16 = ~f{~V{8q}I~V{4q}}
	_mm512_maskz_cvtepu8_epi16 = ~f{~V{8q}I~V{4q}}
	_mm512_maskz_cvtsepi16_epi8 = ~f{~V{4q}I~V{8q}}
	_mm512_maskz_cvtusepi16_epi8 = ~f{~V{4q}I~V{8q}}
	_mm512_maskz_loadu_epi16 = ~f{~V{8q}I^v}
	_mm512_maskz_loadu_epi8 = ~f{~V{8q}Q^v}
	_mm512_maskz_madd_epi16 = ~f{~V{8q}S~V{8q}~V{8q}}
	_mm512_maskz_maddubs_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_max_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_max_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_max_epu16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_max_epu8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_min_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_min_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_min_epu16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_min_epu8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_mov_epi16 = ~f{~V{8q}I~V{8q}}
	_mm512_maskz_mov_epi8 = ~f{~V{8q}Q~V{8q}}
	_mm512_maskz_mulhi_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_mulhi_epu16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_mulhrs_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_mullo_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_packs_epi16 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_packs_epi32 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_packus_epi16 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_packus_epi32 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_permutex2var_epi16 = ~f{~V{8q}I~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_permutexvar_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_set1_epi16 = ~f{~V{8q}Is}
	_mm512_maskz_set1_epi8 = ~f{~V{8q}Qc}
	_mm512_maskz_shuffle_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_sll_epi16 = ~f{~V{8q}I~V{8q}~V{2q}}
	_mm512_maskz_slli_epi16 = ~f{~V{8q}I~V{8q}i}
	_mm512_maskz_sllv_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_sra_epi16 = ~f{~V{8q}I~V{8q}~V{2q}}
	_mm512_maskz_srai_epi16 = ~f{~V{8q}I~V{8q}i}
	_mm512_maskz_srav_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_srl_epi16 = ~f{~V{8q}I~V{8q}~V{2q}}
	_mm512_maskz_srli_epi16 = ~f{~V{8q}I~V{8q}i}
	_mm512_maskz_srlv_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_sub_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_sub_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_subs_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_subs_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_subs_epu16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_subs_epu8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_unpackhi_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_unpackhi_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_unpacklo_epi16 = ~f{~V{8q}I~V{8q}~V{8q}}
	_mm512_maskz_unpacklo_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_max_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_max_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_max_epu16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_max_epu8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_epu16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_min_epu8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_movepi16_mask = ~f{I~V{8q}}
	_mm512_movepi8_mask = ~f{Q~V{8q}}
	_mm512_movm_epi16 = ~f{~V{8q}I}
	_mm512_movm_epi8 = ~f{~V{8q}Q}
	_mm512_mulhi_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mulhi_epu16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mulhrs_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_mullo_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_packs_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_packs_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_packus_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_packus_epi32 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_permutex2var_epi16 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_permutexvar_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sad_epu8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_shuffle_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sll_epi16 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_slli_epi16 = ~f{~V{8q}~V{8q}i}
	_mm512_sllv_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sra_epi16 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_srai_epi16 = ~f{~V{8q}~V{8q}i}
	_mm512_srav_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_srl_epi16 = ~f{~V{8q}~V{8q}~V{2q}}
	_mm512_srli_epi16 = ~f{~V{8q}~V{8q}i}
	_mm512_srlv_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_storeu_epi16 = ~f{v^v~V{8q}}
	_mm512_storeu_epi8 = ~f{v^v~V{8q}}
	_mm512_sub_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_sub_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_subs_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_subs_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_subs_epu16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_subs_epu8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_test_epi16_mask = ~f{I~V{8q}~V{8q}}
	_mm512_test_epi8_mask = ~f{Q~V{8q}~V{8q}}
	_mm512_testn_epi16_mask = ~f{I~V{8q}~V{8q}}
	_mm512_testn_epi8_mask = ~f{Q~V{8q}~V{8q}}
	_mm512_unpackhi_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_unpackhi_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_unpacklo_epi16 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_unpacklo_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_store_mask32 = ~f{v^II}
	_store_mask64 = ~f{v^QQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MapKit.framework/Headers/MKOverlayRenderer.h
	MKRoadWidthAtZoomScale = ~f{dd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCPreferencesPath.h
	SCPreferencesPathCreateUniqueChild = ~f{^v^v^v}
	SCPreferencesPathGetLink = ~f{^v^v^v}
	SCPreferencesPathGetValue = ~f{^v^v^v}
	SCPreferencesPathRemoveValue = ~f{C^v^v}
	SCPreferencesPathSetLink = ~f{C^v^v^v}
	SCPreferencesPathSetValue = ~f{C^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/netinet6/in6.h
	inet6_opt_append = ~f{i^vIiCIC^^v}
	inet6_opt_find = ~f{i^vIiC^I^^v}
	inet6_opt_finish = ~f{i^vIi}
	inet6_opt_get_val = ~f{i^vi^vI}
	inet6_opt_init = ~f{i^vI}
	inet6_opt_next = ~f{i^vIi^C^I^^v}
	inet6_opt_set_val = ~f{i^vi^vI}
	inet6_option_alloc = ~f{^C^viii}
	inet6_option_append = ~f{i^v^Cii}
	inet6_option_find = ~f{i^v^^Ci}
	inet6_option_init = ~f{i^v^^vi}
	inet6_option_next = ~f{i^v^^C}
	inet6_option_space = ~f{ii}
	inet6_rth_add = ~f{i^v^v}
	inet6_rth_getaddr = ~f{^v^vi}
	inet6_rth_init = ~f{^v^vIii}
	inet6_rth_reverse = ~f{i^v^v}
	inet6_rth_segments = ~f{i^v}
	inet6_rth_space = ~f{Iii}
	inet6_rthdr_add = ~f{i^v^vI}
	inet6_rthdr_getaddr = ~f{^v^vi}
	inet6_rthdr_getflags = ~f{i^vi}
	inet6_rthdr_init = ~f{^v^vi}
	inet6_rthdr_lasthop = ~f{i^vI}
	inet6_rthdr_segments = ~f{i^v}
	inet6_rthdr_space = ~f{Lii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/_ctype.h
	___runetype = ~f{Li}
	___tolower = ~f{ii}
	___toupper = ~f{ii}
	__isctype = ~f{iiL}
	__istype = ~f{iiL}
	__maskrune = ~f{iiL}
	__tolower = ~f{ii}
	__toupper = ~f{ii}
	__wcwidth = ~f{ii}
	digittoint = ~f{ii}
	isalnum = ~f{ii}
	isalpha = ~f{ii}
	isascii = ~f{ii}
	isblank = ~f{ii}
	iscntrl = ~f{ii}
	isdigit = ~f{ii}
	isgraph = ~f{ii}
	ishexnumber = ~f{ii}
	isideogram = ~f{ii}
	islower = ~f{ii}
	isnumber = ~f{ii}
	isphonogram = ~f{ii}
	isprint = ~f{ii}
	ispunct = ~f{ii}
	isrune = ~f{ii}
	isspace = ~f{ii}
	isspecial = ~f{ii}
	isupper = ~f{ii}
	isxdigit = ~f{ii}
	toascii = ~f{ii}
	tolower = ~f{ii}
	toupper = ~f{ii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreLocation.framework/Headers/CLLocation.h
	CLLocationCoordinate2DIsValid = ~f{B{=dd}}
	CLLocationCoordinate2DMake = ~f{{=dd}dd}
/usr/local/lib/clang/9.0.1/include/shaintrin.h
	_mm_sha1msg1_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha1msg2_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha1nexte_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha256msg1_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha256msg2_epu32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_sha256rnds2_epu32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/MetalPerformanceShaders.framework/Headers/MetalPerformanceShaders.h
	MPSGetPreferredDevice = ~f{@L}
	MPSHintTemporaryMemoryHighWaterMark = ~f{v@L}
	MPSSetHeapCacheDuration = ~f{v@d}
	MPSSupportsMTLDevice = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Headers/MPSState.h
	MPSStateBatchIncrementReadCount = ~f{L@l}
	MPSStateBatchResourceSize = ~f{L@}
	MPSStateBatchSynchronize = ~f{v@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/CaptiveNetwork.h
	CNCopyCurrentNetworkInfo = ~f{^v^v}
	CNCopySupportedInterfaces = ~f{^v}
	CNMarkPortalOffline = ~f{C^v}
	CNMarkPortalOnline = ~f{C^v}
	CNSetSupportedSSIDs = ~f{C^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/raster.h
	cupsRasterClose = ~f{v^v}
	cupsRasterErrorString = ~f{^c}
	cupsRasterInitPWGHeader = ~f{i^v^v^cii^c^c}
	cupsRasterOpen = ~f{^viI}
	cupsRasterOpenIO = ~f{^v^~f{l^v^CL}^vI}
	cupsRasterReadHeader = ~f{I^v^v}
	cupsRasterReadHeader2 = ~f{I^v^v}
	cupsRasterReadPixels = ~f{I^v^CI}
	cupsRasterWriteHeader = ~f{I^v^v}
	cupsRasterWriteHeader2 = ~f{I^v^v}
	cupsRasterWritePixels = ~f{I^v^CI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/unistd.h
	_Exit = ~f{vi}
	_exit = ~f{vi}
	access = ~f{i^ci}
	accessx_np = ~f{i^vL^iI}
	acct = ~f{i^c}
	add_profil = ~f{i^cLLI}
	alarm = ~f{II}
	brk = ~f{^v^v}
	chdir = ~f{i^c}
	chown = ~f{i^cII}
	chroot = ~f{i^c}
	close = ~f{ii}
	confstr = ~f{Li^cL}
	crypt = ~f{^c^c^c}
	dup = ~f{ii}
	dup2 = ~f{iii}
	encrypt = ~f{v^ci}
	endusershell = ~f{v}
	exchangedata = ~f{i^c^cI}
	execl = ~f{i^c^c$}
	execle = ~f{i^c^c$}
	execlp = ~f{i^c^c$}
	execv = ~f{i^c^^c}
	execvP = ~f{i^c^c^^c}
	execve = ~f{i^c^^c^^c}
	execvp = ~f{i^c^^c}
	fchdir = ~f{ii}
	fchown = ~f{iiII}
	fflagstostr = ~f{^cL}
	ffsctl = ~f{iiL^vI}
	fgetattrlist = ~f{ii^v^vLI}
	fork = ~f{i}
	fpathconf = ~f{lii}
	fsctl = ~f{i^cL^vI}
	fsetattrlist = ~f{ii^v^vLI}
	fsync = ~f{ii}
	fsync_volume_np = ~f{iii}
	ftruncate = ~f{iiq}
	getattrlist = ~f{i^c^v^vLI}
	getcwd = ~f{^c^cL}
	getdirentriesattr = ~f{ii^v^vL^I^I^II}
	getdomainname = ~f{i^ci}
	getdtablesize = ~f{i}
	getegid = ~f{I}
	geteuid = ~f{I}
	getgid = ~f{I}
	getgrouplist = ~f{i^ci^i^i}
	getgroups = ~f{ii^I}
	gethostid = ~f{l}
	gethostname = ~f{i^cL}
	getlogin = ~f{^c}
	getlogin_r = ~f{i^cL}
	getmode = ~f{S^vS}
	getopt = ~f{ii^^c^c}
	getpagesize = ~f{i}
	getpass = ~f{^c^c}
	getpeereid = ~f{ii^I^I}
	getpgid = ~f{ii}
	getpgrp = ~f{i}
	getpid = ~f{i}
	getppid = ~f{i}
	getsgroups_np = ~f{i^i^C}
	getsid = ~f{ii}
	getsubopt = ~f{i^^c^^c^^c}
	getuid = ~f{I}
	getusershell = ~f{^c}
	getwd = ~f{^c^c}
	getwgroups_np = ~f{i^i^C}
	initgroups = ~f{i^ci}
	iruserok = ~f{iLi^c^c}
	iruserok_sa = ~f{i^vii^c^c}
	isatty = ~f{ii}
	issetugid = ~f{i}
	lchown = ~f{i^cII}
	link = ~f{i^c^c}
	lockf = ~f{iiiq}
	lseek = ~f{qiqi}
	mkdtemp = ~f{^c^c}
	mkdtempat_np = ~f{^ci^c}
	mknod = ~f{i^cSi}
	mkostemp = ~f{i^ci}
	mkostemps = ~f{i^cii}
	mkostempsat_np = ~f{ii^cii}
	mkpath_np = ~f{i^cS}
	mkpathat_np = ~f{ii^cS}
	mkstemp = ~f{i^c}
	mkstemp_dprotected_np = ~f{i^cii}
	mkstemps = ~f{i^ci}
	mkstempsat_np = ~f{ii^ci}
	mktemp = ~f{^c^c}
	nfssvc = ~f{ii^v}
	nice = ~f{ii}
	pathconf = ~f{l^ci}
	pause = ~f{i}
	pipe = ~f{i^i}
	pread = ~f{li^vLq}
	profil = ~f{i^cLLI}
	pthread_getugid_np = ~f{i^I^I}
	pthread_setugid_np = ~f{iII}
	pwrite = ~f{li^vLq}
	rcmd = ~f{i^^ci^c^c^c^i}
	rcmd_af = ~f{i^^ci^c^c^c^ii}
	read = ~f{li^vL}
	readlink = ~f{l^c^cL}
	reboot = ~f{ii}
	revoke = ~f{i^c}
	rmdir = ~f{i^c}
	rresvport = ~f{i^i}
	rresvport_af = ~f{i^ii}
	ruserok = ~f{i^ci^c^c}
	sbrk = ~f{^vi}
	searchfs = ~f{i^c^v^LII^v}
	setattrlist = ~f{i^c^v^vLI}
	setdomainname = ~f{i^ci}
	setegid = ~f{iI}
	seteuid = ~f{iI}
	setgid = ~f{iI}
	setgroups = ~f{ii^I}
	sethostid = ~f{vl}
	sethostname = ~f{i^ci}
	setkey = ~f{v^c}
	setlogin = ~f{i^c}
	setmode = ~f{^v^c}
	setpgid = ~f{iii}
	setpgrp = ~f{i}
	setregid = ~f{iII}
	setreuid = ~f{iII}
	setrgid = ~f{iI}
	setruid = ~f{iI}
	setsgroups_np = ~f{ii^C}
	setsid = ~f{i}
	setuid = ~f{iI}
	setusershell = ~f{v}
	setwgroups_np = ~f{ii^C}
	sleep = ~f{II}
	strtofflags = ~f{i^^c^L^L}
	swab = ~f{v^v^vl}
	swapon = ~f{i^c}
	symlink = ~f{i^c^c}
	sync = ~f{v}
	sync_volume_np = ~f{i^ci}
	syscall = ~f{ii$}
	sysconf = ~f{li}
	tcgetpgrp = ~f{ii}
	tcsetpgrp = ~f{iii}
	truncate = ~f{i^cq}
	ttyname = ~f{^ci}
	ttyname_r = ~f{ii^cL}
	ttyslot = ~f{i}
	ualarm = ~f{III}
	undelete = ~f{i^c}
	unlink = ~f{i^c}
	unwhiteout = ~f{i^c}
	usleep = ~f{iI}
	valloc = ~f{^vL}
	vfork = ~f{i}
	write = ~f{li^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dns_util.h
	dns_class_number = ~f{i^c^S}
	dns_class_string = ~f{^cS}
	dns_free_question = ~f{v^v}
	dns_free_reply = ~f{v^v}
	dns_free_resource_record = ~f{v^v}
	dns_get_buffer_size = ~f{I^v}
	dns_lookup = ~f{^v^v^cII}
	dns_parse_packet = ~f{^v^cI}
	dns_parse_question = ~f{^v^cI}
	dns_parse_resource_record = ~f{^v^cI}
	dns_print_handle = ~f{v^v^v}
	dns_print_question = ~f{v^v^v}
	dns_print_reply = ~f{v^v^vS}
	dns_print_resource_record = ~f{v^v^v}
	dns_set_buffer_size = ~f{v^vI}
	dns_type_number = ~f{i^c^S}
	dns_type_string = ~f{^cS}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlunicode.h
	xmlUCSIsAegeanNumbers = ~f{ii}
	xmlUCSIsAlphabeticPresentationForms = ~f{ii}
	xmlUCSIsArabic = ~f{ii}
	xmlUCSIsArabicPresentationFormsA = ~f{ii}
	xmlUCSIsArabicPresentationFormsB = ~f{ii}
	xmlUCSIsArmenian = ~f{ii}
	xmlUCSIsArrows = ~f{ii}
	xmlUCSIsBasicLatin = ~f{ii}
	xmlUCSIsBengali = ~f{ii}
	xmlUCSIsBlock = ~f{ii^c}
	xmlUCSIsBlockElements = ~f{ii}
	xmlUCSIsBopomofo = ~f{ii}
	xmlUCSIsBopomofoExtended = ~f{ii}
	xmlUCSIsBoxDrawing = ~f{ii}
	xmlUCSIsBraillePatterns = ~f{ii}
	xmlUCSIsBuhid = ~f{ii}
	xmlUCSIsByzantineMusicalSymbols = ~f{ii}
	xmlUCSIsCJKCompatibility = ~f{ii}
	xmlUCSIsCJKCompatibilityForms = ~f{ii}
	xmlUCSIsCJKCompatibilityIdeographs = ~f{ii}
	xmlUCSIsCJKCompatibilityIdeographsSupplement = ~f{ii}
	xmlUCSIsCJKRadicalsSupplement = ~f{ii}
	xmlUCSIsCJKSymbolsandPunctuation = ~f{ii}
	xmlUCSIsCJKUnifiedIdeographs = ~f{ii}
	xmlUCSIsCJKUnifiedIdeographsExtensionA = ~f{ii}
	xmlUCSIsCJKUnifiedIdeographsExtensionB = ~f{ii}
	xmlUCSIsCat = ~f{ii^c}
	xmlUCSIsCatC = ~f{ii}
	xmlUCSIsCatCc = ~f{ii}
	xmlUCSIsCatCf = ~f{ii}
	xmlUCSIsCatCo = ~f{ii}
	xmlUCSIsCatCs = ~f{ii}
	xmlUCSIsCatL = ~f{ii}
	xmlUCSIsCatLl = ~f{ii}
	xmlUCSIsCatLm = ~f{ii}
	xmlUCSIsCatLo = ~f{ii}
	xmlUCSIsCatLt = ~f{ii}
	xmlUCSIsCatLu = ~f{ii}
	xmlUCSIsCatM = ~f{ii}
	xmlUCSIsCatMc = ~f{ii}
	xmlUCSIsCatMe = ~f{ii}
	xmlUCSIsCatMn = ~f{ii}
	xmlUCSIsCatN = ~f{ii}
	xmlUCSIsCatNd = ~f{ii}
	xmlUCSIsCatNl = ~f{ii}
	xmlUCSIsCatNo = ~f{ii}
	xmlUCSIsCatP = ~f{ii}
	xmlUCSIsCatPc = ~f{ii}
	xmlUCSIsCatPd = ~f{ii}
	xmlUCSIsCatPe = ~f{ii}
	xmlUCSIsCatPf = ~f{ii}
	xmlUCSIsCatPi = ~f{ii}
	xmlUCSIsCatPo = ~f{ii}
	xmlUCSIsCatPs = ~f{ii}
	xmlUCSIsCatS = ~f{ii}
	xmlUCSIsCatSc = ~f{ii}
	xmlUCSIsCatSk = ~f{ii}
	xmlUCSIsCatSm = ~f{ii}
	xmlUCSIsCatSo = ~f{ii}
	xmlUCSIsCatZ = ~f{ii}
	xmlUCSIsCatZl = ~f{ii}
	xmlUCSIsCatZp = ~f{ii}
	xmlUCSIsCatZs = ~f{ii}
	xmlUCSIsCherokee = ~f{ii}
	xmlUCSIsCombiningDiacriticalMarks = ~f{ii}
	xmlUCSIsCombiningDiacriticalMarksforSymbols = ~f{ii}
	xmlUCSIsCombiningHalfMarks = ~f{ii}
	xmlUCSIsCombiningMarksforSymbols = ~f{ii}
	xmlUCSIsControlPictures = ~f{ii}
	xmlUCSIsCurrencySymbols = ~f{ii}
	xmlUCSIsCypriotSyllabary = ~f{ii}
	xmlUCSIsCyrillic = ~f{ii}
	xmlUCSIsCyrillicSupplement = ~f{ii}
	xmlUCSIsDeseret = ~f{ii}
	xmlUCSIsDevanagari = ~f{ii}
	xmlUCSIsDingbats = ~f{ii}
	xmlUCSIsEnclosedAlphanumerics = ~f{ii}
	xmlUCSIsEnclosedCJKLettersandMonths = ~f{ii}
	xmlUCSIsEthiopic = ~f{ii}
	xmlUCSIsGeneralPunctuation = ~f{ii}
	xmlUCSIsGeometricShapes = ~f{ii}
	xmlUCSIsGeorgian = ~f{ii}
	xmlUCSIsGothic = ~f{ii}
	xmlUCSIsGreek = ~f{ii}
	xmlUCSIsGreekExtended = ~f{ii}
	xmlUCSIsGreekandCoptic = ~f{ii}
	xmlUCSIsGujarati = ~f{ii}
	xmlUCSIsGurmukhi = ~f{ii}
	xmlUCSIsHalfwidthandFullwidthForms = ~f{ii}
	xmlUCSIsHangulCompatibilityJamo = ~f{ii}
	xmlUCSIsHangulJamo = ~f{ii}
	xmlUCSIsHangulSyllables = ~f{ii}
	xmlUCSIsHanunoo = ~f{ii}
	xmlUCSIsHebrew = ~f{ii}
	xmlUCSIsHighPrivateUseSurrogates = ~f{ii}
	xmlUCSIsHighSurrogates = ~f{ii}
	xmlUCSIsHiragana = ~f{ii}
	xmlUCSIsIPAExtensions = ~f{ii}
	xmlUCSIsIdeographicDescriptionCharacters = ~f{ii}
	xmlUCSIsKanbun = ~f{ii}
	xmlUCSIsKangxiRadicals = ~f{ii}
	xmlUCSIsKannada = ~f{ii}
	xmlUCSIsKatakana = ~f{ii}
	xmlUCSIsKatakanaPhoneticExtensions = ~f{ii}
	xmlUCSIsKhmer = ~f{ii}
	xmlUCSIsKhmerSymbols = ~f{ii}
	xmlUCSIsLao = ~f{ii}
	xmlUCSIsLatin1Supplement = ~f{ii}
	xmlUCSIsLatinExtendedA = ~f{ii}
	xmlUCSIsLatinExtendedAdditional = ~f{ii}
	xmlUCSIsLatinExtendedB = ~f{ii}
	xmlUCSIsLetterlikeSymbols = ~f{ii}
	xmlUCSIsLimbu = ~f{ii}
	xmlUCSIsLinearBIdeograms = ~f{ii}
	xmlUCSIsLinearBSyllabary = ~f{ii}
	xmlUCSIsLowSurrogates = ~f{ii}
	xmlUCSIsMalayalam = ~f{ii}
	xmlUCSIsMathematicalAlphanumericSymbols = ~f{ii}
	xmlUCSIsMathematicalOperators = ~f{ii}
	xmlUCSIsMiscellaneousMathematicalSymbolsA = ~f{ii}
	xmlUCSIsMiscellaneousMathematicalSymbolsB = ~f{ii}
	xmlUCSIsMiscellaneousSymbols = ~f{ii}
	xmlUCSIsMiscellaneousSymbolsandArrows = ~f{ii}
	xmlUCSIsMiscellaneousTechnical = ~f{ii}
	xmlUCSIsMongolian = ~f{ii}
	xmlUCSIsMusicalSymbols = ~f{ii}
	xmlUCSIsMyanmar = ~f{ii}
	xmlUCSIsNumberForms = ~f{ii}
	xmlUCSIsOgham = ~f{ii}
	xmlUCSIsOldItalic = ~f{ii}
	xmlUCSIsOpticalCharacterRecognition = ~f{ii}
	xmlUCSIsOriya = ~f{ii}
	xmlUCSIsOsmanya = ~f{ii}
	xmlUCSIsPhoneticExtensions = ~f{ii}
	xmlUCSIsPrivateUse = ~f{ii}
	xmlUCSIsPrivateUseArea = ~f{ii}
	xmlUCSIsRunic = ~f{ii}
	xmlUCSIsShavian = ~f{ii}
	xmlUCSIsSinhala = ~f{ii}
	xmlUCSIsSmallFormVariants = ~f{ii}
	xmlUCSIsSpacingModifierLetters = ~f{ii}
	xmlUCSIsSpecials = ~f{ii}
	xmlUCSIsSuperscriptsandSubscripts = ~f{ii}
	xmlUCSIsSupplementalArrowsA = ~f{ii}
	xmlUCSIsSupplementalArrowsB = ~f{ii}
	xmlUCSIsSupplementalMathematicalOperators = ~f{ii}
	xmlUCSIsSupplementaryPrivateUseAreaA = ~f{ii}
	xmlUCSIsSupplementaryPrivateUseAreaB = ~f{ii}
	xmlUCSIsSyriac = ~f{ii}
	xmlUCSIsTagalog = ~f{ii}
	xmlUCSIsTagbanwa = ~f{ii}
	xmlUCSIsTags = ~f{ii}
	xmlUCSIsTaiLe = ~f{ii}
	xmlUCSIsTaiXuanJingSymbols = ~f{ii}
	xmlUCSIsTamil = ~f{ii}
	xmlUCSIsTelugu = ~f{ii}
	xmlUCSIsThaana = ~f{ii}
	xmlUCSIsThai = ~f{ii}
	xmlUCSIsTibetan = ~f{ii}
	xmlUCSIsUgaritic = ~f{ii}
	xmlUCSIsUnifiedCanadianAboriginalSyllabics = ~f{ii}
	xmlUCSIsVariationSelectors = ~f{ii}
	xmlUCSIsVariationSelectorsSupplement = ~f{ii}
	xmlUCSIsYiRadicals = ~f{ii}
	xmlUCSIsYiSyllables = ~f{ii}
	xmlUCSIsYijingHexagramSymbols = ~f{ii}
/usr/local/lib/clang/9.0.1/include/clwbintrin.h
	_mm_clwb = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/debugXML.h
	xmlBoolToText = ~f{^ci}
	xmlDebugCheckDocument = ~f{i^v^v}
	xmlDebugDumpAttr = ~f{v^v^vi}
	xmlDebugDumpAttrList = ~f{v^v^vi}
	xmlDebugDumpDTD = ~f{v^v^v}
	xmlDebugDumpDocument = ~f{v^v^v}
	xmlDebugDumpDocumentHead = ~f{v^v^v}
	xmlDebugDumpEntities = ~f{v^v^v}
	xmlDebugDumpNode = ~f{v^v^vi}
	xmlDebugDumpNodeList = ~f{v^v^vi}
	xmlDebugDumpOneNode = ~f{v^v^vi}
	xmlDebugDumpString = ~f{v^v^C}
	xmlLsCountNode = ~f{i^v}
	xmlLsOneNode = ~f{v^v^v}
	xmlShell = ~f{v^v^c^~f{^c^c}^v}
	xmlShellBase = ~f{i^v^c^v^v}
	xmlShellCat = ~f{i^v^c^v^v}
	xmlShellDir = ~f{i^v^c^v^v}
	xmlShellDu = ~f{i^v^c^v^v}
	xmlShellList = ~f{i^v^c^v^v}
	xmlShellLoad = ~f{i^v^c^v^v}
	xmlShellPrintNode = ~f{v^v}
	xmlShellPrintXPathError = ~f{vi^c}
	xmlShellPrintXPathResult = ~f{v^v}
	xmlShellPwd = ~f{i^v^c^v^v}
	xmlShellSave = ~f{i^v^c^v^v}
	xmlShellValidate = ~f{i^v^c^v^v}
	xmlShellWrite = ~f{i^v^c^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/mach.h
	clock_get_res = ~f{iI^i}
	clock_set_res = ~f{iIi}
	clock_sleep = ~f{iIi{=Ii}^v}
	mach_msg_destroy = ~f{v^v}
	mach_msg_receive = ~f{i^v}
	mach_msg_send = ~f{i^v}
	mach_msg_server = ~f{i^~f{I^v^v}IIi}
	mach_msg_server_importance = ~f{i^~f{I^v^v}IIi}
	mach_msg_server_once = ~f{i^~f{I^v^v}IIi}
	mig_reply_setup = ~f{v^v^v}
	panic = ~f{v^c$}
	panic_init = ~f{vI}
	safe_gets = ~f{v^c^ci}
	slot_name = ~f{vii^^c^^c}
	voucher_mach_msg_adopt = ~f{^v^v}
	voucher_mach_msg_clear = ~f{v^v}
	voucher_mach_msg_revert = ~f{v^v}
	voucher_mach_msg_set = ~f{I^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/utsname.h
	uname = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Morphology.h
	vImageDilate_ARGB8888 = ~f{l^v^vLL^CLLI}
	vImageDilate_ARGBFFFF = ~f{l^v^vLL^fLLI}
	vImageDilate_Planar8 = ~f{l^v^vLL^CLLI}
	vImageDilate_PlanarF = ~f{l^v^vLL^fLLI}
	vImageErode_ARGB8888 = ~f{l^v^vLL^CLLI}
	vImageErode_ARGBFFFF = ~f{l^v^vLL^fLLI}
	vImageErode_Planar8 = ~f{l^v^vLL^CLLI}
	vImageErode_PlanarF = ~f{l^v^vLL^fLLI}
	vImageMax_ARGB8888 = ~f{l^v^v^vLLLLI}
	vImageMax_ARGBFFFF = ~f{l^v^v^vLLLLI}
	vImageMax_Planar8 = ~f{l^v^v^vLLLLI}
	vImageMax_PlanarF = ~f{l^v^v^vLLLLI}
	vImageMin_ARGB8888 = ~f{l^v^v^vLLLLI}
	vImageMin_ARGBFFFF = ~f{l^v^v^vLLLLI}
	vImageMin_Planar8 = ~f{l^v^v^vLLLLI}
	vImageMin_PlanarF = ~f{l^v^v^vLLLLI}
/usr/local/lib/clang/9.0.1/include/fxsrintrin.h
	_fxrstor = ~f{v^v}
	_fxrstor64 = ~f{v^v}
	_fxsave = ~f{v^v}
	_fxsave64 = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Geometry.h
	vImageAffineWarpCG_ARGB16S = ~f{l^v^v^v^v^sI}
	vImageAffineWarpCG_ARGB16U = ~f{l^v^v^v^v^SI}
	vImageAffineWarpCG_ARGB8888 = ~f{l^v^v^v^v^CI}
	vImageAffineWarpCG_ARGBFFFF = ~f{l^v^v^v^v^fI}
	vImageAffineWarpCG_Planar8 = ~f{l^v^v^v^vCI}
	vImageAffineWarpCG_PlanarF = ~f{l^v^v^v^vfI}
	vImageAffineWarpD_ARGB16S = ~f{l^v^v^v^v^sI}
	vImageAffineWarpD_ARGB16U = ~f{l^v^v^v^v^SI}
	vImageAffineWarpD_ARGB8888 = ~f{l^v^v^v^v^CI}
	vImageAffineWarpD_ARGBFFFF = ~f{l^v^v^v^v^fI}
	vImageAffineWarpD_Planar8 = ~f{l^v^v^v^vCI}
	vImageAffineWarpD_PlanarF = ~f{l^v^v^v^vfI}
	vImageAffineWarp_ARGB16S = ~f{l^v^v^v^v^sI}
	vImageAffineWarp_ARGB16U = ~f{l^v^v^v^v^SI}
	vImageAffineWarp_ARGB8888 = ~f{l^v^v^v^v^CI}
	vImageAffineWarp_ARGBFFFF = ~f{l^v^v^v^v^fI}
	vImageAffineWarp_Planar8 = ~f{l^v^v^v^vCI}
	vImageAffineWarp_PlanarF = ~f{l^v^v^v^vfI}
	vImageDestroyResamplingFilter = ~f{v^v}
	vImageGetResamplingFilterExtent = ~f{L^vI}
	vImageGetResamplingFilterSize = ~f{Lf^~f{v^f^fL^v}fI}
	vImageHorizontalReflect_ARGB16S = ~f{l^v^vI}
	vImageHorizontalReflect_ARGB16U = ~f{l^v^vI}
	vImageHorizontalReflect_ARGB8888 = ~f{l^v^vI}
	vImageHorizontalReflect_ARGBFFFF = ~f{l^v^vI}
	vImageHorizontalReflect_Planar16U = ~f{l^v^vI}
	vImageHorizontalReflect_Planar8 = ~f{l^v^vI}
	vImageHorizontalReflect_PlanarF = ~f{l^v^vI}
	vImageHorizontalShearD_ARGB16S = ~f{l^v^vLLdd^v^sI}
	vImageHorizontalShearD_ARGB16U = ~f{l^v^vLLdd^v^SI}
	vImageHorizontalShearD_ARGB8888 = ~f{l^v^vLLdd^v^CI}
	vImageHorizontalShearD_ARGBFFFF = ~f{l^v^vLLdd^v^fI}
	vImageHorizontalShearD_Planar8 = ~f{l^v^vLLdd^vCI}
	vImageHorizontalShearD_PlanarF = ~f{l^v^vLLdd^vfI}
	vImageHorizontalShear_ARGB16S = ~f{l^v^vLLff^v^sI}
	vImageHorizontalShear_ARGB16U = ~f{l^v^vLLff^v^SI}
	vImageHorizontalShear_ARGB8888 = ~f{l^v^vLLff^v^CI}
	vImageHorizontalShear_ARGBFFFF = ~f{l^v^vLLff^v^fI}
	vImageHorizontalShear_CbCr16U = ~f{l^v^vLLff^v^SI}
	vImageHorizontalShear_CbCr8 = ~f{l^v^vLLff^v^CI}
	vImageHorizontalShear_Planar16S = ~f{l^v^vLLff^vsI}
	vImageHorizontalShear_Planar16U = ~f{l^v^vLLff^vSI}
	vImageHorizontalShear_Planar8 = ~f{l^v^vLLff^vCI}
	vImageHorizontalShear_PlanarF = ~f{l^v^vLLff^vfI}
	vImageHorizontalShear_XRGB2101010W = ~f{l^v^vLLff^vII}
	vImageNewResamplingFilter = ~f{^vfI}
	vImageNewResamplingFilterForFunctionUsingBuffer = ~f{l^vf^~f{v^f^fL^v}f^vI}
	vImageRotate90_ARGB16S = ~f{l^v^vC^sI}
	vImageRotate90_ARGB16U = ~f{l^v^vC^SI}
	vImageRotate90_ARGB8888 = ~f{l^v^vC^CI}
	vImageRotate90_ARGBFFFF = ~f{l^v^vC^fI}
	vImageRotate90_Planar16U = ~f{l^v^vCSI}
	vImageRotate90_Planar8 = ~f{l^v^vCCI}
	vImageRotate90_PlanarF = ~f{l^v^vCfI}
	vImageRotate_ARGB16S = ~f{l^v^v^vf^sI}
	vImageRotate_ARGB16U = ~f{l^v^v^vf^SI}
	vImageRotate_ARGB8888 = ~f{l^v^v^vf^CI}
	vImageRotate_ARGBFFFF = ~f{l^v^v^vf^fI}
	vImageRotate_Planar8 = ~f{l^v^v^vfCI}
	vImageRotate_PlanarF = ~f{l^v^v^vffI}
	vImageScale_ARGB16S = ~f{l^v^v^vI}
	vImageScale_ARGB16U = ~f{l^v^v^vI}
	vImageScale_ARGB8888 = ~f{l^v^v^vI}
	vImageScale_ARGBFFFF = ~f{l^v^v^vI}
	vImageScale_CbCr16U = ~f{l^v^v^vI}
	vImageScale_CbCr8 = ~f{l^v^v^vI}
	vImageScale_Planar16S = ~f{l^v^v^vI}
	vImageScale_Planar16U = ~f{l^v^v^vI}
	vImageScale_Planar8 = ~f{l^v^v^vI}
	vImageScale_PlanarF = ~f{l^v^v^vI}
	vImageScale_XRGB2101010W = ~f{l^v^v^vI}
	vImageVerticalReflect_ARGB16S = ~f{l^v^vI}
	vImageVerticalReflect_ARGB16U = ~f{l^v^vI}
	vImageVerticalReflect_ARGB8888 = ~f{l^v^vI}
	vImageVerticalReflect_ARGBFFFF = ~f{l^v^vI}
	vImageVerticalReflect_Planar16U = ~f{l^v^vI}
	vImageVerticalReflect_Planar8 = ~f{l^v^vI}
	vImageVerticalReflect_PlanarF = ~f{l^v^vI}
	vImageVerticalShearD_ARGB16S = ~f{l^v^vLLdd^v^sI}
	vImageVerticalShearD_ARGB16U = ~f{l^v^vLLdd^v^SI}
	vImageVerticalShearD_ARGB8888 = ~f{l^v^vLLdd^v^CI}
	vImageVerticalShearD_ARGBFFFF = ~f{l^v^vLLdd^v^fI}
	vImageVerticalShearD_Planar8 = ~f{l^v^vLLdd^vCI}
	vImageVerticalShearD_PlanarF = ~f{l^v^vLLdd^vfI}
	vImageVerticalShear_ARGB16S = ~f{l^v^vLLff^v^sI}
	vImageVerticalShear_ARGB16U = ~f{l^v^vLLff^v^SI}
	vImageVerticalShear_ARGB8888 = ~f{l^v^vLLff^v^CI}
	vImageVerticalShear_ARGBFFFF = ~f{l^v^vLLff^v^fI}
	vImageVerticalShear_CbCr16U = ~f{l^v^vLLff^v^SI}
	vImageVerticalShear_CbCr8 = ~f{l^v^vLLff^v^CI}
	vImageVerticalShear_Planar16S = ~f{l^v^vLLff^vsI}
	vImageVerticalShear_Planar16U = ~f{l^v^vLLff^vSI}
	vImageVerticalShear_Planar8 = ~f{l^v^vLLff^vCI}
	vImageVerticalShear_PlanarF = ~f{l^v^vLLff^vfI}
	vImageVerticalShear_XRGB2101010W = ~f{l^v^vLLff^vII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/schemasInternals.h
	xmlSchemaFreeType = ~f{v^v}
	xmlSchemaFreeWildcard = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMMetadata.h
	CMMetadataCreateIdentifierForKeyAndKeySpace = ~f{i^v^v^v^^v}
	CMMetadataCreateKeyFromIdentifier = ~f{i^v^v^^v}
	CMMetadataCreateKeyFromIdentifierAsCFData = ~f{i^v^v^^v}
	CMMetadataCreateKeySpaceFromIdentifier = ~f{i^v^v^^v}
	CMMetadataDataTypeRegistryDataTypeConformsToDataType = ~f{C^v^v}
	CMMetadataDataTypeRegistryDataTypeIsBaseDataType = ~f{C^v}
	CMMetadataDataTypeRegistryDataTypeIsRegistered = ~f{C^v}
	CMMetadataDataTypeRegistryGetBaseDataTypeForConformingDataType = ~f{^v^v}
	CMMetadataDataTypeRegistryGetBaseDataTypes = ~f{^v}
	CMMetadataDataTypeRegistryGetConformingDataTypes = ~f{^v^v}
	CMMetadataDataTypeRegistryGetDataTypeDescription = ~f{^v^v}
	CMMetadataDataTypeRegistryRegisterDataType = ~f{i^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/spawn.h
	posix_spawn = ~f{i^i^c^^v^^v^^c^^c}
	posix_spawn_file_actions_addchdir_np = ~f{i^^v^c}
	posix_spawn_file_actions_addclose = ~f{i^^vi}
	posix_spawn_file_actions_adddup2 = ~f{i^^vii}
	posix_spawn_file_actions_addfchdir_np = ~f{i^^vi}
	posix_spawn_file_actions_addinherit_np = ~f{i^^vi}
	posix_spawn_file_actions_addopen = ~f{i^^vi^ciS}
	posix_spawn_file_actions_destroy = ~f{i^^v}
	posix_spawn_file_actions_init = ~f{i^^v}
	posix_spawnattr_destroy = ~f{i^^v}
	posix_spawnattr_getbinpref_np = ~f{i^^vL^i^L}
	posix_spawnattr_getflags = ~f{i^^v^s}
	posix_spawnattr_getpgroup = ~f{i^^v^i}
	posix_spawnattr_getsigdefault = ~f{i^^v^I}
	posix_spawnattr_getsigmask = ~f{i^^v^I}
	posix_spawnattr_init = ~f{i^^v}
	posix_spawnattr_setauditsessionport_np = ~f{i^^vI}
	posix_spawnattr_setbinpref_np = ~f{i^^vL^i^L}
	posix_spawnattr_setexceptionports_np = ~f{i^^vIIii}
	posix_spawnattr_setflags = ~f{i^^vs}
	posix_spawnattr_setpgroup = ~f{i^^vi}
	posix_spawnattr_setsigdefault = ~f{i^^v^I}
	posix_spawnattr_setsigmask = ~f{i^^v^I}
	posix_spawnattr_setspecialport_np = ~f{i^^vIi}
	posix_spawnp = ~f{i^i^c^^v^^v^^c^^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/Transform.h
	vImageCreateGammaFunction = ~f{^vfiI}
	vImageDestroyGammaFunction = ~f{v^v}
	vImageGamma_Planar8toPlanarF = ~f{l^v^v^vI}
	vImageGamma_PlanarF = ~f{l^v^v^vI}
	vImageGamma_PlanarFtoPlanar8 = ~f{l^v^v^vI}
	vImageInterpolatedLookupTable_PlanarF = ~f{l^v^v^fLffI}
	vImageLookupTable_8to64U = ~f{l^v^v^QI}
	vImageLookupTable_Planar16 = ~f{l^v^v^SI}
	vImageLookupTable_Planar8toPlanar128 = ~f{l^v^v^^fI}
	vImageLookupTable_Planar8toPlanar16 = ~f{l^v^v^SI}
	vImageLookupTable_Planar8toPlanar24 = ~f{l^v^v^II}
	vImageLookupTable_Planar8toPlanar48 = ~f{l^v^v^QI}
	vImageLookupTable_Planar8toPlanar96 = ~f{l^v^v^^fI}
	vImageLookupTable_Planar8toPlanarF = ~f{l^v^v^fI}
	vImageLookupTable_PlanarFtoPlanar8 = ~f{l^v^v^CI}
	vImageMatrixMultiply_ARGB8888 = ~f{l^v^v^si^s^iI}
	vImageMatrixMultiply_ARGB8888ToPlanar8 = ~f{l^v^v^si^siI}
	vImageMatrixMultiply_ARGBFFFF = ~f{l^v^v^f^f^fI}
	vImageMatrixMultiply_ARGBFFFFToPlanarF = ~f{l^v^v^f^ffI}
	vImageMatrixMultiply_Planar16S = ~f{l^^v^^vII^si^s^iI}
	vImageMatrixMultiply_Planar8 = ~f{l^^v^^vII^si^s^iI}
	vImageMatrixMultiply_PlanarF = ~f{l^^v^^vII^f^f^fI}
	vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12 = ~f{l^v^v^v^vII}
	vImageMultiDimensionalInterpolatedLookupTable_PlanarF = ~f{l^v^v^v^vII}
	vImageMultidimensionalTable_Create = ~f{^v^SII^CII^l}
	vImageMultidimensionalTable_Release = ~f{l^v}
	vImageMultidimensionalTable_Retain = ~f{l^v}
	vImagePiecewiseGamma_Planar16Q12 = ~f{l^v^v^ff^fsI}
	vImagePiecewiseGamma_Planar16Q12toPlanar8 = ~f{l^v^v^ff^fsI}
	vImagePiecewiseGamma_Planar8 = ~f{l^v^v^ff^fCI}
	vImagePiecewiseGamma_Planar8toPlanar16Q12 = ~f{l^v^v^ff^fCI}
	vImagePiecewiseGamma_Planar8toPlanarF = ~f{l^v^v^ff^fCI}
	vImagePiecewiseGamma_PlanarF = ~f{l^v^v^ff^ffI}
	vImagePiecewiseGamma_PlanarFtoPlanar8 = ~f{l^v^v^ff^ffI}
	vImagePiecewisePolynomial_Planar8toPlanarF = ~f{l^v^v^^f^fIII}
	vImagePiecewisePolynomial_PlanarF = ~f{l^v^v^^f^fIII}
	vImagePiecewisePolynomial_PlanarFtoPlanar8 = ~f{l^v^v^^f^fIII}
	vImagePiecewiseRational_PlanarF = ~f{l^v^v^^f^^f^fIIII}
	vImageSymmetricPiecewiseGamma_Planar16Q12 = ~f{l^v^v^ff^fsI}
	vImageSymmetricPiecewiseGamma_PlanarF = ~f{l^v^v^ff^ffI}
	vImageSymmetricPiecewisePolynomial_PlanarF = ~f{l^v^v^^f^fIII}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/math.h
	__cospi = ~f{dd}
	__cospif = ~f{ff}
	__exp10 = ~f{dd}
	__exp10f = ~f{ff}
	__fpclassifyd = ~f{id}
	__fpclassifyf = ~f{if}
	__fpclassifyl = ~f{iD}
	__inf = ~f{d}
	__inff = ~f{f}
	__infl = ~f{D}
	__inline_isfinited = ~f{id}
	__inline_isfinitef = ~f{if}
	__inline_isfinitel = ~f{iD}
	__inline_isinfd = ~f{id}
	__inline_isinff = ~f{if}
	__inline_isinfl = ~f{iD}
	__inline_isnand = ~f{id}
	__inline_isnanf = ~f{if}
	__inline_isnanl = ~f{iD}
	__inline_isnormald = ~f{id}
	__inline_isnormalf = ~f{if}
	__inline_isnormall = ~f{iD}
	__inline_signbitd = ~f{id}
	__inline_signbitf = ~f{if}
	__inline_signbitl = ~f{iD}
	__math_errhandling = ~f{i}
	__nan = ~f{f}
	__sincos = ~f{vd^d^d}
	__sincos_stret = ~f{{=dd}d}
	__sincosf = ~f{vf^f^f}
	__sincosf_stret = ~f{{=ff}f}
	__sincospi = ~f{vd^d^d}
	__sincospi_stret = ~f{{=dd}d}
	__sincospif = ~f{vf^f^f}
	__sincospif_stret = ~f{{=ff}f}
	__sinpi = ~f{dd}
	__sinpif = ~f{ff}
	__tanpi = ~f{dd}
	__tanpif = ~f{ff}
	acos = ~f{dd}
	acosf = ~f{ff}
	acosh = ~f{dd}
	acoshf = ~f{ff}
	acoshl = ~f{DD}
	acosl = ~f{DD}
	asin = ~f{dd}
	asinf = ~f{ff}
	asinh = ~f{dd}
	asinhf = ~f{ff}
	asinhl = ~f{DD}
	asinl = ~f{DD}
	atan = ~f{dd}
	atan2 = ~f{ddd}
	atan2f = ~f{fff}
	atan2l = ~f{DDD}
	atanf = ~f{ff}
	atanh = ~f{dd}
	atanhf = ~f{ff}
	atanhl = ~f{DD}
	atanl = ~f{DD}
	cbrt = ~f{dd}
	cbrtf = ~f{ff}
	cbrtl = ~f{DD}
	ceil = ~f{dd}
	ceilf = ~f{ff}
	ceill = ~f{DD}
	copysign = ~f{ddd}
	copysignf = ~f{fff}
	copysignl = ~f{DDD}
	cos = ~f{dd}
	cosf = ~f{ff}
	cosh = ~f{dd}
	coshf = ~f{ff}
	coshl = ~f{DD}
	cosl = ~f{DD}
	drem = ~f{ddd}
	erf = ~f{dd}
	erfc = ~f{dd}
	erfcf = ~f{ff}
	erfcl = ~f{DD}
	erff = ~f{ff}
	erfl = ~f{DD}
	exp = ~f{dd}
	exp2 = ~f{dd}
	exp2f = ~f{ff}
	exp2l = ~f{DD}
	expf = ~f{ff}
	expl = ~f{DD}
	expm1 = ~f{dd}
	expm1f = ~f{ff}
	expm1l = ~f{DD}
	fabs = ~f{dd}
	fabsf = ~f{ff}
	fabsl = ~f{DD}
	fdim = ~f{ddd}
	fdimf = ~f{fff}
	fdiml = ~f{DDD}
	finite = ~f{id}
	floor = ~f{dd}
	floorf = ~f{ff}
	floorl = ~f{DD}
	fma = ~f{dddd}
	fmaf = ~f{ffff}
	fmal = ~f{DDDD}
	fmax = ~f{ddd}
	fmaxf = ~f{fff}
	fmaxl = ~f{DDD}
	fmin = ~f{ddd}
	fminf = ~f{fff}
	fminl = ~f{DDD}
	fmod = ~f{ddd}
	fmodf = ~f{fff}
	fmodl = ~f{DDD}
	frexp = ~f{dd^i}
	frexpf = ~f{ff^i}
	frexpl = ~f{DD^i}
	gamma = ~f{dd}
	hypot = ~f{ddd}
	hypotf = ~f{fff}
	hypotl = ~f{DDD}
	ilogb = ~f{id}
	ilogbf = ~f{if}
	ilogbl = ~f{iD}
	j0 = ~f{dd}
	j1 = ~f{dd}
	jn = ~f{did}
	ldexp = ~f{ddi}
	ldexpf = ~f{ffi}
	ldexpl = ~f{DDi}
	lgamma = ~f{dd}
	lgammaf = ~f{ff}
	lgammal = ~f{DD}
	llrint = ~f{qd}
	llrintf = ~f{qf}
	llrintl = ~f{qD}
	llround = ~f{qd}
	llroundf = ~f{qf}
	llroundl = ~f{qD}
	log = ~f{dd}
	log10 = ~f{dd}
	log10f = ~f{ff}
	log10l = ~f{DD}
	log1p = ~f{dd}
	log1pf = ~f{ff}
	log1pl = ~f{DD}
	log2 = ~f{dd}
	log2f = ~f{ff}
	log2l = ~f{DD}
	logb = ~f{dd}
	logbf = ~f{ff}
	logbl = ~f{DD}
	logf = ~f{ff}
	logl = ~f{DD}
	lrint = ~f{ld}
	lrintf = ~f{lf}
	lrintl = ~f{lD}
	lround = ~f{ld}
	lroundf = ~f{lf}
	lroundl = ~f{lD}
	modf = ~f{dd^d}
	modff = ~f{ff^f}
	modfl = ~f{DD^D}
	nan = ~f{d^c}
	nanf = ~f{f^c}
	nanl = ~f{D^c}
	nearbyint = ~f{dd}
	nearbyintf = ~f{ff}
	nearbyintl = ~f{DD}
	nextafter = ~f{ddd}
	nextafterf = ~f{fff}
	nextafterl = ~f{DDD}
	nexttoward = ~f{ddD}
	nexttowardf = ~f{ffD}
	nexttowardl = ~f{DDD}
	pow = ~f{ddd}
	powf = ~f{fff}
	powl = ~f{DDD}
	remainder = ~f{ddd}
	remainderf = ~f{fff}
	remainderl = ~f{DDD}
	remquo = ~f{ddd^i}
	remquof = ~f{fff^i}
	remquol = ~f{DDD^i}
	rint = ~f{dd}
	rintf = ~f{ff}
	rintl = ~f{DD}
	rinttol = ~f{ld}
	round = ~f{dd}
	roundf = ~f{ff}
	roundl = ~f{DD}
	roundtol = ~f{ld}
	scalb = ~f{ddd}
	scalbln = ~f{ddl}
	scalblnf = ~f{ffl}
	scalblnl = ~f{DDl}
	scalbn = ~f{ddi}
	scalbnf = ~f{ffi}
	scalbnl = ~f{DDi}
	significand = ~f{dd}
	sin = ~f{dd}
	sinf = ~f{ff}
	sinh = ~f{dd}
	sinhf = ~f{ff}
	sinhl = ~f{DD}
	sinl = ~f{DD}
	sqrt = ~f{dd}
	sqrtf = ~f{ff}
	sqrtl = ~f{DD}
	tan = ~f{dd}
	tanf = ~f{ff}
	tanh = ~f{dd}
	tanhf = ~f{ff}
	tanhl = ~f{DD}
	tanl = ~f{DD}
	tgamma = ~f{dd}
	tgammaf = ~f{ff}
	tgammal = ~f{DD}
	trunc = ~f{dd}
	truncf = ~f{ff}
	truncl = ~f{DD}
	y0 = ~f{dd}
	y1 = ~f{dd}
	yn = ~f{did}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AVFoundation.framework/Headers/AVUtilities.h
	AVMakeRectWithAspectRatioInsideRect = ~f{{={=dd}{=dd}}{=dd}{={=dd}{=dd}}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/LibcOverlayShims.h
	_stdlib_sem_open2 = ~f{^i^ci}
	_stdlib_sem_open4 = ~f{^i^ciSI}
	_swift_stdlib_fcntl = ~f{iiii}
	_swift_stdlib_fcntlPtr = ~f{iii^v}
	_swift_stdlib_getEnviron = ?
	_swift_stdlib_getErrno = ?
	_swift_stdlib_ioctl = ~f{iiLi}
	_swift_stdlib_ioctlPtr = ~f{iiL^v}
	_swift_stdlib_open = ~f{i^ciS}
	_swift_stdlib_openat = ~f{ii^ciS}
	_swift_stdlib_setErrno = ~f{vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/timeb.h
	ftime = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MapKit.framework/Headers/MKGeometry.h
	MKCoordinateForMapPoint = ~f{{=dd}{=dd}}
	MKCoordinateRegionForMapRect = ~f{{={=dd}{=dd}}{={=dd}{=dd}}}
	MKCoordinateRegionMake = ~f{{={=dd}{=dd}}{=dd}{=dd}}
	MKCoordinateRegionMakeWithDistance = ~f{{={=dd}{=dd}}{=dd}dd}
	MKCoordinateSpanMake = ~f{{=dd}dd}
	MKMapPointEqualToPoint = ~f{B{=dd}{=dd}}
	MKMapPointForCoordinate = ~f{{=dd}{=dd}}
	MKMapPointMake = ~f{{=dd}dd}
	MKMapPointsPerMeterAtLatitude = ~f{dd}
	MKMapRectContainsPoint = ~f{B{={=dd}{=dd}}{=dd}}
	MKMapRectContainsRect = ~f{B{={=dd}{=dd}}{={=dd}{=dd}}}
	MKMapRectDivide = ~f{v{={=dd}{=dd}}^v^vdI}
	MKMapRectEqualToRect = ~f{B{={=dd}{=dd}}{={=dd}{=dd}}}
	MKMapRectGetHeight = ~f{d{={=dd}{=dd}}}
	MKMapRectGetMaxX = ~f{d{={=dd}{=dd}}}
	MKMapRectGetMaxY = ~f{d{={=dd}{=dd}}}
	MKMapRectGetMidX = ~f{d{={=dd}{=dd}}}
	MKMapRectGetMidY = ~f{d{={=dd}{=dd}}}
	MKMapRectGetMinX = ~f{d{={=dd}{=dd}}}
	MKMapRectGetMinY = ~f{d{={=dd}{=dd}}}
	MKMapRectGetWidth = ~f{d{={=dd}{=dd}}}
	MKMapRectInset = ~f{{={=dd}{=dd}}{={=dd}{=dd}}dd}
	MKMapRectIntersection = ~f{{={=dd}{=dd}}{={=dd}{=dd}}{={=dd}{=dd}}}
	MKMapRectIntersectsRect = ~f{B{={=dd}{=dd}}{={=dd}{=dd}}}
	MKMapRectIsEmpty = ~f{B{={=dd}{=dd}}}
	MKMapRectIsNull = ~f{B{={=dd}{=dd}}}
	MKMapRectMake = ~f{{={=dd}{=dd}}dddd}
	MKMapRectOffset = ~f{{={=dd}{=dd}}{={=dd}{=dd}}dd}
	MKMapRectRemainder = ~f{{={=dd}{=dd}}{={=dd}{=dd}}}
	MKMapRectSpans180thMeridian = ~f{B{={=dd}{=dd}}}
	MKMapRectUnion = ~f{{={=dd}{=dd}}{={=dd}{=dd}}{={=dd}{=dd}}}
	MKMapSizeEqualToSize = ~f{B{=dd}{=dd}}
	MKMapSizeMake = ~f{{=dd}dd}
	MKMetersBetweenMapPoints = ~f{d{=dd}{=dd}}
	MKMetersPerMapPointAtLatitude = ~f{dd}
	MKStringFromMapPoint = ~f{@{=dd}}
	MKStringFromMapRect = ~f{@{={=dd}{=dd}}}
	MKStringFromMapSize = ~f{@{=dd}}
/usr/local/lib/clang/9.0.1/include/avx512vlvnniintrin.h
	_mm256_dpbusd_epi32 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_dpbusds_epi32 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_dpwssd_epi32 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_dpwssds_epi32 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_mask_dpbusd_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_dpbusds_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_dpwssd_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_dpwssds_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_dpbusd_epi32 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_dpbusds_epi32 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_dpwssd_epi32 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_dpwssds_epi32 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm_dpbusd_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_dpbusds_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_dpwssd_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_dpwssds_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_mask_dpbusd_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_dpbusds_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_dpwssd_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_dpwssds_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_dpbusd_epi32 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_dpbusds_epi32 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_dpwssd_epi32 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_dpwssds_epi32 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
/usr/local/lib/clang/9.0.1/include/avx512vbmiintrin.h
	_mm512_mask2_permutex2var_epi8 = ~f{~V{8q}~V{8q}~V{8q}Q~V{8q}}
	_mm512_mask_multishift_epi64_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_permutex2var_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_mask_permutexvar_epi8 = ~f{~V{8q}~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_multishift_epi64_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_maskz_permutex2var_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}~V{8q}}
	_mm512_maskz_permutexvar_epi8 = ~f{~V{8q}Q~V{8q}~V{8q}}
	_mm512_multishift_epi64_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
	_mm512_permutex2var_epi8 = ~f{~V{8q}~V{8q}~V{8q}~V{8q}}
	_mm512_permutexvar_epi8 = ~f{~V{8q}~V{8q}~V{8q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/exc.h
	exception_raise = ~f{iIIIi^iI}
	exception_raise_state = ~f{iIi^iI^i^II^I^I}
	exception_raise_state_identity = ~f{iIIIi^iI^i^II^I^I}
	mig_strncpy_zerofill = ~f{i^c^ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/Sparse/SolveImplementation.h
	SparseCleanup = ~f{v{=iii{=BCIIB}CC^vLLLL}}
	SparseConjugateGradient = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}idd^~f{v^c}}}
	SparseFactor = ~f{{=iii{=BCIIB}CC^vLLLL}C{=ii^l^i{=BCIIB}C}{=IC^i^i^~f{^vL}^~f{v^v}^~f{v^c}}}
	SparseGMRES = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}Ciidd^~f{v^c}}}
	SparseLSMR = ~f{{=i{={=^~f{v^c}}{=^~f{v^c}idd^~f{v^c}}{=^~f{v^c}Ciidd^~f{v^c}}{=^~f{v^c}diiddddi^~f{v^c}}cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc}}{=^~f{v^c}diiddddi^~f{v^c}}}
	SparseRetain = ~f{{=iii{=BCIIB}CC^vLLLL}{=iii{=BCIIB}CC^vLLLL}}
	_SparseDestroyOpaqueSymbolic = ~f{v^v}
	_SparseGetOptionsFromSymbolicFactor = ~f{{=IC^i^i^~f{^vL}^~f{v^v}^~f{v^c}}^v}
	_SparseRetainSymbolic = ~f{v^v}
	_SparseSymbolicFactorQR = ~f{{=iii{=BCIIB}CC^vLLLL}C^v^v}
	_SparseSymbolicFactorSymmetric = ~f{{=iii{=BCIIB}CC^vLLLL}C^v^v}
	_SparseTrap = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/aio.h
	aio_cancel = ~f{ii^v}
	aio_error = ~f{i^v}
	aio_fsync = ~f{ii^v}
	aio_read = ~f{i^v}
	aio_return = ~f{l^v}
	aio_suspend = ~f{i^^vi^v}
	aio_write = ~f{i^v}
	lio_listio = ~f{ii^^vi^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MediaAccessibility.framework/Headers/MAImageCaptioning.h
	MAImageCaptioningCopyCaption = ~f{^v^v^^v}
	MAImageCaptioningCopyMetadataTagPath = ~f{^v}
	MAImageCaptioningSetCaption = ~f{B^v^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecImportExport.h
	SecPKCS12Import = ~f{i^v^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImageSymbolConfiguration.h
	UIFontWeightForImageSymbolWeight = ~f{dl}
	UIImageSymbolWeightForFontWeight = ~f{ld}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/vectorOps.h
	vIsamax = ~f{ii^~V{4f}}
	vIsamin = ~f{ii^~V{4f}}
	vIsmax = ~f{ii^~V{4f}}
	vIsmin = ~f{ii^~V{4f}}
	vSasum = ~f{fi^~V{4f}}
	vSaxpy = ~f{vif^~V{4f}^~V{4f}}
	vScopy = ~f{vi^~V{4f}^~V{4f}}
	vSdot = ~f{fi^~V{4f}^~V{4f}}
	vSgeadd = ~f{vii^~V{4f}c^~V{4f}c^~V{4f}}
	vSgemm = ~f{viii^~V{4f}c^~V{4f}c^~V{4f}ff^~V{4f}}
	vSgemtx = ~f{viif^~V{4f}^~V{4f}^~V{4f}}
	vSgemul = ~f{viii^~V{4f}c^~V{4f}c^~V{4f}}
	vSgemv = ~f{vciif^~V{4f}^~V{4f}f^~V{4f}}
	vSgemx = ~f{viif^~V{4f}^~V{4f}^~V{4f}}
	vSgesub = ~f{vii^~V{4f}c^~V{4f}c^~V{4f}}
	vSgetmi = ~f{vi^~V{4f}}
	vSgetmo = ~f{vii^~V{4f}^~V{4f}}
	vSgevv = ~f{vii^~V{4f}^~V{4f}^~V{4f}}
	vSnaxpy = ~f{vii^~V{4f}^~V{4f}^~V{4f}}
	vSndot = ~f{vii^fi^~V{4f}^~V{4f}}
	vSnorm2 = ~f{fi^~V{4f}}
	vSnrm2 = ~f{fi^~V{4f}}
	vSrot = ~f{vi^~V{4f}^~V{4f}ff}
	vSscal = ~f{vif^~V{4f}}
	vSsum = ~f{fi^~V{4f}}
	vSswap = ~f{vi^~V{4f}^~V{4f}}
	vSyax = ~f{vif^~V{4f}^~V{4f}}
	vSzaxpy = ~f{vif^~V{4f}^~V{4f}^~V{4f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/svc.h
	rpctest_service = ?
	svc_getreq = ~f{vi}
	svc_getreqset = ~f{v^v}
	svc_register = ~f{i^vII^?i}
	svc_run = ~f{v}
	svc_sendreply = ~f{i^v^~f{i^v^vI}^c}
	svc_unregister = ~f{vII}
	svcerr_auth = ~f{v^vI}
	svcerr_decode = ~f{v^v}
	svcerr_noproc = ~f{v^v}
	svcerr_noprog = ~f{v^v}
	svcerr_progvers = ~f{v^vII}
	svcerr_systemerr = ~f{v^v}
	svcerr_weakauth = ~f{v^v}
	svcfd_create = ~f{^viII}
	svcraw_create = ~f{^v}
	svctcp_create = ~f{^viII}
	svcudp_bufcreate = ~f{^viII}
	svcudp_create = ~f{^vi}
	xprt_register = ~f{v^v}
	xprt_unregister = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/netdb.h
	endhostent = ~f{v}
	endnetent = ~f{v}
	endnetgrent = ~f{v}
	endprotoent = ~f{v}
	endrpcent = ~f{v}
	endservent = ~f{v}
	freeaddrinfo = ~f{v^v}
	freehostent = ~f{v^v}
	gai_strerror = ~f{^ci}
	getaddrinfo = ~f{i^c^c^v^^v}
	gethostbyaddr = ~f{^v^vIi}
	gethostbyname = ~f{^v^c}
	gethostbyname2 = ~f{^v^ci}
	gethostent = ~f{^v}
	getipnodebyaddr = ~f{^v^vLi^i}
	getipnodebyname = ~f{^v^cii^i}
	getnameinfo = ~f{i^vI^cI^cIi}
	getnetbyaddr = ~f{^vIi}
	getnetbyname = ~f{^v^c}
	getnetent = ~f{^v}
	getnetgrent = ~f{i^^c^^c^^c}
	getprotobyname = ~f{^v^c}
	getprotobynumber = ~f{^vi}
	getprotoent = ~f{^v}
	getrpcbyname = ~f{^v^c}
	getrpcbynumber = ~f{^vi}
	getrpcent = ~f{^v}
	getservbyname = ~f{^v^c^c}
	getservbyport = ~f{^vi^c}
	getservent = ~f{^v}
	herror = ~f{v^c}
	hstrerror = ~f{^ci}
	innetgr = ~f{i^c^c^c^c}
	sethostent = ~f{vi}
	setnetent = ~f{vi}
	setnetgrent = ~f{v^c}
	setprotoent = ~f{vi}
	setrpcent = ~f{vi}
	setservent = ~f{vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/vImage_Utilities.h
	vImageBuffer_GetSize = ~f{{=dd}^v}
	vImageBuffer_Init = ~f{l^vLLII}
	vImageBuffer_InitWithCGImage = ~f{l^v^v^d^vI}
	vImageCGImageFormat_GetComponentCount = ~f{I^v}
	vImageCGImageFormat_IsEqual = ~f{C^v^v}
	vImageConvert_AnyToAny = ~f{l^v^v^v^vI}
	vImageConverter_CreateWithCGImageFormat = ~f{^v^v^v^dI^l}
	vImageConverter_CreateWithColorSyncCodeFragment = ~f{^v^v^v^v^dI^l}
	vImageConverter_GetDestinationBufferOrder = ~f{^I^v}
	vImageConverter_GetNumberOfDestinationBuffers = ~f{L^v}
	vImageConverter_GetNumberOfSourceBuffers = ~f{L^v}
	vImageConverter_GetSourceBufferOrder = ~f{^I^v}
	vImageConverter_MustOperateOutOfPlace = ~f{l^v^v^vI}
	vImageConverter_Release = ~f{v^v}
	vImageConverter_Retain = ~f{v^v}
	vImageCreateCGImageFromBuffer = ~f{^v^v^v^~f{v^v^v}^vI^l}
/usr/local/lib/clang/9.0.1/include/avx512vlvbmi2intrin.h
	_mm256_mask_compress_epi16 = ~f{~V{4q}~V{4q}S~V{4q}}
	_mm256_mask_compress_epi8 = ~f{~V{4q}~V{4q}I~V{4q}}
	_mm256_mask_compressstoreu_epi16 = ~f{v^vS~V{4q}}
	_mm256_mask_compressstoreu_epi8 = ~f{v^vI~V{4q}}
	_mm256_mask_expand_epi16 = ~f{~V{4q}~V{4q}S~V{4q}}
	_mm256_mask_expand_epi8 = ~f{~V{4q}~V{4q}I~V{4q}}
	_mm256_mask_expandloadu_epi16 = ~f{~V{4q}~V{4q}S^v}
	_mm256_mask_expandloadu_epi8 = ~f{~V{4q}~V{4q}I^v}
	_mm256_mask_shldv_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_shldv_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_shldv_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_shrdv_epi16 = ~f{~V{4q}~V{4q}S~V{4q}~V{4q}}
	_mm256_mask_shrdv_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_shrdv_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_compress_epi16 = ~f{~V{4q}S~V{4q}}
	_mm256_maskz_compress_epi8 = ~f{~V{4q}I~V{4q}}
	_mm256_maskz_expand_epi16 = ~f{~V{4q}S~V{4q}}
	_mm256_maskz_expand_epi8 = ~f{~V{4q}I~V{4q}}
	_mm256_maskz_expandloadu_epi16 = ~f{~V{4q}S^v}
	_mm256_maskz_expandloadu_epi8 = ~f{~V{4q}I^v}
	_mm256_maskz_shldv_epi16 = ~f{~V{4q}S~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_shldv_epi32 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_shldv_epi64 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_shrdv_epi16 = ~f{~V{4q}S~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_shrdv_epi32 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_shrdv_epi64 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_shldv_epi16 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_shldv_epi32 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_shldv_epi64 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_shrdv_epi16 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_shrdv_epi32 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_shrdv_epi64 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm_mask_compress_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_compress_epi8 = ~f{~V{2q}~V{2q}S~V{2q}}
	_mm_mask_compressstoreu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_compressstoreu_epi8 = ~f{v^vS~V{2q}}
	_mm_mask_expand_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_expand_epi8 = ~f{~V{2q}~V{2q}S~V{2q}}
	_mm_mask_expandloadu_epi16 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_expandloadu_epi8 = ~f{~V{2q}~V{2q}S^v}
	_mm_mask_shldv_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_shldv_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_shldv_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_shrdv_epi16 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_shrdv_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_shrdv_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_compress_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_compress_epi8 = ~f{~V{2q}S~V{2q}}
	_mm_maskz_expand_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_expand_epi8 = ~f{~V{2q}S~V{2q}}
	_mm_maskz_expandloadu_epi16 = ~f{~V{2q}C^v}
	_mm_maskz_expandloadu_epi8 = ~f{~V{2q}S^v}
	_mm_maskz_shldv_epi16 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_shldv_epi32 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_shldv_epi64 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_shrdv_epi16 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_shrdv_epi32 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_shrdv_epi64 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_shldv_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_shldv_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_shldv_epi64 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_shrdv_epi16 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_shrdv_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_shrdv_epi64 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/tls_options.h
	nw_protocol_copy_tls_definition = ~f{@}
	nw_protocol_metadata_is_tls = ~f{B@}
	nw_tls_copy_sec_protocol_metadata = ~f{@@}
	nw_tls_copy_sec_protocol_options = ~f{@@}
	nw_tls_create_options = ~f{@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/JavaScriptCore.framework/Headers/JSBase.h
	JSCheckScriptSyntax = ~f{B^v^v^vi^^v}
	JSEvaluateScript = ~f{^v^v^v^v^vi^^v}
	JSGarbageCollect = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/msg.h
	msgctl = ~f{iii^v}
	msgget = ~f{iii}
	msgrcv = ~f{li^vLli}
	msgsnd = ~f{ii^vLi}
	msgsys = ~f{ii$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMSimpleQueue.h
	CMSimpleQueueCreate = ~f{i^vi^^v}
	CMSimpleQueueDequeue = ~f{^v^v}
	CMSimpleQueueEnqueue = ~f{i^v^v}
	CMSimpleQueueGetCapacity = ~f{i^v}
	CMSimpleQueueGetCount = ~f{i^v}
	CMSimpleQueueGetHead = ~f{^v^v}
	CMSimpleQueueGetTypeID = ~f{L}
	CMSimpleQueueReset = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/arpa/nameser.h
	res_9_ns_datetosecs = ~f{I^c^i}
	res_9_ns_find_tsig = ~f{^C^C^C}
	res_9_ns_format_ttl = ~f{iL^cL}
	res_9_ns_get16 = ~f{I^C}
	res_9_ns_get32 = ~f{L^C}
	res_9_ns_initparse = ~f{i^Ci^v}
	res_9_ns_makecanon = ~f{i^c^cL}
	res_9_ns_msg_getflag = ~f{i{=^C^CSSSSSS^C^C^C^CIi^C}i}
	res_9_ns_name_compress = ~f{i^c^CL^^C^^C}
	res_9_ns_name_ntol = ~f{i^C^CL}
	res_9_ns_name_ntop = ~f{i^C^cL}
	res_9_ns_name_pack = ~f{i^C^Ci^^C^^C}
	res_9_ns_name_pton = ~f{i^c^CL}
	res_9_ns_name_rollback = ~f{v^C^^C^^C}
	res_9_ns_name_skip = ~f{i^^C^C}
	res_9_ns_name_uncompress = ~f{i^C^C^C^cL}
	res_9_ns_name_unpack = ~f{i^C^C^C^CL}
	res_9_ns_parse_ttl = ~f{i^c^L}
	res_9_ns_parserr = ~f{i^vIi^v}
	res_9_ns_put16 = ~f{vI^C}
	res_9_ns_put32 = ~f{vL^C}
	res_9_ns_samedomain = ~f{i^c^c}
	res_9_ns_samename = ~f{i^c^c}
	res_9_ns_sign = ~f{i^C^iii^v^Ci^C^il}
	res_9_ns_sign2 = ~f{i^C^iii^v^Ci^C^il^^C^^C}
	res_9_ns_sign_tcp = ~f{i^C^iii^vi}
	res_9_ns_sign_tcp2 = ~f{i^C^iii^vi^^C^^C}
	res_9_ns_sign_tcp_init = ~f{i^v^Ci^v}
	res_9_ns_skiprr = ~f{i^C^CIi}
	res_9_ns_sprintrr = ~f{i^v^v^c^c^cL}
	res_9_ns_sprintrrf = ~f{i^CL^cIIL^CL^c^c^cL}
	res_9_ns_subdomain = ~f{i^c^c}
	res_9_ns_verify = ~f{i^C^i^v^Ci^C^i^li}
	res_9_ns_verify_tcp = ~f{i^C^i^vi}
	res_9_ns_verify_tcp_init = ~f{i^v^Ci^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIAttachmentBehavior.h
	UIFloatRangeIsEqualToRange = ~f{B{=dd}{=dd}}
	UIFloatRangeIsInfinite = ~f{B{=dd}}
	UIFloatRangeMake = ~f{{=dd}dd}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/NSLayoutConstraint.h
	_NSDictionaryOfVariableBindings = ~f{@@@$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/rpc/clnt.h
	clnt_create = ~f{^v^cII^c}
	clnt_pcreateerror = ~f{v^c}
	clnt_perrno = ~f{vI}
	clnt_perror = ~f{v^v^c}
	clnt_spcreateerror = ~f{^c^c}
	clnt_sperrno = ~f{^cI}
	clnt_sperror = ~f{^c^v^c}
	clntraw_create = ~f{^vII}
	clnttcp_create = ~f{^v^vII^iII}
	clntudp_bufcreate = ~f{^v^vII{=li}^iII}
	clntudp_create = ~f{^v^vII{=li}^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/xmlschemastypes.h
	xmlSchemaCheckFacet = ~f{i^v^v^v^C}
	xmlSchemaCleanupTypes = ~f{v}
	xmlSchemaCollapseString = ~f{^C^C}
	xmlSchemaCompareValues = ~f{i^v^v}
	xmlSchemaCompareValuesWhtsp = ~f{i^vI^vI}
	xmlSchemaCopyValue = ~f{^v^v}
	xmlSchemaFreeFacet = ~f{v^v}
	xmlSchemaFreeValue = ~f{v^v}
	xmlSchemaGetBuiltInListSimpleTypeItemType = ~f{^v^v}
	xmlSchemaGetBuiltInType = ~f{^vI}
	xmlSchemaGetCanonValue = ~f{i^v^^C}
	xmlSchemaGetCanonValueWhtsp = ~f{i^v^^CI}
	xmlSchemaGetFacetValueAsULong = ~f{L^v}
	xmlSchemaGetPredefinedType = ~f{^v^C^C}
	xmlSchemaGetValType = ~f{I^v}
	xmlSchemaInitTypes = ~f{v}
	xmlSchemaIsBuiltInTypeFacet = ~f{i^vi}
	xmlSchemaNewFacet = ~f{^v}
	xmlSchemaNewNOTATIONValue = ~f{^v^C^C}
	xmlSchemaNewQNameValue = ~f{^v^C^C}
	xmlSchemaNewStringValue = ~f{^vI^C}
	xmlSchemaValPredefTypeNode = ~f{i^v^C^^v^v}
	xmlSchemaValPredefTypeNodeNoNorm = ~f{i^v^C^^v^v}
	xmlSchemaValidateFacet = ~f{i^v^v^C^v}
	xmlSchemaValidateFacetWhtsp = ~f{i^vII^C^vI}
	xmlSchemaValidateLengthFacet = ~f{i^v^v^C^v^L}
	xmlSchemaValidateLengthFacetWhtsp = ~f{i^vI^C^v^LI}
	xmlSchemaValidateListSimpleTypeFacet = ~f{i^v^CL^L}
	xmlSchemaValidatePredefinedType = ~f{i^v^C^^v}
	xmlSchemaValueAppend = ~f{i^v^v}
	xmlSchemaValueGetAsBoolean = ~f{i^v}
	xmlSchemaValueGetAsString = ~f{^C^v}
	xmlSchemaValueGetNext = ~f{^v^v}
	xmlSchemaWhiteSpaceReplace = ~f{^C^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/log.h
	_os_log_create = ~f{@^v^c^c}
	_os_log_debug_impl = ~f{v^v@C^c^CI}
	_os_log_error_impl = ~f{v^v@C^c^CI}
	_os_log_fault_impl = ~f{v^v@C^c^CI}
	_os_log_impl = ~f{v^v@C^c^CI}
	_os_log_internal = ~f{v^v@C^c$}
	_os_log_sensitive_deprecated = ~f{v}
	os_log_create = ~f{@^c^c}
	os_log_is_debug_enabled = ~f{B@}
	os_log_is_enabled = ~f{B@}
	os_log_type_enabled = ~f{B@C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFProxySupport.h
	CFNetworkCopyProxiesForAutoConfigurationScript = ~f{^v^v^v^^v}
	CFNetworkCopyProxiesForURL = ~f{^v^v^v}
	CFNetworkCopySystemProxySettings = ~f{^v}
	CFNetworkExecuteProxyAutoConfigurationScript = ~f{^v^v^v^~f{v^v^v^v}^v}
	CFNetworkExecuteProxyAutoConfigurationURL = ~f{^v^v^v^~f{v^v^v^v}^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/io.h
	dispatch_io_barrier = ~f{v@%~f{v}}
	dispatch_io_close = ~f{v@L}
	dispatch_io_create = ~f{@Li@%~f{vi}}
	dispatch_io_create_with_io = ~f{@L@@%~f{vi}}
	dispatch_io_create_with_path = ~f{@L^ciS@%~f{vi}}
	dispatch_io_get_descriptor = ~f{i@}
	dispatch_io_read = ~f{v@qL@%~f{vB@i}}
	dispatch_io_set_high_water = ~f{v@L}
	dispatch_io_set_interval = ~f{v@QL}
	dispatch_io_set_low_water = ~f{v@L}
	dispatch_io_write = ~f{v@q@@%~f{vB@i}}
	dispatch_read = ~f{viL@%~f{v@i}}
	dispatch_write = ~f{vi@@%~f{v@i}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach-o/getsect.h
	get_edata = ~f{L}
	get_end = ~f{L}
	get_etext = ~f{L}
	getsectbyname = ~f{^v^c^c}
	getsectbynamefromheader = ~f{^v^v^c^c}
	getsectbynamefromheader_64 = ~f{^v^v^c^c}
	getsectbynamefromheaderwithswap = ~f{^v^v^c^ci}
	getsectbynamefromheaderwithswap_64 = ~f{^v^v^c^ci}
	getsectdata = ~f{^c^c^c^L}
	getsectdatafromFramework = ~f{^c^c^c^c^L}
	getsectdatafromheader = ~f{^c^v^c^c^I}
	getsectdatafromheader_64 = ~f{^c^v^c^c^Q}
	getsectiondata = ~f{^C^v^c^c^L}
	getsegbyname = ~f{^v^c}
	getsegmentdata = ~f{^C^v^c^L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/mach/message.h
	mach_msg = ~f{i^viIIIII}
	mach_msg_overwrite = ~f{i^viIIIII^vI}
	mach_voucher_deallocate = ~f{iI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSZone.h
	NSAllocateMemoryPages = ~f{^vL}
	NSCopyMemoryPages = ~f{v^v^vL}
	NSCreateZone = ~f{^vLLB}
	NSDeallocateMemoryPages = ~f{v^vL}
	NSDefaultMallocZone = ~f{^v}
	NSLogPageSize = ~f{L}
	NSMakeCollectable = ~f{@^v}
	NSPageSize = ~f{L}
	NSRealMemoryAvailable = ~f{L}
	NSRecycleZone = ~f{v^v}
	NSRoundDownToMultipleOfPageSize = ~f{LL}
	NSRoundUpToMultipleOfPageSize = ~f{LL}
	NSSetZoneName = ~f{v^v@}
	NSZoneCalloc = ~f{^v^vLL}
	NSZoneFree = ~f{v^v^v}
	NSZoneFromPointer = ~f{^v^v}
	NSZoneMalloc = ~f{^v^vL}
	NSZoneName = ~f{@^v}
	NSZoneRealloc = ~f{^v^v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/OpenGLES.framework/Headers/ES1/glext.h
	glBindFramebufferOES = ~f{vII}
	glBindRenderbufferOES = ~f{vII}
	glBindVertexArrayOES = ~f{vI}
	glBlendEquationOES = ~f{vI}
	glBlendEquationSeparateOES = ~f{vII}
	glBlendFuncSeparateOES = ~f{vIIII}
	glCheckFramebufferStatusOES = ~f{II}
	glCopyTextureLevelsAPPLE = ~f{vIIii}
	glDeleteFramebuffersOES = ~f{vi^I}
	glDeleteRenderbuffersOES = ~f{vi^I}
	glDeleteVertexArraysOES = ~f{vi^I}
	glDiscardFramebufferEXT = ~f{vIi^I}
	glFlushMappedBufferRangeEXT = ~f{vIll}
	glFramebufferRenderbufferOES = ~f{vIIII}
	glFramebufferTexture2DOES = ~f{vIIIIi}
	glGenFramebuffersOES = ~f{vi^I}
	glGenRenderbuffersOES = ~f{vi^I}
	glGenVertexArraysOES = ~f{vi^I}
	glGenerateMipmapOES = ~f{vI}
	glGetBufferPointervOES = ~f{vII^^v}
	glGetFramebufferAttachmentParameterivOES = ~f{vIII^i}
	glGetObjectLabelEXT = ~f{vIIi^i^c}
	glGetRenderbufferParameterivOES = ~f{vII^i}
	glInsertEventMarkerEXT = ~f{vi^c}
	glIsFramebufferOES = ~f{CI}
	glIsRenderbufferOES = ~f{CI}
	glIsVertexArrayOES = ~f{CI}
	glLabelObjectEXT = ~f{vIIi^c}
	glMapBufferOES = ~f{^vII}
	glMapBufferRangeEXT = ~f{^vIllI}
	glPopGroupMarkerEXT = ~f{v}
	glPushGroupMarkerEXT = ~f{vi^c}
	glRenderbufferStorageMultisampleAPPLE = ~f{vIiIii}
	glRenderbufferStorageOES = ~f{vIIii}
	glResolveMultisampleFramebufferAPPLE = ~f{v}
	glTexStorage2DEXT = ~f{vIiIii}
	glUnmapBufferOES = ~f{CI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/FoundationShims.h
	_swift_stdlib_operatingSystemVersion = ?
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/DispatchOverlayShims.h
	_swift_dispatch_after = ~f{vQ@%~f{v}}
	_swift_dispatch_apply_current = ~f{vL%~f{vl}}
	_swift_dispatch_async = ~f{v@%~f{v}}
	_swift_dispatch_barrier_async = ~f{v@%~f{v}}
	_swift_dispatch_block_cancel = ~f{v%~f{v}}
	_swift_dispatch_block_create_noescape = ~f{%~f{v}L%~f{v}}
	_swift_dispatch_block_create_with_qos_class = ~f{%~f{v}LIi%~f{v}}
	_swift_dispatch_block_notify = ~f{v%~f{v}@%~f{v}}
	_swift_dispatch_block_testcancel = ~f{i%~f{v}}
	_swift_dispatch_block_wait = ~f{i%~f{v}Q}
	_swift_dispatch_data_apply = ~f{I@%~f{I@L^vL}}
	_swift_dispatch_data_create = ~f{@^vL@%~f{v}}
	_swift_dispatch_data_destructor_default = ~f{%~f{v}}
	_swift_dispatch_data_destructor_free = ~f{%~f{v}}
	_swift_dispatch_data_destructor_munmap = ~f{%~f{v}}
	_swift_dispatch_data_empty = ~f{@}
	_swift_dispatch_get_main_queue = ~f{@}
	_swift_dispatch_group_async = ~f{v@@%~f{v}}
	_swift_dispatch_group_notify = ~f{v@@%~f{v}}
	_swift_dispatch_queue_concurrent = ~f{@}
	_swift_dispatch_release = ~f{v@}
	_swift_dispatch_retain = ~f{v@}
	_swift_dispatch_source_create = ~f{@^vLL@}
	_swift_dispatch_source_create_abort = ~f{v}
	_swift_dispatch_source_set_cancel_handler = ~f{v@%~f{v}}
	_swift_dispatch_source_set_event_handler = ~f{v@%~f{v}}
	_swift_dispatch_source_set_registration_handler = ~f{v@%~f{v}}
	_swift_dispatch_source_type_DATA_ADD = ~f{^v}
	_swift_dispatch_source_type_DATA_OR = ~f{^v}
	_swift_dispatch_source_type_DATA_REPLACE = ~f{^v}
	_swift_dispatch_source_type_MACH_RECV = ~f{^v}
	_swift_dispatch_source_type_MACH_SEND = ~f{^v}
	_swift_dispatch_source_type_MEMORYPRESSURE = ~f{^v}
	_swift_dispatch_source_type_PROC = ~f{^v}
	_swift_dispatch_source_type_READ = ~f{^v}
	_swift_dispatch_source_type_SIGNAL = ~f{^v}
	_swift_dispatch_source_type_TIMER = ~f{^v}
	_swift_dispatch_source_type_VNODE = ~f{^v}
	_swift_dispatch_source_type_WRITE = ~f{^v}
	_swift_dispatch_sync = ~f{v@%~f{v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGFont.h
	CGFontCanCreatePostScriptSubset = ~f{B^vi}
	CGFontCopyFullName = ~f{^v^v}
	CGFontCopyGlyphNameForGlyph = ~f{^v^vS}
	CGFontCopyPostScriptName = ~f{^v^v}
	CGFontCopyTableForTag = ~f{^v^vI}
	CGFontCopyTableTags = ~f{^v^v}
	CGFontCopyVariationAxes = ~f{^v^v}
	CGFontCopyVariations = ~f{^v^v}
	CGFontCreateCopyWithVariations = ~f{^v^v^v}
	CGFontCreatePostScriptEncoding = ~f{^v^v^S}
	CGFontCreatePostScriptSubset = ~f{^v^v^vi^SL^S}
	CGFontCreateWithDataProvider = ~f{^v^v}
	CGFontCreateWithFontName = ~f{^v^v}
	CGFontCreateWithPlatformFont = ~f{^v^v}
	CGFontGetAscent = ~f{i^v}
	CGFontGetCapHeight = ~f{i^v}
	CGFontGetDescent = ~f{i^v}
	CGFontGetFontBBox = ~f{{={=dd}{=dd}}^v}
	CGFontGetGlyphAdvances = ~f{B^v^SL^i}
	CGFontGetGlyphBBoxes = ~f{B^v^SL^v}
	CGFontGetGlyphWithGlyphName = ~f{S^v^v}
	CGFontGetItalicAngle = ~f{d^v}
	CGFontGetLeading = ~f{i^v}
	CGFontGetNumberOfGlyphs = ~f{L^v}
	CGFontGetStemV = ~f{d^v}
	CGFontGetTypeID = ~f{L}
	CGFontGetUnitsPerEm = ~f{i^v}
	CGFontGetXHeight = ~f{i^v}
	CGFontRelease = ~f{v^v}
	CGFontRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libkern/OSAtomicQueue.h
	OSAtomicDequeue = ~f{^v^vL}
	OSAtomicEnqueue = ~f{v^v^vL}
	OSAtomicFifoDequeue = ~f{^v^vL}
	OSAtomicFifoEnqueue = ~f{v^v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/removefile.h
	removefile = ~f{i^c^vI}
	removefile_cancel = ~f{i^v}
	removefile_state_alloc = ~f{^v}
	removefile_state_free = ~f{i^v}
	removefile_state_get = ~f{i^vI^v}
	removefile_state_set = ~f{i^vI^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecRandom.h
	SecRandomCopyBytes = ~f{i^vL^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/SAX2.h
	docbDefaultSAXHandlerInit = ~f{v}
	htmlDefaultSAXHandlerInit = ~f{v}
	xmlDefaultSAXHandlerInit = ~f{v}
	xmlSAX2AttributeDecl = ~f{v^v^C^Cii^C^v}
	xmlSAX2CDataBlock = ~f{v^v^Ci}
	xmlSAX2Characters = ~f{v^v^Ci}
	xmlSAX2Comment = ~f{v^v^C}
	xmlSAX2ElementDecl = ~f{v^v^Ci^v}
	xmlSAX2EndDocument = ~f{v^v}
	xmlSAX2EndElement = ~f{v^v^C}
	xmlSAX2EndElementNs = ~f{v^v^C^C^C}
	xmlSAX2EntityDecl = ~f{v^v^Ci^C^C^C}
	xmlSAX2ExternalSubset = ~f{v^v^C^C^C}
	xmlSAX2GetColumnNumber = ~f{i^v}
	xmlSAX2GetEntity = ~f{^v^v^C}
	xmlSAX2GetLineNumber = ~f{i^v}
	xmlSAX2GetParameterEntity = ~f{^v^v^C}
	xmlSAX2GetPublicId = ~f{^C^v}
	xmlSAX2GetSystemId = ~f{^C^v}
	xmlSAX2HasExternalSubset = ~f{i^v}
	xmlSAX2HasInternalSubset = ~f{i^v}
	xmlSAX2IgnorableWhitespace = ~f{v^v^Ci}
	xmlSAX2InitDefaultSAXHandler = ~f{v^vi}
	xmlSAX2InitDocbDefaultSAXHandler = ~f{v^v}
	xmlSAX2InitHtmlDefaultSAXHandler = ~f{v^v}
	xmlSAX2InternalSubset = ~f{v^v^C^C^C}
	xmlSAX2IsStandalone = ~f{i^v}
	xmlSAX2NotationDecl = ~f{v^v^C^C^C}
	xmlSAX2ProcessingInstruction = ~f{v^v^C^C}
	xmlSAX2Reference = ~f{v^v^C}
	xmlSAX2ResolveEntity = ~f{^v^v^C^C}
	xmlSAX2SetDocumentLocator = ~f{v^v^v}
	xmlSAX2StartDocument = ~f{v^v}
	xmlSAX2StartElement = ~f{v^v^C^^C}
	xmlSAX2StartElementNs = ~f{v^v^C^C^Ci^^Cii^^C}
	xmlSAX2UnparsedEntityDecl = ~f{v^v^C^C^C^C}
	xmlSAXDefaultVersion = ~f{ii}
	xmlSAXVersion = ~f{i^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/vForce.h
	vvacos = ~f{v^d^d^i}
	vvacosf = ~f{v^f^f^i}
	vvacosh = ~f{v^d^d^i}
	vvacoshf = ~f{v^f^f^i}
	vvasin = ~f{v^d^d^i}
	vvasinf = ~f{v^f^f^i}
	vvasinh = ~f{v^d^d^i}
	vvasinhf = ~f{v^f^f^i}
	vvatan = ~f{v^d^d^i}
	vvatan2 = ~f{v^d^d^d^i}
	vvatan2f = ~f{v^f^f^f^i}
	vvatanf = ~f{v^f^f^i}
	vvatanh = ~f{v^d^d^i}
	vvatanhf = ~f{v^f^f^i}
	vvcbrt = ~f{v^d^d^i}
	vvcbrtf = ~f{v^f^f^i}
	vvceil = ~f{v^d^d^i}
	vvceilf = ~f{v^f^f^i}
	vvcopysign = ~f{v^d^d^d^i}
	vvcopysignf = ~f{v^f^f^f^i}
	vvcos = ~f{v^d^d^i}
	vvcosf = ~f{v^f^f^i}
	vvcosh = ~f{v^d^d^i}
	vvcoshf = ~f{v^f^f^i}
	vvcosisin = ~f{v^{=dd}^d^i}
	vvcosisinf = ~f{v^{=ff}^f^i}
	vvcospi = ~f{v^d^d^i}
	vvcospif = ~f{v^f^f^i}
	vvdiv = ~f{v^d^d^d^i}
	vvdivf = ~f{v^f^f^f^i}
	vvexp = ~f{v^d^d^i}
	vvexp2 = ~f{v^d^d^i}
	vvexp2f = ~f{v^f^f^i}
	vvexpf = ~f{v^f^f^i}
	vvexpm1 = ~f{v^d^d^i}
	vvexpm1f = ~f{v^f^f^i}
	vvfabs = ~f{v^d^d^i}
	vvfabsf = ~f{v^f^f^i}
	vvfloor = ~f{v^d^d^i}
	vvfloorf = ~f{v^f^f^i}
	vvfmod = ~f{v^d^d^d^i}
	vvfmodf = ~f{v^f^f^f^i}
	vvint = ~f{v^d^d^i}
	vvintf = ~f{v^f^f^i}
	vvlog = ~f{v^d^d^i}
	vvlog10 = ~f{v^d^d^i}
	vvlog10f = ~f{v^f^f^i}
	vvlog1p = ~f{v^d^d^i}
	vvlog1pf = ~f{v^f^f^i}
	vvlog2 = ~f{v^d^d^i}
	vvlog2f = ~f{v^f^f^i}
	vvlogb = ~f{v^d^d^i}
	vvlogbf = ~f{v^f^f^i}
	vvlogf = ~f{v^f^f^i}
	vvnextafter = ~f{v^d^d^d^i}
	vvnextafterf = ~f{v^f^f^f^i}
	vvnint = ~f{v^d^d^i}
	vvnintf = ~f{v^f^f^i}
	vvpow = ~f{v^d^d^d^i}
	vvpowf = ~f{v^f^f^f^i}
	vvpows = ~f{v^d^d^d^i}
	vvpowsf = ~f{v^f^f^f^i}
	vvrec = ~f{v^d^d^i}
	vvrecf = ~f{v^f^f^i}
	vvremainder = ~f{v^d^d^d^i}
	vvremainderf = ~f{v^f^f^f^i}
	vvrsqrt = ~f{v^d^d^i}
	vvrsqrtf = ~f{v^f^f^i}
	vvsin = ~f{v^d^d^i}
	vvsincos = ~f{v^d^d^d^i}
	vvsincosf = ~f{v^f^f^f^i}
	vvsinf = ~f{v^f^f^i}
	vvsinh = ~f{v^d^d^i}
	vvsinhf = ~f{v^f^f^i}
	vvsinpi = ~f{v^d^d^i}
	vvsinpif = ~f{v^f^f^i}
	vvsqrt = ~f{v^d^d^i}
	vvsqrtf = ~f{v^f^f^i}
	vvtan = ~f{v^d^d^i}
	vvtanf = ~f{v^f^f^i}
	vvtanh = ~f{v^d^d^i}
	vvtanhf = ~f{v^f^f^i}
	vvtanpi = ~f{v^d^d^i}
	vvtanpif = ~f{v^f^f^i}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/kdebug_signpost.h
	kdebug_signpost = ~f{iILLLL}
	kdebug_signpost_end = ~f{iILLLL}
	kdebug_signpost_start = ~f{iILLLL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/ExtendedAudioFile.h
	ExtAudioFileCreateWithURL = ~f{i^vI^v^vI^^v}
	ExtAudioFileDispose = ~f{i^v}
	ExtAudioFileGetProperty = ~f{i^vI^I^v}
	ExtAudioFileGetPropertyInfo = ~f{i^vI^I^C}
	ExtAudioFileOpenURL = ~f{i^v^^v}
	ExtAudioFileRead = ~f{i^v^I^v}
	ExtAudioFileSeek = ~f{i^vq}
	ExtAudioFileSetProperty = ~f{i^vII^v}
	ExtAudioFileTell = ~f{i^v^q}
	ExtAudioFileWrapAudioFileID = ~f{i^vC^^v}
	ExtAudioFileWrite = ~f{i^vI^v}
	ExtAudioFileWriteAsync = ~f{i^vI^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/os/object.h
	os_release = ~f{v^v}
	os_retain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSDictionaryShims.h
	__NSDictionaryGetObjects = ~f{v@^v^vL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Headers/../Frameworks/vecLib.framework/Headers/LinearAlgebra/norms.h
	la_norm_as_double = ~f{d@L}
	la_norm_as_float = ~f{f@L}
	la_normalized_vector = ~f{@@L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/xlocale/_time.h
	strftime_l = ~f{L^cL^c^v^v}
	strptime_l = ~f{^c^c^c^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/browse_descriptor.h
	nw_browse_descriptor_create_bonjour_service = ~f{@^c^c}
	nw_browse_descriptor_get_bonjour_service_domain = ~f{^c@}
	nw_browse_descriptor_get_bonjour_service_type = ~f{^c@}
	nw_browse_descriptor_get_include_txt_record = ~f{B@}
	nw_browse_descriptor_set_include_txt_record = ~f{v@B}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/ImageIO.framework/Headers/CGImageAnimation.h
	CGAnimateImageAtURLWithBlock = ~f{i^v^v%~f{vL^v^B}}
	CGAnimateImageDataWithBlock = ~f{i^v^v%~f{vL^v^B}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/connection_report.h
	nw_connection_access_establishment_report = ~f{v@@%~f{v@}}
	nw_connection_create_new_data_transfer_report = ~f{@@}
	nw_data_transfer_report_collect = ~f{v@@%~f{v@}}
	nw_data_transfer_report_copy_path_interface = ~f{@@I}
	nw_data_transfer_report_get_duration_milliseconds = ~f{Q@}
	nw_data_transfer_report_get_path_count = ~f{I@}
	nw_data_transfer_report_get_received_application_byte_count = ~f{Q@I}
	nw_data_transfer_report_get_received_ip_packet_count = ~f{Q@I}
	nw_data_transfer_report_get_received_transport_byte_count = ~f{Q@I}
	nw_data_transfer_report_get_received_transport_duplicate_byte_count = ~f{Q@I}
	nw_data_transfer_report_get_received_transport_out_of_order_byte_count = ~f{Q@I}
	nw_data_transfer_report_get_sent_application_byte_count = ~f{Q@I}
	nw_data_transfer_report_get_sent_ip_packet_count = ~f{Q@I}
	nw_data_transfer_report_get_sent_transport_byte_count = ~f{Q@I}
	nw_data_transfer_report_get_sent_transport_retransmitted_byte_count = ~f{Q@I}
	nw_data_transfer_report_get_state = ~f{I@}
	nw_data_transfer_report_get_transport_minimum_rtt_milliseconds = ~f{Q@I}
	nw_data_transfer_report_get_transport_rtt_variance = ~f{Q@I}
	nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds = ~f{Q@I}
	nw_establishment_report_copy_proxy_endpoint = ~f{@@}
	nw_establishment_report_enumerate_protocols = ~f{v@%~f{B@QQ}}
	nw_establishment_report_enumerate_resolutions = ~f{v@%~f{BIQI@@}}
	nw_establishment_report_get_attempt_started_after_milliseconds = ~f{Q@}
	nw_establishment_report_get_duration_milliseconds = ~f{Q@}
	nw_establishment_report_get_previous_attempt_count = ~f{I@}
	nw_establishment_report_get_proxy_configured = ~f{B@}
	nw_establishment_report_get_used_proxy = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/printf.h
	asxprintf = ~f{i^^c^v^v^c$}
	asxprintf_exec = ~f{i^^c^v$}
	copy_printf_domain = ~f{^v^v}
	dxprintf = ~f{ii^v^v^c$}
	dxprintf_exec = ~f{ii^v$}
	free_printf_comp = ~f{v^v}
	free_printf_domain = ~f{v^v}
	fxprintf = ~f{i^v^v^v^c$}
	fxprintf_exec = ~f{i^v^v$}
	new_printf_comp = ~f{^v^v^v^c}
	new_printf_domain = ~f{^v}
	register_printf_domain_function = ~f{i^vi^~f{i^v^v^^v}^~f{i^vL^i}^v}
	register_printf_domain_render_std = ~f{i^v^c}
	sxprintf = ~f{i^cL^v^v^c$}
	sxprintf_exec = ~f{i^cL^v$}
	vasxprintf = ~f{i^^c^v^v^c^v}
	vasxprintf_exec = ~f{i^^c^v^v}
	vdxprintf = ~f{ii^v^v^c^v}
	vdxprintf_exec = ~f{ii^v^v}
	vfxprintf = ~f{i^v^v^v^c^v}
	vfxprintf_exec = ~f{i^v^v^v}
	vsxprintf = ~f{i^cL^v^v^c^v}
	vsxprintf_exec = ~f{i^cL^v^v}
	vxprintf = ~f{i^v^v^c^v}
	vxprintf_exec = ~f{i^v^v}
	xprintf = ~f{i^v^v^c$}
	xprintf_exec = ~f{i^v$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/BNNS/bnns.h
	BNNSFilterApply = ~f{i^v^v^v}
	BNNSFilterApplyBatch = ~f{i^vL^vL^vL}
	BNNSFilterCreateConvolutionLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreateFullyConnectedLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreatePoolingLayer = ~f{^v^v^v^v^v}
	BNNSFilterCreateVectorActivationLayer = ~f{^v^v^v^v^v}
	BNNSFilterDestroy = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCNetworkReachability.h
	SCNetworkReachabilityCreateWithAddress = ~f{^v^v^v}
	SCNetworkReachabilityCreateWithAddressPair = ~f{^v^v^v^v}
	SCNetworkReachabilityCreateWithName = ~f{^v^v^c}
	SCNetworkReachabilityGetFlags = ~f{C^v^I}
	SCNetworkReachabilityGetTypeID = ~f{L}
	SCNetworkReachabilityScheduleWithRunLoop = ~f{C^v^v^v}
	SCNetworkReachabilitySetCallback = ~f{C^v^~f{v^vI^v}^v}
	SCNetworkReachabilitySetDispatchQueue = ~f{C^v@}
	SCNetworkReachabilityUnscheduleFromRunLoop = ~f{C^v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/MacTypes.h
	DebugStr = ~f{v^C}
	Debugger = ~f{v}
	SysBreak = ~f{v}
	SysBreakFunc = ~f{v^C}
	SysBreakStr = ~f{v^C}
/usr/local/lib/clang/9.0.1/include/tbmintrin.h
	__blcfill_u32 = ~f{II}
	__blcfill_u64 = ~f{QQ}
	__blci_u32 = ~f{II}
	__blci_u64 = ~f{QQ}
	__blcic_u32 = ~f{II}
	__blcic_u64 = ~f{QQ}
	__blcmsk_u32 = ~f{II}
	__blcmsk_u64 = ~f{QQ}
	__blcs_u32 = ~f{II}
	__blcs_u64 = ~f{QQ}
	__blsfill_u32 = ~f{II}
	__blsfill_u64 = ~f{QQ}
	__blsic_u32 = ~f{II}
	__blsic_u64 = ~f{QQ}
	__t1mskc_u32 = ~f{II}
	__t1mskc_u64 = ~f{QQ}
	__tzmsk_u32 = ~f{II}
	__tzmsk_u64 = ~f{QQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/assert.h
	__assert_rtn = ~f{v^c^ci^c}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SceneKit.framework/Headers/SCNJavascript.h
	SCNExportJavaScriptModule = ~f{v@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/Headers/vImage_CVUtilities.h
	vImageBuffer_CopyToCVPixelBuffer = ~f{l^v^v^v^v^dI}
	vImageBuffer_InitForCopyFromCVPixelBuffer = ~f{l^v^v^vI}
	vImageBuffer_InitForCopyToCVPixelBuffer = ~f{l^v^v^vI}
	vImageBuffer_InitWithCVPixelBuffer = ~f{l^v^v^v^v^dI}
	vImageCVImageFormat_Copy = ~f{^v^v}
	vImageCVImageFormat_CopyChannelDescription = ~f{l^v^vI}
	vImageCVImageFormat_CopyConversionMatrix = ~f{l^v^vI}
	vImageCVImageFormat_Create = ~f{^vI^v^v^vi}
	vImageCVImageFormat_CreateWithCVPixelBuffer = ~f{^v^v}
	vImageCVImageFormat_GetAlphaHint = ~f{i^v}
	vImageCVImageFormat_GetChannelCount = ~f{I^v}
	vImageCVImageFormat_GetChannelDescription = ~f{^v^vI}
	vImageCVImageFormat_GetChannelNames = ~f{^I^v}
	vImageCVImageFormat_GetChromaSiting = ~f{^v^v}
	vImageCVImageFormat_GetColorSpace = ~f{^v^v}
	vImageCVImageFormat_GetConversionMatrix = ~f{^v^v^I}
	vImageCVImageFormat_GetFormatCode = ~f{I^v}
	vImageCVImageFormat_GetUserData = ~f{^v^v}
	vImageCVImageFormat_Release = ~f{v^v}
	vImageCVImageFormat_Retain = ~f{v^v}
	vImageCVImageFormat_SetAlphaHint = ~f{l^vi}
	vImageCVImageFormat_SetChromaSiting = ~f{l^v^v}
	vImageCVImageFormat_SetColorSpace = ~f{l^v^v}
	vImageCVImageFormat_SetUserData = ~f{l^v^v^~f{v^v^v}}
	vImageConverter_CreateForCGToCVImageFormat = ~f{^v^v^v^dI^l}
	vImageConverter_CreateForCVToCGImageFormat = ~f{^v^v^v^dI^l}
	vImageCreateMonochromeColorSpaceWithWhitePointAndTransferFunction = ~f{^v^v^viI^l}
	vImageCreateRGBColorSpaceWithPrimariesAndTransferFunction = ~f{^v^v^viI^l}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sys/fsgetpath.h
	fsgetpath = ~f{l^cL^vQ}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MetalKit.framework/Headers/MTKModel.h
	MTKMetalVertexDescriptorFromModelIO = ~f{@@}
	MTKMetalVertexDescriptorFromModelIOWithError = ~f{@@^@}
	MTKMetalVertexFormatFromModelIO = ~f{LL}
	MTKModelIOVertexDescriptorFromMetal = ~f{@@}
	MTKModelIOVertexDescriptorFromMetalWithError = ~f{@@^@}
	MTKModelIOVertexFormatFromMetal = ~f{LL}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/HTMLparser.h
	UTF8ToHtml = ~f{i^C^i^C^i}
	htmlAttrAllowed = ~f{I^v^Ci}
	htmlAutoCloseTag = ~f{i^v^C^v}
	htmlCreateMemoryParserCtxt = ~f{^v^ci}
	htmlCreatePushParserCtxt = ~f{^v^v^v^ci^ci}
	htmlCtxtReadDoc = ~f{^v^v^C^c^ci}
	htmlCtxtReadFd = ~f{^v^vi^c^ci}
	htmlCtxtReadFile = ~f{^v^v^c^ci}
	htmlCtxtReadIO = ~f{^v^v^~f{i^v^ci}^~f{i^v}^v^c^ci}
	htmlCtxtReadMemory = ~f{^v^v^ci^c^ci}
	htmlCtxtReset = ~f{v^v}
	htmlCtxtUseOptions = ~f{i^vi}
	htmlElementAllowedHere = ~f{i^v^C}
	htmlElementStatusHere = ~f{I^v^v}
	htmlEncodeEntities = ~f{i^C^i^C^ii}
	htmlEntityLookup = ~f{^v^C}
	htmlEntityValueLookup = ~f{^vI}
	htmlFreeParserCtxt = ~f{v^v}
	htmlHandleOmittedElem = ~f{ii}
	htmlIsAutoClosed = ~f{i^v^v}
	htmlIsScriptAttribute = ~f{i^C}
	htmlNewParserCtxt = ~f{^v}
	htmlNodeStatus = ~f{I^vi}
	htmlParseCharRef = ~f{i^v}
	htmlParseChunk = ~f{i^v^cii}
	htmlParseDoc = ~f{^v^C^c}
	htmlParseDocument = ~f{i^v}
	htmlParseElement = ~f{v^v}
	htmlParseEntityRef = ~f{^v^v^^C}
	htmlParseFile = ~f{^v^c^c}
	htmlReadDoc = ~f{^v^C^c^ci}
	htmlReadFd = ~f{^vi^c^ci}
	htmlReadFile = ~f{^v^c^ci}
	htmlReadIO = ~f{^v^~f{i^v^ci}^~f{i^v}^v^c^ci}
	htmlReadMemory = ~f{^v^ci^c^ci}
	htmlSAXParseDoc = ~f{^v^C^c^v^v}
	htmlSAXParseFile = ~f{^v^c^c^v^v}
	htmlTagLookup = ~f{^v^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFSet.h
	CFSetAddValue = ~f{v^v^v}
	CFSetApplyFunction = ~f{v^v^~f{v^v^v}^v}
	CFSetContainsValue = ~f{C^v^v}
	CFSetCreate = ~f{^v^v^^vl^v}
	CFSetCreateCopy = ~f{^v^v^v}
	CFSetCreateMutable = ~f{^v^vl^v}
	CFSetCreateMutableCopy = ~f{^v^vl^v}
	CFSetGetCount = ~f{l^v}
	CFSetGetCountOfValue = ~f{l^v^v}
	CFSetGetTypeID = ~f{L}
	CFSetGetValue = ~f{^v^v^v}
	CFSetGetValueIfPresent = ~f{C^v^v^^v}
	CFSetGetValues = ~f{v^v^^v}
	CFSetRemoveAllValues = ~f{v^v}
	CFSetRemoveValue = ~f{v^v^v}
	CFSetReplaceValue = ~f{v^v^v}
	CFSetSetValue = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/sysdir.h
	sysdir_get_next_search_path_enumeration = ~f{II^c}
	sysdir_start_search_path_enumeration = ~f{III}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/RuntimeShims.h
	_swift_objCMirrorSummary = ~f{^v^v}
	_swift_stdlib_flockfile_stdout = ~f{v}
	_swift_stdlib_funlockfile_stdout = ~f{v}
	_swift_stdlib_getHardwareConcurrency = ?
	_swift_stdlib_immortalize = ~f{v^v}
	_swift_stdlib_putc_stderr = ~f{ii}
	_swift_stdlib_strtod_clocale = ~f{^c^c^d}
	_swift_stdlib_strtof_clocale = ~f{^c^c^f}
	_swift_stdlib_strtold_clocale = ~f{^c^c^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Network.framework/Headers/udp_options.h
	nw_protocol_copy_udp_definition = ~f{@}
	nw_protocol_metadata_is_udp = ~f{B@}
	nw_udp_create_metadata = ~f{@}
	nw_udp_create_options = ~f{@}
	nw_udp_options_set_prefer_no_checksum = ~f{v@B}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTRubyAnnotation.h
	CTRubyAnnotationCreate = ~f{^vCCd^^v}
	CTRubyAnnotationCreateCopy = ~f{^v^v}
	CTRubyAnnotationCreateWithAttributes = ~f{^vCCC^v^v}
	CTRubyAnnotationGetAlignment = ~f{C^v}
	CTRubyAnnotationGetOverhang = ~f{C^v}
	CTRubyAnnotationGetSizeFactor = ~f{d^v}
	CTRubyAnnotationGetTextForPosition = ~f{^v^vC}
	CTRubyAnnotationGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/bsm/audit.h
	audit = ~f{i^vi}
	audit_session_join = ~f{iI}
	audit_session_port = ~f{ii^I}
	audit_session_self = ~f{I}
	auditctl = ~f{i^c}
	auditon = ~f{ii^vi}
	getaudit = ~f{i^v}
	getaudit_addr = ~f{i^vi}
	getauid = ~f{i^I}
	setaudit = ~f{i^v}
	setaudit_addr = ~f{i^vi}
	setauid = ~f{i^I}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecBase.h
	SecCopyErrorMessageString = ~f{^vi^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreText.framework/Headers/CTFontCollection.h
	CTFontCollectionCopyExclusionDescriptors = ~f{^v^v}
	CTFontCollectionCopyFontAttribute = ~f{^v^v^vI}
	CTFontCollectionCopyFontAttributes = ~f{^v^v^vI}
	CTFontCollectionCopyQueryDescriptors = ~f{^v^v}
	CTFontCollectionCreateCopyWithFontDescriptors = ~f{^v^v^v^v}
	CTFontCollectionCreateFromAvailableFonts = ~f{^v^v}
	CTFontCollectionCreateMatchingFontDescriptors = ~f{^v^v}
	CTFontCollectionCreateMatchingFontDescriptorsForFamily = ~f{^v^v^v^v}
	CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback = ~f{^v^v^~f{l^v^v^v}^v}
	CTFontCollectionCreateMatchingFontDescriptorsWithOptions = ~f{^v^v^v}
	CTFontCollectionCreateMutableCopy = ~f{^v^v}
	CTFontCollectionCreateWithFontDescriptors = ~f{^v^v^v}
	CTFontCollectionGetTypeID = ~f{L}
	CTFontCollectionSetExclusionDescriptors = ~f{v^v^v}
	CTFontCollectionSetQueryDescriptors = ~f{v^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIContentSizeCategory.h
	UIContentSizeCategoryCompareToCategory = ~f{l@@}
	UIContentSizeCategoryIsAccessibilityCategory = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPDFStream.h
	CGPDFStreamCopyData = ~f{^v^v^i}
	CGPDFStreamGetDictionary = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLIndirectCommandBuffer.h
	MTLIndirectCommandBufferExecutionRangeMake = ~f{{=II}II}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AudioToolbox.framework/Headers/AudioCodec.h
	AudioCodecAppendInputBufferList = ~f{i^v^v^I^v^I}
	AudioCodecAppendInputData = ~f{i^v^v^I^I^v}
	AudioCodecGetProperty = ~f{i^vI^I^v}
	AudioCodecGetPropertyInfo = ~f{i^vI^I^C}
	AudioCodecInitialize = ~f{i^v^v^v^vI}
	AudioCodecProduceOutputBufferList = ~f{i^v^v^I^v^I}
	AudioCodecProduceOutputPackets = ~f{i^v^v^I^I^v^I}
	AudioCodecReset = ~f{i^v}
	AudioCodecSetProperty = ~f{i^vII^v}
	AudioCodecUninitialize = ~f{i^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/GameController.framework/Headers/GCExtendedGamepadSnapshot.h
	GCExtendedGamepadSnapShotDataV100FromNSData = ~f{B^v@}
	GCExtendedGamepadSnapshotDataFromNSData = ~f{B^v@}
	NSDataFromGCExtendedGamepadSnapShotDataV100 = ~f{@^v}
	NSDataFromGCExtendedGamepadSnapshotData = ~f{@^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFPlugIn.h
	CFPlugInAddInstanceForFactory = ~f{v^v}
	CFPlugInCreate = ~f{^v^v^v}
	CFPlugInFindFactoriesForPlugInType = ~f{^v^v}
	CFPlugInFindFactoriesForPlugInTypeInPlugIn = ~f{^v^v^v}
	CFPlugInGetBundle = ~f{^v^v}
	CFPlugInGetTypeID = ~f{L}
	CFPlugInInstanceCreate = ~f{^v^v^v^v}
	CFPlugInInstanceCreateWithInstanceDataSize = ~f{^v^vl^~f{v^v}^v^~f{C^v^v^^v}}
	CFPlugInInstanceGetFactoryName = ~f{^v^v}
	CFPlugInInstanceGetInstanceData = ~f{^v^v}
	CFPlugInInstanceGetInterfaceFunctionTable = ~f{C^v^v^^v}
	CFPlugInInstanceGetTypeID = ~f{L}
	CFPlugInIsLoadOnDemand = ~f{C^v}
	CFPlugInRegisterFactoryFunction = ~f{C^v^~f{^v^v^v}}
	CFPlugInRegisterFactoryFunctionByName = ~f{C^v^v^v}
	CFPlugInRegisterPlugInType = ~f{C^v^v}
	CFPlugInRemoveInstanceForFactory = ~f{v^v}
	CFPlugInSetLoadOnDemand = ~f{v^vC}
	CFPlugInUnregisterFactory = ~f{C^v}
	CFPlugInUnregisterPlugInType = ~f{C^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/once.h
	_dispatch_once = ~f{v^l%~f{v}}
	_dispatch_once_f = ~f{v^l^v^~f{v^v}}
	dispatch_once = ~f{v^l%~f{v}}
	dispatch_once_f = ~f{v^l^v^~f{v^v}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/vis.h
	nvis = ~f{^c^cLiii}
	snvis = ~f{^c^cLiii^c}
	strenvisx = ~f{i^cL^cLi^i}
	strnunvis = ~f{i^cL^c}
	strnunvisx = ~f{i^cL^ci}
	strnvis = ~f{i^cL^ci}
	strnvisx = ~f{i^cL^cLi}
	strsenvisx = ~f{i^cL^cLi^c^i}
	strsnvis = ~f{i^cL^ci^c}
	strsnvisx = ~f{i^cL^cLi^c}
	strsvis = ~f{i^c^ci^c}
	strsvisx = ~f{i^c^cLi^c}
	strunvis = ~f{i^c^c}
	strunvisx = ~f{i^c^ci}
	strvis = ~f{i^c^ci}
	strvisx = ~f{i^c^cLi}
	svis = ~f{^c^ciii^c}
	unvis = ~f{i^ci^ii}
	vis = ~f{^c^ciii}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/wordexp.h
	wordexp = ~f{i^c^vi}
	wordfree = ~f{v^v}
/usr/local/lib/clang/9.0.1/include/invpcidintrin.h
	_invpcid = ~f{vI^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/threads.h
	xmlCleanupThreads = ~f{v}
	xmlFreeMutex = ~f{v^v}
	xmlFreeRMutex = ~f{v^v}
	xmlGetGlobalState = ~f{^v}
	xmlGetThreadId = ~f{i}
	xmlInitThreads = ~f{v}
	xmlIsMainThread = ~f{i}
	xmlLockLibrary = ~f{v}
	xmlMutexLock = ~f{v^v}
	xmlMutexUnlock = ~f{v^v}
	xmlNewMutex = ~f{^v}
	xmlNewRMutex = ~f{^v}
	xmlRMutexLock = ~f{v^v}
	xmlRMutexUnlock = ~f{v^v}
	xmlUnlockLibrary = ~f{v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/Sparse/BLAS.h
	sparse_commit = ~f{i^v}
	sparse_elementwise_norm_double = ~f{d^vI}
	sparse_elementwise_norm_float = ~f{f^vI}
	sparse_extract_block_double = ~f{i^vqqQQ^d}
	sparse_extract_block_float = ~f{i^vqqQQ^f}
	sparse_extract_sparse_column_double = ~f{i^vqq^qQ^d^q}
	sparse_extract_sparse_column_float = ~f{i^vqq^qQ^f^q}
	sparse_extract_sparse_row_double = ~f{i^vqq^qQ^d^q}
	sparse_extract_sparse_row_float = ~f{i^vqq^qQ^f^q}
	sparse_get_block_dimension_for_col = ~f{l^vq}
	sparse_get_block_dimension_for_row = ~f{l^vq}
	sparse_get_matrix_nonzero_count = ~f{l^v}
	sparse_get_matrix_nonzero_count_for_column = ~f{l^vq}
	sparse_get_matrix_nonzero_count_for_row = ~f{l^vq}
	sparse_get_matrix_number_of_columns = ~f{Q^v}
	sparse_get_matrix_number_of_rows = ~f{Q^v}
	sparse_get_matrix_property = ~f{l^vI}
	sparse_get_vector_nonzero_count_double = ~f{lQ^dq}
	sparse_get_vector_nonzero_count_float = ~f{lQ^fq}
	sparse_inner_product_dense_double = ~f{dQ^d^q^dq}
	sparse_inner_product_dense_float = ~f{fQ^f^q^fq}
	sparse_inner_product_sparse_double = ~f{dQQ^d^q^d^q}
	sparse_inner_product_sparse_float = ~f{fQQ^f^q^f^q}
	sparse_insert_block_double = ~f{i^v^dQQqq}
	sparse_insert_block_float = ~f{i^v^fQQqq}
	sparse_insert_col_double = ~f{i^vqQ^d^q}
	sparse_insert_col_float = ~f{i^vqQ^f^q}
	sparse_insert_entries_double = ~f{i^vQ^d^q^q}
	sparse_insert_entries_float = ~f{i^vQ^f^q^q}
	sparse_insert_entry_double = ~f{i^vdqq}
	sparse_insert_entry_float = ~f{i^vfqq}
	sparse_insert_row_double = ~f{i^vqQ^d^q}
	sparse_insert_row_float = ~f{i^vqQ^f^q}
	sparse_matrix_block_create_double = ~f{^vQQQQ}
	sparse_matrix_block_create_float = ~f{^vQQQQ}
	sparse_matrix_create_double = ~f{^vQQ}
	sparse_matrix_create_float = ~f{^vQQ}
	sparse_matrix_destroy = ~f{i^v}
	sparse_matrix_product_dense_double = ~f{iIIQd^v^dQ^dQ}
	sparse_matrix_product_dense_float = ~f{iIIQf^v^fQ^fQ}
	sparse_matrix_product_sparse_double = ~f{iIId^v^v^dQ}
	sparse_matrix_product_sparse_float = ~f{iIIf^v^v^fQ}
	sparse_matrix_trace_double = ~f{d^vq}
	sparse_matrix_trace_float = ~f{f^vq}
	sparse_matrix_triangular_solve_dense_double = ~f{iIIQd^v^dQ}
	sparse_matrix_triangular_solve_dense_float = ~f{iIIQf^v^fQ}
	sparse_matrix_variable_block_create_double = ~f{^vQQ^Q^Q}
	sparse_matrix_variable_block_create_float = ~f{^vQQ^Q^Q}
	sparse_matrix_vector_product_dense_double = ~f{iId^v^dq^dq}
	sparse_matrix_vector_product_dense_float = ~f{iIf^v^fq^fq}
	sparse_operator_norm_double = ~f{d^vI}
	sparse_operator_norm_float = ~f{f^vI}
	sparse_outer_product_dense_double = ~f{iQQQd^dq^d^q^^v}
	sparse_outer_product_dense_float = ~f{iQQQf^fq^f^q^^v}
	sparse_pack_vector_double = ~f{lQQ^dq^d^q}
	sparse_pack_vector_float = ~f{lQQ^fq^f^q}
	sparse_permute_cols_double = ~f{i^v^q}
	sparse_permute_cols_float = ~f{i^v^q}
	sparse_permute_rows_double = ~f{i^v^q}
	sparse_permute_rows_float = ~f{i^v^q}
	sparse_set_matrix_property = ~f{i^vI}
	sparse_unpack_vector_double = ~f{vQQB^d^q^dq}
	sparse_unpack_vector_float = ~f{vQQB^f^q^fq}
	sparse_vector_add_with_scale_dense_double = ~f{vQd^d^q^dq}
	sparse_vector_add_with_scale_dense_float = ~f{vQf^f^q^fq}
	sparse_vector_norm_double = ~f{dQ^d^qI}
	sparse_vector_norm_float = ~f{fQ^f^qI}
	sparse_vector_triangular_solve_dense_double = ~f{iId^v^dq}
	sparse_vector_triangular_solve_dense_float = ~f{iIf^v^fq}
/usr/local/lib/clang/9.0.1/include/enqcmdintrin.h
	_enqcmd = ~f{i^v^v}
	_enqcmds = ~f{i^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/compression.h
	compression_decode_buffer = ~f{L^CL^CL^vI}
	compression_decode_scratch_buffer_size = ~f{LI}
	compression_encode_buffer = ~f{L^CL^CL^vI}
	compression_encode_scratch_buffer_size = ~f{LI}
	compression_stream_destroy = ~f{i^v}
	compression_stream_init = ~f{i^vII}
	compression_stream_process = ~f{i^vi}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMMemoryPool.h
	CMMemoryPoolCreate = ~f{^v^v}
	CMMemoryPoolFlush = ~f{v^v}
	CMMemoryPoolGetAllocator = ~f{^v^v}
	CMMemoryPoolGetTypeID = ~f{L}
	CMMemoryPoolInvalidate = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CFNetwork.framework/Headers/CFSocketStream.h
	CFSocketStreamSOCKSGetError = ~f{i^v}
	CFSocketStreamSOCKSGetErrorSubdomain = ~f{i^v}
	CFStreamCreatePairWithSocketToCFHost = ~f{v^v^vi^^v^^v}
	CFStreamCreatePairWithSocketToNetService = ~f{v^v^v^^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/wchar.h
	btowc = ~f{ii}
	fgetwc = ~f{i^v}
	fgetwln = ~f{^i^v^L}
	fgetws = ~f{^i^ii^v}
	fputwc = ~f{ii^v}
	fputws = ~f{i^i^v}
	fwide = ~f{i^vi}
	fwprintf = ~f{i^v^i$}
	fwscanf = ~f{i^v^i$}
	getwc = ~f{i^v}
	getwchar = ~f{i}
	mbrlen = ~f{L^cL^v}
	mbrtowc = ~f{L^i^cL^v}
	mbsinit = ~f{i^v}
	mbsnrtowcs = ~f{L^i^^cLL^v}
	mbsrtowcs = ~f{L^i^^cL^v}
	open_wmemstream = ~f{^v^^i^L}
	putwc = ~f{ii^v}
	putwchar = ~f{ii}
	swprintf = ~f{i^iL^i$}
	swscanf = ~f{i^i^i$}
	ungetwc = ~f{ii^v}
	vfwprintf = ~f{i^v^i^v}
	vfwscanf = ~f{i^v^i^v}
	vswprintf = ~f{i^iL^i^v}
	vswscanf = ~f{i^i^i^v}
	vwprintf = ~f{i^i^v}
	vwscanf = ~f{i^i^v}
	wcpcpy = ~f{^i^i^i}
	wcpncpy = ~f{^i^i^iL}
	wcrtomb = ~f{L^ci^v}
	wcscasecmp = ~f{i^i^i}
	wcscat = ~f{^i^i^i}
	wcschr = ~f{^i^ii}
	wcscmp = ~f{i^i^i}
	wcscoll = ~f{i^i^i}
	wcscpy = ~f{^i^i^i}
	wcscspn = ~f{L^i^i}
	wcsdup = ~f{^i^i}
	wcsftime = ~f{L^iL^i^v}
	wcslcat = ~f{L^i^iL}
	wcslcpy = ~f{L^i^iL}
	wcslen = ~f{L^i}
	wcsncasecmp = ~f{i^i^iL}
	wcsncat = ~f{^i^i^iL}
	wcsncmp = ~f{i^i^iL}
	wcsncpy = ~f{^i^i^iL}
	wcsnlen = ~f{L^iL}
	wcsnrtombs = ~f{L^c^^iLL^v}
	wcspbrk = ~f{^i^i^i}
	wcsrchr = ~f{^i^ii}
	wcsrtombs = ~f{L^c^^iL^v}
	wcsspn = ~f{L^i^i}
	wcsstr = ~f{^i^i^i}
	wcstod = ~f{d^i^^i}
	wcstof = ~f{f^i^^i}
	wcstok = ~f{^i^i^i^^i}
	wcstol = ~f{l^i^^ii}
	wcstold = ~f{D^i^^i}
	wcstoll = ~f{q^i^^ii}
	wcstoul = ~f{L^i^^ii}
	wcstoull = ~f{Q^i^^ii}
	wcswidth = ~f{i^iL}
	wcsxfrm = ~f{L^i^iL}
	wctob = ~f{ii}
	wcwidth = ~f{ii}
	wmemchr = ~f{^i^iiL}
	wmemcmp = ~f{i^i^iL}
	wmemcpy = ~f{^i^i^iL}
	wmemmove = ~f{^i^i^iL}
	wmemset = ~f{^i^iiL}
	wprintf = ~f{i^i$}
	wscanf = ~f{i^i$}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Security.framework/Headers/SecCertificate.h
	SecCertificateCopyCommonName = ~f{i^v^^v}
	SecCertificateCopyData = ~f{^v^v}
	SecCertificateCopyEmailAddresses = ~f{i^v^^v}
	SecCertificateCopyKey = ~f{^v^v}
	SecCertificateCopyNormalizedIssuerSequence = ~f{^v^v}
	SecCertificateCopyNormalizedSubjectSequence = ~f{^v^v}
	SecCertificateCopyPublicKey = ~f{^v^v}
	SecCertificateCopySerialNumber = ~f{^v^v}
	SecCertificateCopySerialNumberData = ~f{^v^v^^v}
	SecCertificateCopySubjectSummary = ~f{^v^v}
	SecCertificateCreateWithData = ~f{^v^v^v}
	SecCertificateGetTypeID = ~f{L}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/MediaToolbox.framework/Headers/MTFormatNames.h
	MTCopyLocalizedNameForMediaSubType = ~f{^vII}
	MTCopyLocalizedNameForMediaType = ~f{^vI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cache_callbacks.h
	cache_hash_byte_string = ~f{L^cL}
	cache_key_hash_cb_cstring = ~f{L^v^v}
	cache_key_hash_cb_integer = ~f{L^v^v}
	cache_key_is_equal_cb_cstring = ~f{B^v^v^v}
	cache_key_is_equal_cb_integer = ~f{B^v^v^v}
	cache_release_cb_free = ~f{v^v^v}
	cache_value_make_nonpurgeable_cb = ~f{B^v^v}
	cache_value_make_purgeable_cb = ~f{v^v^v}
/usr/local/lib/clang/9.0.1/include/prfchwintrin.h
	_m_prefetch = ~f{v^v}
	_m_prefetchw = ~f{v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/dispatch/block.h
	dispatch_block_cancel = ~f{v%~f{v}}
	dispatch_block_create = ~f{%~f{v}L%~f{v}}
	dispatch_block_create_with_qos_class = ~f{%~f{v}LIi%~f{v}}
	dispatch_block_notify = ~f{v%~f{v}@%~f{v}}
	dispatch_block_perform = ~f{vL%~f{v}}
	dispatch_block_testcancel = ~f{l%~f{v}}
	dispatch_block_wait = ~f{l%~f{v}Q}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/tree.h
	xmlAddChild = ~f{^v^v^v}
	xmlAddChildList = ~f{^v^v^v}
	xmlAddNextSibling = ~f{^v^v^v}
	xmlAddPrevSibling = ~f{^v^v^v}
	xmlAddSibling = ~f{^v^v^v}
	xmlAttrSerializeTxtContent = ~f{v^v^v^v^C}
	xmlBufContent = ~f{^C^v}
	xmlBufEnd = ~f{^C^v}
	xmlBufGetNodeContent = ~f{i^v^v}
	xmlBufNodeDump = ~f{L^v^v^vii}
	xmlBufShrink = ~f{L^vL}
	xmlBufUse = ~f{L^v}
	xmlBufferAdd = ~f{i^v^Ci}
	xmlBufferAddHead = ~f{i^v^Ci}
	xmlBufferCCat = ~f{i^v^c}
	xmlBufferCat = ~f{i^v^C}
	xmlBufferContent = ~f{^C^v}
	xmlBufferCreate = ~f{^v}
	xmlBufferCreateSize = ~f{^vL}
	xmlBufferCreateStatic = ~f{^v^vL}
	xmlBufferDetach = ~f{^C^v}
	xmlBufferDump = ~f{i^v^v}
	xmlBufferEmpty = ~f{v^v}
	xmlBufferFree = ~f{v^v}
	xmlBufferGrow = ~f{i^vI}
	xmlBufferLength = ~f{i^v}
	xmlBufferResize = ~f{i^vI}
	xmlBufferSetAllocationScheme = ~f{v^vI}
	xmlBufferShrink = ~f{i^vI}
	xmlBufferWriteCHAR = ~f{v^v^C}
	xmlBufferWriteChar = ~f{v^v^c}
	xmlBufferWriteQuotedString = ~f{v^v^C}
	xmlBuildQName = ~f{^C^C^C^Ci}
	xmlChildElementCount = ~f{L^v}
	xmlCopyDoc = ~f{^v^vi}
	xmlCopyDtd = ~f{^v^v}
	xmlCopyNamespace = ~f{^v^v}
	xmlCopyNamespaceList = ~f{^v^v}
	xmlCopyNode = ~f{^v^vi}
	xmlCopyNodeList = ~f{^v^v}
	xmlCopyProp = ~f{^v^v^v}
	xmlCopyPropList = ~f{^v^v^v}
	xmlCreateIntSubset = ~f{^v^v^C^C^C}
	xmlDOMWrapAdoptNode = ~f{i^v^v^v^v^vi}
	xmlDOMWrapCloneNode = ~f{i^v^v^v^^v^v^vii}
	xmlDOMWrapFreeCtxt = ~f{v^v}
	xmlDOMWrapNewCtxt = ~f{^v}
	xmlDOMWrapReconcileNamespaces = ~f{i^v^vi}
	xmlDOMWrapRemoveNode = ~f{i^v^v^vi}
	xmlDocCopyNode = ~f{^v^v^vi}
	xmlDocCopyNodeList = ~f{^v^v^v}
	xmlDocDump = ~f{i^v^v}
	xmlDocDumpFormatMemory = ~f{v^v^^C^ii}
	xmlDocDumpFormatMemoryEnc = ~f{v^v^^C^i^ci}
	xmlDocDumpMemory = ~f{v^v^^C^i}
	xmlDocDumpMemoryEnc = ~f{v^v^^C^i^c}
	xmlDocFormatDump = ~f{i^v^vi}
	xmlDocGetRootElement = ~f{^v^v}
	xmlDocSetRootElement = ~f{^v^v^v}
	xmlElemDump = ~f{v^v^v^v}
	xmlFirstElementChild = ~f{^v^v}
	xmlFreeDoc = ~f{v^v}
	xmlFreeDtd = ~f{v^v}
	xmlFreeNode = ~f{v^v}
	xmlFreeNodeList = ~f{v^v}
	xmlFreeNs = ~f{v^v}
	xmlFreeNsList = ~f{v^v}
	xmlFreeProp = ~f{v^v}
	xmlFreePropList = ~f{v^v}
	xmlGetBufferAllocationScheme = ~f{I}
	xmlGetCompressMode = ~f{i}
	xmlGetDocCompressMode = ~f{i^v}
	xmlGetIntSubset = ~f{^v^v}
	xmlGetLastChild = ~f{^v^v}
	xmlGetLineNo = ~f{l^v}
	xmlGetNoNsProp = ~f{^C^v^C}
	xmlGetNodePath = ~f{^C^v}
	xmlGetNsList = ~f{^^v^v^v}
	xmlGetNsProp = ~f{^C^v^C^C}
	xmlGetProp = ~f{^C^v^C}
	xmlHasNsProp = ~f{^v^v^C^C}
	xmlHasProp = ~f{^v^v^C}
	xmlIsBlankNode = ~f{i^v}
	xmlIsXHTML = ~f{i^C^C}
	xmlLastElementChild = ~f{^v^v}
	xmlNewCDataBlock = ~f{^v^v^Ci}
	xmlNewCharRef = ~f{^v^v^C}
	xmlNewChild = ~f{^v^v^v^C^C}
	xmlNewComment = ~f{^v^C}
	xmlNewDoc = ~f{^v^C}
	xmlNewDocComment = ~f{^v^v^C}
	xmlNewDocFragment = ~f{^v^v}
	xmlNewDocNode = ~f{^v^v^v^C^C}
	xmlNewDocNodeEatName = ~f{^v^v^v^C^C}
	xmlNewDocPI = ~f{^v^v^C^C}
	xmlNewDocProp = ~f{^v^v^C^C}
	xmlNewDocRawNode = ~f{^v^v^v^C^C}
	xmlNewDocText = ~f{^v^v^C}
	xmlNewDocTextLen = ~f{^v^v^Ci}
	xmlNewDtd = ~f{^v^v^C^C^C}
	xmlNewGlobalNs = ~f{^v^v^C^C}
	xmlNewNode = ~f{^v^v^C}
	xmlNewNodeEatName = ~f{^v^v^C}
	xmlNewNs = ~f{^v^v^C^C}
	xmlNewNsProp = ~f{^v^v^v^C^C}
	xmlNewNsPropEatName = ~f{^v^v^v^C^C}
	xmlNewPI = ~f{^v^C^C}
	xmlNewProp = ~f{^v^v^C^C}
	xmlNewReference = ~f{^v^v^C}
	xmlNewText = ~f{^v^C}
	xmlNewTextChild = ~f{^v^v^v^C^C}
	xmlNewTextLen = ~f{^v^Ci}
	xmlNextElementSibling = ~f{^v^v}
	xmlNodeAddContent = ~f{v^v^C}
	xmlNodeAddContentLen = ~f{v^v^Ci}
	xmlNodeBufGetContent = ~f{i^v^v}
	xmlNodeDump = ~f{i^v^v^vii}
	xmlNodeDumpOutput = ~f{v^v^v^vii^c}
	xmlNodeGetBase = ~f{^C^v^v}
	xmlNodeGetContent = ~f{^C^v}
	xmlNodeGetLang = ~f{^C^v}
	xmlNodeGetSpacePreserve = ~f{i^v}
	xmlNodeIsText = ~f{i^v}
	xmlNodeListGetRawString = ~f{^C^v^vi}
	xmlNodeListGetString = ~f{^C^v^vi}
	xmlNodeSetBase = ~f{v^v^C}
	xmlNodeSetContent = ~f{v^v^C}
	xmlNodeSetContentLen = ~f{v^v^Ci}
	xmlNodeSetLang = ~f{v^v^C}
	xmlNodeSetName = ~f{v^v^C}
	xmlNodeSetSpacePreserve = ~f{v^vi}
	xmlPreviousElementSibling = ~f{^v^v}
	xmlReconciliateNs = ~f{i^v^v}
	xmlRemoveProp = ~f{i^v}
	xmlReplaceNode = ~f{^v^v^v}
	xmlSaveFile = ~f{i^c^v}
	xmlSaveFileEnc = ~f{i^c^v^c}
	xmlSaveFileTo = ~f{i^v^v^c}
	xmlSaveFormatFile = ~f{i^c^vi}
	xmlSaveFormatFileEnc = ~f{i^c^v^ci}
	xmlSaveFormatFileTo = ~f{i^v^v^ci}
	xmlSearchNs = ~f{^v^v^v^C}
	xmlSearchNsByHref = ~f{^v^v^v^C}
	xmlSetBufferAllocationScheme = ~f{vI}
	xmlSetCompressMode = ~f{vi}
	xmlSetDocCompressMode = ~f{v^vi}
	xmlSetListDoc = ~f{v^v^v}
	xmlSetNs = ~f{v^v^v}
	xmlSetNsProp = ~f{^v^v^v^C^C}
	xmlSetProp = ~f{^v^v^C^C}
	xmlSetTreeDoc = ~f{v^v^v}
	xmlSplitQName2 = ~f{^C^C^^C}
	xmlSplitQName3 = ~f{^C^C^i}
	xmlStringGetNodeList = ~f{^v^v^C}
	xmlStringLenGetNodeList = ~f{^v^v^Ci}
	xmlTextConcat = ~f{i^v^Ci}
	xmlTextMerge = ~f{^v^v^v}
	xmlUnlinkNode = ~f{v^v}
	xmlUnsetNsProp = ~f{i^v^v^C}
	xmlUnsetProp = ~f{i^v^C}
	xmlValidateNCName = ~f{i^Ci}
	xmlValidateNMToken = ~f{i^Ci}
	xmlValidateName = ~f{i^Ci}
	xmlValidateQName = ~f{i^Ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/AddressBook.framework/Headers/ABGroup.h
	ABAddressBookCopyArrayOfAllGroups = ~f{^v^v}
	ABAddressBookCopyArrayOfAllGroupsInSource = ~f{^v^v^v}
	ABAddressBookGetGroupCount = ~f{l^v}
	ABAddressBookGetGroupWithRecordID = ~f{^v^vi}
	ABGroupAddMember = ~f{B^v^v^^v}
	ABGroupCopyArrayOfAllMembers = ~f{^v^v}
	ABGroupCopyArrayOfAllMembersWithSortOrdering = ~f{^v^vI}
	ABGroupCopySource = ~f{^v^v}
	ABGroupCreate = ~f{^v}
	ABGroupCreateInSource = ~f{^v^v}
	ABGroupRemoveMember = ~f{B^v^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/cups/transcode.h
	cupsCharsetToUTF8 = ~f{i^C^cii}
	cupsUTF32ToUTF8 = ~f{i^C^Li}
	cupsUTF8ToCharset = ~f{i^c^Cii}
	cupsUTF8ToUTF32 = ~f{i^L^Ci}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreFoundation.framework/Headers/CFFileSecurity.h
	CFFileSecurityClearProperties = ~f{C^vL}
	CFFileSecurityCopyAccessControlList = ~f{C^v^^v}
	CFFileSecurityCopyGroupUUID = ~f{C^v^^v}
	CFFileSecurityCopyOwnerUUID = ~f{C^v^^v}
	CFFileSecurityCreate = ~f{^v^v}
	CFFileSecurityCreateCopy = ~f{^v^v^v}
	CFFileSecurityGetGroup = ~f{C^v^I}
	CFFileSecurityGetMode = ~f{C^v^S}
	CFFileSecurityGetOwner = ~f{C^v^I}
	CFFileSecurityGetTypeID = ~f{L}
	CFFileSecuritySetAccessControlList = ~f{C^v^v}
	CFFileSecuritySetGroup = ~f{C^vI}
	CFFileSecuritySetGroupUUID = ~f{C^v^v}
	CFFileSecuritySetMode = ~f{C^vS}
	CFFileSecuritySetOwner = ~f{C^vI}
	CFFileSecuritySetOwnerUUID = ~f{C^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLTypes.h
	MTLCoordinate2DMake = ~f{{=ff}ff}
	MTLOriginMake = ~f{{=LLL}LLL}
	MTLRegionMake1D = ~f{{={=LLL}{=LLL}}LL}
	MTLRegionMake2D = ~f{{={=LLL}{=LLL}}LLLL}
	MTLRegionMake3D = ~f{{={=LLL}{=LLL}}LLLLLL}
	MTLSamplePositionMake = ~f{{=ff}ff}
	MTLSizeMake = ~f{{=LLL}LLL}
/usr/local/lib/clang/9.0.1/include/avx512vlintrin.h
	_mm256_abs_epi64 = ~f{~V{4q}~V{4q}}
	_mm256_and_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_and_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_andnot_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_andnot_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_broadcast_f32x4 = ~f{~V{8f}~V{4f}}
	_mm256_broadcast_i32x4 = ~f{~V{4q}~V{2q}}
	_mm256_cvtepi32_epi16 = ~f{~V{2q}~V{4q}}
	_mm256_cvtepi32_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_cvtepi64_epi16 = ~f{~V{2q}~V{4q}}
	_mm256_cvtepi64_epi32 = ~f{~V{2q}~V{4q}}
	_mm256_cvtepi64_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_cvtepu32_pd = ~f{~V{4d}~V{2q}}
	_mm256_cvtepu32_ps = ~f{~V{8f}~V{4q}}
	_mm256_cvtpd_epu32 = ~f{~V{2q}~V{4d}}
	_mm256_cvtps_epu32 = ~f{~V{4q}~V{8f}}
	_mm256_cvtsepi32_epi16 = ~f{~V{2q}~V{4q}}
	_mm256_cvtsepi32_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_cvtsepi64_epi16 = ~f{~V{2q}~V{4q}}
	_mm256_cvtsepi64_epi32 = ~f{~V{2q}~V{4q}}
	_mm256_cvtsepi64_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_cvttpd_epu32 = ~f{~V{2q}~V{4d}}
	_mm256_cvttps_epu32 = ~f{~V{4q}~V{8f}}
	_mm256_cvtusepi32_epi16 = ~f{~V{2q}~V{4q}}
	_mm256_cvtusepi32_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_cvtusepi64_epi16 = ~f{~V{2q}~V{4q}}
	_mm256_cvtusepi64_epi32 = ~f{~V{2q}~V{4q}}
	_mm256_cvtusepi64_epi8 = ~f{~V{2q}~V{4q}}
	_mm256_getexp_pd = ~f{~V{4d}~V{4d}}
	_mm256_getexp_ps = ~f{~V{8f}~V{8f}}
	_mm256_load_epi32 = ~f{~V{4q}^v}
	_mm256_load_epi64 = ~f{~V{4q}^v}
	_mm256_loadu_epi32 = ~f{~V{4q}^v}
	_mm256_loadu_epi64 = ~f{~V{4q}^v}
	_mm256_mask2_permutex2var_epi32 = ~f{~V{4q}~V{4q}~V{4q}C~V{4q}}
	_mm256_mask2_permutex2var_epi64 = ~f{~V{4q}~V{4q}~V{4q}C~V{4q}}
	_mm256_mask2_permutex2var_pd = ~f{~V{4d}~V{4d}~V{4q}C~V{4d}}
	_mm256_mask2_permutex2var_ps = ~f{~V{8f}~V{8f}~V{4q}C~V{8f}}
	_mm256_mask3_fmadd_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}C}
	_mm256_mask3_fmadd_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}C}
	_mm256_mask3_fmaddsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}C}
	_mm256_mask3_fmaddsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}C}
	_mm256_mask3_fmsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}C}
	_mm256_mask3_fmsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}C}
	_mm256_mask3_fmsubadd_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}C}
	_mm256_mask3_fmsubadd_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}C}
	_mm256_mask3_fnmadd_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}C}
	_mm256_mask3_fnmadd_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}C}
	_mm256_mask3_fnmsub_pd = ~f{~V{4d}~V{4d}~V{4d}~V{4d}C}
	_mm256_mask3_fnmsub_ps = ~f{~V{8f}~V{8f}~V{8f}~V{8f}C}
	_mm256_mask_abs_epi32 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_abs_epi64 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_add_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_add_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_add_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_add_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_and_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_and_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_andnot_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_andnot_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_blend_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_blend_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_blend_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_blend_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_broadcast_f32x4 = ~f{~V{8f}~V{8f}C~V{4f}}
	_mm256_mask_broadcast_i32x4 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_broadcastd_epi32 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_broadcastq_epi64 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_broadcastsd_pd = ~f{~V{4d}~V{4d}C~V{2d}}
	_mm256_mask_broadcastss_ps = ~f{~V{8f}~V{8f}C~V{4f}}
	_mm256_mask_compress_epi32 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_compress_epi64 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_compress_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_compress_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_compressstoreu_epi32 = ~f{v^vC~V{4q}}
	_mm256_mask_compressstoreu_epi64 = ~f{v^vC~V{4q}}
	_mm256_mask_compressstoreu_pd = ~f{v^vC~V{4d}}
	_mm256_mask_compressstoreu_ps = ~f{v^vC~V{8f}}
	_mm256_mask_cvtepi16_epi32 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepi16_epi64 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepi32_epi16 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtepi32_epi64 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepi32_epi8 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtepi32_pd = ~f{~V{4d}~V{4d}C~V{2q}}
	_mm256_mask_cvtepi32_ps = ~f{~V{8f}~V{8f}C~V{4q}}
	_mm256_mask_cvtepi32_storeu_epi16 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtepi32_storeu_epi8 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtepi64_epi16 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtepi64_epi32 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtepi64_epi8 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtepi64_storeu_epi16 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtepi64_storeu_epi32 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtepi64_storeu_epi8 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtepi8_epi32 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepi8_epi64 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepu16_epi32 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepu16_epi64 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepu32_epi64 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepu32_pd = ~f{~V{4d}~V{4d}C~V{2q}}
	_mm256_mask_cvtepu32_ps = ~f{~V{8f}~V{8f}C~V{4q}}
	_mm256_mask_cvtepu8_epi32 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtepu8_epi64 = ~f{~V{4q}~V{4q}C~V{2q}}
	_mm256_mask_cvtpd_epi32 = ~f{~V{2q}~V{2q}C~V{4d}}
	_mm256_mask_cvtpd_epu32 = ~f{~V{2q}~V{2q}C~V{4d}}
	_mm256_mask_cvtpd_ps = ~f{~V{4f}~V{4f}C~V{4d}}
	_mm256_mask_cvtph_ps = ~f{~V{8f}~V{8f}C~V{2q}}
	_mm256_mask_cvtps_epi32 = ~f{~V{4q}~V{4q}C~V{8f}}
	_mm256_mask_cvtps_epu32 = ~f{~V{4q}~V{4q}C~V{8f}}
	_mm256_mask_cvtps_pd = ~f{~V{4d}~V{4d}C~V{4f}}
	_mm256_mask_cvtsepi32_epi16 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtsepi32_epi8 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtsepi32_storeu_epi16 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtsepi32_storeu_epi8 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtsepi64_epi16 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtsepi64_epi32 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtsepi64_epi8 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtsepi64_storeu_epi16 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtsepi64_storeu_epi32 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtsepi64_storeu_epi8 = ~f{v^vC~V{4q}}
	_mm256_mask_cvttpd_epi32 = ~f{~V{2q}~V{2q}C~V{4d}}
	_mm256_mask_cvttpd_epu32 = ~f{~V{2q}~V{2q}C~V{4d}}
	_mm256_mask_cvttps_epi32 = ~f{~V{4q}~V{4q}C~V{8f}}
	_mm256_mask_cvttps_epu32 = ~f{~V{4q}~V{4q}C~V{8f}}
	_mm256_mask_cvtusepi32_epi16 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtusepi32_epi8 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtusepi32_storeu_epi16 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtusepi32_storeu_epi8 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtusepi64_epi16 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtusepi64_epi32 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtusepi64_epi8 = ~f{~V{2q}~V{2q}C~V{4q}}
	_mm256_mask_cvtusepi64_storeu_epi16 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtusepi64_storeu_epi32 = ~f{v^vC~V{4q}}
	_mm256_mask_cvtusepi64_storeu_epi8 = ~f{v^vC~V{4q}}
	_mm256_mask_div_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_div_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_expand_epi32 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_expand_epi64 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_expand_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_expand_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_expandloadu_epi32 = ~f{~V{4q}~V{4q}C^v}
	_mm256_mask_expandloadu_epi64 = ~f{~V{4q}~V{4q}C^v}
	_mm256_mask_expandloadu_pd = ~f{~V{4d}~V{4d}C^v}
	_mm256_mask_expandloadu_ps = ~f{~V{8f}~V{8f}C^v}
	_mm256_mask_fmadd_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_fmadd_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_fmaddsub_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_fmaddsub_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_fmsub_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_fmsub_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_fmsubadd_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_fmsubadd_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_fnmadd_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_fnmadd_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_fnmsub_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_fnmsub_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_getexp_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_getexp_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_load_epi32 = ~f{~V{4q}~V{4q}C^v}
	_mm256_mask_load_epi64 = ~f{~V{4q}~V{4q}C^v}
	_mm256_mask_load_pd = ~f{~V{4d}~V{4d}C^v}
	_mm256_mask_load_ps = ~f{~V{8f}~V{8f}C^v}
	_mm256_mask_loadu_epi32 = ~f{~V{4q}~V{4q}C^v}
	_mm256_mask_loadu_epi64 = ~f{~V{4q}~V{4q}C^v}
	_mm256_mask_loadu_pd = ~f{~V{4d}~V{4d}C^v}
	_mm256_mask_loadu_ps = ~f{~V{8f}~V{8f}C^v}
	_mm256_mask_max_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_max_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_max_epu32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_max_epu64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_max_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_max_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_min_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_min_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_min_epu32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_min_epu64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_min_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_min_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_mov_epi32 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_mov_epi64 = ~f{~V{4q}~V{4q}C~V{4q}}
	_mm256_mask_mov_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_mov_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_movedup_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_movehdup_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_moveldup_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_mul_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_mul_epu32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_mul_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_mul_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_mullo_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_or_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_or_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_permutevar_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4q}}
	_mm256_mask_permutevar_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{4q}}
	_mm256_mask_permutex2var_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_permutex2var_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_permutex2var_pd = ~f{~V{4d}~V{4d}C~V{4q}~V{4d}}
	_mm256_mask_permutex2var_ps = ~f{~V{8f}~V{8f}C~V{4q}~V{8f}}
	_mm256_mask_permutexvar_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_permutexvar_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_permutexvar_pd = ~f{~V{4d}~V{4d}C~V{4q}~V{4d}}
	_mm256_mask_permutexvar_ps = ~f{~V{8f}~V{8f}C~V{4q}~V{8f}}
	_mm256_mask_rcp14_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_rcp14_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_rolv_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_rolv_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_rorv_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_rorv_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_rsqrt14_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_rsqrt14_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_scalef_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_scalef_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_set1_epi32 = ~f{~V{4q}~V{4q}Ci}
	_mm256_mask_set1_epi64 = ~f{~V{4q}~V{4q}Cq}
	_mm256_mask_sll_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{2q}}
	_mm256_mask_sll_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{2q}}
	_mm256_mask_slli_epi32 = ~f{~V{4q}~V{4q}C~V{4q}i}
	_mm256_mask_slli_epi64 = ~f{~V{4q}~V{4q}C~V{4q}i}
	_mm256_mask_sllv_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_sllv_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_sqrt_pd = ~f{~V{4d}~V{4d}C~V{4d}}
	_mm256_mask_sqrt_ps = ~f{~V{8f}~V{8f}C~V{8f}}
	_mm256_mask_sra_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{2q}}
	_mm256_mask_sra_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{2q}}
	_mm256_mask_srai_epi32 = ~f{~V{4q}~V{4q}C~V{4q}i}
	_mm256_mask_srai_epi64 = ~f{~V{4q}~V{4q}C~V{4q}i}
	_mm256_mask_srav_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_srav_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_srl_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{2q}}
	_mm256_mask_srl_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{2q}}
	_mm256_mask_srli_epi32 = ~f{~V{4q}~V{4q}C~V{4q}i}
	_mm256_mask_srli_epi64 = ~f{~V{4q}~V{4q}C~V{4q}i}
	_mm256_mask_srlv_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_srlv_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_store_epi32 = ~f{v^vC~V{4q}}
	_mm256_mask_store_epi64 = ~f{v^vC~V{4q}}
	_mm256_mask_store_pd = ~f{v^vC~V{4d}}
	_mm256_mask_store_ps = ~f{v^vC~V{8f}}
	_mm256_mask_storeu_epi32 = ~f{v^vC~V{4q}}
	_mm256_mask_storeu_epi64 = ~f{v^vC~V{4q}}
	_mm256_mask_storeu_pd = ~f{v^vC~V{4d}}
	_mm256_mask_storeu_ps = ~f{v^vC~V{8f}}
	_mm256_mask_sub_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_sub_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_sub_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_sub_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_test_epi32_mask = ~f{CC~V{4q}~V{4q}}
	_mm256_mask_test_epi64_mask = ~f{CC~V{4q}~V{4q}}
	_mm256_mask_testn_epi32_mask = ~f{CC~V{4q}~V{4q}}
	_mm256_mask_testn_epi64_mask = ~f{CC~V{4q}~V{4q}}
	_mm256_mask_unpackhi_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_unpackhi_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_unpackhi_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_unpackhi_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_unpacklo_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_unpacklo_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_unpacklo_pd = ~f{~V{4d}~V{4d}C~V{4d}~V{4d}}
	_mm256_mask_unpacklo_ps = ~f{~V{8f}~V{8f}C~V{8f}~V{8f}}
	_mm256_mask_xor_epi32 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_mask_xor_epi64 = ~f{~V{4q}~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_abs_epi32 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_abs_epi64 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_add_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_add_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_add_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_add_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_and_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_and_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_andnot_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_andnot_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_broadcast_f32x4 = ~f{~V{8f}C~V{4f}}
	_mm256_maskz_broadcast_i32x4 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_broadcastd_epi32 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_broadcastq_epi64 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_broadcastsd_pd = ~f{~V{4d}C~V{2d}}
	_mm256_maskz_broadcastss_ps = ~f{~V{8f}C~V{4f}}
	_mm256_maskz_compress_epi32 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_compress_epi64 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_compress_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_compress_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_cvtepi16_epi32 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepi16_epi64 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepi32_epi16 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtepi32_epi64 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepi32_epi8 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtepi32_pd = ~f{~V{4d}C~V{2q}}
	_mm256_maskz_cvtepi32_ps = ~f{~V{8f}C~V{4q}}
	_mm256_maskz_cvtepi64_epi16 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtepi64_epi32 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtepi64_epi8 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtepi8_epi32 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepi8_epi64 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepu16_epi32 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepu16_epi64 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepu32_epi64 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepu32_pd = ~f{~V{4d}C~V{2q}}
	_mm256_maskz_cvtepu32_ps = ~f{~V{8f}C~V{4q}}
	_mm256_maskz_cvtepu8_epi32 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtepu8_epi64 = ~f{~V{4q}C~V{2q}}
	_mm256_maskz_cvtpd_epi32 = ~f{~V{2q}C~V{4d}}
	_mm256_maskz_cvtpd_epu32 = ~f{~V{2q}C~V{4d}}
	_mm256_maskz_cvtpd_ps = ~f{~V{4f}C~V{4d}}
	_mm256_maskz_cvtph_ps = ~f{~V{8f}C~V{2q}}
	_mm256_maskz_cvtps_epi32 = ~f{~V{4q}C~V{8f}}
	_mm256_maskz_cvtps_epu32 = ~f{~V{4q}C~V{8f}}
	_mm256_maskz_cvtps_pd = ~f{~V{4d}C~V{4f}}
	_mm256_maskz_cvtsepi32_epi16 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtsepi32_epi8 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtsepi64_epi16 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtsepi64_epi32 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtsepi64_epi8 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvttpd_epi32 = ~f{~V{2q}C~V{4d}}
	_mm256_maskz_cvttpd_epu32 = ~f{~V{2q}C~V{4d}}
	_mm256_maskz_cvttps_epi32 = ~f{~V{4q}C~V{8f}}
	_mm256_maskz_cvttps_epu32 = ~f{~V{4q}C~V{8f}}
	_mm256_maskz_cvtusepi32_epi16 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtusepi32_epi8 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtusepi64_epi16 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtusepi64_epi32 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_cvtusepi64_epi8 = ~f{~V{2q}C~V{4q}}
	_mm256_maskz_div_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_div_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_expand_epi32 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_expand_epi64 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_expand_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_expand_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_expandloadu_epi32 = ~f{~V{4q}C^v}
	_mm256_maskz_expandloadu_epi64 = ~f{~V{4q}C^v}
	_mm256_maskz_expandloadu_pd = ~f{~V{4d}C^v}
	_mm256_maskz_expandloadu_ps = ~f{~V{8f}C^v}
	_mm256_maskz_fmadd_pd = ~f{~V{4d}C~V{4d}~V{4d}~V{4d}}
	_mm256_maskz_fmadd_ps = ~f{~V{8f}C~V{8f}~V{8f}~V{8f}}
	_mm256_maskz_fmaddsub_pd = ~f{~V{4d}C~V{4d}~V{4d}~V{4d}}
	_mm256_maskz_fmaddsub_ps = ~f{~V{8f}C~V{8f}~V{8f}~V{8f}}
	_mm256_maskz_fmsub_pd = ~f{~V{4d}C~V{4d}~V{4d}~V{4d}}
	_mm256_maskz_fmsub_ps = ~f{~V{8f}C~V{8f}~V{8f}~V{8f}}
	_mm256_maskz_fmsubadd_pd = ~f{~V{4d}C~V{4d}~V{4d}~V{4d}}
	_mm256_maskz_fmsubadd_ps = ~f{~V{8f}C~V{8f}~V{8f}~V{8f}}
	_mm256_maskz_fnmadd_pd = ~f{~V{4d}C~V{4d}~V{4d}~V{4d}}
	_mm256_maskz_fnmadd_ps = ~f{~V{8f}C~V{8f}~V{8f}~V{8f}}
	_mm256_maskz_fnmsub_pd = ~f{~V{4d}C~V{4d}~V{4d}~V{4d}}
	_mm256_maskz_fnmsub_ps = ~f{~V{8f}C~V{8f}~V{8f}~V{8f}}
	_mm256_maskz_getexp_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_getexp_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_load_epi32 = ~f{~V{4q}C^v}
	_mm256_maskz_load_epi64 = ~f{~V{4q}C^v}
	_mm256_maskz_load_pd = ~f{~V{4d}C^v}
	_mm256_maskz_load_ps = ~f{~V{8f}C^v}
	_mm256_maskz_loadu_epi32 = ~f{~V{4q}C^v}
	_mm256_maskz_loadu_epi64 = ~f{~V{4q}C^v}
	_mm256_maskz_loadu_pd = ~f{~V{4d}C^v}
	_mm256_maskz_loadu_ps = ~f{~V{8f}C^v}
	_mm256_maskz_max_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_max_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_max_epu32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_max_epu64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_max_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_max_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_min_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_min_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_min_epu32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_min_epu64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_min_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_min_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_mov_epi32 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_mov_epi64 = ~f{~V{4q}C~V{4q}}
	_mm256_maskz_mov_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_mov_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_movedup_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_movehdup_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_moveldup_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_mul_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_mul_epu32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_mul_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_mul_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_mullo_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_or_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_or_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_permutevar_pd = ~f{~V{4d}C~V{4d}~V{4q}}
	_mm256_maskz_permutevar_ps = ~f{~V{8f}C~V{8f}~V{4q}}
	_mm256_maskz_permutex2var_epi32 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_permutex2var_epi64 = ~f{~V{4q}C~V{4q}~V{4q}~V{4q}}
	_mm256_maskz_permutex2var_pd = ~f{~V{4d}C~V{4d}~V{4q}~V{4d}}
	_mm256_maskz_permutex2var_ps = ~f{~V{8f}C~V{8f}~V{4q}~V{8f}}
	_mm256_maskz_permutexvar_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_permutexvar_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_permutexvar_pd = ~f{~V{4d}C~V{4q}~V{4d}}
	_mm256_maskz_permutexvar_ps = ~f{~V{8f}C~V{4q}~V{8f}}
	_mm256_maskz_rcp14_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_rcp14_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_rolv_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_rolv_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_rorv_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_rorv_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_rsqrt14_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_rsqrt14_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_scalef_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_scalef_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_set1_epi32 = ~f{~V{4q}Ci}
	_mm256_maskz_set1_epi64 = ~f{~V{4q}Cq}
	_mm256_maskz_sll_epi32 = ~f{~V{4q}C~V{4q}~V{2q}}
	_mm256_maskz_sll_epi64 = ~f{~V{4q}C~V{4q}~V{2q}}
	_mm256_maskz_slli_epi32 = ~f{~V{4q}C~V{4q}i}
	_mm256_maskz_slli_epi64 = ~f{~V{4q}C~V{4q}i}
	_mm256_maskz_sllv_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_sllv_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_sqrt_pd = ~f{~V{4d}C~V{4d}}
	_mm256_maskz_sqrt_ps = ~f{~V{8f}C~V{8f}}
	_mm256_maskz_sra_epi32 = ~f{~V{4q}C~V{4q}~V{2q}}
	_mm256_maskz_sra_epi64 = ~f{~V{4q}C~V{4q}~V{2q}}
	_mm256_maskz_srai_epi32 = ~f{~V{4q}C~V{4q}i}
	_mm256_maskz_srai_epi64 = ~f{~V{4q}C~V{4q}i}
	_mm256_maskz_srav_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_srav_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_srl_epi32 = ~f{~V{4q}C~V{4q}~V{2q}}
	_mm256_maskz_srl_epi64 = ~f{~V{4q}C~V{4q}~V{2q}}
	_mm256_maskz_srli_epi32 = ~f{~V{4q}C~V{4q}i}
	_mm256_maskz_srli_epi64 = ~f{~V{4q}C~V{4q}i}
	_mm256_maskz_srlv_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_srlv_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_sub_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_sub_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_sub_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_sub_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_unpackhi_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_unpackhi_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_unpackhi_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_unpackhi_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_unpacklo_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_unpacklo_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_unpacklo_pd = ~f{~V{4d}C~V{4d}~V{4d}}
	_mm256_maskz_unpacklo_ps = ~f{~V{8f}C~V{8f}~V{8f}}
	_mm256_maskz_xor_epi32 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_maskz_xor_epi64 = ~f{~V{4q}C~V{4q}~V{4q}}
	_mm256_max_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_max_epu64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_min_epu64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_or_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_or_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_permutex2var_epi32 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_permutex2var_epi64 = ~f{~V{4q}~V{4q}~V{4q}~V{4q}}
	_mm256_permutex2var_pd = ~f{~V{4d}~V{4d}~V{4q}~V{4d}}
	_mm256_permutex2var_ps = ~f{~V{8f}~V{8f}~V{4q}~V{8f}}
	_mm256_permutexvar_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_permutexvar_pd = ~f{~V{4d}~V{4q}~V{4d}}
	_mm256_rcp14_pd = ~f{~V{4d}~V{4d}}
	_mm256_rcp14_ps = ~f{~V{8f}~V{8f}}
	_mm256_rolv_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_rolv_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_rorv_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_rorv_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_rsqrt14_pd = ~f{~V{4d}~V{4d}}
	_mm256_rsqrt14_ps = ~f{~V{8f}~V{8f}}
	_mm256_scalef_pd = ~f{~V{4d}~V{4d}~V{4d}}
	_mm256_scalef_ps = ~f{~V{8f}~V{8f}~V{8f}}
	_mm256_sra_epi64 = ~f{~V{4q}~V{4q}~V{2q}}
	_mm256_srai_epi64 = ~f{~V{4q}~V{4q}i}
	_mm256_srav_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_store_epi32 = ~f{v^v~V{4q}}
	_mm256_store_epi64 = ~f{v^v~V{4q}}
	_mm256_storeu_epi32 = ~f{v^v~V{4q}}
	_mm256_storeu_epi64 = ~f{v^v~V{4q}}
	_mm256_test_epi32_mask = ~f{C~V{4q}~V{4q}}
	_mm256_test_epi64_mask = ~f{C~V{4q}~V{4q}}
	_mm256_testn_epi32_mask = ~f{C~V{4q}~V{4q}}
	_mm256_testn_epi64_mask = ~f{C~V{4q}~V{4q}}
	_mm256_xor_epi32 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm256_xor_epi64 = ~f{~V{4q}~V{4q}~V{4q}}
	_mm_abs_epi64 = ~f{~V{2q}~V{2q}}
	_mm_and_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_and_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_andnot_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_andnot_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_cvtepi32_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi32_epi8 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi64_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi64_epi32 = ~f{~V{2q}~V{2q}}
	_mm_cvtepi64_epi8 = ~f{~V{2q}~V{2q}}
	_mm_cvtepu32_pd = ~f{~V{2d}~V{2q}}
	_mm_cvtepu32_ps = ~f{~V{4f}~V{2q}}
	_mm_cvtpd_epu32 = ~f{~V{2q}~V{2d}}
	_mm_cvtps_epu32 = ~f{~V{2q}~V{4f}}
	_mm_cvtsepi32_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtsepi32_epi8 = ~f{~V{2q}~V{2q}}
	_mm_cvtsepi64_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtsepi64_epi32 = ~f{~V{2q}~V{2q}}
	_mm_cvtsepi64_epi8 = ~f{~V{2q}~V{2q}}
	_mm_cvttpd_epu32 = ~f{~V{2q}~V{2d}}
	_mm_cvttps_epu32 = ~f{~V{2q}~V{4f}}
	_mm_cvtusepi32_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtusepi32_epi8 = ~f{~V{2q}~V{2q}}
	_mm_cvtusepi64_epi16 = ~f{~V{2q}~V{2q}}
	_mm_cvtusepi64_epi32 = ~f{~V{2q}~V{2q}}
	_mm_cvtusepi64_epi8 = ~f{~V{2q}~V{2q}}
	_mm_getexp_pd = ~f{~V{2d}~V{2d}}
	_mm_getexp_ps = ~f{~V{4f}~V{4f}}
	_mm_load_epi32 = ~f{~V{2q}^v}
	_mm_load_epi64 = ~f{~V{2q}^v}
	_mm_loadu_epi32 = ~f{~V{2q}^v}
	_mm_loadu_epi64 = ~f{~V{2q}^v}
	_mm_mask2_permutex2var_epi32 = ~f{~V{2q}~V{2q}~V{2q}C~V{2q}}
	_mm_mask2_permutex2var_epi64 = ~f{~V{2q}~V{2q}~V{2q}C~V{2q}}
	_mm_mask2_permutex2var_pd = ~f{~V{2d}~V{2d}~V{2q}C~V{2d}}
	_mm_mask2_permutex2var_ps = ~f{~V{4f}~V{4f}~V{2q}C~V{4f}}
	_mm_mask3_fmadd_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fmadd_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fmaddsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fmaddsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fmsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fmsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fmsubadd_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fmsubadd_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fnmadd_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fnmadd_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask3_fnmsub_pd = ~f{~V{2d}~V{2d}~V{2d}~V{2d}C}
	_mm_mask3_fnmsub_ps = ~f{~V{4f}~V{4f}~V{4f}~V{4f}C}
	_mm_mask_abs_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_abs_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_add_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_add_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_add_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_add_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_and_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_and_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_andnot_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_andnot_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_blend_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_mask_blend_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_mask_blend_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_mask_blend_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_mask_broadcastd_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_broadcastq_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_broadcastss_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_compress_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_compress_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_compress_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_compress_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_compressstoreu_epi32 = ~f{v^vC~V{2q}}
	_mm_mask_compressstoreu_epi64 = ~f{v^vC~V{2q}}
	_mm_mask_compressstoreu_pd = ~f{v^vC~V{2d}}
	_mm_mask_compressstoreu_ps = ~f{v^vC~V{4f}}
	_mm_mask_cvtepi16_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi16_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi32_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi32_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi32_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi32_pd = ~f{~V{2d}~V{2d}C~V{2q}}
	_mm_mask_cvtepi32_ps = ~f{~V{4f}~V{4f}C~V{2q}}
	_mm_mask_cvtepi32_storeu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_cvtepi32_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_cvtepi64_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi64_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi64_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi64_storeu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_cvtepi64_storeu_epi32 = ~f{v^vC~V{2q}}
	_mm_mask_cvtepi64_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_cvtepi8_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepi8_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepu16_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepu16_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepu32_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepu32_pd = ~f{~V{2d}~V{2d}C~V{2q}}
	_mm_mask_cvtepu32_ps = ~f{~V{4f}~V{4f}C~V{2q}}
	_mm_mask_cvtepu8_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtepu8_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtpd_epi32 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvtpd_epu32 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvtpd_ps = ~f{~V{4f}~V{4f}C~V{2d}}
	_mm_mask_cvtph_ps = ~f{~V{4f}~V{4f}C~V{2q}}
	_mm_mask_cvtps_epi32 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_cvtps_epu32 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_cvtps_pd = ~f{~V{2d}~V{2d}C~V{4f}}
	_mm_mask_cvtsepi32_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtsepi32_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtsepi32_storeu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_cvtsepi32_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_cvtsepi64_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtsepi64_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtsepi64_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtsepi64_storeu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_cvtsepi64_storeu_epi32 = ~f{v^vC~V{2q}}
	_mm_mask_cvtsepi64_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_cvttpd_epi32 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvttpd_epu32 = ~f{~V{2q}~V{2q}C~V{2d}}
	_mm_mask_cvttps_epi32 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_cvttps_epu32 = ~f{~V{2q}~V{2q}C~V{4f}}
	_mm_mask_cvtusepi32_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtusepi32_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtusepi32_storeu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_cvtusepi32_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_cvtusepi64_epi16 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtusepi64_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtusepi64_epi8 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_cvtusepi64_storeu_epi16 = ~f{v^vC~V{2q}}
	_mm_mask_cvtusepi64_storeu_epi32 = ~f{v^vC~V{2q}}
	_mm_mask_cvtusepi64_storeu_epi8 = ~f{v^vC~V{2q}}
	_mm_mask_div_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_div_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_expand_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_expand_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_expand_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_expand_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_expandloadu_epi32 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_expandloadu_epi64 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_expandloadu_pd = ~f{~V{2d}~V{2d}C^v}
	_mm_mask_expandloadu_ps = ~f{~V{4f}~V{4f}C^v}
	_mm_mask_fmadd_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fmadd_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fmaddsub_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fmaddsub_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fmsub_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fmsub_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fmsubadd_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fmsubadd_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fnmadd_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fnmadd_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_fnmsub_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_fnmsub_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_getexp_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_getexp_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_load_epi32 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_load_epi64 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_load_pd = ~f{~V{2d}~V{2d}C^v}
	_mm_mask_load_ps = ~f{~V{4f}~V{4f}C^v}
	_mm_mask_loadu_epi32 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_loadu_epi64 = ~f{~V{2q}~V{2q}C^v}
	_mm_mask_loadu_pd = ~f{~V{2d}~V{2d}C^v}
	_mm_mask_loadu_ps = ~f{~V{4f}~V{4f}C^v}
	_mm_mask_max_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_max_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_max_epu32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_max_epu64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_max_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_max_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_min_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_min_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_min_epu32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_min_epu64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_min_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_min_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_mov_epi32 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_mov_epi64 = ~f{~V{2q}~V{2q}C~V{2q}}
	_mm_mask_mov_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_mov_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_movedup_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_movehdup_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_moveldup_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_mul_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_mul_epu32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_mul_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_mul_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_mullo_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_or_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_or_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_permutevar_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2q}}
	_mm_mask_permutevar_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{2q}}
	_mm_mask_permutex2var_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_permutex2var_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_permutex2var_pd = ~f{~V{2d}~V{2d}C~V{2q}~V{2d}}
	_mm_mask_permutex2var_ps = ~f{~V{4f}~V{4f}C~V{2q}~V{4f}}
	_mm_mask_rcp14_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_rcp14_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_rolv_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_rolv_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_rorv_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_rorv_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_rsqrt14_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_rsqrt14_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_scalef_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_scalef_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_set1_epi32 = ~f{~V{2q}~V{2q}Ci}
	_mm_mask_set1_epi64 = ~f{~V{2q}~V{2q}Cq}
	_mm_mask_sll_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sll_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_slli_epi32 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_slli_epi64 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_sllv_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sllv_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sqrt_pd = ~f{~V{2d}~V{2d}C~V{2d}}
	_mm_mask_sqrt_ps = ~f{~V{4f}~V{4f}C~V{4f}}
	_mm_mask_sra_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sra_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srai_epi32 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_srai_epi64 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_srav_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srav_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srl_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srl_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srli_epi32 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_srli_epi64 = ~f{~V{2q}~V{2q}C~V{2q}i}
	_mm_mask_srlv_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_srlv_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_store_epi32 = ~f{v^vC~V{2q}}
	_mm_mask_store_epi64 = ~f{v^vC~V{2q}}
	_mm_mask_store_pd = ~f{v^vC~V{2d}}
	_mm_mask_store_ps = ~f{v^vC~V{4f}}
	_mm_mask_storeu_epi32 = ~f{v^vC~V{2q}}
	_mm_mask_storeu_epi64 = ~f{v^vC~V{2q}}
	_mm_mask_storeu_pd = ~f{v^vC~V{2d}}
	_mm_mask_storeu_ps = ~f{v^vC~V{4f}}
	_mm_mask_sub_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sub_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_sub_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_sub_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_test_epi32_mask = ~f{CC~V{2q}~V{2q}}
	_mm_mask_test_epi64_mask = ~f{CC~V{2q}~V{2q}}
	_mm_mask_testn_epi32_mask = ~f{CC~V{2q}~V{2q}}
	_mm_mask_testn_epi64_mask = ~f{CC~V{2q}~V{2q}}
	_mm_mask_unpackhi_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_unpackhi_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_unpackhi_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_unpackhi_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_unpacklo_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_unpacklo_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_unpacklo_pd = ~f{~V{2d}~V{2d}C~V{2d}~V{2d}}
	_mm_mask_unpacklo_ps = ~f{~V{4f}~V{4f}C~V{4f}~V{4f}}
	_mm_mask_xor_epi32 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_mask_xor_epi64 = ~f{~V{2q}~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_abs_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_abs_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_add_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_add_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_add_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_add_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_and_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_and_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_andnot_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_andnot_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_broadcastd_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_broadcastq_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_broadcastss_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_compress_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_compress_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_compress_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_compress_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_cvtepi16_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi16_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi32_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi32_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi32_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi32_pd = ~f{~V{2d}C~V{2q}}
	_mm_maskz_cvtepi32_ps = ~f{~V{4f}C~V{2q}}
	_mm_maskz_cvtepi64_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi64_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi64_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi8_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepi8_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepu16_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepu16_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepu32_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepu32_pd = ~f{~V{2d}C~V{2q}}
	_mm_maskz_cvtepu32_ps = ~f{~V{4f}C~V{2q}}
	_mm_maskz_cvtepu8_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtepu8_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtpd_epi32 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvtpd_epu32 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvtpd_ps = ~f{~V{4f}C~V{2d}}
	_mm_maskz_cvtph_ps = ~f{~V{4f}C~V{2q}}
	_mm_maskz_cvtps_epi32 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_cvtps_epu32 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_cvtps_pd = ~f{~V{2d}C~V{4f}}
	_mm_maskz_cvtsepi32_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtsepi32_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtsepi64_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtsepi64_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtsepi64_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvttpd_epi32 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvttpd_epu32 = ~f{~V{2q}C~V{2d}}
	_mm_maskz_cvttps_epi32 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_cvttps_epu32 = ~f{~V{2q}C~V{4f}}
	_mm_maskz_cvtusepi32_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtusepi32_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtusepi64_epi16 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtusepi64_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_cvtusepi64_epi8 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_div_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_div_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_expand_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_expand_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_expand_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_expand_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_expandloadu_epi32 = ~f{~V{2q}C^v}
	_mm_maskz_expandloadu_epi64 = ~f{~V{2q}C^v}
	_mm_maskz_expandloadu_pd = ~f{~V{2d}C^v}
	_mm_maskz_expandloadu_ps = ~f{~V{4f}C^v}
	_mm_maskz_fmadd_pd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fmadd_ps = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fmaddsub_pd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fmaddsub_ps = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fmsub_pd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fmsub_ps = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fmsubadd_pd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fmsubadd_ps = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fnmadd_pd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fnmadd_ps = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_fnmsub_pd = ~f{~V{2d}C~V{2d}~V{2d}~V{2d}}
	_mm_maskz_fnmsub_ps = ~f{~V{4f}C~V{4f}~V{4f}~V{4f}}
	_mm_maskz_getexp_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_getexp_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_load_epi32 = ~f{~V{2q}C^v}
	_mm_maskz_load_epi64 = ~f{~V{2q}C^v}
	_mm_maskz_load_pd = ~f{~V{2d}C^v}
	_mm_maskz_load_ps = ~f{~V{4f}C^v}
	_mm_maskz_loadu_epi32 = ~f{~V{2q}C^v}
	_mm_maskz_loadu_epi64 = ~f{~V{2q}C^v}
	_mm_maskz_loadu_pd = ~f{~V{2d}C^v}
	_mm_maskz_loadu_ps = ~f{~V{4f}C^v}
	_mm_maskz_max_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_max_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_max_epu32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_max_epu64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_max_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_max_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_min_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_min_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_min_epu32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_min_epu64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_min_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_min_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_mov_epi32 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_mov_epi64 = ~f{~V{2q}C~V{2q}}
	_mm_maskz_mov_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_mov_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_movedup_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_movehdup_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_moveldup_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_mul_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_mul_epu32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_mul_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_mul_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_mullo_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_or_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_or_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_permutevar_pd = ~f{~V{2d}C~V{2d}~V{2q}}
	_mm_maskz_permutevar_ps = ~f{~V{4f}C~V{4f}~V{2q}}
	_mm_maskz_permutex2var_epi32 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_permutex2var_epi64 = ~f{~V{2q}C~V{2q}~V{2q}~V{2q}}
	_mm_maskz_permutex2var_pd = ~f{~V{2d}C~V{2d}~V{2q}~V{2d}}
	_mm_maskz_permutex2var_ps = ~f{~V{4f}C~V{4f}~V{2q}~V{4f}}
	_mm_maskz_rcp14_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_rcp14_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_rolv_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_rolv_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_rorv_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_rorv_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_rsqrt14_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_rsqrt14_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_scalef_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_scalef_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_set1_epi32 = ~f{~V{2q}Ci}
	_mm_maskz_set1_epi64 = ~f{~V{2q}Cq}
	_mm_maskz_sll_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sll_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_slli_epi32 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_slli_epi64 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_sllv_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sllv_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sqrt_pd = ~f{~V{2d}C~V{2d}}
	_mm_maskz_sqrt_ps = ~f{~V{4f}C~V{4f}}
	_mm_maskz_sra_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sra_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srai_epi32 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_srai_epi64 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_srav_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srav_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srl_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srl_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srli_epi32 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_srli_epi64 = ~f{~V{2q}C~V{2q}i}
	_mm_maskz_srlv_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_srlv_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sub_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sub_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_sub_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_sub_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_unpackhi_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_unpackhi_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_unpackhi_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_unpackhi_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_unpacklo_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_unpacklo_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_unpacklo_pd = ~f{~V{2d}C~V{2d}~V{2d}}
	_mm_maskz_unpacklo_ps = ~f{~V{4f}C~V{4f}~V{4f}}
	_mm_maskz_xor_epi32 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_maskz_xor_epi64 = ~f{~V{2q}C~V{2q}~V{2q}}
	_mm_max_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_max_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_min_epu64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_or_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_or_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_permutex2var_epi32 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_permutex2var_epi64 = ~f{~V{2q}~V{2q}~V{2q}~V{2q}}
	_mm_permutex2var_pd = ~f{~V{2d}~V{2d}~V{2q}~V{2d}}
	_mm_permutex2var_ps = ~f{~V{4f}~V{4f}~V{2q}~V{4f}}
	_mm_rcp14_pd = ~f{~V{2d}~V{2d}}
	_mm_rcp14_ps = ~f{~V{4f}~V{4f}}
	_mm_rolv_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_rolv_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_rorv_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_rorv_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_rsqrt14_pd = ~f{~V{2d}~V{2d}}
	_mm_rsqrt14_ps = ~f{~V{4f}~V{4f}}
	_mm_scalef_pd = ~f{~V{2d}~V{2d}~V{2d}}
	_mm_scalef_ps = ~f{~V{4f}~V{4f}~V{4f}}
	_mm_sra_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_srai_epi64 = ~f{~V{2q}~V{2q}i}
	_mm_srav_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_store_epi32 = ~f{v^v~V{2q}}
	_mm_store_epi64 = ~f{v^v~V{2q}}
	_mm_storeu_epi32 = ~f{v^v~V{2q}}
	_mm_storeu_epi64 = ~f{v^v~V{2q}}
	_mm_test_epi32_mask = ~f{C~V{2q}~V{2q}}
	_mm_test_epi64_mask = ~f{C~V{2q}~V{2q}}
	_mm_testn_epi32_mask = ~f{C~V{2q}~V{2q}}
	_mm_testn_epi64_mask = ~f{C~V{2q}~V{2q}}
	_mm_xor_epi32 = ~f{~V{2q}~V{2q}~V{2q}}
	_mm_xor_epi64 = ~f{~V{2q}~V{2q}~V{2q}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/SAX.h
	attribute = ~f{v^v^C^C}
	attributeDecl = ~f{v^v^C^Cii^C^v}
	cdataBlock = ~f{v^v^Ci}
	characters = ~f{v^v^Ci}
	checkNamespace = ~f{i^v^C}
	comment = ~f{v^v^C}
	elementDecl = ~f{v^v^Ci^v}
	endDocument = ~f{v^v}
	endElement = ~f{v^v^C}
	entityDecl = ~f{v^v^Ci^C^C^C}
	externalSubset = ~f{v^v^C^C^C}
	getColumnNumber = ~f{i^v}
	getEntity = ~f{^v^v^C}
	getLineNumber = ~f{i^v}
	getNamespace = ~f{^v^v}
	getParameterEntity = ~f{^v^v^C}
	getPublicId = ~f{^C^v}
	getSystemId = ~f{^C^v}
	globalNamespace = ~f{v^v^C^C}
	hasExternalSubset = ~f{i^v}
	hasInternalSubset = ~f{i^v}
	ignorableWhitespace = ~f{v^v^Ci}
	initdocbDefaultSAXHandler = ~f{v^v}
	inithtmlDefaultSAXHandler = ~f{v^v}
	initxmlDefaultSAXHandler = ~f{v^vi}
	internalSubset = ~f{v^v^C^C^C}
	isStandalone = ~f{i^v}
	namespaceDecl = ~f{v^v^C^C}
	notationDecl = ~f{v^v^C^C^C}
	processingInstruction = ~f{v^v^C^C}
	reference = ~f{v^v^C}
	resolveEntity = ~f{^v^v^C^C}
	setDocumentLocator = ~f{v^v^v}
	setNamespace = ~f{v^v^C}
	startDocument = ~f{v^v}
	startElement = ~f{v^v^C^^C}
	unparsedEntityDecl = ~f{v^v^C^C^C^C}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/architecture/i386/pio.h
	inb = ~f{CS}
	inl = ~f{LS}
	inw = ~f{SS}
	outb = ~f{vSC}
	outl = ~f{vSL}
	outw = ~f{vSS}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CGPath.h
	CGPathAddArc = ~f{v^v^vdddddB}
	CGPathAddArcToPoint = ~f{v^v^vddddd}
	CGPathAddCurveToPoint = ~f{v^v^vdddddd}
	CGPathAddEllipseInRect = ~f{v^v^v{={=dd}{=dd}}}
	CGPathAddLineToPoint = ~f{v^v^vdd}
	CGPathAddLines = ~f{v^v^v^vL}
	CGPathAddPath = ~f{v^v^v^v}
	CGPathAddQuadCurveToPoint = ~f{v^v^vdddd}
	CGPathAddRect = ~f{v^v^v{={=dd}{=dd}}}
	CGPathAddRects = ~f{v^v^v^vL}
	CGPathAddRelativeArc = ~f{v^v^vddddd}
	CGPathAddRoundedRect = ~f{v^v^v{={=dd}{=dd}}dd}
	CGPathApply = ~f{v^v^v^~f{v^v^v}}
	CGPathApplyWithBlock = ~f{v^v%~f{v^v}}
	CGPathCloseSubpath = ~f{v^v}
	CGPathContainsPoint = ~f{B^v^v{=dd}B}
	CGPathCreateCopy = ~f{^v^v}
	CGPathCreateCopyByDashingPath = ~f{^v^v^vd^dL}
	CGPathCreateCopyByStrokingPath = ~f{^v^v^vdiid}
	CGPathCreateCopyByTransformingPath = ~f{^v^v^v}
	CGPathCreateMutable = ~f{^v}
	CGPathCreateMutableCopy = ~f{^v^v}
	CGPathCreateMutableCopyByTransformingPath = ~f{^v^v^v}
	CGPathCreateWithEllipseInRect = ~f{^v{={=dd}{=dd}}^v}
	CGPathCreateWithRect = ~f{^v{={=dd}{=dd}}^v}
	CGPathCreateWithRoundedRect = ~f{^v{={=dd}{=dd}}dd^v}
	CGPathEqualToPath = ~f{B^v^v}
	CGPathGetBoundingBox = ~f{{={=dd}{=dd}}^v}
	CGPathGetCurrentPoint = ~f{{=dd}^v}
	CGPathGetPathBoundingBox = ~f{{={=dd}{=dd}}^v}
	CGPathGetTypeID = ~f{L}
	CGPathIsEmpty = ~f{B^v}
	CGPathIsRect = ~f{B^v^v}
	CGPathMoveToPoint = ~f{v^v^vdd}
	CGPathRelease = ~f{v^v}
	CGPathRetain = ~f{^v^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/libxml2/libxml/chvalid.h
	xmlCharInRange = ~f{iI^v}
	xmlIsBaseChar = ~f{iI}
	xmlIsBlank = ~f{iI}
	xmlIsChar = ~f{iI}
	xmlIsCombining = ~f{iI}
	xmlIsDigit = ~f{iI}
	xmlIsExtender = ~f{iI}
	xmlIsIdeographic = ~f{iI}
	xmlIsPubidChar = ~f{iI}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/Headers/LinearAlgebra/linear_systems.h
	la_solve = ~f{@@@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/include/simd/extern.h
	__invert_d2 = ~f{{=~V{2d}~V{2d}}{=~V{2d}~V{2d}}}
	__invert_d3 = ~f{{=~V{3d}~V{3d}~V{3d}}{=~V{3d}~V{3d}~V{3d}}}
	__invert_d4 = ~f{{=~V{4d}~V{4d}~V{4d}~V{4d}}{=~V{4d}~V{4d}~V{4d}~V{4d}}}
	__invert_f2 = ~f{{=~V{2f}~V{2f}}{=~V{2f}~V{2f}}}
	__invert_f3 = ~f{{=~V{3f}~V{3f}~V{3f}}{=~V{3f}~V{3f}~V{3f}}}
	__invert_f4 = ~f{{=~V{4f}~V{4f}~V{4f}~V{4f}}{=~V{4f}~V{4f}~V{4f}~V{4f}}}
	_simd_incircle_pd2 = ~f{d~V{2d}~V{2d}~V{2d}~V{2d}}
	_simd_incircle_pf2 = ~f{f~V{2f}~V{2f}~V{2f}~V{2f}}
	_simd_insphere_pd3 = ~f{d^d}
	_simd_insphere_pf3 = ~f{f~V{3f}~V{3f}~V{3f}~V{3f}~V{3f}}
	_simd_orient_pd2 = ~f{d~V{2d}~V{2d}~V{2d}}
	_simd_orient_pd3 = ~f{d^d}
	_simd_orient_pf2 = ~f{f~V{2f}~V{2f}~V{2f}}
	_simd_orient_pf3 = ~f{f~V{3f}~V{3f}~V{3f}~V{3f}}
	_simd_orient_vd2 = ~f{d~V{2d}~V{2d}}
	_simd_orient_vd3 = ~f{d^d}
	_simd_orient_vf2 = ~f{f~V{2f}~V{2f}}
	_simd_orient_vf3 = ~f{f~V{3f}~V{3f}~V{3f}}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/usr/lib/swift/shims/NSLocaleShims.h
	__NSLocaleAutoupdating = ?
	__NSLocaleCurrent = ?
	__NSLocaleIsAutoupdating = ~f{B@}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/CoreMedia.framework/Headers/CMAudioClock.h
	CMAudioClockCreate = ~f{i^v^^v}
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.2.sdk/System/Library/Frameworks/SystemConfiguration.framework/Headers/SCPreferences.h
	SCPreferencesAddValue = ~f{C^v^v^v}
	SCPreferencesApplyChanges = ~f{C^v}
	SCPreferencesCommitChanges = ~f{C^v}
	SCPreferencesCopyKeyList = ~f{^v^v}
	SCPreferencesCreate = ~f{^v^v^v^v}
	SCPreferencesCreateWithAuthorization = ~f{^v^v^v^v^v}
	SCPreferencesGetSignature = ~f{^v^v}
	SCPreferencesGetTypeID = ~f{L}
	SCPreferencesGetValue = ~f{^v^v^v}
	SCPreferencesLock = ~f{C^vC}
	SCPreferencesRemoveValue = ~f{C^v^v}
	SCPreferencesScheduleWithRunLoop = ~f{C^v^v^v}
	SCPreferencesSetCallback = ~f{C^v^~f{v^vI^v}^v}
	SCPreferencesSetDispatchQueue = ~f{C^v@}
	SCPreferencesSetValue = ~f{C^v^v^v}
	SCPreferencesSynchronize = ~f{v^v}
	SCPreferencesUnlock = ~f{C^v}
	SCPreferencesUnscheduleFromRunLoop = ~f{C^v^v^v}
